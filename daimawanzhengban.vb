Option Explicit
Option Base 1
Dim iH, iNa, iK, iMg, iCa, iSr, iBa, iFe, iZn, iOH, iCl, iAc, iHCO3, iCO3, iHSO4, iSO4, iHS, intF, iPb, iBr, iNH4, iH2BO3, iSion, iRa As Integer
Dim iCO2aq, iH2Saq, iCH4aq, iHAcaq, iCH4g, iCO2g, iH2Sg, iCO2o, iCH4o, iH2So, iNH3, iH3BO3, iFeSaq As Integer
Dim NumCat, NumAn, NumNeut, c, cp, a, ap, n, m, iPz, i, j, kk, iNG, jNG, iTDS, InhNo, InhNoBar, InhNoCal As Integer  'Read "p" as "prime"
Dim LoopTP, InhNo1, InhNo2, iMaxBar, iMaxCal, OutPutActCoefs, Run10TestCases As Integer
Dim WHandBHLoop, Loop10, LoopMixing, LoopResChem As Integer
Dim SampleID, SampleDate As String
Dim newbook, oldbook As Workbook
Dim mt, mt1, mt2 As String
Dim TK As Double, TF, TC, Ppsia, Patm, APhi, TH2Saq, TFe, FeOld, HSOld
Dim MoleCharge, mtotal, Ist, TDS, f_gamma, ETh, EThp, X12, X11, X22, X14, X20
Dim gX14, gX20, gX12, gpX14, gpX20, gpX12
Dim JX12, JX11, JX22, JpX12, JpX11, JpX22, JX12delta, JX11delta, JX22delta
Dim BMa, BcX, Bpca, BPhica, CMa, CcX, Cca
Dim Phip, Phipaap, Phipccp, PhiMc, PhiXa, PhiPhiccp, PhiPhiaap
Dim Sumccpa, Sumaapc, SumYMca, SumYXac
Dim PhiH2O, aH2O, ActCoefM, ActCoefX, ActCoefn
Dim term1, term2, term3, term4, term5, term6, term7, termn, termsum
Dim K1H2CO3, K2HCO3, KHAc, KH2O, K1H2S, K2HS, KNH4, KH3BO3, KstFeSaq
Dim KgwCO2, KgoCO2, KgwCH4, KgoCH4, KgwH2S, KgoH2S
Dim KspCalcite, KspBarite, KspCelestite, KspGypsum, KspHemihydrate
Dim KspAnhydrite, KspSiderite, KspRaSO4, KspHalite, KspFeS, KspZnS, KspCaF2, KspDol, KspPbS, IAPDol, KspMgOH2, KspCaOH2, KspSrCO3, KspBaCO3
Dim pH, Alk, TAc, TNH4, TH3BO3, Ca, aH, yCO2, yCH4, yH2S, nTCO2, nTCH4, nTH2S
Dim VW, VO, VMeOH, VMEG, rho_w, VgTP, deltaT, deltaP, TBH, TWH, PBH, PWH
Dim aCO2, aCH4, aH2S, apCO2, apCH4, apH2S, PBubblePt, KwoCO2
Dim CO2aq, b, HCO3, CO3, ng, ng0, count, k, cc, tHCO3, tCO3, hydCO3, hydHS, hydAc, hydNH3, hydH2BO3, NH3, H2BO3
Dim SICal, SIBar, SISid, SIGyp, SIHemi, SIAn, SICel, SIHal, SIFeS, SIZnS, SIPbS, SICaF2, SIMgOH2, SICaOH2, SIDol
Dim dSICal, dSIBar, dSIGyp, dSIHemi, dSIAn, dSICel, dSIHal, dSIFeS, dSIZnS, dSICaF2, dSISid, dSIPbS
Dim fCa, fng, fpng, ppt, pptHigh, pptLow, SumOfCations, SumOfAnions, TDScalc
Dim tInh, t0Bar, t0Cal, SelectInh, FracInhNo1
Dim mass_w, Mass_o, H, OH, AC, HS, S, R, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17, q18, q19, q20, q21
Dim r0, r1, r2, r3, r4, r5
Dim SICalBh, SIBarBH, SIGypBH, SIHemiBH, SIAnBH, SICelBH
Dim SISidBH, SIHalBH, SICaF2BH, SIFeSBH, SIZnSBH, SIPbSBH, SIPbSWH
Dim fSafetyCal, fSafetyBar, bInhBarMax, bInhCalMax, bInhBarMixed, bInhCalMixed, ConcInhCalMixed, ConcInhBarMixed
Dim ConcInhBar, ConcInhCal, CalculatedTDS, KwoH2S, H2Saq, pHHigh, pHLow, faH, fFe
Dim fsafetyGyp, fsafetyAn, ConcInhGyp, ConcInhAn, GypExpon10, AnExpon10, InhNoGyp, InhNoAn, t0Gyp, t0An
'Dai 2020 update inhibition model for celestite
Dim fSafetyCel, ConcInhCel, InhNoCel, CelExpon10, t0Cel, ConcInhCelRisk(10), SICelRisk

Dim U1, U2, U3, U4, U5, U6, U7, U8, U9, D1000, dens0
Dim a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, dens1atm, dens, Dielec, Tr, BarExpon10, CalExpon10
Dim PBar, RBar
Dim aPrmix, bPRmix, AStarPR, BStarPr, coef1, coef2, coef3, coef4, ZplusRoot, ZminusRoot, _
    f_ZplusRoot, f_ZminusRoot
Dim Znew As Double, VolGasMolar As Double
Dim gCat(15), gAn(15), gNeut(15), gGas(15)
Dim mc(15), ChCat(15), ma(15), ChAn(15), mn(15), b0(15, 15), b1(15, 15), b2(15, 15), CPhi(15, 15)
Dim Tccp(15, 15), Yccpa(15, 15, 15), Taap(15, 15), Yaapc(15, 15, 15), Lnc(15, 15), Lna(15, 15), Lnn(15, 15), zeta(15, 15, 15)
Dim InhName(20) As String
Dim bi(20, 20), ci(20, 20), bInhBar(20), bInhCal(20), gi(20, 20), ai(20, 20), bInhGyp(20), bInhAn(20)

Dim yGas(20), TCr(20), Pc(20), Omega(20), kPr(20, 20)
Dim F_Omega(20), aPR(20), bPR(20), Sum_aijPR(20)

Dim nob, nob1, BrineNoNew, BrineNoOld, use_Calc_Temp, use_pH As Integer
Dim QTotal, mass_MeOH, mass_MEG, Cp_w, Cp_CH4, Cp_Co2, Cp_O, Cp_MeOH, Cp_MEG, _
    TCO3init, TH2Sinit
Dim iBaSO4, iSrSO4, iCaSO42H2O, iNaCl, iCaSO4, ihemiCaSO4, NumMean As Integer
Dim xMeOH, xMEG, aNH2O
Dim gNCat(15), gNNeut(10), gNAn(15), gNMean(10), dSIMeOHcal, dSIMEGcal
Dim dSIMeOHBar, dSIMEGBar, dSIMeOHHal, dSIMEGHal
Dim pHMeterReading, DpHj, dMeOH, dMEG, pH_before_precipitation
Dim ln_Ksp_Gyp, ln_Ksp_Anh, dV, dk, ln_K_T_Gyp, ln_K_T_Anh, RAtm, ln_H_T_H2S, ln_KH_H2S  'Dim by Zhaoyi
Dim style, title, message, prompt, pHMessage As String
Dim response1, response2, response3, response4, Ncount, CaHCO3Loop, iGoalSeek As Integer
Dim DielecConst, KstCaHCO3, IStCosolvent, TCa, CaHCO3
Dim IndependentVariableCellNo, IndependentVariableTargetValue, _
    DependentVariableCellNo, IndVarColumnNo, IndVarRowNo, IndVariableValue0, DepVarColumnNo, _
    DepVarRowNo, DepVariableValue0, DependentVariableTargetValue, counter As Variant
Dim Targ, Dep0, Ind0, Ind1, IndNew, IndOld, Dep1, DepOld, Derivative As Variant
Dim myRange As Range
Dim myname, mySheet As String
Dim Run_Seawater_Mixing, Run_MixingTwoWells As Integer
'Dim RunSimpSSP as integer
Dim RatioOilBPoints, TH2SintoWater
Dim WtFrSalt, SumM, Den0overDenIst, ViscWatKinam0, RelativeKinViscWater, DenIst, ViscWatIst, _
    ViscWatKinamIst
Dim SIAmSilica, SIQuartz, SIChrysotile, SIGreenalite, SIDiopside, TH4SiO4, SIZnCO3
Dim KspAmSilica, KspQuartz, KspGreenalite, KspDiopside, KspChrysotile, KH3SiO3, KH4SiO4, KspZnCO3
Dim iH4SiO4, iTH4SiO4, NumberToRead As Integer
Dim Cp01, Cp02, aj, b0Cp, b1Cp, cj, Cp01400, Cp02400, AJ400, b0400, b1400, CJ400, Cp01PT, rho25c
Dim Cp02PT, AJPT, b0PT, b1PT, CJPT, bCp, neu, hISt, BJNaCl, n1Water, zM, zX, alphaCp
Dim CpPhi, Cp0, CpCp, massCp, CpPerGram, CpPerMl
Dim VtotalCp, SaltMass, RCp
Dim dfaHdpH, faHplusdpH, dpH
Dim UseSI, Save(20)
Dim RunMultiMix, InConc, pptateBar, pptateCal, Log10t0Bar, Log10tInhBar, Log10t0Cal, _
    Log10tInhCal, ConcInh
Dim PCO2, PH2S, PCH4, QCubic, Rcubic, Xcubic, Theta, root1, root2, root3, _
    Vg_ZRT, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, s1, S2, s3, s4, s5, s6, pi, NAv, eps0, eElec, kBoltz
Dim MWCat(15), MWAn(15), MWNeut(10), V0_c(15), V0_a(15), V0_n(10), Vex_c(15), Vex_a(15), Vex_n(10), g1atmCat(15), g1atmAn(15), g1atmNeut(10)
Dim VperKgWater, MassperKgwater, rhoOld, TDSOld, rhoSSE, pptMin, pptMax, fx, fppt, ippt, sign_coef2
Dim Iteration, iden, ii, iAlk As Integer
Dim TRes, PRes, VgRes(2), VoRes(2), VwRes(2)
Dim ypH(30), xpH(30), xppt(30), qroot, Vg_ZRT_Old, pptOld, icounting, CalculateTDSDen, TDSSSE
Dim ppt_or_not, Ksp, K1, k2, Kgw, NT, im, igas, tGas, Alk_from_QC, pHMeterReading_from_QC, RunQualityControlChecks
Dim Iteration1, Iteration2 As Integer

'Dim use_Mass_Transfer_Coefficient, Mass_Transfer_Coefficient, Critical_SR_FeCO3, Critical_SR_FeS, Critical_SR_Calcite, Critical_SR_Barite
Dim fractionalPrecipitation_MassTransport, pHAfterFeCO3ppt, pHAfterFeSppt
Dim pptFeCO3_MassTransfer, pptFeCO3_NoMassTransfer, pptAn_MassTransfer
Dim pptFeS_MassTransfer, pptFeS_NoMassTransfer
'Dim MassTransferCoef_FeCO3, MassTransferCoef_FeS, MassTransferCoef_Calcite,MassTransferCoef_barite
Dim pptCalcite_MassTransfer, pptCalcite_NoMassTransfer, mass_wOld
Dim pptBarite_MassTransfer, pptBarite_NoMassTransfer, Run_MassTransfer, pptCelestite_MassTransfer, pptCelestite_NoMassTransfer
Dim Graphtype, NSeries, NCountGraph, Ncharts
Dim nob_Input, nob_InputII, Read_InputII, NCount_II, RunQualityControlChecks_II, RunWhatIf, NobWI, Loop1WI, Loop2WI As Integer

Dim TWIInit, PWIInit, RatioIAPtoKsp
Dim ChartWI(40) As ChartObject
Dim ISilicate, FeIn, SiIn, kc, dfFe, FeNew, fe, FeMin, FeMax, SiMin, SiMax, SiNew, fSi, dfSi
Dim MgMin, MgMax, CaMin, CaMax, xNew, dfx, pptNew, dfppt, TCO2
Dim hydH2SiO4, iH2SiO4, iH3SiO4, H2SiO4, H3SiO4, H4SiO4, iH4SiO4aq  'Should use the iH4SiO4aq name for index to be consistent.
Dim sign_faH_SiO2, SignChangeForSiO2, TH4SiO4_Chrysotile, TH4SiO4_Dipside, TH4SiO4_Greenalite

Dim pptCal, pptBar, pptSid, pptGyp, pptHemi, pptAn, pptCel, pptHal, pptFeS, pptZnS, pptZnCO3, pptPbS, pptCaF2, pptMgOH2, pptCaOH2
Dim pptAmSilica, pptQuartz, pptGreenalite, pptDiopside, pptChrysotile
Dim pHaftercalciteppt, pHafterMgOH2ppt, pHafterCaOH2ppt, pHafterAmsilicappt, pHafterQuartzppt, pHafterGreenaliteppt
Dim pHafterDiopsideppt, pHafterChrysotileppt
Dim TpH, PpH, TVol, Pvol, CO2aqOld, TCO2SSE, TCO2Old As Double

Dim RhoH2OTP, Psat, RunGoalSeek, RunPpt
Dim VwSW1, VoSW1, VgSW1, VMeOHSW1, VMEGSW1
Dim gL(20), z(20)
Dim iC2g, iC3g, iC4ig, iC4ng, iC5ig, iC5ng, iC6g, iC7_12g, iC13_25g, iC26_80g, iH2Og, iN2g, useEOS
Dim errmsg(20), mass_w_0
Dim mcInit(15), maInit(15), AlkInit, TH4SiO4Init, TNH4Init, TH3BO3Init, TAcInit, TFeInit

Dim SIBaCO3, SISrCO3, SIBaCO3BH, SISrCO3BH, pptSrCO3, pptBaCO3, NaQC
Dim UseH2Sgas, Run1000Cases, CaseNob1000, RunSSP, iTP, iRead As Integer
Dim pHBH, TCO2BH, BHConcInhCal, BHConcInhBar, WHConcInhCal, WHConcInhBar, SICalWH, SIBarWH
Dim EaRInh(20), LnAInh(20), SIRisk(20, 10, 10, 4), TRisk(20, 10)
Dim SIRiskHigh, SIRiskLow, SIBarRisk, SICalRisk, tInhRisk, iRisk, ConcInhCalRisk(10), ConcInhBarRisk(10)
Dim ConcInhAnRisk(10), SIAnRisk, SIGypRisk, ConcInhGypRisk(10)
Dim MySheetGoalSeek
Dim HCO3SSE, HCO3Old, HAcaq, HCO3stpOld
Dim Run_CalcConcFactor, UseSR, UseTPCalciteSheet, LoopTP1000Cases
Dim graphcount(7), MixFracTwoWells(11)
Dim molAlkF, molTACF, molTNH4F, molTH3BO3F, molTH2SaqF, molTH4SiO4F, molTFeF, SumofZ     'Final total moles of ions
Dim usepHmix()  ' ****Do not change this "110"
Dim MySheetMix As String 'This is to a flag to identify "Input" sheet if multiple stream are mixed
'change array
Dim NaMix(), MgMix(), CaMix(), SrMix(), BaMix(), FeMix(), ZnMix(), ClMix(), PbMix(), BrMix()
Dim NH3Mix(), H3SiO4Mix(), H2SiO4Mix(), H4SiO4Mix(), H3BO3Mix(), CO2aqMix(), H2SaqMix(), HACaqMix()
Dim UseH2SgasMix(), SO4Mix(), FMix(), TDSMix(), AlkMix(), TAcMix(), KMix(), MixFrac()
Dim rho_Mix(), TH2SaqMix(), pHMeterStpMix(), TH4SiO4Mix(), TNH4Mix(), TH3BO3Mix()
Dim SampleIDMix(), SampleDateMix(), OperatorMix(), WellNameMix(), FieldMix(), StateMix() As String
Dim VgTPMix(), VoMix(), VwMix(), VMeOHMix(), VMEGMix(), oilAPIgravMix(), gasSpGravMix(), MixFracGas()
Dim nTCO2Mix(), nTCH4Mix(), nTH2SMix(), mass_w_Mix(), mass_o_Mix(), MixFracOil()
Dim mass_MeOH_mix(), mass_MEG_mix(), Qheat(), yCO2Mix(), yH2SMix(), yCH4Mix()
Dim YCH4stpmix(), RatioOilBPointsmix(), CalculatedTDSMix(), rho25CMix()
Dim HstpMix(), OHstpMix(), HCO3stpMix(), CO3stpMix(), ACstpMix(), HSstpMix(), NH4STPMix(), H2BO3stpMix()
Dim HCO3AlkMix(), CO3AlkMix(), HAlkMix(), OHAlkMix()
Dim ConcFactor()
Dim CaseCount(), CaseCount_II()
Dim TCO2Mix(), TofpH(), PofpH(), TofVol(), PofVol()
Dim OilDensityMix(), GasDensityMix(), WaterDensityMix()
Dim UseTPpHMix(), UseTPVolMix(), useEOSmix(), useTPVol As Integer
Dim molc(), mola(), moln(), molAlk(), molTAC(), molTNH4(), molTH3BO3(), molTH2Saq(), molTH4SiO4()   'total moles of ions for each well
Dim molcF(15), molaF(15), molnF(10)
Dim KspTrot, KspPyrr, KspFeSAm, SITrot, SIPyrr, SIFeSAm, pptFeSAm, pptTrot, pptPyrr
Dim zTemp(15), total_moles_Temp
Dim RunNORM, DRaAnhydrite, DRaCelestite, DRaBarite, DRaCalcite, RaBaSO4ppt, RaCaSO4ppt, RaSrSO4ppt, GammaSolidRaBarite, GammaSolidRaCelestite, GammaSolidRaAnhydrite 'NORM
Dim usePTB
'for PgS and ZnS
Dim a0(20), BetaDot(16), B_dot, B_gamma, Lambda_gamma, gDot(20)
Dim iZnDot, iPbDot, iHSDot, iClDot, iZnCl, iZnCl2, iZnCl3, iZnCl4, iZnHS2, iZnHS3, iPbCl, iPbCl2, iPbCl3, iPbCl4, iPbHS2, iPbHS3
Dim TZn, TPb, ZnOld, PbOld, ZP1, ZP2, ZP3, ZP4, ZP5, ZP6, ZP7
'Guannan Ca-SO4
Dim xCaSO4, gXCaSO4, gpXCaSO4
'WI sheet
Dim CaWI(40, 10), BaWI(40, 10), SO4WI(40, 10), HCO3AlkWI(40, 10), CO3AlkWI(40, 10), TACWI(40, 10), YCO2WI(40, 10), YH2SWI(40, 10), TH2SaqWI(40, 10), _
pHMeterSTPWI(40, 10), VgTPWI(40, 10), VoWI(40, 10), VwWI(40, 10)
Dim TWI(40, 10), PWI(40, 10), ConcFactorWI(40, 10), NaWI(40, 10), ClWI(40, 10), SrWI(40, 10)
Dim VarNameWI(40), VarUnitWI(40), VarWIInit(40), VarWIFinal(40), DeltaVarWI(40)
Dim CaseCountWI(40) As Integer

'multiflash
Dim mf_ParametersWereRead As Boolean
Dim mf_kPr() As Double, mf_PCr() As Double, mf_TCr() As Double, mf_Omega() As Double, mf_MWgas() As Double, mf_c0() As Double, mf_c1() As Double
Dim API, SGG, mw_oil As Double, total_moles As Double
Dim feed_Composition(15), density(), compositions(), phi(), Compr(), beta()
Dim mass_phase()
Dim mol_o, mol_g, mol_W, mol_HC, mol_H2O, mol_w_Orig, mol_w3 'phase 3 water moles
Dim iz As Integer
Dim zInput(15), z_before_precipitation(15) As Double
Dim nTCO2EOS, nTH2sEOS, nTCO2EOSNew, nTH2SEOSNew
Dim nTCO2_before_precipitation, nTH2S_before_precipitation, Total_moles_before_precipitation As Double
Dim CO2_w_before_ppt, H2S_w_before_ppt
Dim nCO2aq, nH2Saq, VgTPCalc, HCWR
Dim zOutput()
'Dim GORMeas, GORCalc
Dim YH2O, zHC, VoilCalc
Dim MW_Phase()
Dim No_Phases As Long
'Dim Halite ppt correction May 5, 2020
Dim Rho25cHalite, TDSHalite As Double

'Shell
Dim mol_g_origMix(), mol_o_OrigMix(), mol_w_OrigMix(), mol_g_finalMix(), mol_o_finalMix(), mol_w_finalMix(), mol_w_evapMix()
Dim Total_molesMix(), SumofZMix(), nTCO2MixEOS(), nTH2SMixEOS(), zMix()
Dim eosProps() As Double, kij() As Double, Pbub_psia As Double, pbub_bar As Double

'for DTPMP speciation
Dim TDTPMPM, pKspDTPMPcr, bH_DTPMP, bCa_DTPMP, betaDTPMP(10, 5), Phn, logCaLow, logCaHigh, logCa, hydDTPMP, DenomDTPMP, iPhn
Dim MaxInh
Dim TBHPMPM, bH_BHPMP, bCa_BHPMP, betaBHPMP(10, 6), hydBHPMP, denomBHPMP, pKspBHPMPcr
Dim TNTMPM, aH_NTMP, bH_NTMP, bCa_NTMP, betaNTMP(10, 5), hydNTMP, denomNTMP, pKspNTMPcr, NoRiskcalc
Dim InhSolLimit(15), errLoopTP, NoErr, UseMolal As Integer
Dim QPBubblePt As Integer
Dim mytime, mytime1, nettime As String
'Mass transfer
Dim PipeID, PipeL, CorrRate, PipeMetalDens, QBrineFlow, SArea, LoverD, ReNO, VgTP_MT, VO_MT, VW_MT, eff_diameter, Velocity_W, PipeRough, N_deposition
Dim iCaHCO32, iFeHCO32, iFeHS2, FlowType As Integer
Dim radiusC(11), radiusA(12), DiffC(11), DiffA(12), Diff(10), kmL(10), kmT(10), km(10)
Dim mcKin(11), mcEq(11), mcMT(11), maMT(11), AlkMT
Dim Delta_nTCO2EOS, Delta_nTH2SEOS

'Dai 2020 deposition
Dim PipeID_m, PipeL_m, P_reduced_g, T_reduced_g, Ratio_gas_visc, Visc_g, N_v_l, N_v_g, N_dia, N_visc_l, SGO, SGL, surf_tension_lg, surf_tension_og, surf_tension_wg, X_1, X_2, X_3, CN_l, fai_MT, Hold_l, n_power As Double
Dim rho_gas_MT, rho_liquid_MT As Double
Dim V_s_g, V_s_l, V_s_m, LengthEntry, Eff_D, Eff_V, thick_lsl, shear_lsl As Double
Dim Time_lsl_burst As Variant
Dim Flow_Pattern, Flow_Regime As String
Dim ScNO, GzNO, ShNO, ShNO_La, ShNO_lc, f_Churchill, f_Gnie As Double
Dim pptBarite_MassTransfer_V, pptCalcite_MassTransfer_V As Double
Dim i_Inhibitor_MT, c_Inhibitor_MT, Keq_inhibitor_dep_barite(20), Keq_inhibitor_dep_calcite(20), Theta0_inhibitor_dep_barite(20), Theta0_inhibitor_dep_calcite(20), Total_Deposition_rate_MT, Target_Deposition_rate_MT As Double
Dim pptTotal_MassTransfer_V, pptMax_MassTransfer_V As Double
Dim RunMassTransportGoalSeek, Use_lsl_stability, Run_MassTransfer_WhatIf As Integer
Dim PipeID_LB, PipeL_LB, PipeRough_LB, c_Inhibitor_MT_LB, PipeID_UB, PipeL_UB, PipeRough_UB, c_Inhibitor_MT_UB As Variant
Dim Gas_V_LB, Oil_V_LB, Water_V_LB, Gas_V_UB, Oil_V_UB, Water_V_UB, T_start_UB, P_start_UB, T_end_UB, P_end_UB, T_start_LB, P_start_LB, T_end_LB, P_end_LB As Variant
Dim Gas_V_MT, Oil_V_MT, Water_V_MT, T_start_MT, P_start_MT, T_end_MT, P_end_MT As Double
Dim Iter_MT_WI, j_MT As Integer
Dim Gas_V_OLD_MT, Oil_V_OLD_MT, Water_V_OLD_MT, T_start_OLD_MT, P_start_OLD_MT, T_end_OLD_MT, P_end_OLD_MT As Double
Dim mysheet_MT As Variant
Dim lgt_barite_MT, lgt_calcite_MT As Double
'Dai 2020 test
Dim call_C5_No, call_LoopTPSI_No As Integer


'for Slb multimix and Multiple ppt
Dim RunMultiMixSlb As Integer
Dim MultiplePpt, aOH, TotCO3, den, PorMax, CalMax, GypMax, BarMax, CaseNo, R6, R7, R8, icount
Dim KspCalciteMultiple, KspBariteMultiple, KspGypsumMultiple, KspCaOH2Multiple, KspMgOH2Multiple, pptCalMultipleOld
Dim pptMgOH2Multiple, pptCaOH2Multiple, pptCalMultiple, pptGypMultiple, pptBarMultiple, pptAmSilicaMultiple, pptAmSilicaMultiple_or_Not
Dim denP, TotCO3P, CaOH2Max, MgOH2Max

'Density at TP
Dim rgas_water As Double, tc_water As Double, pc_water As Double, dc_water As Double
Dim gammapireg1 As Double, tau As Double, piDen As Double, volreg1 As Double
Dim ireg1(34) As Integer, jreg1(34) As Integer, nreg1(34) As Double, igammapireg As Integer
Dim rhoTP
Dim AphiP, AphiPPlus, bterm(15, 15), btermP(15, 15), CtermP(15, 15), btermPPlus(15, 15), CtermPPlus(15, 15), bVterm(15, 15), cVterm(15, 15)
Dim Fv, Av, Ex_Pitzer, V_ex, V_ion

'Dim shiCO2aq,Use_ZnCl2Const,KPFeClSO4
Dim RunH2SGUI As Integer, nComponents As Integer, RunShellMultiflash As Integer, myiosheet As String, myiocol As String, RunH2SPartition As Integer
Dim RunSMT As Integer, RunStatMix As Integer, RunStatSICalcSSP As Integer, location As String, depth As Double
Dim RunStat As Integer, RunStatGoalSeek As Integer, StatTPnob As Integer, RunStatReservoirCalc As Integer, RunH2SGoalSeek As Integer
Dim RaMix() As Double, H2Oevap As Integer


'Shell
Dim bubblepoint, dewpoint As Double
Dim RunGUIResRec As Integer, RunGUISepRec As Integer, RunGUIH2STune As Integer, RunGUISSF As Integer, fugacity(15), watercut() As Double

'Stat
Dim RunStatSICalc, DepthBH As Double, DepthWH As Double, deltaDepth As Double
Dim RunStatResCalcAlk
Dim myvalue As String, rho25Cmeas(2)
Dim SumOfCations_M, SumOfAnions_M, yCO2_from_QC
'SMT
Dim RunSMTBaSO4isopleth As Integer
Dim pHstp
'GUI
Dim TDSTP

'Dai 2021, Corrosion module
Dim ResultCR As Double
Dim F As Double
Dim m_t, CentiGrade, m_waterdensity, m_waterviscosity, m_diffTcorrection, m_K_CO2_ca, m_kfhydration, m_kbdehydration, Khyd, m_K_CO2_bi As Double
Dim m_concHplus, m_concCO2, m_concH2CO3, m_concHAc, m_concHCO3, m_concHCO3ppm, m_concCO3, m_concFe, m_concH2S, m_concH2Sppm, m_concO2ppb As Double
Dim m_ScaleFactor, m_FeSfactor, m_SSFeCO3, m_SSFeS As Double
Dim KspFeCO3, PRFeCO3 As Double
Dim m_vel, m_diam As Double
Dim m_Corpot, m_icorr, m_CRCO2_total, m_CRH2S_total, m_CRH2S_t_step, m_CRH2S_t_Start As Double
Dim m_CRCO2_Anode(10), m_CRCO2_Cathode(10), m_CRH2S_each(10), m_CRH2S_each_max(10) As Double
'initialize anodic reaction constants, etc.
Dim iAnodic_Iron_Dissolution As Integer
Dim Anodic_ioref(10), Anodic_ActivEnergy(10), Anodic_ErevInit(10), Anodic_ioInit(10), Anodic_bInit(10) As Double
Dim Anodic_ilimdiffusionInit(10), Anodic_EpasInit(10), Anodic_ipasInit(10), Anodic_EpitInit(10) As Double
Dim iAnodicReacIndex, total_Anodic_Reaction As Integer
'initialize Cathodic reaction constants, etc.
Dim iCathodic_H_reduction, iCathodic_H2CO3_reduction, iCathodic_HAc_reduction, iCathodic_H2O_reduction, iCathodic_O2_reduction As Integer
Dim Cathodic_ioref(10), Cathodic_ActivEnergy(10), Cathodic_ErevInit(10), Cathodic_ioInit(10), Cathodic_bInit(10) As Double
Dim getAnodicCurrentDensity_raw(10), getCathodicCurrentDensity_raw(10) As Double
Dim Cathodic_ilimdiffusionInit(10), Cathodic_EpasInit(10), Cathodic_ipasInit(10), Cathodic_EpitInit(10) As Double
Dim iCathodicReacIndex, total_Cathodic_Reaction As Integer
Dim m_rpmTag As Integer
Dim DiffHplus, DiffH2CO3, DiffCO2, DiffHAc, DiffO2, DiffH2S As Double
Dim kmHplus, kmH2CO3, kmCO2, kmHAc, kmO2, kmH2S As Double
Dim Corr_Sim_Time, time_step, m_quant_oss, m_Epsilon_oss, m_Psi_oss, m_delta_oss As Double
Dim iH2SReacIndex, total_H2S_Reaction As Integer
Dim iH2S_H_reduction, iH2S_H2CO3_reduction, iH2S_HAc_reduction, iH2S_H2O_reduction, iH2S_O2_reduction, iH2S_H2S_reduction As Integer




'********************************************************************************************
'I. This subroutine is activated by clicking on the Run button in the Input screen.
Sub A1_Start_ScaleSoftPitzer()
Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
'Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
mytime = Time
mySheet = ActiveSheet.Name
'If mySheet = "Simplified Input" Then
'RunSimpSSP = 1: RunSSP = 0: RunStat = 0
'Else
RunSSP = 1: RunStat = 0: RunQualityControlChecks = 0: RunH2SGUI = 0: RunNORM = 0
'End If
'Application.ScreenUpdating = False
Worksheets("Calcite").Range("B1:J1").Value = Null
Worksheets("Calcite").Range("C4:K13").Value = Null
Worksheets("Calcite").Range("p4:u13").Value = Null
Worksheets("Barite").Range("C4:F13").Value = Null
Worksheets("Barite").Range("B1:J1").Value = Null
Worksheets("Barite").Range("p4:u13").Value = Null
Worksheets("Other SO4s").Range("c4:J13").Value = Null
Worksheets("Other SO4s").Range("B1:J1").Value = Null
Worksheets("Other SO4s").Range("P4:U14").Value = Null
Worksheets("Other SO4s").Range("P16:U25").Value = Null
Worksheets("Halite").Range("C4:F13").Value = Null
Worksheets("Halite").Range("B1:J1").Value = Null
Worksheets("Sulfides,Fluorite,Carbonates").Range("C4:W13").Value = Null
Worksheets("Sulfides,Fluorite,Carbonates").Range("B1:J1").Value = Null
Worksheets("Silicates").Range("C4:Q13").Value = Null
Worksheets("Silicates").Range("B1:J1").Value = Null
Worksheets("Mg(OH)2,Ca(OH)2").Range("C4:I13").Value = Null
Worksheets("Mg(OH)2,Ca(OH)2").Range("B1:J1").Value = Null
Call InitializeOptionClearCellContent
ReDim CaseCount(5), CaseCount_II(110)
Call CountNOB
Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
'If mySheet = "Simplified Input" Then
'Call Worksheets("Readme").B2_ReadinAllDataSimplified      'Reads in all Input concentrations, put in terms of molality and calculate total moles of CO2, H2S, CH4.
'Else
Call Worksheets("Readme").B2_ReadinAllData      'Reads in all Input concentrations, put in terms of molality and calculate total moles of CO2, H2S, CH4.
'End If
Call Worksheets("Readme").B3_CalcConcs           'Cacluate all concentration data from wells on input screen.
'mytime1 = Time
Call Worksheets("Readme").B4_CalcFinalBrine      'Mixed bine output.
Call OutputActivityCoefficients        'If activity coefficients are to be output, prepare the out fields on Calcite sheet.
'Loop through ten (T,P) pairs from (T_BH,P_BH) to (T_WH,P_WH) evenly spaced on
'the temperature and the pressure.  At this point all concentrations are available
'in the code as molality values and ready for calculations of SI values.
  deltaT = (TBH - TWH) / 9
  deltaP = (PBH - PWH) / 9
  Worksheets("Calcite").Cells(13, 1) = TBH
  Worksheets("Calcite").Cells(4, 1) = TWH
  Worksheets("Calcite").Cells(13, 2) = PBH
  Worksheets("Calcite").Cells(4, 2) = PWH
  If UseSI = 1 Then Worksheets("Calcite").Cells(13, 1) = (TBH - 32) * 5 / 9 'default T as TF, P as psia, Output TBH, TWH etc to calcite sheet
  If UseSI = 1 Then Worksheets("Calcite").Cells(4, 1) = (TWH - 32) * 5 / 9
  If UseSI = 1 Then Worksheets("Calcite").Cells(13, 2) = PBH / 14.503774
  If UseSI = 1 Then Worksheets("Calcite").Cells(4, 2) = PWH / 14.503774

'dai 2020 deposition
  Worksheets("Deposition Prediction").Range("F7") = TBH
  Worksheets("Deposition Prediction").Range("H7") = TWH
  Worksheets("Deposition Prediction").Range("G7") = PBH
  Worksheets("Deposition Prediction").Range("I7") = PWH
  Worksheets("Deposition Prediction").Range("J7") = VgTP / 28.31685 'Mscf/d
  Worksheets("Deposition Prediction").Range("K7") = VO 'bpd
  Worksheets("Deposition Prediction").Range("L7") = VW 'bpd

  Worksheets("Deposition Prediction_WhatIf").Range("F7") = TBH
  Worksheets("Deposition Prediction_WhatIf").Range("H7") = TWH
  Worksheets("Deposition Prediction_WhatIf").Range("G7") = PBH
  Worksheets("Deposition Prediction_WhatIf").Range("I7") = PWH
  Worksheets("Deposition Prediction_WhatIf").Range("J7") = VgTP / 28.31685 'Mscf/d
  Worksheets("Deposition Prediction_WhatIf").Range("K7") = VO 'bpd
  Worksheets("Deposition Prediction_WhatIf").Range("L7") = VW 'bpd
  
  'dai 2021 corrosion
  Worksheets("Corrosion").Range("F7") = TBH
  Worksheets("Corrosion").Range("H7") = TWH
  Worksheets("Corrosion").Range("G7") = PBH
  Worksheets("Corrosion").Range("I7") = PWH
  Worksheets("Corrosion").Range("J7") = VgTP / 28.31685 'Mscf/d
  Worksheets("Corrosion").Range("K7") = VO 'bpd
  Worksheets("Corrosion").Range("L7") = VW 'bpd
  
  Worksheets("Corrosion").Range("F11") = TBH
  Worksheets("Corrosion").Range("H11") = TWH
  Worksheets("Corrosion").Range("G11") = PBH
  Worksheets("Corrosion").Range("I11") = PWH
  Worksheets("Corrosion").Range("J11") = VgTP / 28.31685 'Mscf/d
  Worksheets("Corrosion").Range("K11") = VO 'bpd
  Worksheets("Corrosion").Range("L11") = VW 'bpd
  
  
  If Iter_MT_WI = 0 Then Iter_MT_WI = 1 'initiallizaiton
  
  If UseSI = 1 Then
    Worksheets("Deposition Prediction").Range("F7") = (TBH - 32) * 5 / 9    'default T as TF, P as psia, Output TBH, TWH etc to calcite sheet
    Worksheets("Deposition Prediction").Range("H7") = (TWH - 32) * 5 / 9
    Worksheets("Deposition Prediction").Range("G7") = PBH / 14.503774
    Worksheets("Deposition Prediction").Range("I7") = PWH / 14.503774
    Worksheets("Deposition Prediction").Range("J7") = VgTP / 1000 'Mm3/d
    Worksheets("Deposition Prediction").Range("K7") = VO * 0.159 'm3/d
    Worksheets("Deposition Prediction").Range("L7") = VW * 0.159 'm3/d
    
    Worksheets("Deposition Prediction_WhatIf").Range("F7") = (TBH - 32) * 5 / 9    'default T as TF, P as psia, Output TBH, TWH etc to calcite sheet
    Worksheets("Deposition Prediction_WhatIf").Range("H7") = (TWH - 32) * 5 / 9
    Worksheets("Deposition Prediction_WhatIf").Range("G7") = PBH / 14.503774
    Worksheets("Deposition Prediction_WhatIf").Range("I7") = PWH / 14.503774
    Worksheets("Deposition Prediction_WhatIf").Range("J7") = VgTP / 1000 'Mm3/d
    Worksheets("Deposition Prediction_WhatIf").Range("K7") = VO * 0.159 'm3/d
    Worksheets("Deposition Prediction_WhatIf").Range("L7") = VW * 0.159 'm3/d
    
    'dai 2021 corrosion
    Worksheets("Corrosion").Range("F7") = (TBH - 32) * 5 / 9
    Worksheets("Corrosion").Range("H7") = (TWH - 32) * 5 / 9
    Worksheets("Corrosion").Range("G7") = PBH / 14.503774
    Worksheets("Corrosion").Range("I7") = PWH / 14.503774
    Worksheets("Corrosion").Range("J7") = VgTP / 1000 'Mm3/d
    Worksheets("Corrosion").Range("K7") = VO * 0.159 'm3/d
    Worksheets("Corrosion").Range("L7") = VW * 0.159 'm3/d
    
    Worksheets("Corrosion").Range("F11") = (TBH - 32) * 5 / 9
    Worksheets("Corrosion").Range("H11") = (TWH - 32) * 5 / 9
    Worksheets("Corrosion").Range("G11") = PBH / 14.503774
    Worksheets("Corrosion").Range("I11") = PWH / 14.503774
    Worksheets("Corrosion").Range("J11") = VgTP / 1000 'Mm3/d
    Worksheets("Corrosion").Range("K11") = VO * 0.159 'm3/d
    Worksheets("Corrosion").Range("L11") = VW * 0.159 'm3/d
  End If
  
If RunGoalSeek <> 1 Then  //目前暂时不管，缺省RunGoalSeek!=1，求解任何execl输入界面的任何值，202508101035
     For LoopTP = 1 To 10//一个压力一个温度就可以202508101028
     If UseTPCalciteSheet = 0 Then
        TF = TBH - deltaT * (LoopTP - 1): TK = (TF - 32) * 5 / 9 + 273.15
        Ppsia = PBH - deltaP * (LoopTP - 1): Patm = Ppsia / 14.696
    '    ElseIf RunStatReservoirCalc = 0 And UseTPCalciteSheet = 1 Then
        Else
        TF = Worksheets("Calcite").Cells(14 - LoopTP, 1):
        Ppsia = Worksheets("Calcite").Cells(14 - LoopTP, 2):
        If UseSI = 1 Then TF = Worksheets("Calcite").Cells(14 - LoopTP, 1) * 9 / 5 + 32
        If UseSI = 1 Then Ppsia = Worksheets("Calcite").Cells(14 - LoopTP, 2) * 14.503774
        TK = (TF - 32) * 5 / 9 + 273.15
        Patm = Ppsia / 14.696
      End If
        PBar = Ppsia / 14.503774
        TC = (TF - 32) * 5 / 9
     Call LoopTPSI
     If H2Oevap <> 1 Then
        If Ist <> 0 Then
         Call LoopTPVisHeatCap
         If Run_MassTransfer = 1 Then Call MassTransferCoefficients //沉积板块，目前暂时不管，Run_MassTransfer==0，202508101035
        End If
         Call LoopTPppt

     End If
     Call LoopTPWrite
     If H2Oevap = 1 Then GoTo 201
    Next LoopTP
Else 'when running Goalseek
For LoopTP = 1 To 2
    If LoopTP = 1 Then
    TF = TBH: TK = (TF - 32) * 5 / 9 + 273.15: TC = (TF - 32) * 5 / 9
    Ppsia = PBH: Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774
    End If
    If LoopTP = 2 Then
    TF = TWH: TK = (TF - 32) * 5 / 9 + 273.15: TC = (TF - 32) * 5 / 9
    Ppsia = PWH: Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774
    End If
    Call LoopTPSI
    Call LoopTPWrite
    If H2Oevap = 1 Then GoTo 201
Next LoopTP
End If 'correspond to RunGoalSeek=1

'Call ScaleRiskGraph
    mytime1 = Time
    nettime = (mytime1 - mytime)
    If RunSSP = 1 Then Worksheets("Input").Range("R28") = nettime * 24 * 3600
'    Application.Calculation = xlCalculationAutomatic
201    Application.ScreenUpdating = True
  If RunGoalSeek = 0 And Run_MassTransfer = 0 Then 'The following updates the Last two columns even when GoalSeek is not run
    Call ErrorMsgBox
    If UseSI = 1 Then
    TBH = (TBH - 32) * 5 / 9
    TWH = (TWH - 32) * 5 / 9
    PBH = PBH / 14.503774
    PWH = PWH / 14.503774

    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial and final temperatures are " & TBH & " and " & TWH & " C;" & Chr(13) _
    & "Initial and final pressures are " & PBH & " and " & PWH & " Bar." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." & Chr(13) & Chr(13) _
    & "Calculation Option(s) on Row 51 used for Input 1 is " & usepHmix(1)  '
Else
    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial and final temperatures are " & TBH & " and " & TWH & " F;" & Chr(13) _
    & "Initial and final pressures are " & PBH & " and " & PWH & " psia." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." & Chr(13) & Chr(13) _
    & "Calculation Option(s) on Row 51 used for Input 1 is " & Chr(13) & usepHmix(1) '******************************
    End If
    End If



If Run_MassTransfer <> 1 Or Run10TestCases <> 1 Or RunWhatIf <> 1 Or Run_Seawater_Mixing <> 1 Or Run_MixingTwoWells <> 1 Then
Worksheets(mySheet).Activate
Worksheets(mySheet).Range("A1").Select
End If
If RunGoalSeek <> 1 And Run_MassTransfer <> 1 Then 'Since GoalSeek and Run_MassTransfer looped around Sub A1, the end statement needs to be skipped.
End
End If
End Sub

'********************************************************************************************
'II.  This subroutine is activated by clicking on the button at the bottom of each output screen.
Sub A2_SIvalues_10TestCases()
'Note flash is forced to tur off in ReadInDataD
 mytime = Time
'MsgBox ("Note that this calculation is run with flash calculation option set to zero.")
Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
ReDim CaseCount(5), CaseCount_II(110)
MsgBox ("Note that this calculation is run with flash calculation option set to zero.")

 Run10TestCases = 1:  RunGoalSeek = 0: RunSSP = 0: RunNORM = 0 'Set index so that the test case cells will not be nulled out.
    Call InitializeOptionClearCellContent
    Call CountNOB

'This subroutine performs the 10 calculations at the bottom of each sheet.
    Call B1_InitializeIndices      '<--These calculations, often repeat, but are used to guarantee that all variables
    For Loop10 = 1 To 10
    Call Worksheets("Readme").B2_ReadinAllData          'will be defined under all cases, e.g., if these are the first and only calculations.
'For each of the ten cases, first, the yCO2 is read from F15, F16, and F17
'on the Calcite sheet and then this value of yCO2 is combined with TBH and PBH
'to calculate SI values at the BH conditions, for use in the delta SI calculations.
'The fraction of H2S-gas, yH2Sstp, is read and used "as is" from the Input sheet.

'------------------------------------------------------------------
'Calculate the total moles of each gas component (whether in the gas or in oil or water).
    Call B3_CalcConcs
    Call B4_CalcFinalBrine

 'Calculate SI values for all precipitates at bottom hole conditions, as a reference for delta-SI values.
    TF = TBH: TK = (TF - 32) * 5 / 9 + 273.15  'Calculate BH SIvalues for deltaSIs
    Ppsia = PBH: Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774:
    Call B5_CalculateSIvalues      'These are the BH SI values at yCO2 from test cases.
    SICalBh = SICal: SIBarBH = SIBar: SIGypBH = SIGyp: SIHemiBH = SIHemi
    SIAnBH = SIAn: SICelBH = SICel: SIHalBH = SIHal: SICaF2BH = SICaF2
    SIFeSBH = SIFeS: SIZnSBH = SIZnS: SISidBH = SISid

'Calcite sheet
mySheet = ActiveSheet.Name
If mySheet = "Calcite" Then
        TF = Worksheets("Calcite").Cells(15 + Loop10, 1):
        If UseSI = 1 Then TF = TF * 9 / 5 + 32
        TK = (TF - 32) * 5 / 9 + 273.15
        Ppsia = Worksheets("Calcite").Cells(15 + Loop10, 2):
        If UseSI = 1 Then Ppsia = Ppsia * 14.503774
        Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774:
    Call B5_CalculateSIvalues
        If UseSR = 0 Then
        Worksheets("Calcite").Cells(15 + Loop10, 5) = SICal
        Worksheets("Calcite").Cells(15 + Loop10, 6) = SICal - SICalBh
        Else
        Worksheets("Calcite").Cells(15 + Loop10, 5) = 10 ^ SICal
        Worksheets("Calcite").Cells(15 + Loop10, 6) = 10 ^ (SICal - SICalBh)
        End If
        pH_before_precipitation = pH
        pHMeterReading = pH - DpHj
        Worksheets("Calcite").Cells(15 + Loop10, 4) = pHMeterReading
'Calcite.  Calculates amount of calcite to precipitate to equilibrium, iff SI(calcite) > 0.
pH = pH_before_precipitation
nTCO2 = nTCO2_before_precipitation
nTH2S = nTH2S_before_precipitation
pptCal = 0
If SICal > 0 Then
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
'End If
pptCalcite_NoMassTransfer = ppt
pHaftercalciteppt = pH
pptCal = ppt
End If
If usePTB = 0 Then Worksheets("Calcite").Cells(15 + Loop10, 7) = pptCal * 100091 * (rho25c - TDS * 0.000001) 'Amont of calcite to ppt to equilibrium.
If usePTB = 1 Then Worksheets("Calcite").Cells(15 + Loop10, 7) = pptCal * 100091 * (rho25c - TDS * 0.000001) * 0.35051 'Amont of calcite to ppt to equilibrium.
End If

'Barite Sheet
mySheet = ActiveSheet.Name
If mySheet = "Barite" Then
        TF = Worksheets("Barite").Cells(15 + Loop10, 1):
        If UseSI = 1 Then TF = TF * 9 / 5 + 32
       
        
        Ppsia = Worksheets("Barite").Cells(15 + Loop10, 2):
        If UseSI = 1 Then Ppsia = Ppsia * 14.503774
        TK = (TF - 32) * 5 / 9 + 273.15: TC = TK - 273.15
        Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774
    Call B5_CalculateSIvalues
        If UseSR = 0 Then
        Worksheets("Barite").Cells(15 + Loop10, 3) = SIBar        'Barite
        Worksheets("Barite").Cells(15 + Loop10, 4) = SIBar - SIBarBH
        Else
        Worksheets("Barite").Cells(15 + Loop10, 4) = 10 ^ SIBar      'Barite
        Worksheets("Barite").Cells(15 + Loop10, 5) = 10 ^ (SIBar - SIBarBH)
        End If

        ppt = 0
        If SIBar > 0 Then
        a = 1
        b = -(mc(iBa) + ma(iSO4))
        cc = mc(iBa) * ma(iSO4) - KspBarite / (gCat(iBa) * gAn(iSO4) * gNMean(iBaSO4) ^ 2)
        Call QuadraticRoots(a, b, cc, ppt, root2)
        pptBarite_NoMassTransfer = ppt
 If usePTB = 0 Then Worksheets("barite").Cells(15 + Loop10, 5) = ppt * 233390 * (rho25c - TDS / 1000000#)
 If usePTB = 1 Then Worksheets("barite").Cells(15 + Loop10, 5) = ppt * 233390 * (rho25c - TDS / 1000000#) * 0.35051
        End If
        
End If

'Ca and Sr-SO4's sheet
mySheet = ActiveSheet.Name
If mySheet = "Other SO4s" Then
        TF = Worksheets("Other SO4s").Cells(16 + Loop10, 1):
        If UseSI = 1 Then TF = TF * 9 / 5 + 32
        TK = (TF - 32) * 5 / 9 + 273.15
        Ppsia = Worksheets("Other SO4s").Cells(16 + Loop10, 2):
        If UseSI = 1 Then Ppsia = Ppsia * 14.503774
        Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774:
    Call B5_CalculateSIvalues
        If UseSR = 0 Then
        Worksheets("Other SO4s").Cells(16 + Loop10, 3) = SIGyp     'Gypsum
        Else
        Worksheets("Other SO4s").Cells(16 + Loop10, 3) = 10 ^ SIGyp  'Gypsum
        End If
        pptGyp = 0
    If SIGyp > 0 Then
        b = -(mc(iCa) + ma(iSO4))
        cc = mc(iCa) * ma(iSO4) - KspGypsum / ((aH2O ^ 2) * gCat(iCa) * gAn(iSO4) * aNH2O ^ 2 * gNMean(iCaSO42H2O) ^ 2)
        pptGyp = (-b - (b ^ 2 - 4 * cc) ^ 0.5) / 2
    End If
If usePTB = 0 Then Worksheets("Other SO4s").Cells(16 + Loop10, 4) = pptGyp * 172172 * (rho25c - TDS * 0.000001)
If usePTB = 1 Then Worksheets("Other SO4s").Cells(16 + Loop10, 4) = pptGyp * 172172 * (rho25c - TDS * 0.000001)

    If UseSR = 0 Then
    Worksheets("Other SO4s").Cells(16 + Loop10, 5) = SIHemi          'Hemihydrate
    Else
    Worksheets("Other SO4s").Cells(16 + Loop10, 5) = 10 ^ SIHemi        'Hemihydrate
    End If

        pptHemi = 0
    If SIHemi > 0 Then
        b = -(mc(iCa) + ma(iSO4))
        cc = mc(iCa) * ma(iSO4) - KspHemihydrate / ((aH2O ^ 0.5) * gCat(iCa) * gAn(iSO4) * (aNH2O ^ 0.5) * gNMean(ihemiCaSO4) ^ 2)
        pptHemi = (-b - (b ^ 2 - 4 * cc) ^ 0.5) / 2
     End If
If usePTB = 0 Then Worksheets("Other SO4s").Cells(16 + Loop10, 6) = pptHemi * 145148 * (rho25c - TDS * 0.000001)
 If usePTB = 1 Then Worksheets("Other SO4s").Cells(16 + Loop10, 6) = pptHemi * 145148 * (rho25c - TDS * 0.000001) * 0.35051
    If UseSR = 0 Then
    Worksheets("Other SO4s").Cells(16 + Loop10, 7) = SIAn             'Anhydrite
    Else
    Worksheets("Other SO4s").Cells(16 + Loop10, 7) = 10 ^ SIAn           'Anhydrite
    End If
          pptAn = 0
    If SIAn > 0 Then
      b = -(mc(iCa) + ma(iSO4))
      cc = mc(iCa) * ma(iSO4) - KspAnhydrite / (gCat(iCa) * gAn(iSO4) * gNMean(iCaSO4) ^ 2)
      pptAn = (-b - (b ^ 2 - 4 * cc) ^ 0.5) / 2
     End If
If usePTB = 0 Then Worksheets("Other SO4s").Cells(16 + Loop10, 8) = pptAn * 136140 * (rho25c - TDS * 0.000001)
If usePTB = 1 Then Worksheets("Other SO4s").Cells(16 + Loop10, 8) = pptAn * 136140 * (rho25c - TDS * 0.000001) * 0.35051
    If UseSR = 0 Then
    Worksheets("Other SO4s").Cells(16 + Loop10, 9) = SICel         'Celestite
    Else
    Worksheets("Other SO4s").Cells(16 + Loop10, 9) = 10 ^ SICel      'Celestite
    End If
          pptCel = 0
    If SICel > 0 Then
      b = -(mc(iSr) + ma(iSO4))
      cc = mc(iSr) * ma(iSO4) - KspCelestite / (gCat(iSr) * gAn(iSO4) * gNMean(iSrSO4) ^ 2)
      pptCel = (-b - (b ^ 2 - 4 * cc) ^ 0.5) / 2
    End If
If usePTB = 0 Then Worksheets("Other SO4s").Cells(16 + Loop10, 10) = pptCel * 183680 * (rho25c - TDS * 0.000001)
If usePTB = 1 Then Worksheets("Other SO4s").Cells(16 + Loop10, 10) = pptCel * 183680 * (rho25c - TDS * 0.000001) * 0.35051
End If

'Halite sheet
mySheet = ActiveSheet.Name
If mySheet = "Halite" Then
    TF = Worksheets("Halite").Cells(15 + Loop10, 1):
    If UseSI = 1 Then TF = TF * 9 / 5 + 32
    TK = (TF - 32) * 5 / 9 + 273.15: TC = TK - 273.15
    Ppsia = Worksheets("Halite").Cells(15 + Loop10, 2):
    If UseSI = 1 Then Ppsia = Ppsia * 14.503774
    Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774
    Call B5_CalculateSIvalues
    If UseSR = 0 Then
    Worksheets("Halite").Cells(15 + Loop10, 3) = SIHal                      'Halite
    Worksheets("Halite").Cells(15 + Loop10, 4) = SIHal - SIHalBH
    Else
    Worksheets("Halite").Cells(15 + Loop10, 3) = 10 ^ SIHal                   'Halite
    Worksheets("Halite").Cells(15 + Loop10, 4) = 10 ^ (SIHal - SIHalBH)
    End If
      pptHal = 0
    If SIHal > 0 Then
      b = -(mc(iNa) + ma(iCl))
      cc = mc(iNa) * ma(iCl) - KspHalite / (gCat(iNa) * gAn(iCl) * gNMean(iNaCl) ^ 2)
      pptHal = (-b - (b ^ 2 - 4 * cc) ^ 0.5) / 2
    End If
If usePTB = 0 Then Worksheets("Halite").Cells(15 + Loop10, 5) = pptHal * 58443 * (rho25c - TDS * 0.000001)
If usePTB = 1 Then Worksheets("Halite").Cells(15 + Loop10, 5) = pptHal * 58443 * (rho25c - TDS * 0.000001) * 0.35051
End If

'S, F, and FeCO3 sheet
mySheet = ActiveSheet.Name
If mySheet = "Sulfides,Fluorite,Carbonates" Then

    TF = Worksheets("Sulfides,Fluorite,Carbonates").Cells(16 + Loop10, 1):
    If UseSI = 1 Then TF = TF * 9 / 5 + 32
    TK = (TF - 32) * 5 / 9 + 273.15
    Ppsia = Worksheets("Sulfides,Fluorite,Carbonates").Cells(16 + Loop10, 2):
    If UseSI = 1 Then Ppsia = Ppsia * 14.503774
    Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774:
    Call B5_CalculateSIvalues
    pH_before_precipitation = pH  'This saves the pH value before any dissolution or precipitation takes place.
 'For FeS ppt it is assumed that pH is const, buffered by HCO3, and that P-H2S, or H2Saq,  is const.
    ppt = 0
    dSIFeS = SIFeS - SIFeSBH
    If UseSR = 0 Then
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(16 + Loop10, 3) = SIFeS            'FeS
    Else
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(16 + Loop10, 3) = 10 ^ SIFeS          'FeS
   End If

If SIFeS > 0 Then
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 8, 3, KspFeS)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 3, KspFeS)  '(ppt_or_not, iMetals, iGas, Ksp)
'End If
End If
If usePTB = 0 Then Worksheets("Sulfides,Fluorite,Carbonates").Cells(16 + Loop10, 4) = ppt * 87910 * (rho25c - TDS * 0.000001)
If usePTB = 1 Then Worksheets("Sulfides,Fluorite,Carbonates").Cells(16 + Loop10, 4) = ppt * 87910 * (rho25c - TDS * 0.000001) * 0.35051

  'For ZnS ppt it is assumed that pH is const, buffered by HCO3, and that P-H2S, or H2Saq,  is const.
    ppt = 0
    pH = pH_before_precipitation
    nTCO2 = nTCO2_before_precipitation
    nTH2S = nTH2S_before_precipitation
    If mc(iZn) = 0 Or HS = 0 Then SIZnS = 0                         'ZnS
    dSIZnS = SIZnS - SIZnSBH
    If UseSR = 0 Then
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(16 + Loop10, 5) = SIZnS
    Else
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(16 + Loop10, 5) = 10 ^ SIZnS
    End If
If SIZnS > 0 Then
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 9, 3, KspZnS)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 9, 3, KspZnS)  '(ppt_or_not, iMetals, iGas, Ksp)
'End If
End If
If usePTB = 0 Then Worksheets("Sulfides,Fluorite,Carbonates").Cells(16 + Loop10, 6) = ppt * 97440 * (rho25c - TDS * 0.000001)
If usePTB = 1 Then Worksheets("Sulfides,Fluorite,Carbonates").Cells(16 + Loop10, 6) = ppt * 97440 * (rho25c - TDS * 0.000001) * 0.35051

'For CaF2, fluorite, the amount to precipitate is determined by solving the corresponding cubic eqution.
    If UseSR = 0 Then
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(16 + Loop10, 7) = SICaF2           'CaF2
    Else
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(16 + Loop10, 7) = SICaF2           'CaF2
    End If
ppt = 0
If SICaF2 > 0 Then
coef1 = 1
coef2 = -1 * (mc(iCa) + ma(intF))
coef3 = (4 * mc(iCa) * ma(intF) + ma(intF) ^ 2) / 4
coef4 = (mc(iCa) * ma(intF) ^ 2 - KspCaF2 / (gCat(iCa) * gAn(intF) ^ 2)) / (-4)
Call CubicRoots(coef1, coef2, coef3, coef4, root1, root2, root3)
ppt = root1
If root2 < ppt Then ppt = root2
If root3 < ppt Then ppt = root3
End If
If usePTB = 0 Then Worksheets("Sulfides,Fluorite,Carbonates").Cells(16 + Loop10, 8) = ppt * 78080 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("Sulfides,Fluorite,Carbonates").Cells(16 + Loop10, 8) = ppt * 78080 * (rho25c - TDS / 1000000#) * 0.35051

'For siderite, FeCO3
   ppt = 0
    dSISid = SISid - SISidBH
    If UseSR = 0 Then
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(16 + Loop10, 9) = SISid
    'Worksheets("Sulfides,Fluorite,Carbonates").Cells(16 + Loop10, 10) = dSISid 'FeCO3
    Else
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(16 + Loop10, 9) = 10 ^ SISid
    'Worksheets("Sulfides,Fluorite,Carbonates").Cells(16 + Loop10, 10) = 10 ^ dSISid 'FeCO3
    End If
If SISid > 0 Then
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 8, 2, KspSiderite)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 2, KspSiderite)  '(ppt_or_not, iMetals, iGas, Ksp)
'End If
End If
If usePTB = 0 Then Worksheets("Sulfides,Fluorite,Carbonates").Cells(16 + Loop10, 10) = ppt * 115861 * (rho25c - TDS * 0.000001)
If usePTB = 1 Then Worksheets("Sulfides,Fluorite,Carbonates").Cells(16 + Loop10, 10) = ppt * 115861 * (rho25c - TDS * 0.000001) * 0.35051
End If 'corresponds to if mysheet="Sulfides,Fluorite,Carbonates"
Next Loop10
Call ErrorMsgBox
Worksheets(mySheet).Activate
 Run10TestCases = 0 'Reset variable for other uses of program while still open.
mytime1 = Time
nettime = (mytime1 - mytime)
Worksheets("Input").Range("R28") = nettime * 24 * 3600
'After the subroutine:
'Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
'
End
End Sub
'********************************************************************************************
'III.  This subroutine is activated by clicking on the button in either the mixing input
'      or the mixing output screens.
Sub A3_MixingBrine1Seawater()
 mytime = Time
Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual


 Run_Seawater_Mixing = 1: RunGoalSeek = 0: RunSSP = 0: RunNORM = 0
Call InitializeOptionClearCellContent
'title = "Where is the Input data?"  'Note the following is commented out. It was included for a simplified Input sheet
'prompt = "Enter 1 if the data is on the Simplified Input sheet, Enter 2 if the data is on the Input or Input II Sheet"
'response3 = Application.InputBox(prompt, title, , , , , Type:=1)
'If response3 = 1 Then
'mySheet = "Simplified Input"
'RunSimpSSP = 1
'Else
'mySheet = "Input"
'End If
'
'If response3 = 1 Then
'MsgBox ("This Sheet calculates mixing of the brine in Column C (called Fluid #1, generally reservoir brine) with the brine in Column D (called Fluid #2, generally injection water) of Simplified Input." _
'& Chr(13) & Chr(13) & "The gas (G37), oil (G38), and water (G39) volumes are used in the mixing calculations.  The %CO2 in C29 and the H2S in C30 are used in the calculations.  The initial and final T and P values in G14 to G17 are used." _
'& Chr(13) & Chr(13) & "Specifically, this mixing Sheet uses the brine volume in G39 and systematically mixes in increasing fractions of brine in Column D.  For example, if G39 equals 100 B of brine, then a 0.10 mixing fraction" _
'& "(Cells A6) would correspond to 90 B of brine from Column C plus 10 B of brine from Column D.  The gas volume and composition, " _
'& "oil, T and P values from Column G are used in all calculations.")
'End If
'If response3 = 2 Then
MsgBox ("This Sheet calculates mixing of the brine in Column C (called Fluid #1, generally reservoir brine) with the brine in Column D (called Fluid #2, generally fresh water or seawater) of Input." _
& Chr(13) & Chr(13) & "The gas (C31), oil (C32), and water (C33) volumes are used in the mixing calculations.  The %CO2 in C25 and the H2S in C26/C27 are used in the calculations.  The initial and final T and P values in H35 to H38 are used." _
& Chr(13) & Chr(13) & "Specifically, this mixing Sheet uses the brine volume in C33 and systematically mixes in increasing fractions of brine in Column D.  For example, if C33 equals 100 B of brine, then a 0.10 mixing fraction" _
& "(Cells A6) would correspond to 90 B of brine from Column C plus 10 B of brine from Column D.  The gas volume and composition," _
& "oil, T and P values from Column C are used in all calculations." & Chr(13) & Chr(13) & "Note that this calculation is run with flash calculation option set to zero.")
'End If
ReDim CaseCount(5)
ReDim Preserve MixFrac(2)
'Call CountNOB

nob = 2
CaseCount(1) = 1: CaseCount(2) = 2: nob_Input = 2: nob_InputII = 0
For LoopMixing = 1 To 11       'Do 10 mixing compositions, as listed in sheet.
If LoopMixing = 11 Then
pH = pH
End If
For WHandBHLoop = 0 To 1          'Does 10 (T,P) combinations for both the BH(0) and WH(1) conditions.

  MixFrac(2) = Worksheets("Well#1+Water").Cells(16 - LoopMixing, 1)
  MixFrac(1) = 1 - MixFrac(2)
    Call B1_InitializeIndices
    'If RunSimpSSP = 1 Then Call B2_ReadinAllDataSimplified
    'If RunSimpSSP = 0 Then
    Call Worksheets("Readme").B2_ReadinAllData
    Call B3_CalcConcs
    Call B4_CalcFinalBrine
    If WHandBHLoop = 0 Then
      TF = TBH:  TK = (TF - 32) * 5 / 9 + 273.15
      Ppsia = PBH: Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774:
    Else
      TF = TWH:  TK = (TF - 32) * 5 / 9 + 273.15
      Ppsia = PWH: Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774:
    End If

    Call B5_CalculateSIvalues
    pH_before_precipitation = pH
    If UseSR = 0 Then
    Worksheets("Well#1+Water").Cells(16 - LoopMixing, 2 + WHandBHLoop) = SICal
    Worksheets("Well#1+Water").Cells(16 - LoopMixing, 4 + WHandBHLoop) = SIBar
    Worksheets("Well#1+Water").Cells(16 - LoopMixing, 6 + WHandBHLoop) = SIHal
    Worksheets("Well#1+Water").Cells(16 - LoopMixing, 14 + WHandBHLoop) = SIGyp
    Worksheets("Well#1+Water").Cells(16 - LoopMixing, 16 + WHandBHLoop) = SIHemi
    Worksheets("Well#1+Water").Cells(16 - LoopMixing, 18 + WHandBHLoop) = SIAn
    Worksheets("Well#1+Water").Cells(16 - LoopMixing, 20 + WHandBHLoop) = SICel
    Worksheets("Well#1+Water").Cells(51 - LoopMixing, 2 + WHandBHLoop) = SIAmSilica
    Worksheets("Well#1+Water").Cells(51 - LoopMixing, 4 + WHandBHLoop) = SIQuartz
    Worksheets("Well#1+Water").Cells(51 - LoopMixing, 6 + WHandBHLoop) = SIChrysotile
    Worksheets("Well#1+Water").Cells(51 - LoopMixing, 8 + WHandBHLoop) = SIDiopside
    Worksheets("Well#1+Water").Cells(51 - LoopMixing, 10 + WHandBHLoop) = SIGreenalite
    Worksheets("Well#1+Water").Cells(51 - LoopMixing, 22 + WHandBHLoop) = SIFeSAm
    Worksheets("Well#1+Water").Cells(51 - LoopMixing, 24 + WHandBHLoop) = SIFeS
    Worksheets("Well#1+Water").Cells(51 - LoopMixing, 26 + WHandBHLoop) = SITrot
    Else
    Worksheets("Well#1+Water").Cells(16 - LoopMixing, 2 + WHandBHLoop) = 10 ^ SICal
    Worksheets("Well#1+Water").Cells(16 - LoopMixing, 4 + WHandBHLoop) = 10 ^ SIBar
    Worksheets("Well#1+Water").Cells(16 - LoopMixing, 6 + WHandBHLoop) = 10 ^ SIHal
    Worksheets("Well#1+Water").Cells(16 - LoopMixing, 14 + WHandBHLoop) = 10 ^ SIGyp
    Worksheets("Well#1+Water").Cells(16 - LoopMixing, 16 + WHandBHLoop) = 10 ^ SIHemi
    Worksheets("Well#1+Water").Cells(16 - LoopMixing, 18 + WHandBHLoop) = 10 ^ SIAn
    Worksheets("Well#1+Water").Cells(16 - LoopMixing, 20 + WHandBHLoop) = 10 ^ SICel
    Worksheets("Well#1+Water").Cells(51 - LoopMixing, 2 + WHandBHLoop) = 10 ^ SIAmSilica
    Worksheets("Well#1+Water").Cells(51 - LoopMixing, 4 + WHandBHLoop) = 10 ^ SIQuartz
    Worksheets("Well#1+Water").Cells(51 - LoopMixing, 6 + WHandBHLoop) = 10 ^ SIChrysotile
    Worksheets("Well#1+Water").Cells(51 - LoopMixing, 8 + WHandBHLoop) = 10 ^ SIDiopside
    Worksheets("Well#1+Water").Cells(51 - LoopMixing, 10 + WHandBHLoop) = 10 ^ SIGreenalite
    Worksheets("Well#1+Water").Cells(51 - LoopMixing, 22 + WHandBHLoop) = 10 ^ SIFeSAm
    Worksheets("Well#1+Water").Cells(51 - LoopMixing, 24 + WHandBHLoop) = 10 ^ SIFeS
    Worksheets("Well#1+Water").Cells(51 - LoopMixing, 26 + WHandBHLoop) = 10 ^ SITrot
    
    End If
    pptCal = 0
    
If SICal > 0 Then
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
End If
If usePTB = 0 Then Worksheets("Well#1+Water").Cells(16 - LoopMixing, 8 + WHandBHLoop) = ppt * 100091 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("Well#1+Water").Cells(16 - LoopMixing, 8 + WHandBHLoop) = ppt * 100091 * (rho25c - TDS / 1000000#) * 0.35051
  
'Amorphous Iron Sulfide.  For FeS ppt
pptFeSAm = 0
pH = pH_before_precipitation
If SIFeSAm > 0 Then
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 8, 3, KspFeSAm)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 3, KspFeSAm) '(ppt_or_not, iMetals, iGas, Ksp)
'End If

pptFeSAm = ppt
End If
If usePTB = 0 Then Worksheets("Well#1+Water").Cells(51 - LoopMixing, 28 + WHandBHLoop) = pptFeSAm * 87910 * (rho25c - TDS * 0.000001)
If usePTB = 1 Then Worksheets("Well#1+Water").Cells(51 - LoopMixing, 28 + WHandBHLoop) = pptFeSAm * 87910 * (rho25c - TDS * 0.000001) * 0.35051
'Mackinawite
ppt = 0
pH = pH_before_precipitation
pptFeS_NoMassTransfer = 0
If SIFeS > 0 Then
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 8, 3, KspFeS)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 3, KspFeS) '(ppt_or_not, iMetals, iGas, Ksp)
'End If
pptFeS_NoMassTransfer = ppt
End If

If usePTB = 0 Then Worksheets("Well#1+Water").Cells(51 - LoopMixing, 30 + WHandBHLoop) = pptFeS_NoMassTransfer * 87910 * (rho25c - TDS * 0.000001)
If usePTB = 1 Then Worksheets("Well#1+Water").Cells(51 - LoopMixing, 30 + WHandBHLoop) = pptFeS_NoMassTransfer * 87910 * (rho25c - TDS * 0.000001) * 0.35051
    
 'Troilite
pptTrot = 0
pH = pH_before_precipitation
If SITrot > 0 Then
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 8, 3, KspTrot)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 3, KspTrot) '(ppt_or_not, iMetals, iGas, Ksp)
'End If
pptTrot = ppt
End If
If usePTB = 0 Then Worksheets("Well#1+Water").Cells(51 - LoopMixing, 32 + WHandBHLoop) = pptTrot * 87910 * (rho25c - TDS * 0.000001)
If usePTB = 1 Then Worksheets("Well#1+Water").Cells(51 - LoopMixing, 32 + WHandBHLoop) = pptTrot * 87910 * (rho25c - TDS * 0.000001) * 0.35051

      
      pptBar = 0
      If SIBar > 0 Then
      b = -(mc(iBa) + ma(iSO4))
      c = mc(iBa) * ma(iSO4) - KspBarite / (gCat(iBa) * gAn(iSO4) * gNMean(iBaSO4) ^ 2)
      pptBar = (-b - (b ^ 2 - 4 * c) ^ 0.5) / 2
    End If
If usePTB = 0 Then Worksheets("Well#1+Water").Cells(16 - LoopMixing, 10 + WHandBHLoop) = pptBar * 233390 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("Well#1+Water").Cells(16 - LoopMixing, 10 + WHandBHLoop) = pptBar * 233390 * (rho25c - TDS / 1000000#) * 0.35051
    pptHal = 0
    If SIHal > 0 Then
      b = -(mc(iNa) + ma(iCl))
      cc = mc(iNa) * ma(iCl) - KspHalite / (gCat(iNa) * gAn(iCl) * gNMean(iNaCl) ^ 2)
      pptHal = (-b - (b ^ 2 - 4 * cc) ^ 0.5) / 2
    End If
If usePTB = 0 Then Worksheets("Well#1+Water").Cells(16 - LoopMixing, 12 + WHandBHLoop) = pptHal * 58443 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("Well#1+Water").Cells(16 - LoopMixing, 12 + WHandBHLoop) = pptHal * 58443 * (rho25c - TDS / 1000000#) * 0.35051
  pptGyp = 0                       'ppt represents the number of moles of CaCO3 per kg-water to potentially precipitate.
    If SIGyp > 0 Then
      b = -(mc(iCa) + ma(iSO4))
      cc = mc(iCa) * ma(iSO4) - KspGypsum / ((aH2O ^ 2) * gCat(iCa) * gAn(iSO4) * aNH2O ^ 2 * gNMean(iCaSO42H2O) ^ 2)
      pptGyp = (-b - (b ^ 2 - 4 * cc) ^ 0.5) / 2
    End If
If usePTB = 0 Then Worksheets("Well#1+Water").Cells(16 - LoopMixing, 22 + WHandBHLoop) = pptGyp * 172172 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("Well#1+Water").Cells(16 - LoopMixing, 22 + WHandBHLoop) = pptGyp * 172172 * (rho25c - TDS / 1000000#) * 0.35051

    pptHemi = 0
    If SIHemi > 0 Then
      b = -(mc(iCa) + ma(iSO4))
      cc = mc(iCa) * ma(iSO4) - KspHemihydrate / ((aH2O ^ 0.5) * gCat(iCa) * gAn(iSO4) * aNH2O ^ 0.5 * gNMean(ihemiCaSO4) ^ 2)
      pptHemi = (-b - (b ^ 2 - 4 * cc) ^ 0.5) / 2
    End If
If usePTB = 0 Then Worksheets("Well#1+Water").Cells(16 - LoopMixing, 24 + WHandBHLoop) = pptHemi * 145148 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("Well#1+Water").Cells(16 - LoopMixing, 24 + WHandBHLoop) = pptHemi * 145148 * (rho25c - TDS / 1000000#) * 0.35051

    pptAn = 0
    If SIAn > 0 Then
      b = -(mc(iCa) + ma(iSO4))
      cc = mc(iCa) * ma(iSO4) - KspAnhydrite / (gCat(iCa) * gAn(iSO4) * gNMean(iCaSO4) ^ 2)
      pptAn = (-b - (b ^ 2 - 4 * cc) ^ 0.5) / 2
    End If
If usePTB = 0 Then Worksheets("Well#1+Water").Cells(16 - LoopMixing, 26 + WHandBHLoop) = pptAn * 136140 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("Well#1+Water").Cells(16 - LoopMixing, 26 + WHandBHLoop) = pptAn * 136140 * (rho25c - TDS / 1000000#) * 0.35051

    pptCel = 0
    If SICel > 0 Then
      b = -(mc(iSr) + ma(iSO4))
      cc = mc(iSr) * ma(iSO4) - KspCelestite / (gCat(iSr) * gAn(iSO4) * gNMean(iSrSO4) ^ 2)
      pptCel = (-b - (b ^ 2 - 4 * cc) ^ 0.5) / 2
    End If
If usePTB = 0 Then Worksheets("Well#1+Water").Cells(16 - LoopMixing, 28 + WHandBHLoop) = pptCel * 183680 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("Well#1+Water").Cells(16 - LoopMixing, 28 + WHandBHLoop) = pptCel * 183680 * (rho25c - TDS / 1000000#) * 0.35051
'***************************************************************************
'For silicate SI
pH = pH_before_precipitation
nTCO2 = nTCO2_before_precipitation
nTH2S = nTH2S_before_precipitation
pptAmSilica = 0
If SIAmSilica > 0 Then
'If useEOS = 0 Then
    Call C4_SSPEquilCalcs(1, 8, 10, KspAmSilica)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'Else
'    Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 10, KspAmSilica)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'End If
pptAmSilica = ppt
End If
If usePTB = 0 Then Worksheets("Well#1+Water").Cells(51 - LoopMixing, 12 + WHandBHLoop) = pptAmSilica * 60084 * (rho25c - TDS * 0.000001)
If usePTB = 1 Then Worksheets("Well#1+Water").Cells(51 - LoopMixing, 12 + WHandBHLoop) = pptAmSilica * 60084 * (rho25c - TDS * 0.000001) * 0.35051


pH = pH_before_precipitation
nTCO2 = nTCO2_before_precipitation
nTH2S = nTH2S_before_precipitation
pptQuartz = 0
If SIQuartz > 0 Then
'If useEOS = 0 Then
    Call C4_SSPEquilCalcs(1, 8, 11, KspQuartz)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'Else
'    Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 11, KspQuartz)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'End If
pptQuartz = ppt
End If

If usePTB = 0 Then Worksheets("Well#1+Water").Cells(51 - LoopMixing, 14 + WHandBHLoop) = pptQuartz * 60084 * (rho25c - TDS * 0.000001)
If usePTB = 1 Then Worksheets("Well#1+Water").Cells(51 - LoopMixing, 14 + WHandBHLoop) = pptQuartz * 60084 * (rho25c - TDS * 0.000001) * 0.35051
pH = pH_before_precipitation
nTCO2 = nTCO2_before_precipitation
nTH2S = nTH2S_before_precipitation
pptChrysotile = 0
If SIChrysotile > 0 Then
'If useEOS = 0 Then
    Call C4_SSPEquilCalcs(1, 8, 14, KspChrysotile)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'Else
'    Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 14, KspChrysotile)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'End If
pptChrysotile = ppt
End If
If usePTB = 0 Then Worksheets("Well#1+Water").Cells(51 - LoopMixing, 16 + WHandBHLoop) = pptChrysotile * 371770 * (rho25c - TDS * 0.000001) / 3  '/3 corrects for alkalinity issue.
If usePTB = 1 Then Worksheets("Well#1+Water").Cells(51 - LoopMixing, 16 + WHandBHLoop) = pptChrysotile * 371770 * (rho25c - TDS * 0.000001) / 3 * 0.35051 '/3 corrects for alkalinity issue.

pH = pH_before_precipitation
nTCO2 = nTCO2_before_precipitation
nTH2S = nTH2S_before_precipitation
pptDiopside = 0
If SIDiopside > 0 Then
'If useEOS = 0 Then
    Call C4_SSPEquilCalcs(1, 8, 13, KspDiopside)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'Else
'    Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 13, KspDiopside)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'End If
    pptDiopside = ppt
End If
If usePTB = 0 Then Worksheets("Well#1+Water").Cells(51 - LoopMixing, 18 + WHandBHLoop) = pptDiopside * 216550 * (rho25c - TDS * 0.000001) / 2    '/3 corrects for alkalinity issue.
If usePTB = 1 Then Worksheets("Well#1+Water").Cells(51 - LoopMixing, 18 + WHandBHLoop) = pptDiopside * 216550 * (rho25c - TDS * 0.000001) / 2 * 0.35051  '/3 corrects for alkalinity issue.

pH = pH_before_precipitation
nTCO2 = nTCO2_before_precipitation
nTH2S = nTH2S_before_precipitation
pptGreenalite = 0
If SIGreenalite > 0 Then
'If useEOS = 0 Then
    Call C4_SSPEquilCalcs(1, 8, 12, KspGreenalite)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'Else
'    Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 12, KspGreenalite)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'End If
pptGreenalite = ppt
End If
If usePTB = 0 Then Worksheets("Well#1+Water").Cells(51 - LoopMixing, 20 + WHandBHLoop) = pptGreenalite * 277110 * (rho25c - TDS * 0.000001) / 2   '/3 corrects for alkalinity issue.
If usePTB = 1 Then Worksheets("Well#1+Water").Cells(51 - LoopMixing, 20 + WHandBHLoop) = pptGreenalite * 277110 * (rho25c - TDS * 0.000001) / 2 * 0.35051 '/3 corrects for alkalinity issue.

Next WHandBHLoop
Next LoopMixing

    Worksheets("Well#1+Water").Range("b2") = WellNameMix(1)
    Worksheets("Well#1+Water").Range("d2") = Worksheets("Input").Range("c5")
    Call ErrorMsgBox
    Worksheets("Well#1+Water").Activate 'Automatically opens the Mixing sheet.
mytime1 = Time
nettime = (mytime1 - mytime) * 24 * 3600
If UseSI = 1 Then
TBH = (TBH - 32) * 5 / 9: TWH = (TWH - 32) * 5 / 9: PBH = PBH / 14.503774: PWH = PWH / 14.50377
End If
Worksheets("Input").Range("R28") = nettime
'Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True


    If UseSI = 1 Then
    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial and final temperatures are " & TBH & " and " & TWH & " C;" & Chr(13) _
    & "Initial and final pressures are " & PBH & " and " & PWH & " Bar." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." & Chr(13) & Chr(13) _
    & "Calculation Option(s) on Row 51 used for Input 1 is " & Chr(13) & usepHmix(1) '
    Else
    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial and final temperatures are " & TBH & " and " & TWH & " F;" & Chr(13) _
    & "Initial and final pressures are " & PBH & " and " & PWH & " psia." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." & Chr(13) & Chr(13) _
    & "Calculation Option(s) on Row 51 used for Input 1 is " & Chr(13) & usepHmix(1) '******************************
    End If
    End

201 End Sub

'*********************************************************************************************************
'Mixing any Two Wells
Sub A4_MixingTwoWells()
mytime = Time
Run_MixingTwoWells = 1: RunGoalSeek = 0: RunSSP = 0: RunNORM = 0
'Before the subroutine:
Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual

Call InitializeOptionClearCellContent
MsgBox ("This routine calculate SI of a mixed brine from two wells at various mixing fractions." _
& Chr(13) & "Check two boxes on Row 3 of Input to select two wells" _
& Chr(13) & Chr(13) & "The initial and final T and P are read from Cells H35 to H38 of Input." _
& Chr(13) & Chr(13) & "Gas, oil, and brine volumes of the user-selected fluid # 1 and fluid # 2 are mixed according to the mixing fraction, Cells A5-A15. Mixing fractions (A5 - A15) refer to the fractions of fluid # 2." _
& Chr(13) & "That is, Cell A6 = 0.10 would refer to a mixed gas, oil, and brine that contains 0.90 times the gas, oil, and brine volumes of fluid # 1 plus 0.10 times the gas, oil, and brine volumes of fluid # 2." & _
Chr(13) & Chr(13) & "Note that this calculation is run with flash calculation option set to zero and uses data checked on Row 3 of the Input sheet")
ReDim CaseCount(5), CaseCount_II(110)
ReDim Preserve MixFrac(2)
Call CountNOB

If nob > 2 Or nob < 2 Then
MsgBox ("You must select two wells to perform this calculation, Calculation stopped.")
End
End If
For LoopMixing = 1 To 11       'Do 10 mixing compositions, as listed in sheet.
For WHandBHLoop = 0 To 1        'Does 10 (T,P) combinations for both the BH(0) and WH(1) conditions.

    MixFrac(2) = Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 1)
       MixFrac(1) = 1 - MixFrac(2)
    Call B1_InitializeIndices
    Call Worksheets("Readme").B2_ReadinAllData
    Call B3_CalcConcs
    Call B4_CalcFinalBrine
    If WHandBHLoop = 0 Then
    TF = TBH:  TK = (TF - 32) * 5 / 9 + 273.15
    Ppsia = PBH: Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774:
    Else
    TF = TWH:  TK = (TF - 32) * 5 / 9 + 273.15
    Ppsia = PWH: Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774:
    End If
    Call B5_CalculateSIvalues
    pH_before_precipitation = pH
        If UseSR = 0 Then
        Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 2 + WHandBHLoop) = SICal
        Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 4 + WHandBHLoop) = SIBar
        Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 6 + WHandBHLoop) = SIHal
        Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 14 + WHandBHLoop) = SIGyp
        Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 16 + WHandBHLoop) = SIHemi
        Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 18 + WHandBHLoop) = SIAn
        Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 20 + WHandBHLoop) = SICel
        Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 2 + WHandBHLoop) = SIAmSilica
    Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 4 + WHandBHLoop) = SIQuartz
    Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 6 + WHandBHLoop) = SIChrysotile
    Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 8 + WHandBHLoop) = SIDiopside
    Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 10 + WHandBHLoop) = SIGreenalite
    Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 22 + WHandBHLoop) = SIFeSAm
    Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 24 + WHandBHLoop) = SIFeS
    Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 26 + WHandBHLoop) = SITrot
        Else
        Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 2 + WHandBHLoop) = 10 ^ SICal
        Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 4 + WHandBHLoop) = 10 ^ SIBar
        Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 6 + WHandBHLoop) = 10 ^ SIHal
        Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 14 + WHandBHLoop) = 10 ^ SIGyp
        Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 16 + WHandBHLoop) = 10 ^ SIHemi
        Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 18 + WHandBHLoop) = 10 ^ SIAn
        Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 20 + WHandBHLoop) = 10 ^ SICel
        Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 2 + WHandBHLoop) = 10 ^ SIAmSilica
    Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 4 + WHandBHLoop) = 10 ^ SIQuartz
    Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 6 + WHandBHLoop) = 10 ^ SIChrysotile
    Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 8 + WHandBHLoop) = 10 ^ SIDiopside
    Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 10 + WHandBHLoop) = 10 ^ SIGreenalite
    Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 22 + WHandBHLoop) = 10 ^ SIFeSAm
    Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 24 + WHandBHLoop) = 10 ^ SIFeS
    Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 26 + WHandBHLoop) = 10 ^ SITrot
        
        End If
    pptCal = 0
    
If SICal > 0 Then
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
End If
If usePTB = 0 Then Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 8 + WHandBHLoop) = ppt * 100091 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 8 + WHandBHLoop) = ppt * 100091 * (rho25c - TDS / 1000000#) * 0.35051

      
'Amorphous Iron Sulfide.  For FeS ppt
pptFeSAm = 0
pH = pH_before_precipitation
If SIFeSAm > 0 Then
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 8, 3, KspFeSAm)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 3, KspFeSAm) '(ppt_or_not, iMetals, iGas, Ksp)
'End If

pptFeSAm = ppt
End If
If usePTB = 0 Then Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 28 + WHandBHLoop) = pptFeSAm * 87910 * (rho25c - TDS * 0.000001)
If usePTB = 1 Then Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 28 + WHandBHLoop) = pptFeSAm * 87910 * (rho25c - TDS * 0.000001) * 0.35051
'Mackinawite
ppt = 0
pH = pH_before_precipitation
pptFeS_NoMassTransfer = 0
If SIFeS > 0 Then
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 8, 3, KspFeS)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 3, KspFeS) '(ppt_or_not, iMetals, iGas, Ksp)
'End If
pptFeS_NoMassTransfer = ppt
End If

If usePTB = 0 Then Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 30 + WHandBHLoop) = pptFeS_NoMassTransfer * 87910 * (rho25c - TDS * 0.000001)
If usePTB = 1 Then Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 30 + WHandBHLoop) = pptFeS_NoMassTransfer * 87910 * (rho25c - TDS * 0.000001) * 0.35051
    
 'Troilite
pptTrot = 0
pH = pH_before_precipitation
If SITrot > 0 Then
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 8, 3, KspTrot)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 3, KspTrot) '(ppt_or_not, iMetals, iGas, Ksp)
'End If
pptTrot = ppt
End If
If usePTB = 0 Then Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 32 + WHandBHLoop) = pptTrot * 87910 * (rho25c - TDS * 0.000001)
If usePTB = 1 Then Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 32 + WHandBHLoop) = pptTrot * 87910 * (rho25c - TDS * 0.000001) * 0.35051

      
      pptBar = 0
      If SIBar > 0 Then
      b = -(mc(iBa) + ma(iSO4))
      c = mc(iBa) * ma(iSO4) - KspBarite / (gCat(iBa) * gAn(iSO4) * gNMean(iBaSO4) ^ 2)
      pptBar = (-b - (b ^ 2 - 4 * c) ^ 0.5) / 2
    End If
If usePTB = 0 Then Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 10 + WHandBHLoop) = pptBar * 233390 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 10 + WHandBHLoop) = pptBar * 233390 * (rho25c - TDS / 1000000#) * 0.35051
    pptHal = 0
    If SIHal > 0 Then
      b = -(mc(iNa) + ma(iCl))
      cc = mc(iNa) * ma(iCl) - KspHalite / (gCat(iNa) * gAn(iCl) * gNMean(iNaCl) ^ 2)
      pptHal = (-b - (b ^ 2 - 4 * cc) ^ 0.5) / 2
    End If
If usePTB = 0 Then Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 12 + WHandBHLoop) = pptHal * 58443 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 12 + WHandBHLoop) = pptHal * 58443 * (rho25c - TDS / 1000000#) * 0.35051
  pptGyp = 0                       'ppt represents the number of moles of CaCO3 per kg-water to potentially precipitate.
    If SIGyp > 0 Then
      b = -(mc(iCa) + ma(iSO4))
      cc = mc(iCa) * ma(iSO4) - KspGypsum / ((aH2O ^ 2) * gCat(iCa) * gAn(iSO4) * aNH2O ^ 2 * gNMean(iCaSO42H2O) ^ 2)
      pptGyp = (-b - (b ^ 2 - 4 * cc) ^ 0.5) / 2
    End If
If usePTB = 0 Then Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 22 + WHandBHLoop) = pptGyp * 172172 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 22 + WHandBHLoop) = pptGyp * 172172 * (rho25c - TDS / 1000000#) * 0.35051

    pptHemi = 0
    If SIHemi > 0 Then
      b = -(mc(iCa) + ma(iSO4))
      cc = mc(iCa) * ma(iSO4) - KspHemihydrate / ((aH2O ^ 0.5) * gCat(iCa) * gAn(iSO4) * aNH2O ^ 0.5 * gNMean(ihemiCaSO4) ^ 2)
      pptHemi = (-b - (b ^ 2 - 4 * cc) ^ 0.5) / 2
    End If
If usePTB = 0 Then Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 24 + WHandBHLoop) = pptHemi * 145148 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 24 + WHandBHLoop) = pptHemi * 145148 * (rho25c - TDS / 1000000#) * 0.35051

    pptAn = 0
    If SIAn > 0 Then
      b = -(mc(iCa) + ma(iSO4))
      cc = mc(iCa) * ma(iSO4) - KspAnhydrite / (gCat(iCa) * gAn(iSO4) * gNMean(iCaSO4) ^ 2)
      pptAn = (-b - (b ^ 2 - 4 * cc) ^ 0.5) / 2
    End If
If usePTB = 0 Then Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 26 + WHandBHLoop) = pptAn * 136140 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 26 + WHandBHLoop) = pptAn * 136140 * (rho25c - TDS / 1000000#) * 0.35051

    pptCel = 0
    If SICel > 0 Then
      b = -(mc(iSr) + ma(iSO4))
      cc = mc(iSr) * ma(iSO4) - KspCelestite / (gCat(iSr) * gAn(iSO4) * gNMean(iSrSO4) ^ 2)
      pptCel = (-b - (b ^ 2 - 4 * cc) ^ 0.5) / 2
    End If
If usePTB = 0 Then Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 28 + WHandBHLoop) = pptCel * 183680 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("Mixing Two Wells").Cells(16 - LoopMixing, 28 + WHandBHLoop) = pptCel * 183680 * (rho25c - TDS / 1000000#) * 0.35051
'***************************************************************************
'For silicate SI
pH = pH_before_precipitation
nTCO2 = nTCO2_before_precipitation
nTH2S = nTH2S_before_precipitation
pptAmSilica = 0
If SIAmSilica > 0 Then
'If useEOS = 0 Then
    Call C4_SSPEquilCalcs(1, 8, 10, KspAmSilica)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'Else
'    Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 10, KspAmSilica)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'End If
pptAmSilica = ppt
End If
If usePTB = 0 Then Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 12 + WHandBHLoop) = pptAmSilica * 60084 * (rho25c - TDS * 0.000001)
If usePTB = 1 Then Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 12 + WHandBHLoop) = pptAmSilica * 60084 * (rho25c - TDS * 0.000001) * 0.35051


pH = pH_before_precipitation
nTCO2 = nTCO2_before_precipitation
nTH2S = nTH2S_before_precipitation
pptQuartz = 0
If SIQuartz > 0 Then
'If useEOS = 0 Then
    Call C4_SSPEquilCalcs(1, 8, 11, KspQuartz)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'Else
'    Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 11, KspQuartz)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'End If
pptQuartz = ppt
End If

If usePTB = 0 Then Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 14 + WHandBHLoop) = pptQuartz * 60084 * (rho25c - TDS * 0.000001)
If usePTB = 1 Then Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 14 + WHandBHLoop) = pptQuartz * 60084 * (rho25c - TDS * 0.000001) * 0.35051
pH = pH_before_precipitation
nTCO2 = nTCO2_before_precipitation
nTH2S = nTH2S_before_precipitation
pptChrysotile = 0
If SIChrysotile > 0 Then
'If useEOS = 0 Then
    Call C4_SSPEquilCalcs(1, 8, 14, KspChrysotile)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'Else
'    Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 14, KspChrysotile)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'End If
pptChrysotile = ppt
End If
If usePTB = 0 Then Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 16 + WHandBHLoop) = pptChrysotile * 371770 * (rho25c - TDS * 0.000001) / 3  '/3 corrects for alkalinity issue.
If usePTB = 1 Then Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 16 + WHandBHLoop) = pptChrysotile * 371770 * (rho25c - TDS * 0.000001) / 3 * 0.35051 '/3 corrects for alkalinity issue.

pH = pH_before_precipitation
nTCO2 = nTCO2_before_precipitation
nTH2S = nTH2S_before_precipitation
pptDiopside = 0
If SIDiopside > 0 Then
'If useEOS = 0 Then
    Call C4_SSPEquilCalcs(1, 8, 13, KspDiopside)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'Else
'    Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 13, KspDiopside)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'End If
    pptDiopside = ppt
End If
If usePTB = 0 Then Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 18 + WHandBHLoop) = pptDiopside * 216550 * (rho25c - TDS * 0.000001) / 2    '/3 corrects for alkalinity issue.
If usePTB = 1 Then Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 18 + WHandBHLoop) = pptDiopside * 216550 * (rho25c - TDS * 0.000001) / 2 * 0.35051  '/3 corrects for alkalinity issue.

pH = pH_before_precipitation
nTCO2 = nTCO2_before_precipitation
nTH2S = nTH2S_before_precipitation
pptGreenalite = 0
If SIGreenalite > 0 Then
'If useEOS = 0 Then
    Call C4_SSPEquilCalcs(1, 8, 12, KspGreenalite)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'Else
'    Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 12, KspGreenalite)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'End If
pptGreenalite = ppt
End If
If usePTB = 0 Then Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 20 + WHandBHLoop) = pptGreenalite * 277110 * (rho25c - TDS * 0.000001) / 2   '/3 corrects for alkalinity issue.
If usePTB = 1 Then Worksheets("Mixing Two Wells").Cells(51 - LoopMixing, 20 + WHandBHLoop) = pptGreenalite * 277110 * (rho25c - TDS * 0.000001) / 2 * 0.35051 '/3 corrects for alkalinity issue.

Next WHandBHLoop
Next LoopMixing

    Worksheets("Mixing Two Wells").Range("b2") = WellNameMix(1)
    Worksheets("Mixing Two Wells").Range("d2") = Worksheets("Input").Range("c5")
    Call ErrorMsgBox
    Worksheets("Mixing Two Wells").Activate 'Automatically opens the Mixing sheet.
    mytime1 = Time
    nettime = (mytime1 - mytime)
    Worksheets("Input").Range("R28") = nettime * 24 * 3600
    If UseSI = 1 Then
    TBH = (TBH - 32) * 5 / 9: TWH = (TWH - 32) * 5 / 9: PBH = PBH / 14.503774: PWH = PWH / 14.50377
    End If
'After the subroutine:
'Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True

    If UseSI = 1 Then

    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial and final temperatures are " & TBH & " and " & TWH & " C;" & Chr(13) _
    & "Initial and final pressures are " & PBH & " and " & PWH & " Bar." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." & Chr(13) & Chr(13) _
    & "Calculation Option(s) on Row 51 used for Input 1 is " & Chr(13) & usepHmix(1) '
    Else
    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial and final temperatures are " & TBH & " and " & TWH & " F;" & Chr(13) _
    & "Initial and final pressures are " & PBH & " and " & PWH & " psia." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." & Chr(13) & Chr(13) _
    & "Calculation Option(s) on Row 51 used for Input 1 is " & Chr(13) & usepHmix(1)  '******************************

    End If
    End
201 End Sub

Sub A5_SSPGoalSeek()
'Note  MysheetGoalSeek is the Sheet where GoalSeek button and dependent variable are (the Input sheet). Myname is the Sheet where the independent variable is (which can be either Input or InputII).
mytime = Time
'mySheet = ActiveSheet.Name
MySheetGoalSeek = "Input"
    'An index to tell program that the GoalSeek portion is being run.
    RunGoalSeek = 1: iGoalSeek = 0: RunSSP = 0: RunNORM = 0
    Worksheets(MySheetGoalSeek).Activate
'InputBox to get the cells to be adjusted, etc.
Set myRange = Application.InputBox(prompt:="Click on the Target Cell", Type:=8)
    DepVarColumnNo = myRange.Column
    DepVarRowNo = myRange.Row
DependentVariableTargetValue = Application.InputBox(prompt:="Type the Target Value", Type:=1)

title = "Which Input sheets has the Cell to change?"
prompt = "Do you want to change the cell on Input or Input II sheet? Enter 1 for Input sheet and enter 2 for Input II sheet"
response3 = Application.InputBox(prompt, title, , , , , Type:=1)
If response3 = 1 Then
Worksheets("Input").Activate
myname = "Input"
Else
Worksheets("Input II").Activate
myname = "Input II"
End If

Set myRange = Application.InputBox(prompt:="Click on the Cell to Change", Type:=8)
    IndVarColumnNo = myRange.Column
    IndVarRowNo = myRange.Row

    IndVariableValue0 = Worksheets(myname).Cells(IndVarRowNo, IndVarColumnNo).Value   '*******
        If IndVariableValue0 < 0.0000000001 Then
            Worksheets(myname).Cells(IndVarRowNo, IndVarColumnNo) = 10 'artitrarily set zero values to 10 to start diffrentiation.
        End If
    Call A1_Start_ScaleSoftPitzer 'Obtain initial values of all variables with those in Input screen.
    DepVariableValue0 = Worksheets(MySheetGoalSeek).Cells(DepVarRowNo, DepVarColumnNo).Value
    Targ = DependentVariableTargetValue
    IndVariableValue0 = Worksheets(myname).Cells(IndVarRowNo, IndVarColumnNo).Value
        If IndVariableValue0 <= 0# Then
            MsgBox ("Initial value of independent variable must be a positive number.  If it is zero, enter some initial guess and start again.")
            GoTo 2150
        End If
    DepOld = DepVariableValue0
    IndNew = IndVariableValue0
For iGoalSeek = 1 To 20
    IndOld = IndNew
        Call A1_Start_ScaleSoftPitzer 'Obtain initial values of all variables with those in Input screen.
        DepOld = Worksheets(MySheetGoalSeek).Cells(DepVarRowNo, DepVarColumnNo).Value
        'Set up and calculate the numerical derivative and then return variables to original values.**************************
        Worksheets(myname).Cells(IndVarRowNo, IndVarColumnNo) = 1.01 * IndNew   'Increase Ind0 by 10% to take numerical derivative.
        Call A1_Start_ScaleSoftPitzer 'Obtain initial values of all variables with those in Input screen.
        Dep1 = Worksheets(MySheetGoalSeek).Cells(DepVarRowNo, DepVarColumnNo).Value
        Derivative = (Dep1 - DepOld) / (0.01 * IndOld)
        Worksheets(myname).Cells(IndVarRowNo, IndVarColumnNo) = IndOld  'Return Ind variable in worksheet to original value
        Worksheets(MySheetGoalSeek).Cells(DepVarRowNo, DepVarColumnNo) = DepOld  'Return Dep variable to value at Ind0
            If Derivative = 0 Then
           Call A1_Start_ScaleSoftPitzer 'Obtain initial values of all variables with those in Input screen.
                MsgBox ("Since dDep/dInd = 0.00, they are not a fuction of each other.  Calculation will be stopped.  See Notes at bottom of Input sheet.")
                GoTo 2150   'Exit loop and calculation after printing message.
            End If
    'End of derivative routine. ***********************************************************************************************

    IndNew = IndOld - (DepOld - DependentVariableTargetValue) / Derivative 'Calculate new value of Independent variable, IndNew
        If Abs((DepOld - DependentVariableTargetValue) / Derivative) > Abs(IndOld) Then  'If the change in one iteration step exceeds the initial value, make changes according to the following rules:
            If -1 * (DepOld - DependentVariableTargetValue) / Derivative > 0 Then IndNew = IndOld * 5 * Rnd() 'Take control of change by increasing only five times.
            If -1 * (DepOld - DependentVariableTargetValue) / Derivative < 0 Then IndNew = IndOld / 5 * Rnd() 'Take control of change by decreasing only five times.
        End If
    Worksheets(myname).Cells(IndVarRowNo, IndVarColumnNo) = IndNew  'Return Ind variable in worksheet to original value

    If (Abs(IndNew - IndOld) / (IndNew + IndOld)) < 0.005 Or Abs(DepOld - DependentVariableTargetValue) < 0.005 Then  'Check for convergence of Newton Raphson routine.
        GoTo 2150   'GoalSeek-like routine has converged; exit loop.
    End If
Next iGoalSeek

2150 Worksheets(myname).Select
    If iGoalSeek = 21 Then MsgBox ("GoalSeek-like routine has not converged in twenty iterations; re-run for another ten interations; put a new inital value in the cell being changed; or change the problem.")
  RunGoalSeek = 0
            Call A1_Start_ScaleSoftPitzer 'Obtain initial values of all variables with those in Input screen.
        Worksheets(myname).Activate
        Worksheets(myname).Cells(IndVarRowNo, IndVarColumnNo).Select  'Set curser on independent variable cell.
''******************************
    mytime1 = Time
    nettime = (mytime1 - mytime)
    Worksheets("Input").Range("R28") = nettime * 24 * 3600

    If UseSI = 1 Then
    TBH = (TBH - 32) * 5 / 9
    TWH = (TWH - 32) * 5 / 9
    PBH = PBH / 14.503774
    PWH = PWH / 14.503774
    Call ErrorMsgBox
    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial and final temperatures are " & Round(TBH, 0) & " and " & TWH & " C;" & Chr(13) _
    & "Initial and final pressures are " & Round(PBH, 0) & " and " & Round(PWH, 0) & " Bar." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." & Chr(13) & Chr(13) _
    & "Calculation Option(s) on Row 51 used for Input 1 is " & usepHmix(1)  '
    Else
    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "Initial and final temperatures are " & Round(TBH, 0) & " and " & Round(TWH, 0) & " F;" & Chr(13) _
    & "Initial and final pressures are " & Round(PBH, 0) & " and " & Round(PWH, 0) & " psia." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." & Chr(13) & Chr(13) _
    & "Calculation Option(s) on Row 51 used for Input 1 is " & usepHmix(1) ''******************************
    End If
    RunGoalSeek = 0    'Reset to zero for possible future runs that are not GoalSeek.
End
Worksheets(MySheetGoalSeek).Select
Worksheets(MySheetGoalSeek).Range("A2").Select

End Sub
Sub A6_SSPWhatif()
Worksheets("What If").Unprotect ("eesi")
'Before the subroutine:
Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual

'mytime = Time
MsgBox ("What If calculation used the well data selected from the Input or Input II sheet. One parameter is varied over a range to test the impact of that parameter on scale prediction." & Chr(13) & _
"Check the boxes on Column B to select the parameters to vary." & Chr(13) & _
"For each set of calculation, the value of the parameters are calculated over a range defined in Columns D and E of this sheet." & Chr(13) & _
"The temperature and pressure in Cells D38 and D40 are used for the What If calculation." & Chr(13) & _
"The tabulated results are shown on Columns K-AC. Choose the graphic output selection on Cells D42-49.  Graphs are produced in Columns G-I." & Chr(13) & Chr(13) & "Note that this calculation is run with flash calculation option set to zero.")

'title = "Where is the Input data?" 'This selection is for selecting data from Simplified Input sheet.  IT is commented out for now.
'prompt = "Is your data on the Simplified Input, Input or Input II sheet?  Enter 1 for Simplified Input, Enter 2 for Input or Input II Sheet"
'response3 = Application.InputBox(prompt, title, , , , , Type:=1)
'If response3 = 1 Then
'mySheet = "Simplified Input"
'RunSimpSSP = 1
'Else
mySheet = "Input"
'End If
RunWhatIf = 1: RunGoalSeek = 0: RunSSP = 0: RunNORM = 0
Call InitializeOptionClearCellContent

NobWI = 0:
Worksheets("what if").Columns("K:AC").Delete
TWIInit = Worksheets("What If").Cells(38, 4).Value
PWIInit = Worksheets("What If").Cells(40, 4).Value
For i = 1 To 32
CaseCountWI(i) = 0
Next i
For i = 1 To 32
If Worksheets("What If").Cells(9 + i, 1).Value = True Then
NobWI = NobWI + 1            'track # of check boxes
CaseCountWI(i - Ncount) = i 'track the row number for the check boxes
Else
Ncount = Ncount + 1
End If
Next i
For i = 1 To NobWI
j = CaseCountWI(i)
VarNameWI(i) = Worksheets("What If").Cells(9 + j, 2).Value
VarUnitWI(i) = Worksheets("What If").Cells(9 + j, 3).Value
VarWIInit(i) = Worksheets("What If").Cells(9 + j, 4).Value
VarWIFinal(i) = Worksheets("What If").Cells(9 + j, 5).Value
DeltaVarWI(i) = (VarWIInit(i) - VarWIFinal(i)) / 9
Next i
For i = 1 To NobWI
For j = 1 To 10
If CaseCountWI(i) = 1 Then NaWI(i, j) = VarWIInit(i) - DeltaVarWI(i) * (j - 1)
If CaseCountWI(i) = 4 Then CaWI(i, j) = VarWIInit(i) - DeltaVarWI(i) * (j - 1)
If CaseCountWI(i) = 5 Then SrWI(i, j) = VarWIInit(i) - DeltaVarWI(i) * (j - 1)
If CaseCountWI(i) = 6 Then BaWI(i, j) = VarWIInit(i) - DeltaVarWI(i) * (j - 1)
If CaseCountWI(i) = 10 Then ClWI(i, j) = VarWIInit(i) - DeltaVarWI(i) * (j - 1)
If CaseCountWI(i) = 11 Then SO4WI(i, j) = VarWIInit(i) - DeltaVarWI(i) * (j - 1)
If CaseCountWI(i) = 15 Then HCO3AlkWI(i, j) = VarWIInit(i) - DeltaVarWI(i) * (j - 1)
If CaseCountWI(i) = 16 Then CO3AlkWI(i, j) = VarWIInit(i) - DeltaVarWI(i) * (j - 1)
If CaseCountWI(i) = 17 Then TACWI(i, j) = VarWIInit(i) - DeltaVarWI(i) * (j - 1)
If CaseCountWI(i) = 19 Then YCO2WI(i, j) = VarWIInit(i) - DeltaVarWI(i) * (j - 1)
If CaseCountWI(i) = 20 Then YH2SWI(i, j) = VarWIInit(i) - DeltaVarWI(i) * (j - 1)
If CaseCountWI(i) = 21 Then TH2SaqWI(i, j) = VarWIInit(i) - DeltaVarWI(i) * (j - 1)
If CaseCountWI(i) = 22 Then pHMeterSTPWI(i, j) = VarWIInit(i) - DeltaVarWI(i) * (j - 1)
If CaseCountWI(i) = 25 Then VgTPWI(i, j) = VarWIInit(i) - DeltaVarWI(i) * (j - 1)
If CaseCountWI(i) = 26 Then VoWI(i, j) = VarWIInit(i) - DeltaVarWI(i) * (j - 1)
If CaseCountWI(i) = 27 Then VwWI(i, j) = VarWIInit(i) - DeltaVarWI(i) * (j - 1)
If CaseCountWI(i) = 29 Then TWI(i, j) = VarWIInit(i) - DeltaVarWI(i) * (j - 1)
If CaseCountWI(i) = 31 Then PWI(i, j) = VarWIInit(i) - DeltaVarWI(i) * (j - 1)
If CaseCountWI(i) = 32 Then ConcFactorWI(i, j) = VarWIInit(i) - DeltaVarWI(i) * (j - 1)
If CaseCountWI(i) = 32 Then Run_CalcConcFactor = 1
Next j
Next i
Ncount = 0
ReDim Preserve CaseCount(5), CaseCount_II(110)
Call CountNOB
'    Worksheets("input").Range("P14:T22").Value = Null
'    Worksheets("Well#1+Water").Range("B5:AC15").Value = Null  'Null out Mixing Two Brines sheet for other calculations.
'    Worksheets("Mixing Two Wells").Range("B5:AC15").Value = Null  'Null out Mixing Two Brines sheet for other calculations.
For Loop1WI = 1 To NobWI
For Loop2WI = 1 To 10
Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.

Call Worksheets("Readme").B2_ReadinAllData       'Reads in all Input concentrations, put interms of molality, calculate total moles of CO2, H2S, CH4.
'If mySheet = "Simplified Input" Then Call B2_ReadinAllDataSimplified
Call Worksheets("Readme").B3_CalcConcs           'Cacluate all concentration data from wells on input screen.
'Returns HCO3, HS, aH, Ac, and a set of SI values for all solids at the present T, P, and compositions.
'Call Worksheets("Readme").B4_CalcFinalBrine
If CaseCountWI(Loop1WI) = 29 Then
TF = TWI(Loop1WI, Loop2WI)
Else
TF = TWIInit
End If
If UseSI = 1 Then TF = TF * 9 / 5 + 32 'if T is in centegrade covert to F
If TF < 32 Then TF = 32
TK = (TF - 32) * 5 / 9 + 273.15: TC = TK - 273.15
If CaseCountWI(Loop1WI) = 31 Then
Ppsia = PWI(Loop1WI, Loop2WI)
Else
Ppsia = PWIInit
End If
If UseSI = 1 Then Ppsia = Ppsia * 14.503774
If Ppsia < 12 Then Ppsia = 12
Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774
Call B5_CalculateSIvalues
Call B6_InhibitorNeeded   'Calculate the amount of inhibitor needed at each point.
Call B6_Dai_InhibitorNeeded ''Dai 2020, inhibition model update

pH_before_precipitation = pH
Worksheets("What If").Cells(2 + 12 * (Loop1WI - 1), 11) = VarNameWI(Loop1WI)
Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 11) = VarUnitWI(Loop1WI)
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 11) = (VarWIInit(Loop1WI) - DeltaVarWI(Loop1WI) * (Loop2WI - 1))
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 12) = -Log10(aH) - DpHj
If SICal > 0 Then Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 15) = ConcInhCal
If SIBar > 0 Then Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 19) = ConcInhBar
'If IsNull(SICal) = True Then SICal = 0
'If IsNull(SIBar) = True Then SIBar = 0
   If UseSR = 0 Then
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 13) = SICal
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 17) = SIBar
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 20) = SIGyp
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 22) = SIHemi
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 24) = SIAn
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 26) = SICel
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 28) = SIHal
   Else
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 13) = 10 ^ SICal
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 17) = 10 ^ SIBar
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 20) = 10 ^ SIGyp
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 22) = 10 ^ SIHemi
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 24) = 10 ^ SIAn
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 26) = 10 ^ SICel
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 28) = 10 ^ SIHal
End If

If useEOS = 0 Then
If Ppsia >= PBubblePt Then Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 16) = "Yes"
If Ppsia < PBubblePt Then Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 16) = "No"
End If
If useEOS <> 0 Then
If QPBubblePt = 1 Then Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 16) = "Yes"
If QPBubblePt = 0 Then Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 16) = "No"
End If
ppt = 0
If SIBar > 0 Then
a = 1
b = -(mc(iBa) + ma(iSO4))
cc = mc(iBa) * ma(iSO4) - KspBarite / (gCat(iBa) * gAn(iSO4) * gNMean(iBaSO4) ^ 2)
Call QuadraticRoots(a, b, cc, ppt, root2)
If usePTB = 0 Then Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 18) = ppt * 233368 * (rho25c - TDS / 1000000#) 'ppt of BaSO4
If usePTB = 1 Then Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 18) = ppt * 233368 * (rho25c - TDS / 1000000#) * 0.35051 'ppt of BaSO4

Else
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 18) = 0#
End If

ppt = 0
If SIGyp > 0 Then
a = 1
b = -(mc(iCa) + ma(iSO4))
cc = mc(iCa) * ma(iSO4) - KspGypsum / ((aH2O ^ 2) * gCat(iCa) * gAn(iSO4) * aNH2O ^ 2 * gNMean(iCaSO42H2O) ^ 2)
Call QuadraticRoots(a, b, cc, ppt, root2)
If usePTB = 0 Then Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 21) = ppt * 172172 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 21) = ppt * 172172 * (rho25c - TDS / 1000000#) * 0.35051
Else
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 21) = 0#
End If
ppt = 0
If SIHemi > 0 Then
a = 1
b = -(mc(iCa) + ma(iSO4))
cc = mc(iCa) * ma(iSO4) - KspHemihydrate / ((aH2O ^ 0.5) * gCat(iCa) * gAn(iSO4) * aNH2O ^ 0.5 * gNMean(ihemiCaSO4) ^ 2)
Call QuadraticRoots(a, b, cc, ppt, root2)
If usePTB = 0 Then Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 23) = ppt * 145148 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 23) = ppt * 145148 * (rho25c - TDS / 1000000#) * 0.35051
Else
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 23) = 0#
End If
ppt = 0
If SIAn > 0 Then
a = 1
b = -(mc(iCa) + ma(iSO4))
cc = mc(iCa) * ma(iSO4) - KspAnhydrite / (gCat(iCa) * gAn(iSO4) * gNMean(iCaSO4) ^ 2)
Call QuadraticRoots(a, b, cc, ppt, root2)
If usePTB = 0 Then Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 25) = ppt * 136140 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 25) = ppt * 136140 * (rho25c - TDS / 1000000#) * 0.35051
Else
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 25) = 0#
End If
ppt = 0
If SICel > 0 Then
a = 1
b = -(mc(iSr) + ma(iSO4))
cc = mc(iSr) * ma(iSO4) - KspCelestite / (gCat(iSr) * gAn(iSO4) * gNMean(iSrSO4) ^ 2)
Call QuadraticRoots(a, b, cc, ppt, root2)
If usePTB = 0 Then Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 27) = ppt * 183680 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 27) = ppt * 183680 * (rho25c - TDS / 1000000#) * 0.35051
Else
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 27) = 0#
End If
ppt = 0
If SIHal > 0 Then
a = 1
b = -(mc(iNa) + ma(iCl))
cc = mc(iNa) * ma(iCl) - KspHalite / (gCat(iNa) * gAn(iCl) * gNMean(iNaCl) ^ 2)
Call QuadraticRoots(a, b, cc, ppt, root2)
If usePTB = 0 Then Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 29) = ppt * 58443 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 29) = ppt * 58443 * (rho25c - TDS / 1000000#) * 0.35051

Else
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 29) = 0#
End If

ppt = 0
If SICal > 0 Then
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
'End If
If usePTB = 0 Then Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 14) = ppt * 100091 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 14) = ppt * 100091 * (rho25c - TDS / 1000000#) * 0.35051
Else
Worksheets("What If").Cells(3 + Loop2WI + 12 * (Loop1WI - 1), 14) = 0#
End If
Next Loop2WI
Worksheets("What If").Cells(2 + 12 * (Loop1WI - 1), 12) = "pH before"
Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 12) = "ppt"

Worksheets("What If").Cells(2 + 12 * (Loop1WI - 1), 13) = "Calcite"
If UseSR <> 1 Then
Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 13) = "SI"
Else
Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 13) = "SR"
End If

Worksheets("What If").Cells(2 + 12 * (Loop1WI - 1), 14) = "Calcite"
If usePTB = 0 Then Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 14) = "ppt (mg/L)"
If usePTB = 1 Then Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 14) = "ppt (PTB)"
If SICal > 0 Then
Worksheets("What If").Cells(2 + 12 * (Loop1WI - 1), 15) = InhName(InhNoCal)
Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 15) = "(mg/L)"
End If
Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 16) = "Is P>Pbpt?"
Worksheets("What If").Cells(2 + 12 * (Loop1WI - 1), 17) = "Barite"
If UseSR <> 1 Then
Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 17) = "SI"
Else
Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 17) = "SR"
End If

Worksheets("What If").Cells(2 + 12 * (Loop1WI - 1), 18) = "Barite"
If usePTB = 0 Then Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 18) = "ppt (mg/L)"
If usePTB = 1 Then Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 18) = "ppt (PTB)"


If SIBar > 0 Then
Worksheets("What If").Cells(2 + 12 * (Loop1WI - 1), 19) = InhName(InhNoBar)
Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 19) = "(mg/L)"
End If
Worksheets("What If").Cells(2 + 12 * (Loop1WI - 1), 20) = "Gypsum"
If UseSR <> 1 Then
Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 20) = "SI"
Else
Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 20) = "SR"
End If
Worksheets("What If").Cells(2 + 12 * (Loop1WI - 1), 21) = "Gypsum"
If usePTB = 0 Then Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 21) = "ppt (mg/L)"
If usePTB = 1 Then Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 21) = "ppt (PTB)"

Worksheets("What If").Cells(2 + 12 * (Loop1WI - 1), 22) = "Hemihydrate"
If UseSR <> 1 Then
Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 22) = "SI"
Else
Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 22) = "SR"
End If

Worksheets("What If").Cells(2 + 12 * (Loop1WI - 1), 23) = "Hemihydrate"
If usePTB = 0 Then Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 23) = "ppt (mg/L)"
If usePTB = 1 Then Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 23) = "ppt (PTB)"


Worksheets("What If").Cells(2 + 12 * (Loop1WI - 1), 24) = "Anhydrite"
If UseSR <> 1 Then
Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 24) = "SI"
Else
Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 24) = "SR"
End If

Worksheets("What If").Cells(2 + 12 * (Loop1WI - 1), 25) = "Anhydrite"
If usePTB = 0 Then Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 25) = "ppt (mg/L)"
If usePTB = 1 Then Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 25) = "ppt (PTB)"


Worksheets("What If").Cells(2 + 12 * (Loop1WI - 1), 26) = "Celestite"
If UseSR <> 1 Then
Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 26) = "SI"
Else
Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 26) = "SR"
End If

Worksheets("What If").Cells(2 + 12 * (Loop1WI - 1), 27) = "Celestite"
If usePTB = 0 Then Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 27) = "ppt (mg/L)"
If usePTB = 1 Then Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 27) = "ppt (PTB)"

Worksheets("What If").Cells(2 + 12 * (Loop1WI - 1), 28) = "Halite"
If UseSR <> 1 Then
Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 28) = "SI"
Else
Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 28) = "SR"
End If

Worksheets("What If").Cells(2 + 12 * (Loop1WI - 1), 29) = "Halite"
If usePTB = 0 Then Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 29) = "ppt (mg/L)"
If usePTB = 1 Then Worksheets("What If").Cells(3 + 12 * (Loop1WI - 1), 29) = "ppt (PTB)"
Next Loop1WI
nob1 = nob
Call WhatIfGraph
Call ErrorMsgBox
mytime1 = Time
'nettime = (mytime1 - mytime)
'Worksheets("Input").Range("R28") = nettime * 24 * 3600
Worksheets("What If").Activate
Worksheets("What If").Range("A1").Select
'After the subroutine:
'Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True


If nob = 1 Then
    If UseSI = 1 Then
    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial temperature is " & TWIInit & " C" & " and " _
    & " pressure is " & PWIInit & " Bar." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "."
     '
    Else
    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial temperature is " & TWIInit & " F" & " and " _
    & " pressure is " & PWIInit & " psia." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "."
    End If
Else
    If UseSI = 1 Then
    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial temperature is " & TWIInit & " C;" & Chr(13) _
    & "Initial pressure is " & PWIInit & " Bar." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." '
    Else
    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial temperature is " & TWIInit & " F;" & Chr(13) _
    & "Initial and final pressure is " & PWIInit & " psia." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." '
    End If

End If

RunWhatIf = 0 ' Reset index
Worksheets("What If").Protect ("eesi")

End
202 End Sub


Sub A7_MultiMix()
Worksheets("MultiMix").Unprotect ("eesi")
mytime = Time
'Before the subroutine:
Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
RunMultiMix = 1: RunGoalSeek = 0: RunSSP = 0: RunNORM = 0
Call InitializeOptionClearCellContent
'It is assumed that the brine/gas/oil data in the first two wells columns on the input will be used.
MsgBox ("This routine calculates the SI of a mixed brine containing up to five fluids at various T & P values." _
& Chr(13) & "Check box(es) on Row 3 of the Input Sheet to select the fluids to use in the calculation." _
& Chr(13) & "The T and P for the calculation are read from Columns C and D of this sheet." _
& Chr(13) & "Brine, oil, and gas volumes are read from Columns E to S of this sheet" _
& Chr(13) & Chr(13) & "Note that this calculation uses data checked on Row 3 of the Input sheet" _
& Chr(13) & "and flash calculation is not used in this calculation.")
ReDim CaseCount(5), CaseCount_II(110)
Call CountNOB

    NumberToRead = Worksheets("MultiMix").Cells(1, 5)

For LoopResChem = 1 To NumberToRead
  ConcInh = Worksheets("MultiMix").Cells(2 + LoopResChem, 20).Value    'Inhibitor conc. in cell.
Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
Call Worksheets("Readme").B2_ReadinAllData     'Reads in all Input concentrations, put interms of molality, calculate total moles of CO2, H2S, CH4.
Call Worksheets("Readme").B3_CalcConcs           'Cacluate all concentration data from wells on input screen.
'Returns HCO3, HS, aH, Ac, and a set of SI values for all solids at the present T, P, and compositions.
Call Worksheets("Readme").B4_CalcFinalBrine

TF = Worksheets("MultiMix").Cells(2 + LoopResChem, 3).Value
If UseSI = 1 Then TF = TF * 9 / 5 + 32 'if T is in centegrade covert to F
If TF < 32 Then TF = 32
TK = (TF - 32) * 5 / 9 + 273.15: TC = TK - 273.15

Ppsia = Worksheets("MultiMix").Cells(2 + LoopResChem, 4).Value
If UseSI = 1 Then Ppsia = Ppsia * 14.503774
If Ppsia < 12 Then Ppsia = 12
Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774
Call B5_CalculateSIvalues
'Call B6_InhibitorNeeded
pH_before_precipitation = pH
  Worksheets("MultiMix").Cells(LoopResChem + 2, 23) = -Log10(aH) - DpHj             'Output pH at T,P
  If UseSR = 0 Then
  Worksheets("MultiMix").Cells(LoopResChem + 2, 24) = SICal
  Worksheets("MultiMix").Cells(LoopResChem + 2, 29) = SIBar
  Else
  Worksheets("MultiMix").Cells(LoopResChem + 2, 24) = 10 ^ SICal
  Worksheets("MultiMix").Cells(LoopResChem + 2, 29) = 10 ^ SIBar
  End If

''********************************************************************************************
''Given Conc. of inhibitor, this is used to calculate the time that it will take for nucleation to begin.
''The following are lists of coefficients from He's work for barite and calcite inhibition for eight different inhibitors each.
''The ninth entry is for the "average" inhibitor concept.  It can be choosen for tests, but is not used in determining a "most effective inhibitor."
'bi(1, 1) = -3.952: bi(1, 2) = -1.069: bi(1, 3) = 1242.8: bi(1, 4) = 0.398: bi(1, 5) = 0.184  'data from Amy 2013
'bi(2, 1) = -1.642: bi(2, 2) = -1.24: bi(2, 3) = 1175.2: bi(2, 4) = 0.171: bi(2, 5) = 0.0705   'Amy 2013
'bi(3, 1) = -0.332: bi(3, 2) = -1.456: bi(3, 3) = 1086.7: bi(3, 4) = 0.0681: bi(3, 5) = 0.0176  'Amy 2013 PPCA
'bi(4, 1) = -2.7845: bi(4, 2) = -1.2382: bi(4, 3) = 1471.7483: bi(4, 4) = 0.1686: bi(4, 5) = 0.2153  'Amy 2013 DTPMP
'bi(5, 1) = -0.567: bi(5, 2) = -1.319: bi(5, 3) = 964.7: bi(5, 4) = 0.131: bi(5, 5) = 0.129 'Amy 2013 HDTMP
'bi(6, 1) = -0.815: bi(6, 2) = -1.635: bi(6, 3) = 1295.7: bi(6, 4) = 0.0342: bi(6, 5) = 0.176  'Amy 2013 SPCA
'bi(7, 1) = 0: bi(7, 2) = -1.805: bi(7, 3) = 1163.6: bi(7, 4) = -0.0511: bi(7, 5) = 0.148  'Amy 2013 PVS
'bi(8, 1) = 0: bi(8, 2) = -0.936: bi(8, 3) = 510.5: bi(8, 4) = 0.0305: bi(8, 5) = 0.182  'Amy 2013 CMI
'bi(9, 1) = -0.775: bi(9, 2) = -1.279: bi(9, 3) = 1007.3: bi(9, 4) = 0.0256: bi(9, 5) = 0.183   'Amy 2013 PMAC
'
'
'bi(10, 1) = 0.65: bi(10, 2) = -1.53: bi(10, 3) = 1051: bi(10, 4) = 0: bi(10, 5) = 0.1  'He PAA (no 3)
'bi(11, 1) = 0.78: bi(11, 2) = -1.76: bi(11, 3) = 1069: bi(11, 4) = 0: bi(11, 5) = 0.07 'He SPA (no 6)
'bi(12, 1) = -1.4: bi(12, 2) = -1.05: bi(12, 3) = 640: bi(12, 4) = 0.29: bi(12, 5) = 0.18  'He HEDP (No 7)
'bi(13, 1) = -0.49: bi(13, 2) = -1.44: bi(13, 3) = 1042: bi(13, 4) = 0.13: bi(13, 5) = 0.12  'He average (No 9)
'
'ci(1, 1) = -2.8: ci(1, 2) = -1.61: ci(1, 3) = 1226: ci(1, 4) = 0.32: ci(1, 5) = 0.13    'He NTMP
'ci(2, 1) = -4.35: ci(2, 2) = -1.45: ci(2, 3) = 1918: ci(2, 4) = 0.16: ci(2, 5) = 0.27   'He BHPMP
'ci(3, 1) = -3.47: ci(3, 2) = -1.41: ci(3, 3) = 1745: ci(3, 4) = 0.06: ci(3, 5) = 0.33   'He PPCA
'ci(4, 1) = -3.38: ci(4, 2) = -1.63: ci(4, 3) = 1396: ci(4, 4) = 0.26: ci(4, 5) = 0.29   'He DTPMP
'ci(5, 1) = -4.72: ci(5, 2) = -1.22: ci(5, 3) = 1813: ci(5, 4) = 0.22: ci(5, 5) = 0.27   'He HDTMP
'ci(6, 1) = -3.21: ci(6, 2) = -1.52: ci(6, 3) = 1585: ci(6, 4) = 0.179: ci(6, 5) = 0.238 'He Average(use for SPCA)
'ci(7, 1) = -3.1: ci(7, 2) = -1.59: ci(7, 3) = 1769: ci(7, 4) = 0.02: ci(7, 5) = 0.2     'He SPA (Use for PVS)
'ci(8, 1) = -2.3: ci(8, 2) = -1.69: ci(8, 3) = 1082: ci(8, 4) = 0.32: ci(8, 5) = 0.14    'He HEDP (use for CMI)
'ci(9, 1) = -3.07: ci(9, 2) = -1.55: ci(9, 3) = 1734: ci(9, 4) = 0.07: ci(9, 5) = 0.27   'He PAA (use for MAC)
'ci(10, 1) = -3.07: ci(10, 2) = -1.55: ci(10, 3) = 1734: ci(10, 4) = 0.07: ci(10, 5) = 0.27   'He PAA (no 3)
'
'ci(11, 1) = -3.1: ci(11, 2) = -1.59: ci(11, 3) = 1769: ci(11, 4) = 0.02: ci(6, 5) = 0.2  ''He SPA (no 6)
'ci(12, 1) = -2.3: ci(12, 2) = -1.69: ci(12, 3) = 1082: ci(12, 4) = 0.32: ci(7, 5) = 0.14  'He HEDP (No 7)
'ci(13, 1) = -3.21: ci(13, 2) = -1.52: ci(13, 3) = 1585: ci(13, 4) = 0.179: ci(13, 5) = 0.238 'He average (No 9)

'Barite inhibition.
'InhNoBar = InhNo

If SIBar > 0.01 Then
If LoopResChem = 1 Then                          'Routine to select which inhibitor is most effective for the specific downhole conditions, i.e., inhibitor selection is based upon downhole conditions, whether the brine is Supersaturated there, or not.
    InhNoBar = InhNo
    If SelectInh = 1 Then
        i = 1
        iMaxBar = 1
        bInhBarMax = fbInhBar(iMaxBar, SIBar)   'Test the value of the exponential.
        For i = 1 To 13
            bInhBar(i) = fbInhBar(i, SIBar)
            If bInhBar(i) > bInhBarMax Then
                iMaxBar = i
                bInhBarMax = bInhBar(i)
            End If
        Next i
        InhNoBar = iMaxBar
    End If
    If SelectInh = 1 Then InhNoBar = 2
End If
'  Log10t0Bar = flogT0Bar(SIBar)
'  bInhBar(InhNoBar) = 10 ^ (fbInhBar(InhNoBar, SIBar))
'  Log10tInhBar = Log10t0Bar + (ConcInh * bInhBar(InhNoBar))
   
   'Dai 2020 update inhibition model
    Log10tInhBar = lgt_barite(SIBar, TK, InhNoBar, ConcInh)
   
    If Log10tInhBar < 0 Then Worksheets("MultiMix").Cells(2 + LoopResChem, 30).Value = 0
    If Log10tInhBar > 0 And Log10tInhBar < 4.9365 Then Worksheets("MultiMix").Cells(2 + LoopResChem, 30).Value = 10 ^ (Log10tInhBar - 1.7782)
    If Log10tInhBar > 4.9365 Then Worksheets("MultiMix").Cells(2 + LoopResChem, 30).Value = ">1.0D"
Else
    Worksheets("MultiMix").Cells(2 + LoopResChem, 30).Value = ">1.0D"
End If

'    'Calculate the amount of inhibitor needed to inhibit nucleation of Barite for the time specified on Input Sheet Cell O2.
'    If SIBar > 0.01 Then
'        ConcInhBar = (1 / bInhBar(InhNoBar)) * (Log10(tInh) - Log10t0Bar)
'   'Dai 2020 update inhibition model
   Dim Delta_lgt, Delta_lgt0, Step_inh
    If SIBar > 0.001 Then
        BarExpon10 = lgt_barite(SIBar, TK, InhNoBar, 0)    'lgt0
        If Log10(tInh) > BarExpon10 And BarExpon10 < 8 Then
            t0Bar = 10 ^ BarExpon10
            ConcInhBar = 0.001
            Delta_lgt = lgt_barite(SIBar, TK, InhNoBar, ConcInhBar) - Log10(tInh)
            Delta_lgt0 = lgt_barite(SIBar, TK, InhNoBar, ConcInhBar) - BarExpon10 'slope
            Do While Abs(Delta_lgt) > 0.001 And ConcInhBar < 50 'in case it blows out
                ConcInhBar = ConcInhBar - Delta_lgt / Delta_lgt0 * ConcInhBar
                Delta_lgt = lgt_barite(SIBar, TK, InhNoBar, ConcInhBar) - Log10(tInh)
                Delta_lgt0 = lgt_barite(SIBar, TK, InhNoBar, ConcInhBar) - BarExpon10 'slope
                Step_inh = Step_inh + 1
                If ConcInhBar > 50 Then ConcInhBar = 50
            Loop
        End If
    'End If
    
        If ConcInhBar < 0 Then ConcInhBar = 0
        Worksheets("MultiMix").Cells(2 + LoopResChem, 32).Value = ConcInhBar
    Else
    Worksheets("MultiMix").Cells(2 + LoopResChem, 32).Value = 0
End If

'Calcite Inhibition time, output in minutes.
'InhNoCal = InhNo
If SICal > 0.01 Then
 If LoopResChem = 1 Then       'Routine to select which inhibitor to use based upon down hole conditions. Also prevent error from What-If
    InhNoCal = InhNo
    If SelectInh = 1 Then
      i = 1
      iMaxCal = 1
      bInhCalMax = fbInhCal(iMaxCal, SICal)
      For i = 1 To 13
        bInhCal(i) = fbInhCal(i, SICal)
        If bInhCal(i) > bInhCalMax Then
        iMaxCal = i
        bInhCalMax = bInhCal(i)
        End If
      Next i
      InhNoCal = iMaxCal
    End If
    If SelectInh = 1 Then InhNoCal = 1   'Presently, based upon experience the program selects NTMP for calcite regardless.
End If
  Log10t0Cal = flogT0Cal(SICal)
  bInhCal(InhNoCal) = 10 ^ (fbInhCal(InhNoCal, SICal))
  Log10tInhCal = Log10t0Cal + (ConcInh * bInhCal(InhNoCal))
    If Log10tInhCal < 0 Then Worksheets("MultiMix").Cells(2 + LoopResChem, 25).Value = 0
    If Log10tInhCal > 0 And Log10tInhCal < 4.9365 Then Worksheets("MultiMix").Cells(2 + LoopResChem, 25).Value = 10 ^ (Log10tInhCal - 1.7782)
    If Log10tInhCal > 4.9365 Then Worksheets("MultiMix").Cells(2 + LoopResChem, 25).Value = ">1.0D"
Else
Worksheets("MultiMix").Cells(2 + LoopResChem, 25).Value = ">1.0D"
End If


'Calculate the amount of inhibitor needed to inhibit nucleation of Calcite for the time specified on Input Sheet Cell O2.
If SICal > 0.01 Then
ConcInhCal = (1 / bInhCal(InhNoCal)) * (Log10(tInh) - Log10t0Cal)
If ConcInhCal < 0 Then ConcInhCal = 0
    Worksheets("MultiMix").Cells(2 + LoopResChem, 27).Value = ConcInhCal
    Else
    Worksheets("MultiMix").Cells(2 + LoopResChem, 27).Value = 0
End If

'Barite amount to pptate to equilibrium or amount to dissolve to equilibrium, i.e., negative values.
ppt = 0
'If SIBar > 0 Then
a = 1
b = -(mc(iBa) + ma(iSO4))
cc = mc(iBa) * ma(iSO4) - KspBarite / (gCat(iBa) * gAn(iSO4) * gNMean(iBaSO4) ^ 2)
Call QuadraticRoots(a, b, cc, ppt, root2)
If usePTB = 0 Then Worksheets("MultiMix").Cells(LoopResChem + 2, 31) = ppt * 233368 * (rho25c - TDS / 1000000#) 'ppt of BaSO4
If usePTB = 1 Then Worksheets("MultiMix").Cells(LoopResChem + 2, 31) = ppt * 233368 * (rho25c - TDS / 1000000#) * 0.35051 'ppt of BaSO4

'To calculate the amount of CaCO3 which could precipitate if allowed to go to equilibrium
Worksheets("MultiMix").Cells(LoopResChem + 2, 28) = "NA"
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(2, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(2, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
'End If
Worksheets("MultiMix").Cells(LoopResChem + 2, 28) = pH - DpHj
If usePTB = 0 Then Worksheets("MultiMix").Cells(LoopResChem + 2, 26) = ppt * 100091 * (rho25c - TDS / 1000000#)
If usePTB = 1 Then Worksheets("MultiMix").Cells(LoopResChem + 2, 26) = ppt * 100091 * (rho25c - TDS / 1000000#) * 0.35051

Next LoopResChem
Call ErrorMsgBox
mytime1 = Time
nettime = (mytime1 - mytime)
Worksheets("Input").Range("R28") = nettime * 24 * 3600
'After the subroutine:
'Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True

If nob = 1 Then
MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The T and P are read from Columns C and D on this MultiMix Sheet." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "."
Else
MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The T and P are read from Columns C and D on this MultiMix Sheet." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "."
End If
RunMultiMix = 0 ' Reset index
Worksheets("MultiMix").Activate
Worksheets("MultiMix").Protect ("eesi")
End
202 End Sub
Sub A7_MultiMix_SLB()
'******Search "for Jesse Slb to search changes in ReadInDataB, and B7_InhibitorNeed subs specifically made for this modification.
Worksheets("MultiMix_SLB").Unprotect ("eesi")
mytime = Time
'Before the subroutine:
Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual


RunMultiMixSlb = 1: RunGoalSeek = 0: RunSSP = 0: RunNORM = 0
Call InitializeOptionClearCellContent
'It is assumed that the brine/gas/oil data in the first two wells columns on the input will be used.
MsgBox ("This routine calculates the SI of a mixed brine containing up to five fluids at various T & P values." _
& Chr(13) & "Check box(es) on Row 3 of the Input Sheet to select the fluids to use in the calculation." _
& Chr(13) & "The T and P for the calculation are read from Columns C and D of this sheet." _
& Chr(13) & "Brine, oil, and gas volumes are read from Columns E to S of this sheet" _
& Chr(13) & Chr(13) & "For more than two wells, T, P, and flash calculation option are specified in the red boxes on Column H of the Input Sheet." _
& Chr(13) & Chr(13) & "For flash calculations, the hydrocarbon and water volumes have to be greater than 0.0." _
& Chr(13) & Chr(13) & "Note that this calculation uses data checked on Row 3 of the Input sheet")
ReDim CaseCount(5), CaseCount_II(110)
Call CountNOB
'For i = 1 To 5   'Read the check boxes at the top of the Input sheet to determine which wells to use.
'If Worksheets("Input").Cells(3, 2 + i).Value = True Then
'    nob = nob + 1
'    CaseCount(i - Ncount) = i
'Else
'    Ncount = Ncount + 1
'End If
'Next i
'nob_InputII = 0
'nob_Input = nob
'If nob = 0 Then
'MsgBox ("You must select Brines from the Input Sheet to run. Please check the boxes on Row 3 of the Input sheet and try again")
'End
'End If
    NumberToRead = Worksheets("MultiMix_Slb").Cells(1, 5)

For LoopResChem = 1 To NumberToRead
    Dim lastrow As Long
    lastrow = 2 + NumberToRead
    Worksheets("Multimix_SLB").Range("BM3:BZ" & lastrow).Select
    Selection.ClearContents
'  ConcInh = Worksheets("MultiMix_Slb").Cells(2 + LoopResChem, 20).Value    'Inhibitor conc. in cell.
Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
'If RunSimpSSP = 0 Then
Call Worksheets("Readme").B2_ReadinAllData     'Reads in all Input concentrations, put interms of molality, calculate total moles of CO2, H2S, CH4.
'If RunSimpSSP = 1 Then Call Worksheets("Readme").B2_ReadinAllDataSimplified     'Reads in all Input concentrations, put interms of molality, calculate total moles of CO2, H2S, CH4.
Call Worksheets("Readme").B3_CalcConcs           'Cacluate all concentration data from wells on input screen.
'Returns HCO3, HS, aH, Ac, and a set of SI values for all solids at the present T, P, and compositions.
Call Worksheets("Readme").B4_CalcFinalBrine

TF = Worksheets("MultiMix_Slb").Cells(2 + LoopResChem, 3).Value
If UseSI = 1 Then TF = TF * 9 / 5 + 32 'if T is in centegrade covert to F
If TF < 32 Then TF = 32
TK = (TF - 32) * 5 / 9 + 273.15

Ppsia = Worksheets("MultiMix_Slb").Cells(2 + LoopResChem, 4).Value
If UseSI = 1 Then Ppsia = Ppsia * 14.503774
If Ppsia < 12 Then Ppsia = 12
Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774

Call B5_CalculateSIvalues
pH_before_precipitation = pH
Call B6_InhibitorNeeded
Call B6_Dai_InhibitorNeeded ''Dai 2020, inhibition model update
Call LoopTPppt

  Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 22) = pH_before_precipitation - DpHj             'Output pH at T,P
  If UseSR = 0 Then
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 23) = SICal
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 24) = SIBar
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 25) = SIGyp
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 26) = SIHemi
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 27) = SIAn
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 28) = SICel
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 29) = SIHal
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 30) = SIFeS
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 31) = SIZnS
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 32) = SICaF2
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 33) = SISid
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 34) = SIAmSilica
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 35) = SIQuartz
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 36) = SIChrysotile
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 37) = SIDiopside
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 38) = SIGreenalite
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 39) = SICaOH2
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 40) = SIMgOH2
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 41) = SISrCO3
    Else
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 23) = 10 ^ SICal
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 24) = 10 ^ SIBar
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 25) = 10 ^ SIGyp
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 26) = 10 ^ SIHemi
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 27) = 10 ^ SIAn
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 28) = 10 ^ SICel
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 29) = 10 ^ SIHal
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 30) = 10 ^ SIFeS
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 31) = 10 ^ SIZnS
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 32) = 10 ^ SICaF2
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 33) = 10 ^ SISid
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 34) = 10 ^ SIAmSilica
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 35) = 10 ^ SIQuartz
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 36) = 10 ^ SIChrysotile
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 37) = 10 ^ SIDiopside
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 38) = 10 ^ SIGreenalite
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 39) = 10 ^ SICaOH2
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 40) = 10 ^ SIMgOH2
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 41) = 10 ^ SISrCO3
  End If
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 42) = pptCalcite_NoMassTransfer * 100091 * (rho25c - TDS * 0.000001)  'Amont of calcite to ppt to equilibrium.
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 43) = pptBarite_NoMassTransfer * 233390 * (rho25c - TDS / 1000000#)
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 44) = pptGyp * 172172 * (rho25c - TDS / 1000000#)
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 45) = pptHemi * 145148 * (rho25c - TDS / 1000000#)
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 46) = pptAn * 136140 * (rho25c - TDS / 1000000#)
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 47) = pptCel * 183680 * (rho25c - TDS / 1000000#)
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 48) = pptHal * 58443 * (rho25c - TDS / 1000000#)
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 49) = pptFeS_NoMassTransfer * 87910 * (rho25c - TDS * 0.000001)
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 50) = pptZnS * 97440 * (rho25c - TDS * 0.000001)
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 51) = pptCaF2 * 78080 * (rho25c - TDS / 1000000#)
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 52) = pptFeCO3_NoMassTransfer * 115861 * (rho25c - TDS * 0.000001)
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 53) = pptAmSilica * 60084 * (rho25c - TDS * 0.000001)
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 54) = pptQuartz * 60084 * (rho25c - TDS * 0.000001)
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 55) = pptChrysotile * 277110 * (rho25c - TDS * 0.000001) / 2 '/3 corrects for alkalinity issue.
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 56) = pptDiopside * 216550 * (rho25c - TDS * 0.000001) / 2   '/3 corrects for alkalinity issue.
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 57) = pptGreenalite * 371770 * (rho25c - TDS * 0.000001) / 3  '/3 corrects for alkalinity issue.
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 58) = pptCaOH2 * 74094 * (rho25c - TDS * 0.000001)
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 59) = pptMgOH2 * 58321 * (rho25c - TDS * 0.000001)
    Worksheets("MultiMix_Slb").Cells(LoopResChem + 2, 60) = pptSrCO3 * 147639 * (rho25c - TDS * 0.000001) 'Amont of calcite to ppt to equilibrium.
If SICal > 0.01 Then
    Worksheets("MultiMix_Slb").Cells(2 + LoopResChem, 61).Value = ConcInhCal
    Else
    Worksheets("MultiMix_Slb").Cells(2 + LoopResChem, 61).Value = 0
End If
If SIBar > 0.01 Then
    Worksheets("MultiMix_Slb").Cells(2 + LoopResChem, 62).Value = ConcInhBar
    Else
    Worksheets("MultiMix_Slb").Cells(2 + LoopResChem, 62).Value = 0
End If
If SIGyp > 0.01 Then
    Worksheets("MultiMix_Slb").Cells(2 + LoopResChem, 63).Value = ConcInhGyp
    Else
    Worksheets("MultiMix_Slb").Cells(2 + LoopResChem, 63).Value = 0
End If
If SIAn > 0.01 Then
    Worksheets("MultiMix_Slb").Cells(2 + LoopResChem, 64).Value = ConcInhAn
    Else
    Worksheets("MultiMix_Slb").Cells(2 + LoopResChem, 64).Value = 0
End If
Next LoopResChem
Call ErrorMsgBox
mytime1 = Time
nettime = (mytime1 - mytime)
Worksheets("Input").Range("R28") = nettime * 24 * 3600
'After the subroutine:
'Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True

If nob = 1 Then
MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The T and P are read from Columns C and D on this MultiMix_Slb Sheet." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "."
Else
MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The T and P are read from Columns C and D on this MultiMix_Slb Sheet." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "."
End If
RunMultiMixSlb = 0 ' Reset index
Worksheets("MultiMix_Slb").Activate
Worksheets("MultiMix_SLB").Protect ("eesi")
End
202 End Sub

Sub A8_RunMassTransport()
Run_MassTransfer = 1: RunGoalSeek = 0: RunSSP = 0: useEOS = 0: FlowType = 0
'Note flash is forced to tur off in ReadInDataD
MsgBox ("The mass transfer calculation is based on diffusion limited first order kinetic model.  The amount of precipitate is removed at each step." & Chr(13) & Chr(13) & "Flash calculation is not used in this calculation.")
'Define Mass Transfer Input Parameters (assign to cell addresses for user inputs on the Mass Transfer tabsheet)
PipeID = Worksheets("Use Mass Transfer").Range("h4")
PipeL = Worksheets("Use Mass Transfer").Range("h5")
'CorrRate = Worksheets("Use Mass Transfer").Range("N6")
'FlowType = Worksheets("Use Mass Transfer").Range("h6")
PipeMetalDens = 7.88   ' unit gpercm3
If Worksheets("Use Mass Transfer").Range("G4") = "Tubing/Pipe Internal Diameter (cm)" Then
UseSI = 1
ElseIf Worksheets("Use Mass Transfer").Range("G4") = "Tubing/Pipe Internal Diameter (inch)" Then
UseSI = 0
End If

'Convert Mass Transfer Input Parameter Units to cm
If UseSI = 0 Then
PipeID = PipeID * 2.54  'unit cm
PipeL = PipeL * 30.48 / 9 'unit cm per section
Else
PipeL = PipeL * 100 / 9
End If
'QBrineFlow = VW * 1000000# / 86400 'unit cm3/sec
 'PHENOMENOLOGICAL THEORY OF ION SOLVATION. EFFECTIVE RADII OF HYDRATED IONS, BY
'E. R. NIGHTINGALE, JR., J. Phys. Chem., 1959, 63 (9), pp 1381-1387

mySheet = "Input"

Call A1_Start_ScaleSoftPitzer
Run_MassTransfer = 0
Worksheets("Use Mass Transfer").Activate
End
End Sub
Sub A9_QualityControlChecksOnInputSheet()
mySheet = ActiveSheet.Name
    'If mySheet = "Simplified Input" Then RunSimpSSP = 1
    RunQualityControlChecks = 1: RunQualityControlChecks_II = 1: RunGoalSeek = 0: RunSSP = 0: RunNORM = 0
    Call InitializeOptionClearCellContent
    ReDim CaseCount(5), CaseCount_II(110)
    Call CountNOB
    Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
'    If mySheet = "Simplified Input" Then
'    Call Worksheets("Readme").B2_ReadinAllDataSimplified
'    Else
    Call Worksheets("Readme").B2_ReadinAllData       'Reads in all Input concentrations, put in terms of molality and calculate total moles of CO2, H2S, CH4.
'    End If
    Call ErrorMsgBox
'   End
End Sub

'********************************************************************************************
'I. This subroutine is activated by clicking on the Run button in the Input_1000Cases screen.
'Modification are made in This subroutine, B2_ReadinAllData and LoopTPWrite_1000Cases

Sub A10_SSP_1000_Cases()
mytime = Time
'Before the subroutine:
Application.ScreenUpdating = False
Worksheets("Input_1000_Cases").Unprotect ("eesi")
'Application.Calculation = xlCalculationManual
ReDim CaseCount(1)
Worksheets("Calcite").Range("B1:J1").Value = Null
Worksheets("Barite").Range("B1:J1").Value = Null
Worksheets("Halite").Range("B1:J1").Value = Null
Worksheets("Other SO4s").Range("B1:J1").Value = Null
Worksheets("Sulfides,Fluorite,Carbonates").Range("B1:J1").Value = Null
Worksheets("Silicates").Range("B1:J1").Value = Null
Worksheets("Mg(OH)2,Ca(OH)2").Range("B1:J1").Value = Null
MsgBox ("Note that this calculation is run with flash calculation option set to zero.")
Call InitializeOptionClearCellContent
Run1000Cases = 1: RunSSP = 0
CaseNob1000 = Worksheets("Input_1000_Cases").Cells(3, 2): nob_Input = 1: RunSSP = 0: RunNORM = 0
For LoopTP1000Cases = 1 To CaseNob1000
Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
Call Worksheets("Readme").B2_ReadinAllData      'Reads in all Input concentrations, put in terms of molality and calculate total moles of CO2, H2S, CH4.
MultiplePpt = 0   'Disallow multiple ppt to be calculated
Call Worksheets("Readme").B3_CalcConcs           'Cacluate all concentration data from wells on input screen.
Call Worksheets("Readme").B4_CalcFinalBrine      'Mixed bine output.
For LoopTP = 1 To 2
    If LoopTP = 1 Then
    TF = TBH:  Ppsia = PBH
    End If
    If LoopTP = 2 Then
    TF = TWH: Ppsia = PWH
    End If
    TK = (TF - 32) * 5 / 9 + 273.15
    PBar = Ppsia / 14.503774
    TC = (TF - 32) * 5 / 9
    Patm = Ppsia / 14.696
Call LoopTPSI
rhoTP = CalcRhoTP(TK, TC, PBar, Patm)
Call LoopTPppt
Call LoopTPWrite1000Cases
Next LoopTP
Next LoopTP1000Cases

mytime1 = Time
nettime = (mytime1 - mytime)
Worksheets("Input").Range("R28") = nettime * 24 * 3600
'After the subroutine:
'Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Worksheets("Input_1000_Cases").Protect ("eesi")
MsgBox "Calculation is finished."
Worksheets("Input_1000_Cases").Activate
Worksheets("Input_1000_Cases").Range("A1").Select
End
End Sub

Sub A12_SSP_MultiphaseFlash()
ReDim zOutput(15), beta(3), density(3), Compr(3), phi(15, 3), compositions(15, 4)
'Before the subroutine:
Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
If Worksheets("Multiphase Flash").Range("M5").Value = "T(C)" Then
UseSI = 1
Else
UseSI = 0
End If
For iNG = 1 To 15
zOutput(iNG) = 0
Next iNG
TF = Worksheets("Multiphase Flash").Range("N5").Value '
Ppsia = Worksheets("Multiphase Flash").Range("N6").Value '
If UseSI = 1 Then TF = Worksheets("Multiphase Flash").Range("N5").Value * 9 / 5 + 32 'convert to F
If UseSI = 1 Then Ppsia = Worksheets("Multiphase Flash").Range("N6").Value * 14.503774 'convert to psia
    TK = (TF - 32) * 5 / 9 + 273.15: TC = (TF - 32) * 5 / 9
    Patm = Ppsia / 14.7
    PBar = Ppsia / 14.50377

'' Takes the temperature and pressure input values from the spreadsheet
'TK = (Worksheets("Multiphase Flash").Range("N5").Value - 32) * 5 / 9 + 273.15 'in [Kelvin]
'PBar = Worksheets("Multiphase Flash").Range("N6").Value / 14.50377 'in [Bar]

'TK = Worksheets("Multiphase Flash").Range("B1").Value '
'PBar = Worksheets("Multiphase Flash").Range("D1").Value '

Worksheets("Multiphase Flash").Range("C3:J17").ClearContents
'Worksheets("Multiphase Flash").Range("E2:J2").ClearContents
Worksheets("Multiphase Flash").Range("E18:G21").ClearContents

'' Takes the temperature and pressure input values from the spreadsheet
'TK = (Worksheets("Multiphase Flash").Range("N5").Value - 32) * 5 / 9 + 273.15 'in [Kelvin]
'PBar = Worksheets("Multiphase Flash").Range("N6").Value / 14.50377 'in [Bar]

For i = 1 To 15
'  z(i) = Worksheets("Multiphase Flash").Cells(2 + i, 3)
  z(i) = Worksheets("Multiphase Flash").Cells(2 + i, 16)
Next i
SumofZ = 0
For i = 1 To 15
SumofZ = SumofZ + z(i)
Next i
For i = 1 To 15
z(i) = z(i) / SumofZ
Next i
'Ist = 0
'aH2O = 1#
'gNeut(1) = 1#
'gNeut(2) = 1#
Ist = Worksheets("Multiphase Flash").Cells(8, 14)
aH2O = 1 - 0.0274 * Ist
gNeut(1) = 1 + 0.1489 * Ist - 0.008 * Ist ^ 2
gNeut(2) = gNeut(1)

total_moles = 1

iCO2aq = 1: iH2Saq = 2
For i = 1 To 3
For j = 1 To 15
beta(i) = 0: density(i) = 0: Compr(i) = 0: phi(j, i) = 0
compositions(j, i + 1) = 0
Next j
Next i
mf_ParametersWereRead = False  ' This is needed for this sub.
Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)

'Worksheets("Multiphase Flash").Cells(1, 1) = "T(K)"
Worksheets("Multiphase Flash").Cells(1, 2) = TK
'Worksheets("Multiphase Flash").Cells(1, 3) = "P(bar)"
Worksheets("Multiphase Flash").Cells(1, 4) = PBar
'Worksheets("Multiphase Flash").Cells(1, 5) = "Mole Fraction in Individual Phases"
'Worksheets("Multiphase Flash").Cells(1, 8) = "Fugacity Coefficients in Individual Phases"
'Worksheets("Multiphase Flash").Cells(2, 1) = "No."
'Worksheets("Multiphase Flash").Cells(2, 2) = "Component"
'Worksheets("Multiphase Flash").Cells(2, 3) = "Mole Fraction"
'
'Worksheets("Multiphase Flash").Cells(3, 2) = "C1"
'Worksheets("Multiphase Flash").Cells(4, 2) = "CO2"
'Worksheets("Multiphase Flash").Cells(5, 2) = "H2S"
'Worksheets("Multiphase Flash").Cells(6, 2) = "C2"
'Worksheets("Multiphase Flash").Cells(7, 2) = "C3"
'Worksheets("Multiphase Flash").Cells(8, 2) = "iC4"
'Worksheets("Multiphase Flash").Cells(9, 2) = "nC4"
'Worksheets("Multiphase Flash").Cells(10, 2) = "iC5"
'Worksheets("Multiphase Flash").Cells(11, 2) = "nC5"
'Worksheets("Multiphase Flash").Cells(12, 2) = "C6"
'Worksheets("Multiphase Flash").Cells(13, 2) = "C7-C12"
'Worksheets("Multiphase Flash").Cells(14, 2) = "C13-C25"
'Worksheets("Multiphase Flash").Cells(15, 2) = "C26-C80"
'Worksheets("Multiphase Flash").Cells(16, 2) = "N2"
'Worksheets("Multiphase Flash").Cells(17, 2) = "H2O"
'Worksheets("Multiphase Flash").Cells(18, 3) = "Phase Fraction"
'Worksheets("Multiphase Flash").Cells(19, 3) = "Compressibility Factor"
'Worksheets("Multiphase Flash").Cells(20, 3) = "Density (g/cm3)"
For j = 1 To 15
    'Worksheets("Multiphase Flash").Cells(2 + j, 1) = j
    Worksheets("Multiphase Flash").Cells(2 + j, 3) = zOutput(j)
Next j



For i = 1 To 3
    If beta(i) > 0 Then
'    existing_phase = i
        Worksheets("Multiphase Flash").Cells(18, 4 + i) = beta(i)
        Worksheets("Multiphase Flash").Cells(19, 4 + i) = Compr(i)
        Worksheets("Multiphase Flash").Cells(20, 4 + i) = density(i)
        Worksheets("Multiphase Flash").Cells(21, 4 + i) = mass_phase(i)

        For j = 1 To 15
            If compositions(j, i + 1) > 0 Then
                Worksheets("Multiphase Flash").Cells(2 + j, 4 + i) = compositions(j, i + 1)
                Worksheets("Multiphase Flash").Cells(2 + j, 7 + i) = phi(j, i)
            End If

'            If j = 2 Or j = 3 Then
'                If compositions(j, 4) > 0 Then Worksheets("Multiphase Flash").Cells(2 + j, 9) = compositions(j, 2) / compositions(j, 4)
'            End If

        Next j
    End If
Next i

For j = 1 To 15
    'fugacity(j) = compositions(j, 1 + existing_phase) * phi(j, existing_phase) * PBar
    'Worksheets("Multiphase Flash").Cells(2 + j, 8) = fugacity(j) 'Output fugacity

    If j = 2 Or j = 3 Then
        'Worksheets("Multiphase Flash").Cells(2 + j, 4) = z(j) * 1000000# 'ppmMole
    End If
Next j

' If beta(1) > 0 Then Worksheets("Multiphase Flash").Range("E25") = MW_Phase(1)
' If beta(2) > 0 Then Worksheets("Multiphase Flash").Range("F25") = MW_Phase(2)
' If beta(3) > 0 Then Worksheets("Multiphase Flash").Range("g25") = MW_Phase(3)
'
 If beta(1) > 0 Then
 a = mass_phase(1) / density(1)
 Else
 a = 0
 End If

 If beta(2) > 0 Then
 b = mass_phase(2) / density(2)
 Else
 b = 0
 End If
 If beta(3) > 0 Then
 c = mass_phase(3) / density(3)
 Else
 c = 0
 End If

 Worksheets("Multiphase Flash").Range("E22") = a / (a + b + c) * 100
 Worksheets("Multiphase Flash").Range("F22") = b / (a + b + c) * 100
 Worksheets("Multiphase Flash").Range("G22") = c / (a + b + c) * 100
If beta(3) > 0 Then
a = Worksheets("Multiphase Flash").Range("E22") / Worksheets("Multiphase Flash").Range("G22") 'gas vol per 1 m3 water
b = Worksheets("Multiphase Flash").Range("f22") / Worksheets("Multiphase Flash").Range("G22")  'oil vol per 1 m3 water
Worksheets("Multiphase Flash").Range("E24") = a / 1000 ' SI Units 1000 cubic meter
Worksheets("Multiphase Flash").Range("f24") = b 'SI unit m^3
Worksheets("Multiphase Flash").Range("g24") = 1 'SI unit m^3
Worksheets("Multiphase Flash").Range("E23") = a / 1000 * 35.314666721 / (1000 / 159)   ' English Units 1000 cubic ft, Normalized to 1 bbl water
Worksheets("Multiphase Flash").Range("f23") = b * 1000 / 159 / (1000 / 159)
Worksheets("Multiphase Flash").Range("g23") = 1
ElseIf beta(2) > 0 Then
a = Worksheets("Multiphase Flash").Range("E22") / Worksheets("Multiphase Flash").Range("F22") 'gas vol per 1 m3 oil
Worksheets("Multiphase Flash").Range("E24") = a / 1000 ' SI Units 1000 cubic meter
Worksheets("Multiphase Flash").Range("f24") = 1 ' SI unit m^3
Worksheets("Multiphase Flash").Range("g24") = 0 'SI unit m^3
Worksheets("Multiphase Flash").Range("E23") = a / 1000 * 35.314666721 / (1000 / 159) ' English Units 1000 cubic ft, Normalized to 1 bbl oil
Worksheets("Multiphase Flash").Range("f23") = 1
Worksheets("Multiphase Flash").Range("g23") = 0
ElseIf beta(3) > 0 Then
Worksheets("Multiphase Flash").Range("E24") = Empty
Worksheets("Multiphase Flash").Range("f24") = Empty
Worksheets("Multiphase Flash").Range("g24") = Empty
Worksheets("Multiphase Flash").Range("E23") = Empty
Worksheets("Multiphase Flash").Range("f23") = Empty
Worksheets("Multiphase Flash").Range("g23") = Empty
End If


''calculate bubble and dew points
'Set myRange = Worksheets("Multiphase Flash").Range("$C$3:$c$17")
'bubblepoint = bPoint(myRange, TK, gNeut(1), gNeut(2), aH2O)
''dewpoint = dPoint(myRange, TK, gNeut(1), gNeut(2), aH2O)
'    If UseSI = 1 Then
'    Worksheets("Multiphase Flash").Range("E25") = bubblepoint
'    Else
'    Worksheets("Multiphase Flash").Range("E25") = bubblepoint * 14.503774 'Output psia
'    End If

'Worksheets("Multiphase Flash").Protect ("eesi")

'Worksheets("Multiphase Flash").Calculate
'After the subroutine:
'Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
End
End Sub
'I. This subroutine is activated by clicking on the Run button in the H2S Fugacity screen written for Oxy.
Sub A13_CalcH2SFugacity()
'Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
'Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
'mytime = Time
mySheet = "Input"
RunSSP = 1: RunStat = 0: RunQualityControlChecks = 0: RunH2SGUI = 0: RunNORM = 0
Worksheets("Calcite").Range("B1:J1").Value = Null
Worksheets("Calcite").Range("p4:u13").Value = Null
Worksheets("Barite").Range("B1:J1").Value = Null
Worksheets("Barite").Range("p4:u13").Value = Null
Worksheets("Halite").Range("B1:J1").Value = Null
Worksheets("Other SO4s").Range("B1:J1").Value = Null
Worksheets("Other SO4s").Range("P4:U14").Value = Null
Worksheets("Sulfides,Fluorite,Carbonates").Range("B1:J1").Value = Null
Worksheets("Silicates").Range("B1:J1").Value = Null
Worksheets("Mg(OH)2,Ca(OH)2").Range("B1:J1").Value = Null
Worksheets("CO2, H2S Fugacity").Range("A4:m13").Value = Null

Call InitializeOptionClearCellContent
ReDim CaseCount(5), CaseCount_II(110)
Call CountNOB
Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
Call Worksheets("Readme").B2_ReadinAllData      'Reads in all Input concentrations, put in terms of molality and calculate total moles of CO2, H2S, CH4.
Call Worksheets("Readme").B3_CalcConcs           'Cacluate all concentration data from wells on input screen.
Call Worksheets("Readme").B4_CalcFinalBrine      'Mixed bine output.

  deltaT = (TBH - TWH) / 9
  deltaP = (PBH - PWH) / 9
'  Worksheets("CO2, H2S Fugacity").Cells(13, 1) = TBH
'  Worksheets("CO2, H2S Fugacity").Cells(4, 1) = TWH
'  Worksheets("CO2, H2S Fugacity").Cells(13, 2) = PBH
'  Worksheets("CO2, H2S Fugacity").Cells(4, 2) = PWH
'  If UseSI = 1 Then Worksheets("CO2, H2S Fugacity").Cells(13, 1) = (TBH - 32) * 5 / 9 'default T as TF, P as psia, Output TBH, TWH etc to calcite sheet
'  If UseSI = 1 Then Worksheets("CO2, H2S Fugacity").Cells(4, 1) = (TWH - 32) * 5 / 9
'  If UseSI = 1 Then Worksheets("CO2, H2S Fugacity").Cells(13, 2) = PBH / 14.503774
'  If UseSI = 1 Then Worksheets("CO2, H2S Fugacity").Cells(4, 2) = PWH / 14.503774

 For LoopTP = 1 To 10
 If UseTPCalciteSheet = 0 Then
    TF = TBH - deltaT * (LoopTP - 1): TK = (TF - 32) * 5 / 9 + 273.15
    Ppsia = PBH - deltaP * (LoopTP - 1): Patm = Ppsia / 14.696
    Else
    TF = Worksheets("Calcite").Cells(14 - LoopTP, 1):
    Ppsia = Worksheets("Calcite").Cells(14 - LoopTP, 2):
    If UseSI = 1 Then TF = Worksheets("Calcite").Cells(14 - LoopTP, 1) * 9 / 5 + 32
    If UseSI = 1 Then Ppsia = Worksheets("Calcite").Cells(14 - LoopTP, 2) * 14.503774
  End If
    TK = (TF - 32) * 5 / 9 + 273.15
    TC = (TF - 32) * 5 / 9
    Patm = Ppsia / 14.696
    PBar = Ppsia / 14.503774

Call B5_CalculateSIvalues
If H2Oevap <> 1 Then
pH_before_precipitation = pH  'This saves the pH value before any dissolution or precipitation takes place. Use in SqSoft
 
'Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 3) = beta(1)
'Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 4) = beta(2)
'Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 5) = beta(3)
'Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 6) = Compr(1)
'Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 7) = Compr(2)
'Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 8) = Compr(3)
'Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 9) = density(1)
'Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 10) = density(2)
'Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 11) = rhoTP
If UseSI = 0 Then
        Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 1) = TF
        Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 2) = Ppsia
Else
        Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 1) = TC
        Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 2) = PBar
End If

Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 3) = pH - DpHj
If useEOS > 0 Then
    'If beta(1) > 0 Then  'when gas is present
    'If UseSI = 0 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 13) = Ppsia * compositions(3, 2)
    'If UseSI = 1 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 13) = PBar * compositions(3, 2)
    'End If
    If beta(1) > 0 Then 'when gas is present
    If UseSI = 0 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 4) = Ppsia * compositions(3, 2) * phi(3, 1)
    If UseSI = 1 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 4) = PBar * compositions(3, 2) * phi(3, 1)
    ElseIf beta(2) > 0 Then 'when oil is present
    If UseSI = 0 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 4) = Ppsia * compositions(3, 3) * phi(3, 2)
    If UseSI = 1 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 4) = PBar * compositions(3, 3) * phi(3, 2)
    ElseIf beta(2) = 0 And beta(3) > 0 Then
    If UseSI = 0 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 4) = Ppsia * compositions(3, 4) * phi(3, 3)
    If UseSI = 1 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 4) = PBar * compositions(3, 4) * phi(3, 3)
    End If
    
    If UseSI = 0 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 5) = compositions(3, 2) * Ppsia  'PH2S in unit psia
    If UseSI = 1 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 5) = compositions(3, 2) * PBar
    
    If beta(2) > 0 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 6) = compositions(3, 3) / (MW_Phase(2) * 1000) 'moles H2S/Kg oil
    
Else

   
    If UseSI = 0 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 4) = PH2S * gGas(iH2Sg)
    If UseSI = 1 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 4) = PH2S / 14.503774 * gGas(iH2Sg)
    
    
    If UseSI = 0 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 5) = PH2S  'PH2S in unit psia
    If UseSI = 1 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 5) = PH2S / 14.503774
    
    Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 6) = PH2S * gGas(iH2Sg) * RatioOilBPoints * KgoH2S / gL(iH2So) 'moles H2S/Kg oil
End If
Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 7) = H2Saq
Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 8) = H2Saq * gNeut(iH2Saq)
'Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 8) = HS
'Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 9) = S

'Output CO2 fugacity
If useEOS > 0 Then
    If beta(1) > 0 Then 'when gas is present
    If UseSI = 0 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 9) = Ppsia * compositions(2, 2) * phi(2, 1)
    If UseSI = 1 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 9) = PBar * compositions(2, 2) * phi(2, 1)
    ElseIf beta(2) > 0 Then 'when oil is present
    If UseSI = 0 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 9) = Ppsia * compositions(2, 3) * phi(2, 2)
    If UseSI = 1 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 9) = PBar * compositions(2, 3) * phi(2, 2)
    ElseIf beta(2) = 0 And beta(3) > 0 Then
    If UseSI = 0 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 9) = Ppsia * compositions(2, 4) * phi(2, 3)
    If UseSI = 1 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 9) = PBar * compositions(2, 4) * phi(2, 3)
    End If
    If UseSI = 0 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 10) = compositions(2, 2) * Ppsia
    If UseSI = 1 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 10) = compositions(2, 2) * PBar
    If beta(2) > 0 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 11) = compositions(2, 3) / (MW_Phase(2) * 1000)
Else

    If UseSI = 0 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 9) = PCO2 * gGas(iCO2g)
    If UseSI = 1 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 9) = PCO2 * gGas(iCO2g) / 14.503774
    If UseSI = 0 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 10) = PCO2
    If UseSI = 1 Then Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 10) = PCO2 / 14.503774
    Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 11) = PCO2 * gGas(iCO2g) * RatioOilBPoints * KgoCO2 / gL(iCO2o) 'moles CO2/Kg oil
End If
Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 12) = CO2aq
Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 13) = CO2aq * gNeut(iCO2aq)
'Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 14) = HCO3
'Worksheets("CO2, H2S Fugacity").Cells(14 - LoopTP, 15) = CO3
Else
GoTo 201
End If
Next LoopTP
'Else 'when running Goalseek

201 If RunGoalSeek = 0 And Run_MassTransfer = 0 Then 'The following updates the Last two columns even when GoalSeek is not run
    Call ErrorMsgBox
    If UseSI = 1 Then
    TBH = (TBH - 32) * 5 / 9
    TWH = (TWH - 32) * 5 / 9
    PBH = PBH / 14.503774
    PWH = PWH / 14.503774

    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial and final temperatures are " & TBH & " and " & TWH & " C;" & Chr(13) _
    & "Initial and final pressures are " & PBH & " and " & PWH & " Bar." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." & Chr(13) & Chr(13) _
    & "Calculation Option(s) on Row 51 used for Input 1 is " & usepHmix(1)  '
Else
    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial and final temperatures are " & TBH & " and " & TWH & " F;" & Chr(13) _
    & "Initial and final pressures are " & PBH & " and " & PWH & " psia." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." & Chr(13) & Chr(13) _
    & "Calculation Option(s) on Row 51 used for Input 1 is " & Chr(13) & usepHmix(1) '******************************
    End If
    End If

If Run_MassTransfer <> 1 Or Run10TestCases <> 1 Or RunWhatIf <> 1 Or Run_Seawater_Mixing <> 1 Or Run_MixingTwoWells <> 1 Then
Worksheets("CO2, H2S Fugacity").Activate
Worksheets("CO2, H2S Fugacity").Range("A1").Select
End If
If RunGoalSeek <> 1 And Run_MassTransfer <> 1 Then 'Since GoalSeek and Run_MassTransfer looped around Sub A1, the end statement needs to be skipped.
End
End If
End Sub

''I. This subroutine is activated by clicking on the Run button in the Input screen.
'Sub A14_NORM()
''Application.ScreenUpdating = False
''Application.Calculation = xlCalculationManual
''Application.ScreenUpdating = False
''Application.Calculation = xlCalculationManual
'mytime = Time
'mySheet = "Input"
''If mySheet = "Simplified Input" Then
''RunSimpSSP = 1: RunSSP = 0: RunStat = 0
''Else
'RunSSP = 1: RunStat = 0: RunQualityControlChecks = 0: RunH2SGUI = 0: RunNORM = 1
''End If
''Application.ScreenUpdating = False
''Worksheets("Calcite").Range("B1:J1").Value = Null
''Worksheets("Calcite").Range("p4:u13").Value = Null
''Worksheets("Barite").Range("B1:J1").Value = Null
''Worksheets("Barite").Range("p4:u13").Value = Null
''Worksheets("Halite").Range("B1:J1").Value = Null
''Worksheets("Other SO4s").Range("B1:J1").Value = Null
''Worksheets("Other SO4s").Range("P4:U14").Value = Null
''Worksheets("Sulfides,Fluorite,Carbonates").Range("B1:J1").Value = Null
''Worksheets("Silicates").Range("B1:J1").Value = Null
''Worksheets("Mg(OH)2,Ca(OH)2").Range("B1:J1").Value = Null
'Call InitializeOptionClearCellContent
'ReDim CaseCount(5), CaseCount_II(110)
'Call CountNOB
'Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
''If mySheet = "Simplified Input" Then
''Call Worksheets("Readme").B2_ReadinAllDataSimplified      'Reads in all Input concentrations, put in terms of molality and calculate total moles of CO2, H2S, CH4.
''Else
'Call Worksheets("Readme").B2_ReadinAllData      'Reads in all Input concentrations, put in terms of molality and calculate total moles of CO2, H2S, CH4.
''End If
'Call Worksheets("Readme").B3_CalcConcs           'Cacluate all concentration data from wells on input screen.
''mytime1 = Time
'Call Worksheets("Readme").B4_CalcFinalBrine      'Mixed bine output.
''Call OutputActivityCoefficients        'If activity coefficients are to be output, prepare the out fields on Calcite sheet.
''Loop through ten (T,P) pairs from (T_BH,P_BH) to (T_WH,P_WH) evenly spaced on
''the temperature and the pressure.  At this point all concentrations are available
''in the code as molality values and ready for calculations of SI values.
'  deltaT = (TBH - TWH) / 9
'  deltaP = (PBH - PWH) / 9
'  Worksheets("Calcite").Cells(13, 1) = TBH
'  Worksheets("Calcite").Cells(4, 1) = TWH
'  Worksheets("Calcite").Cells(13, 2) = PBH
'  Worksheets("Calcite").Cells(4, 2) = PWH
'  If UseSI = 1 Then Worksheets("Calcite").Cells(13, 1) = (TBH - 32) * 5 / 9 'default T as TF, P as psia, Output TBH, TWH etc to calcite sheet
'  If UseSI = 1 Then Worksheets("Calcite").Cells(4, 1) = (TWH - 32) * 5 / 9
'  If UseSI = 1 Then Worksheets("Calcite").Cells(13, 2) = PBH / 14.503774
'  If UseSI = 1 Then Worksheets("Calcite").Cells(4, 2) = PWH / 14.503774
'If RunGoalSeek <> 1 Then
' For LoopTP = 1 To 10
' If UseTPCalciteSheet = 0 Then
'    TF = TBH - deltaT * (LoopTP - 1): TK = (TF - 32) * 5 / 9 + 273.15
'    Ppsia = PBH - deltaP * (LoopTP - 1): Patm = Ppsia / 14.696
''    ElseIf RunStatReservoirCalc = 0 And UseTPCalciteSheet = 1 Then
'    Else
'    TF = Worksheets("Calcite").Cells(14 - LoopTP, 1):
'    Ppsia = Worksheets("Calcite").Cells(14 - LoopTP, 2):
'    If UseSI = 1 Then TF = Worksheets("Calcite").Cells(14 - LoopTP, 1) * 9 / 5 + 32
'    If UseSI = 1 Then Ppsia = Worksheets("Calcite").Cells(14 - LoopTP, 2) * 14.503774
'    TK = (TF - 32) * 5 / 9 + 273.15
'    Patm = Ppsia / 14.696
'  End If
'    PBar = Ppsia / 14.503774
'    TC = (TF - 32) * 5 / 9
'    If LoopTP = 10 Then
'    pH = pH
'    End If
'
' Call LoopTPSI
' If Ist <> 0 Then
'     Call LoopTPVisHeatCap
'     If Run_MassTransfer = 1 Then Call MassTransferCoefficients
'End If
'     Call LoopTPppt
' Call loopTPNORMWrite
'Next LoopTP
'Else 'when running Goalseek
'For LoopTP = 1 To 2
'If LoopTP = 1 Then
'TF = TBH: TK = (TF - 32) * 5 / 9 + 273.15: TC = (TF - 32) * 5 / 9
'Ppsia = PBH: Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774
'End If
'If LoopTP = 2 Then
'TF = TWH: TK = (TF - 32) * 5 / 9 + 273.15: TC = (TF - 32) * 5 / 9
'Ppsia = PWH: Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774
'End If
'Call LoopTPSI
'Call LoopTPWrite
'Next LoopTP
'End If 'correspond to RunGoalSeek=1
'
''Call ScaleRiskGraph
'    mytime1 = Time
'    nettime = (mytime1 - mytime)
'    If RunSSP = 1 Then Worksheets("Input").Range("R28") = nettime * 24 * 3600
''    Application.Calculation = xlCalculationAutomatic
''    Application.ScreenUpdating = True
'201 If RunGoalSeek = 0 And Run_MassTransfer = 0 Then 'The following updates the Last two columns even when GoalSeek is not run
'    Call ErrorMsgBox
'    If UseSI = 1 Then
'    TBH = (TBH - 32) * 5 / 9
'    TWH = (TWH - 32) * 5 / 9
'    PBH = PBH / 14.503774
'    PWH = PWH / 14.503774
'
'    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial and final temperatures are " & TBH & " and " & TWH & " C;" & Chr(13) _
'    & "Initial and final pressures are " & PBH & " and " & PWH & " Bar." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." & Chr(13) & Chr(13) _
'    & "Calculation Option(s) on Row 51 used for Input 1 is " & usepHmix(1)  '
'Else
'    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial and final temperatures are " & TBH & " and " & TWH & " F;" & Chr(13) _
'    & "Initial and final pressures are " & PBH & " and " & PWH & " psia." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." & Chr(13) & Chr(13) _
'    & "Calculation Option(s) on Row 51 used for Input 1 is " & Chr(13) & usepHmix(1) '******************************
'    End If
'    End If
'
'
'
'If Run_MassTransfer <> 1 Or Run10TestCases <> 1 Or RunWhatIf <> 1 Or Run_Seawater_Mixing <> 1 Or Run_MixingTwoWells <> 1 Then
'Worksheets(mySheet).Activate
'Worksheets(mySheet).Range("A1").Select
'End If
'If RunGoalSeek <> 1 And Run_MassTransfer <> 1 Then 'Since GoalSeek and Run_MassTransfer looped around Sub A1, the end statement needs to be skipped.
'End
'End If
'End Sub

'*******************************************************************************************
'A.  This subroutine is called by each of the above calculation-initiation subroutines, A1-A8.
Sub B1_InitializeIndices()

'The following are integer indexes that correspond to the species number.
'These indexes are used for some programming, but mostly for clairity.
 mf_ParametersWereRead = False: nComponents = 15
 pi = 3.14159265358979: NAv = 6.0221367E+23: eElec = 1.60217733E-19:
eps0 = 8.854187818E-12: kBoltz = 1.380658E-23: RBar = 0.083144: R = 83.144: RAtm = 0.082057 'unit Lbar/K/mol, cm3bar/K/mol,Latm/K/mol

   NumCat = 12: NumAn = 13: NumNeut = 8: NumMean = 6:
   
   iH = 1: iNa = 2: iK = 3: iMg = 4: iCa = 5: iSr = 6: iBa = 7: iFe = 8: iZn = 9: iPb = 10: iNH4 = 11: iRa = 12 'Cation indexes
   ChCat(iH) = 1: ChCat(iNa) = 1: ChCat(iK) = 1: ChCat(iMg) = 2: ChCat(iCa) = 2: ChCat(iSr) = 2: ChCat(iBa) = 2: ChCat(iFe) = 2: _
   ChCat(iZn) = 2: ChCat(iPb) = 2: ChCat(iNH4) = 1: ChCat(iRa) = 2
   iOH = 1: iCl = 2: iAc = 3: iHCO3 = 4: iCO3 = 5: iSO4 = 6: iHS = 7: intF = 8: iBr = 9:  iH2BO3 = 10: iH3SiO4 = 11: iH2SiO4 = 12 'Anion indexes
   iSion = 13
   ChAn(iOH) = -1: ChAn(iCl) = -1: ChAn(iAc) = -1: ChAn(iHCO3) = -1: ChAn(iCO3) = -2: ChAn(iSO4) = -2: ChAn(iHS) = -1: _
   ChAn(intF) = -1: ChAn(iBr) = -1: ChAn(iH2BO3) = -1: ChAn(iH3SiO4) = -1: ChAn(iH2SiO4) = -2: ChAn(iSion) = -2
    iCH4aq = 1: iCO2aq = 2: iH2Saq = 3: iHAcaq = 4: iH4SiO4aq = 5: iNH3 = 6: iH3BO3 = 7: iFeSaq = 8 'Neutral aquatic indexes
    iCH4o = 1: iCO2o = 2: iH2So = 3:        'Oil phase indexes
    iCH4g = 1:  iCO2g = 2: iH2Sg = 3:  iC2g = 4: iC3g = 5: iC4ig = 6: iC4ng = 7: iC5ig = 8 'Gas indexes
    iC5ng = 9: iC6g = 10: iC7_12g = 11: iC13_25g = 12: iC26_80g = 13: iH2Og = 15: iN2g = 14:
   iBaSO4 = 1: iCaSO42H2O = 2: iSrSO4 = 3: ihemiCaSO4 = 4: iCaSO4 = 5: iNaCl = 6: iCaHCO32 = 7: iFeHCO32 = 8: iFeHS2 = 9
   For i = 1 To NumCat:   gNCat(i) = 1:   Next i
   For i = 1 To NumAn:   gNAn(i) = 1:   Next i
   For i = 1 To NumNeut:   gNNeut(i) = 1:   Next i
   For i = 1 To NumMean:   gNMean(i) = 1:   Next i

  dSIMeOHBar = 0: dSIMEGBar = 0: dSIMeOHcal = 0: dSIMEGcal = 0: dSIMeOHHal = 0: dSIMEGHal = 0
  aNH2O = 1
  Call C2_PitzerActCoefsConstants
'  '*****check EOS
    gL(iCO2o) = 1: gL(iCH4o) = 1: gL(iH2So) = 1
'From InitFieldsreg1 sub in IAPWS-IF97 for water density calculation*************************************
rgas_water = 461.526    'gas constant in J/(kg K)
tc_water = 647.096      'critical temperature in K
pc_water = 220.64      'critical pressure in bar
dc_water = 322#
'  Initialize coefficients and exponents for region 1
'
ireg1(1) = 0:    ireg1(2) = 0:    ireg1(3) = 0:    ireg1(4) = 0:    ireg1(5) = 0:    ireg1(6) = 0:    ireg1(7) = 0
ireg1(8) = 0:    ireg1(9) = 1:    ireg1(10) = 1: ireg1(11) = 1: ireg1(12) = 1: ireg1(13) = 1: ireg1(14) = 1: ireg1(15) = 2
ireg1(16) = 2: ireg1(17) = 2: ireg1(18) = 2: ireg1(19) = 2: ireg1(20) = 3: ireg1(21) = 3: ireg1(22) = 3
ireg1(23) = 4: ireg1(24) = 4: ireg1(25) = 4: ireg1(26) = 5: ireg1(27) = 8: ireg1(28) = 8: ireg1(29) = 21: ireg1(30) = 23
ireg1(31) = 29: ireg1(32) = 30: ireg1(33) = 31: ireg1(34) = 32
'
jreg1(1) = -2: jreg1(2) = -1: jreg1(3) = 0: jreg1(4) = 1: jreg1(5) = 2: jreg1(6) = 3: jreg1(7) = 4: jreg1(8) = 5
jreg1(9) = -9: jreg1(10) = -7: jreg1(11) = -1: jreg1(12) = 0: jreg1(13) = 1: jreg1(14) = 3: jreg1(15) = -3: jreg1(16) = 0
jreg1(17) = 1: jreg1(18) = 3: jreg1(19) = 17: jreg1(20) = -4: jreg1(21) = 0: jreg1(22) = 6: jreg1(23) = -5: jreg1(24) = -2
jreg1(25) = 10: jreg1(26) = -8: jreg1(27) = -11: jreg1(28) = -6: jreg1(29) = -29: jreg1(30) = -31: jreg1(31) = -38: jreg1(32) = -39
jreg1(33) = -40: jreg1(34) = -41
'
nreg1(1) = 0.14632971213167: nreg1(2) = -0.84548187169114: nreg1(3) = -3.756360367204: nreg1(4) = 3.3855169168385
nreg1(5) = -0.95791963387872: nreg1(6) = 0.15772038513228: nreg1(7) = -0.016616417199501: nreg1(8) = 8.1214629983568E-04
nreg1(9) = 2.8319080123804E-04: nreg1(10) = -6.0706301565874E-04: nreg1(11) = -0.018990068218419: nreg1(12) = -0.032529748770505
nreg1(13) = -0.021841717175414: nreg1(14) = -5.283835796993E-05: nreg1(15) = -4.7184321073267E-04: nreg1(16) = -3.0001780793026E-04
nreg1(17) = 4.7661393906987E-05: nreg1(18) = -4.4141845330846E-06: nreg1(19) = -7.2694996297594E-16: nreg1(20) = -3.1679644845054E-05
nreg1(21) = -2.8270797985312E-06: nreg1(22) = -8.5205128120103E-10: nreg1(23) = -2.2425281908E-06: nreg1(24) = -6.5171222895601E-07
nreg1(25) = -1.4341729937924E-13: nreg1(26) = -4.0516996860117E-07: nreg1(27) = -1.2734301741641E-09: nreg1(28) = -1.7424871230634E-10
nreg1(29) = -6.8762131295531E-19: nreg1(30) = 1.4478307828521E-20: nreg1(31) = 2.6335781662795E-23: nreg1(32) = -1.1947622640071E-23
nreg1(33) = 1.8228094581404E-24: nreg1(34) = -9.3537087292458E-26
'******************************************************************
'MW of ions. Do not include neutral compounds
    MWCat(iH) = 1.008: MWCat(iNa) = 22.99: MWCat(iK) = 39.102: MWCat(iMg) = 24.305: MWCat(iCa) = 40.08 'MW (g) of cations and anions
    MWCat(iSr) = 87.62: MWCat(iBa) = 137.33: MWCat(iFe) = 55.847: MWCat(iZn) = 65.38: MWCat(iPb) = 207.2: MWCat(iNH4) = 18.039: MWCat(iRa) = 226.0254
    MWAn(iOH) = 17.007: MWAn(iCl) = 35.45: MWAn(iAc) = 59.054: MWAn(iHCO3) = 61.019: MWAn(iCO3) = 60.019: MWAn(iSO4) = 96.064
    MWAn(iHS) = 33.073: MWAn(intF) = 18.998: MWAn(iBr) = 79.904: MWAn(iH2BO3) = 60.825: MWAn(iH2SiO4) = 58.06: MWAn(iH3SiO4) = 59.07
    MWAn(iSion) = 32.065
    MWNeut(iCH4aq) = 16: MWNeut(iCO2aq) = 62.03: MWNeut(iH2Saq) = 34.08: MWNeut(iHAcaq) = 60.054: MWNeut(iH4SiO4aq) = 60.08: MWNeut(iFeSaq) = 87.912
    MWNeut(iH3BO3) = 61.833: MWNeut(iNH3) = 17.031
'Partial molar volumes of ionx (cm3/mol) from Millero, Chem. Rev. 71:147
    V0_c(iH) = 0: V0_c(iNa) = -1.21: V0_c(iK) = 9.02: V0_c(iMg) = -21.17: V0_c(iCa) = -17.85: V0_c(iNH4) = 17.87
    V0_c(iSr) = -18.16: V0_c(iBa) = -12.47: V0_c(iFe) = -24.7: V0_c(iZn) = -21.6: V0_c(iPb) = -15.5: V0_c(iRa) = -12.47 ' Set to iBa
    V0_a(iOH) = -4.04: V0_a(iCl) = 17.83: V0_a(iAc) = 40.46: V0_a(iHCO3) = 23.4: V0_a(iCO3) = -4.3: V0_a(iSO4) = 13.98
    V0_a(iSO4) = 35.67:    ' Use Partial molar volumes for HSO4
    V0_a(iHS) = 20.71: V0_a(intF) = -1.16: V0_a(iBr) = 24.71: V0_a(iH2BO3) = 21.84  ' This PM is for BO4H4
    V0_a(iSion) = -8.2
    V0_n(iHAcaq) = 51.94:         'E. J. King J Phys Chem. 73 (5):1220 (1969)
    V0_n(iCO2aq) = 50.78: V0_n(iH2Saq) = 35.71:    ' Calculated from Mollero Physical chemistry of natural water page 376
    V0_n(iCH4aq) = 0: V0_n(iH4SiO4aq) = 0     ' These values are set to zero for now
    V0_n(iNH3) = 19.74: V0_n(iH3BO3) = 31.6
    V0_n(iFeSaq) = 35.71 ' Assume to equal to H2Saq, In Rickard's Chemical Review, page 532, the reported volume for Fe150S150 is around 10 nm^3. And Fe2S2 is 0.125 nm^3.
'bDot species
iZnDot = 1: iPbDot = 2: iHSDot = 3: iClDot = 4: iZnCl = 5: iZnCl2 = 6: iZnCl3 = 7: iZnCl4 = 8
iZnHS2 = 9: iZnHS3 = 10: iPbCl = 11: iPbCl2 = 12: iPbCl3 = 13: iPbCl4 = 14: iPbHS2 = 15: iPbHS3 = 16

''The following are lists of coefficients from He's work for barite and calcite inhibition for eight different inhibitors each.
''The 19th entry is for the "average" inhibitor concept.  It can be choosen for tests, but is not used in determining a "most effective inhibitor."
'For i = 1 To 11
'bi(i, 2) = -1.4107: bi(i, 3) = 1329.291: bi(i, 4) = 0.153: bi(i, 5) = 0.17735
'Next i
'For i = 12 To 14
'bi(i, 2) = -1.279: bi(i, 3) = 1007.3: bi(i, 4) = 0.0256: bi(i, 5) = 0.1345
'Next i
'For i = 16 To 18
'bi(i, 2) = -1.72: bi(i, 3) = 1229.65: bi(i, 4) = -0.00845: bi(i, 5) = 0.19745
'Next i
'bi(1, 1) = -2.4675   'Chong Dai 2019 NTMP
'bi(2, 1) = -2.185:    'Chong Dai 2019 BHPMP
'bi(3, 1) = -2.1866:   'Chong Dai 2019 DTPMP
'bi(4, 1) = -2.1386:   'Chong Dai 2019 HDTMP
'bi(5, 1) = -1.9535  'Chong Dai 2019 EDTMP
'bi(6, 1) = -2.1904:  'Chong Dai 2019 HEDP
'bi(7, 1) = -3.0161:   'Chong Dai 2019 HEBMP
'bi(8, 1) = -2.7182:  'Chong Dai 2019 PhnAA
'bi(9, 1) = -2.4701:   'Chong Dai 2019 PAPEMP
'bi(10, 1) = -2.5837: 'Chong Dai 2019 PBTC
'bi(11, 1) = -2.2394:   'Chong Dai 2019 PE
'bi(12, 1) = -0.6888 'Chong Dai 2019 PPCA
'bi(13, 1) = -0.8005: 'Chong Dai 2019 MAC
'bi(14, 1) = -0.9522:  'Chong Dai 2019 PASP
'bi(15, 1) = -0.0599: bi(15, 2) = -0.936: bi(15, 3) = 510.5: bi(15, 4) = 0.0305: bi(15, 5) = 0.1975  'Chong Dai 2019 CMI
'bi(16, 1) = -0.1865:   'Chong Dai 2019 SPCA
'bi(17, 1) = -0.2765:   'Chong Dai 2019 PVS
'bi(18, 1) = -0.4532: 'Chong Dai 2019 AA/AMPS
''bi(19, 1) = -1.64259: bi(19, 2) = -1.33643: bi(19, 3) = 1019.185: bi(19, 4) = 0.050163: bi(19, 5) = 0.1767  'Chong Dai 2019 Average, this line give strange results to average inh
'bi(19, 1) = -2.3772: bi(i, 2) = -1.4107: bi(i, 3) = 1329.291: bi(i, 4) = 0.153: bi(i, 5) = 0.17735  'Chong Dai 2019, Use the average for P containing inh;

'Dai 2020 update the coefficients based on new SI calcualted with SSP 2020
For i = 1 To 11
bi(i, 2) = -1.09852: bi(i, 3) = 947.26074: bi(i, 4) = 0.11604: bi(i, 5) = 0.10637
Next i
For i = 12 To 14
bi(i, 2) = -1.09052: bi(i, 3) = 1128.54873: bi(i, 4) = 0.16117: bi(i, 5) = 0.1664
Next i
bi(15, 2) = -0.88889: bi(15, 3) = 1060.77063: bi(15, 4) = 0.0058: bi(15, 5) = 0.14347
For i = 16 To 18
bi(i, 2) = -1.91121: bi(i, 3) = 2112.54073: bi(i, 4) = -0.03065: bi(i, 5) = 0.1278
Next i
bi(1, 1) = -1.54021   'Joey 2020 NTMP
bi(2, 1) = -1.34794    'Joey 2020 BHPMP
bi(3, 1) = -1.3758    'Joey 2020 DTPMP
bi(4, 1) = -1.34399   'Joey 2020 HDTMP
bi(5, 1) = -1.12207  'Joey 2020 EDTMP
bi(6, 1) = -1.34495  'Joey 2020 HEDP
bi(7, 1) = -2.1112    'Joey 2020 HEBMP
bi(8, 1) = -1.85606  'Joey 2020 PhnAA
bi(9, 1) = -1.63406   'Joey 2020 PAPEMP
bi(10, 1) = -1.64298 'Joey 2020 PBTC
bi(11, 1) = -1.31222   'Joey 2020 PE
bi(12, 1) = -2.40229 'Joey 2020 PPCA
bi(13, 1) = -2.60203 'Joey 2020 MAC
bi(14, 1) = -2.51562  'Joey 2020 PASP
bi(15, 1) = -1.69223  'Joey 2020 CMI
bi(16, 1) = -2.46339  'Joey 2020 SPCA
bi(17, 1) = -2.68192   'Joey 2020 PVS
bi(18, 1) = -2.46894 'Joey 2020 AA/AMPS
'bi(19, 1) = -1.64259: bi(19, 2) = -1.33643: bi(19, 3) = 1019.185: bi(19, 4) = 0.050163: bi(19, 5) = 0.1767  'Chong Dai 2019 Average, this line give strange results to average inh
bi(19, 1) = -1.512: bi(19, 2) = -1.09852: bi(19, 3) = 947.26074: bi(19, 4) = 0.11604: bi(19, 5) = 0.10637   'Joey 2020, Use the average for P containing inh;


''bi(1, 1) = -3.952: bi(1, 2) = -1.069: bi(1, 3) = 1242.8: bi(1, 4) = 0.398: bi(1, 5) = 0.184  'data from Amy 2013
''bi(2, 1) = -1.642: bi(2, 2) = -1.24: bi(2, 3) = 1175.2: bi(2, 4) = 0.171: bi(2, 5) = 0.0705   'Amy 2013
''bi(3, 1) = -0.332: bi(3, 2) = -1.456: bi(3, 3) = 1086.7: bi(3, 4) = 0.0681: bi(3, 5) = 0.0176  'Amy 2013 PPCA
''bi(4, 1) = -2.7845: bi(4, 2) = -1.2382: bi(4, 3) = 1471.7483: bi(4, 4) = 0.1686: bi(4, 5) = 0.2153  'Amy 2013 DTPMP
''bi(5, 1) = -0.567: bi(5, 2) = -1.319: bi(5, 3) = 964.7: bi(5, 4) = 0.131: bi(5, 5) = 0.129 'Amy 2013 HDTMP
''Below are Chong Dai modification 11/1/2018
'bi(1, 1) = -2.7584: bi(1, 2) = -1.069: bi(1, 3) = 1242.8: bi(1, 4) = 0.142: bi(1, 5) = 0.184  'Chong Dai 2018  2013
'bi(2, 1) = -2.1847: bi(2, 2) = -1.24: bi(2, 3) = 1175.2: bi(2, 4) = 0.171: bi(2, 5) = 0.0705   'Chong Dai 2018
'bi(3, 1) = -0.8881: bi(3, 2) = -1.456: bi(3, 3) = 1086.7: bi(3, 4) = 0.0681: bi(3, 5) = 0.0176  'Chong Dai 2018  PPCA
'bi(4, 1) = -2.2503: bi(4, 2) = -1.4107: bi(4, 3) = 1329.291: bi(4, 4) = 0.1683: bi(4, 5) = 0.2153  'Chong Dai 2018 DTPMP
'bi(5, 1) = -1.0676: bi(5, 2) = -1.319: bi(5, 3) = 964.7: bi(5, 4) = 0.131: bi(5, 5) = 0.129 'Chong Dai 2018 HDTMP
'bi(6, 1) = -0.815: bi(6, 2) = -1.635: bi(6, 3) = 1295.7: bi(6, 4) = 0.0342: bi(6, 5) = 0.176  'Amy 2013 SPCA
'bi(7, 1) = 0: bi(7, 2) = -1.805: bi(7, 3) = 1163.6: bi(7, 4) = -0.0511: bi(7, 5) = 0.148  'Amy 2013 PVS
'bi(8, 1) = 0: bi(8, 2) = -0.936: bi(8, 3) = 510.5: bi(8, 4) = 0.0305: bi(8, 5) = 0.182  'Amy 2013 CMI
'bi(9, 1) = -0.775: bi(9, 2) = -1.279: bi(9, 3) = 1007.3: bi(9, 4) = 0.0256: bi(9, 5) = 0.183   'Amy 2013 PMAC
'bi(10, 1) = -0.8881: bi(10, 2) = -1.456: bi(10, 3) = 1086.7: bi(10, 4) = 0.0681: bi(10, 5) = 0.0176 'PAA use Chong Dai 2018  PPCA
'bi(11, 1) = -0.815: bi(11, 2) = -1.635: bi(11, 3) = 1295.7: bi(11, 4) = 0.0342: bi(11, 5) = 0.176  'SPA use Chong Dai 2018  SPCA
'bi(12, 1) = -1.6991: bi(12, 2) = -1.05: bi(12, 3) = 640: bi(12, 4) = 0.29: bi(12, 5) = 0.18  'Chong Dai 2018 HEDP
''bi(10, 1) = 0.65: bi(10, 2) = -1.53: bi(10, 3) = 1051: bi(10, 4) = 0: bi(10, 5) = 0.1  'He PAA
''bi(11, 1) = 0.78: bi(11, 2) = -1.76: bi(11, 3) = 1069: bi(11, 4) = 0: bi(11, 5) = 0.07 'He SPA
''bi(12, 1) = -1.4: bi(12, 2) = -1.05: bi(12, 3) = 640: bi(12, 4) = 0.29: bi(12, 5) = 0.18  'He HEDP
''bi(13, 1) = -0.49: bi(13, 2) = -1.44: bi(13, 3) = 1042: bi(13, 4) = 0.13: bi(13, 5) = 0.12  'He average (No 9)
'bi(13, 1) = -1.244: bi(13, 2) = -1.32: bi(13, 3) = 1041.53: bi(13, 4) = 0.101: bi(13, 5) = 0.149   'Chong average

''Below are Chong Dai modification 11/1/2018, recoded based on new inh no fro SSP2020
'ci(1, 1) = 0.858: ci(1, 2) = -1.827: ci(1, 3) = 1169.733: ci(1, 4) = -0.11: ci(1, 5) = 0.1   'NTMP, Fit He (in paper) and Fangfu data
'ci(2, 1) = 1.3: ci(2, 2) = -1.175: ci(2, 3) = 1117.655: ci(2, 4) = -0.345: ci(2, 5) = 0.341     'BHPMP, fit He(BCC notes) and Fangfu data
'ci(3, 1) = 2.666: ci(3, 2) = -0.518: ci(3, 3) = 807.085: ci(3, 4) = -0.57: ci(3, 5) = 0.571   'DTPMP, He and fangfu data
'ci(4, 1) = 1.421: ci(4, 2) = -1.175: ci(4, 3) = 1117.655: ci(4, 4) = -0.345: ci(4, 5) = 0.341   'HDTMP, use b,c,d,e parametr from BHPMP, fit He's data for a
'ci(5, 1) = 2.666: ci(5, 2) = -0.518: ci(5, 3) = 807.085: ci(5, 4) = -0.57: ci(5, 5) = 0.571   'EDTMP, borrowed DTPMP data, He and fangfu data
'ci(6, 1) = 1.289: ci(6, 2) = -1.805: ci(6, 3) = 1479.501: ci(6, 4) = -0.271: ci(6, 5) = 0.108  'HEDP fit He and Fangfu data
'ci(7, 1) = 1.289: ci(7, 2) = -1.805: ci(7, 3) = 1479.501: ci(7, 4) = -0.271: ci(7, 5) = 0.108  'HEBMP, borrowed HEDP fit He and Fangfu data
'ci(8, 1) = 1.289: ci(8, 2) = -1.805: ci(8, 3) = 1479.501: ci(8, 4) = -0.271: ci(8, 5) = 0.108  'PhnAA, borrowed HEDP fit He and Fangfu data
'ci(9, 1) = 1.289: ci(9, 2) = -1.805: ci(9, 3) = 1479.501: ci(9, 4) = -0.271: ci(9, 5) = 0.108  'PAPEMP, borrowed HEDP fit He and Fangfu data
'ci(10, 1) = 1.289: ci(10, 2) = -1.805: ci(10, 3) = 1479.501: ci(10, 4) = -0.271: ci(10, 5) = 0.108  'PBTC, borrowed HEDP fit He and Fangfu data
'ci(11, 1) = 1.289: ci(11, 2) = -1.805: ci(11, 3) = 1479.501: ci(11, 4) = -0.271: ci(11, 5) = 0.108  'PE, borrowed HEDP fit He and Fangfu data
'ci(12, 1) = -1.835: ci(12, 2) = -1.612: ci(12, 3) = 1539.977: ci(12, 4) = 0.017: ci(12, 5) = 0.082  'PPCA, Fangu, He, and He's PAA data
'ci(13, 1) = -1.242: ci(13, 2) = -1.612: ci(13, 3) = 1356.164: ci(13, 4) = 0.017: ci(13, 5) = 0.082   'MAC use b,d,e from PPCA, fit Fangfu's data for a and c
'ci(14, 1) = 1.731: ci(14, 2) = -1.575: ci(14, 3) = 560.076: ci(14, 4) = -0.144: ci(14, 5) = 0.044   'Polyaspartic acid, borrow CMI data, use b,d,e from average value, fit Fangfu data for a and c
'ci(15, 1) = 1.731: ci(15, 2) = -1.575: ci(15, 3) = 560.076: ci(15, 4) = -0.144: ci(15, 5) = 0.044   'CMI use b,d,e from average value, fit Fangfu data for a and c
'ci(16, 1) = -0.878: ci(16, 2) = -2.511: ci(16, 3) = 981.082: ci(16, 4) = 0.414: ci(16, 5) = -0.937 ' SPCA Fangfu SPCA data and He's SPA data
'ci(17, 1) = -1.148: ci(17, 2) = -2.511: ci(17, 3) = 853.144: ci(17, 4) = 0.414: ci(17, 5) = -0.937  'PVS use b,d,e from SPCA, fit Fangfu's data for a and c
'ci(18, 1) = -0.878: ci(18, 2) = -2.511: ci(18, 3) = 981.082: ci(18, 4) = 0.414: ci(18, 5) = -0.937 ' AA/AMPS, borrowed SPCA, Fangfu SPCA data and He's SPA data
'ci(19, 1) = 0.27: ci(19, 2) = -1.638: ci(19, 3) = 1158: ci(19, 4) = -0.087: ci(19, 5) = -0.028 'Chong average

'Below are Chong & Joey modification 12/2/2020, using the same pH and logR dependence from SSP2017
ci(1, 1) = -0.8592: ci(1, 2) = -1.871:  ci(1, 3) = 702.5264: ci(1, 4) = 0.32: ci(1, 5) = 0.13:  'NTMP, Fix Ci (1,4), Ci(1,5) from He old parameter, fit others with He and Fangfu data,
ci(2, 1) = -0.7779: ci(2, 2) = -1.255:  ci(2, 3) = 645.7227: ci(2, 4) = 0.16: ci(2, 5) = 0.27:  'BHPMP, Fix Ci (1,4), Ci(1,5) from He old parameter, fit others with He and Fangfu data,
ci(3, 1) = -0.9406: ci(3, 2) = -0.943:  ci(3, 3) = 319.4692: ci(3, 4) = 0.26: ci(3, 5) = 0.29:  'DTPMP, Fix Ci (1,4), Ci(1,5) from He DTPMP old parameter, fit others with only  Fangfu and Chong,
ci(4, 1) = -5.2447: ci(4, 2) = -0.8143: ci(4, 3) = 1775.0323:   ci(4, 4) = 0.22: ci(4, 5) = 0.27:   'HDTMP, Fix Ci (1,4), Ci(1,5) from He old parameter, fit others with only  He data,
ci(6, 1) = -1.1879: ci(6, 2) = -1.9919: ci(6, 3) = 956.1444: ci(6, 4) = 0.32: ci(6, 5) = 0.14:  'HEDP, Fix Ci (1,4), Ci(1,5) from He old parameter, fit others with He and Fangfu data,
ci(12, 1) = -1.9439: ci(12, 2) = -1.4624: ci(12, 3) = 1299.3775: ci(12, 4) = 0.07:  ci(12, 5) = 0.27:       'PPCA/PPPC/PAA, Fix Ci (1,4), Ci(1,5) from He old parameter, fit others with He and Fangfu data,
ci(13, 1) = -2.4594: ci(13, 2) = -1.5937: ci(13, 3) = 1651.1601: ci(13, 4) = 0.06:  ci(13, 5) = 0.33:       'PMAC, Fix Ci (1,4), Ci(1,5) from He PPCA old parameter, fit others with only  Fangfu data,
ci(15, 1) = -0.2386: ci(15, 2) = -1.87: ci(15, 3) = 980.1616:   ci(15, 4) = 0.02:   ci(15, 5) = 0.2:    'CMI, Fix Ci (1,4), Ci(1,5) from He SPA old parameter, fit others with only  Fangfu data,
ci(16, 1) = -0.3512: ci(16, 2) = -1.8329: ci(16, 3) = 1027.0341: ci(16, 4) = 0.02:  ci(16, 5) = 0.2:    'SPCA/SPA, Fix Ci (1,4), Ci(1,5) from He old parameter, fit others with He and Fangfu data,
ci(17, 1) = -0.0514: ci(17, 2) = -1.1846: ci(17, 3) = 479.2197: ci(17, 4) = 0.02:   ci(17, 5) = 0.2:    'PVS, Fix Ci (1,4), Ci(1,5) from He SPA old parameter, fit others with only  Fangfu data,

ci(11, 1) = -0.9734: ci(11, 2) = -1.871:  ci(11, 3) = 702.5264: ci(11, 4) = 0.32: ci(11, 5) = 0.13:  'PE, borrowed from NTMP, c1 adjusted to acount for molecular changes

'Gypsum and anhydrite HDTMP, update inhibitor no for SSP2020
'gi(8, 1) = -1.757: gi(8, 2) = 0: gi(8, 3) = 265.65: gi(8, 4) = 0.1: gi(8, 5) = 0.285
ai(4, 1) = -1.981: ai(4, 2) = -1.552: ai(4, 3) = 968.6: ai(4, 4) = 0.102: ai(4, 5) = 0.137 'Change index to 5
gi(4, 1) = -1.4815: gi(4, 2) = 0: gi(4, 3) = 241.8075: gi(4, 4) = 0.0908: gi(4, 5) = 0.1843
'Thermostabilty parameter measured by Wei Wang, update inhibitor no for SSP2020, Note these parameters were not used in any calculations
EaRInh(1) = 8064.9: LnAInh(1) = 6.761 'NTMP, borrowed from DTPMP
EaRInh(2) = 5524.5: LnAInh(2) = 0.01131 'BHPMP
EaRInh(3) = 8064.9: LnAInh(3) = 6.761 'DTPMP
EaRInh(4) = 5524.5: LnAInh(4) = 0.01131 'HDTMP, borrowed from BHPMP
EaRInh(6) = 4872.3: LnAInh(6) = -1.469 'HEDP, borrowed from SPCA
EaRInh(12) = 9936.7:  LnAInh(12) = 8.327 'PPCA
EaRInh(13) = 12120: LnAInh(13) = 14.51 'MAC
EaRInh(15) = 8064.9: LnAInh(15) = 6.761 'CMI, borrowed from DTPMP
EaRInh(16) = 4872.3: LnAInh(16) = -1.469 'SPCA
EaRInh(17) = 2822.5: LnAInh(17) = -8.586 'PVS
EaRInh(19) = 8064.9: LnAInh(19) = 6.761 'Average, Borrowed from DTPMP
End Sub
'********************************************************************************************
'B.  This subroutine is called by each of the above calculation-initiation subroutines, A1-A8.
Sub B2_ReadinAllData()
    OutPutActCoefs = Worksheets("Input").Range("O11").Value 'If value = 0, then do not, if value = 1, then output act. coef. values.
    'Assume that inputs are in mg/l units.
    If Read_InputII = 1 Then 'First nob is set to be the number of cases on the Input sheet.
    nob = nob_Input
    End If
    'Worksheets("Input").Activate
    
    'If Run1000Cases = 1 Then Worksheets("Input_1000_Cases").Activate    'Amy 1000Cases
    If Run1000Cases = 1 Then nob = nob_Input
ReDim Preserve NaMix(nob_Input + nob_InputII), MgMix(nob_Input + nob_InputII), CaMix(nob_Input + nob_InputII), SrMix(nob_Input + nob_InputII), BaMix(nob_Input + nob_InputII), FeMix(nob_Input + nob_InputII), ZnMix(nob_Input + nob_InputII), ClMix(nob_Input + nob_InputII), PbMix(nob_Input + nob_InputII), BrMix(nob_Input + nob_InputII), RaMix(nob_Input + nob_InputII)
ReDim Preserve NH3Mix(nob_Input + nob_InputII), H3SiO4Mix(nob_Input + nob_InputII), H2SiO4Mix(nob_Input + nob_InputII), H4SiO4Mix(nob_Input + nob_InputII), H3BO3Mix(nob_Input + nob_InputII), CO2aqMix(nob_Input + nob_InputII), H2SaqMix(nob_Input + nob_InputII), HACaqMix(nob_Input + nob_InputII)
ReDim Preserve UseH2SgasMix(nob_Input + nob_InputII), SO4Mix(nob_Input + nob_InputII), FMix(nob_Input + nob_InputII), TDSMix(nob_Input + nob_InputII), AlkMix(nob_Input + nob_InputII), TAcMix(nob_Input + nob_InputII), KMix(nob_Input + nob_InputII), MixFrac(nob_Input + nob_InputII)
ReDim Preserve rho_Mix(nob_Input + nob_InputII), TH2SaqMix(nob_Input + nob_InputII), pHMeterStpMix(nob_Input + nob_InputII), TH4SiO4Mix(nob_Input + nob_InputII), TNH4Mix(nob_Input + nob_InputII), TH3BO3Mix(nob_Input + nob_InputII)
ReDim Preserve SampleIDMix(nob_Input + nob_InputII), SampleDateMix(nob_Input + nob_InputII), OperatorMix(nob_Input + nob_InputII), WellNameMix(nob_Input + nob_InputII), FieldMix(nob_Input + nob_InputII), StateMix(nob_Input + nob_InputII) As String
ReDim Preserve VgTPMix(nob_Input + nob_InputII), VoMix(nob_Input + nob_InputII), VwMix(nob_Input + nob_InputII), VMeOHMix(nob_Input + nob_InputII), VMEGMix(nob_Input + nob_InputII), oilAPIgravMix(nob_Input + nob_InputII), gasSpGravMix(nob_Input + nob_InputII), MixFracGas(nob_Input + nob_InputII)
ReDim Preserve nTCO2Mix(nob_Input + nob_InputII), nTCH4Mix(nob_Input + nob_InputII), nTH2SMix(nob_Input + nob_InputII), mass_w_Mix(nob_Input + nob_InputII), mass_o_Mix(nob_Input + nob_InputII), MixFracOil(nob_Input + nob_InputII)
ReDim Preserve mass_MeOH_mix(nob_Input + nob_InputII), mass_MEG_mix(nob_Input + nob_InputII), Qheat(nob_Input + nob_InputII), yCO2Mix(nob_Input + nob_InputII), yH2SMix(nob_Input + nob_InputII), yCH4Mix(nob_Input + nob_InputII)
ReDim Preserve YCH4stpmix(nob_Input + nob_InputII), RatioOilBPointsmix(nob_Input + nob_InputII), CalculatedTDSMix(nob_Input + nob_InputII), rho25CMix(nob_Input + nob_InputII)
ReDim Preserve HstpMix(nob_Input + nob_InputII), OHstpMix(nob_Input + nob_InputII), HCO3stpMix(nob_Input + nob_InputII), CO3stpMix(nob_Input + nob_InputII), ACstpMix(nob_Input + nob_InputII), HSstpMix(nob_Input + nob_InputII), NH4STPMix(nob_Input + nob_InputII), H2BO3stpMix(nob_Input + nob_InputII)
ReDim Preserve HCO3AlkMix(nob_Input + nob_InputII), CO3AlkMix(nob_Input + nob_InputII), HAlkMix(nob_Input + nob_InputII), OHAlkMix(nob_Input + nob_InputII)
ReDim Preserve ConcFactor(nob_Input + nob_InputII)
ReDim Preserve TCO2Mix(nob_Input + nob_InputII), TofpH(nob_Input + nob_InputII), PofpH(nob_Input + nob_InputII), TofVol(nob_Input + nob_InputII), PofVol(nob_Input + nob_InputII)
ReDim Preserve OilDensityMix(nob_Input + nob_InputII), GasDensityMix(nob_Input + nob_InputII), WaterDensityMix(nob_Input + nob_InputII)
ReDim Preserve UseTPpHMix(nob_Input + nob_InputII), UseTPVolMix(nob_Input + nob_InputII), useEOSmix(nob_Input + nob_InputII)
ReDim Preserve molc(NumCat, nob_Input + nob_InputII), mola(NumAn, nob_Input + nob_InputII), moln(NumNeut, nob_Input + nob_InputII) ' Convert all ions to moles
ReDim Preserve molAlk(nob_Input + nob_InputII), molTAC(nob_Input + nob_InputII), molTNH4(nob_Input + nob_InputII), molTH3BO3(nob_Input + nob_InputII), molTH2Saq(nob_Input + nob_InputII), molTH4SiO4(nob_Input + nob_InputII)
ReDim Preserve mol_g_origMix(nob_Input + nob_InputII), mol_o_OrigMix(nob_Input + nob_InputII), mol_w_OrigMix(nob_Input + nob_InputII), mol_g_finalMix(nob_Input + nob_InputII), mol_o_finalMix(nob_Input + nob_InputII), mol_w_finalMix(nob_Input + nob_InputII), mol_w_evapMix(nob_Input + nob_InputII)
ReDim Preserve Total_molesMix(nob_Input + nob_InputII), SumofZMix(nob_Input + nob_InputII), nTCO2MixEOS(nob_Input + nob_InputII), nTH2SMixEOS(nob_Input + nob_InputII)
'Dai 2020 fix subscript out of range problem
ReDim zMix(nob_Input + nob_InputII, 15)
'ReDim Preserve CaseCount(nob_Input + nob_InputII), CaseCount_II(nob_Input + nob_InputII)
ReDim Preserve usepHmix(nob_Input + nob_InputII)
ReDim eosProps(nComponents, 1 To 6), kij(nComponents, nComponents)
ReDim density(3), compositions(15, 4), phi(15, 3), Compr(3), beta(3), zOutput(15)

mySheet = "Input"
If Run1000Cases = 1 Then mySheet = "Input_1000_Cases"
MySheetMix = "Input" 'For output of mixed stream composition, pH etc to Column H oon Input sheet
    
    For iRead = 1 To nob  'For any number of mixing on Input sheet "nob=number of brines selected"; same for three "what ifs at bottom of each page".  For mixing page "nob = 2", the first two column of data.
    If Run1000Cases = 1 Then CaseCount(iRead) = LoopTP1000Cases 'Amy 1000Cases
       j = CaseCount(iRead)
       kk = iRead
    Call ReadInputPartA(kk)
    Next iRead

    For iRead = 1 To nob  'For any number of mixing on Input sheet "nob=number of brines selected"; same for three "what ifs at bottom of each page".  For mixing page "nob = 2", the first two column of data.
       j = CaseCount(iRead)
       kk = iRead
       Call ReadInputPartB(kk)
    Next iRead

 For iRead = 1 To nob
    j = CaseCount(iRead)
    kk = iRead
    Call ReadInputPartC(kk)
    If RunStat = 0 Then
    If RunH2SGUI <> 1 Then
    If Run_CalcConcFactor = 1 Then
        Worksheets(MySheetMix).Cells(30, 8).Value = rho25c  'Thermodynamic density.
    Else
        Worksheets(mySheet).Cells(30, j + 2).Value = rho25c  'Thermodynamic density.
    End If
    End If
    End If
Next iRead

For iRead = 1 To nob
       j = CaseCount(iRead)
       kk = iRead
       Call ReadInputPartD(kk, j)
Next iRead

    If nob > 0 Then
    If (nob_Input + nob_InputII) > 1 And RunQualityControlChecks = 0 Then j = 6 'For mixed brines use the values in H35 (Calculated) and H36-38 entered.
    TBH = Worksheets(mySheet).Cells(39, j + 2)
        If RunMultiMix = 1 Then TBH = Worksheets("MultiMix").Cells(2 + LoopResChem, 3).Value
        If RunWhatIf = 1 Then TBH = TWIInit
        If UseSI = 1 Then TBH = TBH * 9 / 5 + 32  ' note that TBH, TWH, PBH, PWH is defaulted to F, and psia
        
        If TBH < 24.8 And Run1000Cases <> 1 Then MsgBox ("Initial temperature is below 24.8F or -4C. Initial temperature will be set to 77 F or 25 C.")
        If TBH < 24.8 Then
            If UseSI = 1 Then
            Worksheets(mySheet).Cells(39, j + 2) = 25
            Else
            Worksheets(mySheet).Cells(39, j + 2) = 77
            End If
        End If
        If TBH < 24.8 Then TBH = 77
        If TBH > 482 And Run1000Cases <> 1 Then MsgBox ("Initial temperature is above 482 F. Initail temperature will be set to 482 F or 250 C.")
        If TBH > 482 Then
            If UseSI = 1 Then
            Worksheets(mySheet).Cells(39, j + 2) = 250
            Else
            Worksheets(mySheet).Cells(39, j + 2) = 482
            End If
        End If
        If TBH > 482 Then TBH = 482

      TWH = Worksheets(mySheet).Cells(40, j + 2)
        If RunMultiMix = 1 Then TWH = Worksheets("MultiMix").Cells(2 + LoopResChem, 3).Value
         If RunWhatIf = 1 Then TWH = TWIInit
        If UseSI = 1 Then TWH = TWH * 9 / 5 + 32 ' note that TBH, TWH, PBH, PWH is defaulted to F, and psia
        If TWH < 24.8 And Run1000Cases <> 1 Then MsgBox ("Final temperature is below 24.8F or -4C. Final temperature will be set to 77 F or 25 C.")
        If TWH < 24.8 Then
            If UseSI = 1 Then
            Worksheets(mySheet).Cells(40, j + 2) = 25
            Else
            Worksheets(mySheet).Cells(40, j + 2) = 77
            End If
        End If
        If TWH < 24.8 Then TWH = 77
        If TWH > 482 And Run1000Cases <> 1 Then MsgBox ("Final temperature is above 482 F. Final temperature will be set to 482 F or 250 C.")
        If TWH > 482 Then
            If UseSI = 1 Then
            Worksheets(mySheet).Cells(40, j + 2) = 250
            Else
            Worksheets(mySheet).Cells(40, j + 2) = 482
            End If
        End If
        If TWH > 482 Then TWH = 482

    PBH = Worksheets(mySheet).Cells(41, j + 2)
        If RunMultiMix = 1 Then PBH = Worksheets("MultiMix").Cells(2 + LoopResChem, 4).Value
        If RunWhatIf = 1 Then PBH = PWIInit
        If UseSI = 1 Then PBH = PBH * 14.503774 ' note that TBH, TWH, PBH, PWH is defaulted to F, and psia
        If PBH < 12 And Run1000Cases <> 1 Then MsgBox ("Initial pressure is below 12 psia or 0.827 bar. Initial pressure will be set to 14.7 psi or 1.01325 bar.")
        If PBH < 12 Then
            If UseSI = 1 Then
            Worksheets(mySheet).Cells(41, j + 2) = 1.01325
            Else
            Worksheets(mySheet).Cells(41, j + 2) = 14.7
            End If
        End If
        If PBH < 12 Then PBH = 14.7 'If P is zero, probably it is guage and therefore add 1 atm
        If PBH > 30000 And Run1000Cases <> 1 Then MsgBox ("Initial pressure is above 30,000 psi. Initial pressure will be set to 30,000 psia or 2,068.4 bar.")
        If PBH > 30000 Then
            If UseSI = 1 Then
            Worksheets(mySheet).Cells(41, j + 2) = 30000 / 14.503774
            Else
            Worksheets(mySheet).Cells(41, j + 2) = 30000
            End If
        End If
        If PBH > 30000 Then PBH = 30000

    PWH = Worksheets(mySheet).Cells(42, j + 2)
        If RunMultiMix = 1 Then PWH = Worksheets("MultiMix").Cells(2 + LoopResChem, 4).Value
        If RunWhatIf = 1 Then PWH = PWIInit
        If UseSI = 1 Then PWH = PWH * 14.503774
        If PWH < 12 And Run1000Cases <> 1 Then MsgBox ("Final pressure is below 12 psia or 0.827 bar. Final pressure will be set to 14.7 psia or 1.01325 bar.") 'Alow a tolerence of +/- 0.1 psia
        If PWH < 12 Then
            If UseSI = 1 Then
            Worksheets(mySheet).Cells(42, j + 2) = 1.01325
            Else
            Worksheets(mySheet).Cells(42, j + 2) = 14.7
            End If
        End If
        If PWH < 12 Then PWH = 14.7 'If P is zero, probably it is guage and therefore add 1 atm
        If PWH > 30000 And Run1000Cases <> 1 Then MsgBox ("Final pressure is above 30,000 psi. Final pressure will be set to 30000 psia or 2068.4 bar.")
        If PWH > 30000 Then
        If UseSI = 1 Then
        Worksheets(mySheet).Cells(42, j + 2) = 30000 / 14.503774
        Else
        Worksheets(mySheet).Cells(42, j + 2) = 30000
        End If
        End If
        If PWH > 30000 Then PWH = 30000
    End If

    tInh = Worksheets("Input").Range("O2").Value * 60               'Convert tInh to seconds
        If tInh = 0 Then tInh = 1                                                    'Avoid singularity
    SelectInh = Worksheets("Input").Range("O4").Value              '1/0 Have program select inhibitor
        InhNo = Worksheets("Input").Range("O5").Value
        InhNo1 = Worksheets("input").Range("o7").Value
        FracInhNo1 = Worksheets("Input").Range("o8").Value / 100
        InhNo2 = Worksheets("Input").Range("o9").Value
        
    For i = 1 To 10
    InhName(i) = Worksheets("Input").Cells(1 + i, 18)
    Next i

    For i = 11 To 20
    InhName(i) = Worksheets("Input").Cells(1 + i - 10, 20)
    Next i
    MaxInh = Worksheets("Input").Range("o10").Value
    NoRiskcalc = 3             'No of Risk calculation, currently set at 0, .5 MaxInh, and Max Inh concentrations. Can increase as needed
    For i = 1 To (NoRiskcalc - 1)
    ConcInhBarRisk(i) = MaxInh / (NoRiskcalc - 1) * i
    ConcInhCalRisk(i) = MaxInh / (NoRiskcalc - 1) * i
    ConcInhAnRisk(i) = MaxInh / (NoRiskcalc - 1) * i
    ConcInhGypRisk(i) = MaxInh / (NoRiskcalc - 1) * i
    'Dai 2020 update inhibition model
    ConcInhCelRisk(i) = MaxInh / (NoRiskcalc - 1) * i
    Next i

'If UseSR = 1 Then
'    Critical_SR_Calcite = Worksheets("Use Mass Transfer").Range("E3").Value
'    Critical_SR_Barite = Worksheets("Use Mass Transfer").Range("H3").Value
'    Critical_SR_FeCO3 = Worksheets("Use Mass Transfer").Range("K3").Value
'    Critical_SR_FeS = Worksheets("Use Mass Transfer").Range("N3").Value
'Else
'    Critical_SR_Calcite = 10 ^ Worksheets("Use Mass Transfer").Range("E3").Value
'    Critical_SR_Barite = 10 ^ Worksheets("Use Mass Transfer").Range("H3").Value
'    Critical_SR_FeCO3 = 10 ^ Worksheets("Use Mass Transfer").Range("K3").Value
'    Critical_SR_FeS = 10 ^ Worksheets("Use Mass Transfer").Range("N3").Value
'End If
'    MassTransferCoef_Calcite = Worksheets("Use Mass Transfer").Range("E4").Value
'    MassTransferCoef_barite = Worksheets("Use Mass Transfer").Range("H4").Value
'    MassTransferCoef_FeCO3 = Worksheets("Use Mass Transfer").Range("K4").Value
'    MassTransferCoef_FeS = Worksheets("Use Mass Transfer").Range("N4").Value
If Read_InputII = 1 Then
    Call B2_ReadinAllData_InputII
 End If
nob = nob_Input + nob_InputII 'change nob back to total number of cases

End Sub
Sub B2_ReadinAllData_InputII()
    OutPutActCoefs = Worksheets("Input").Range("O11").Value   'If value = 0, then do not, if value = 1, then output act. coef. values.
    'Assume that inputs are in mg/l units.
    nob = nob_InputII
    
    'Worksheets("Input II").Activate
    mySheet = "Input II"
    For i = 1 To nob  'For any number of mixing on Input sheet "nob=number of brines selected"; same for three "what ifs at bottom of each page".  For mixing page "nob = 2", the first two column of data.
       j = CaseCount_II(i)
       kk = i + nob_Input
       Call ReadInputPartA(kk)
       Next i
    For i = 1 To nob  'For any number of mixing on Input sheet "nob=number of brines selected"; same for three "what ifs at bottom of each page".  For mixing page "nob = 2", the first two column of data.
       j = CaseCount_II(i)
       kk = i + nob_Input
       Call ReadInputPartB(kk)
       Next i
For i = 1 To nob
    kk = i + nob_Input
    j = CaseCount_II(i)
    Call ReadInputPartC(kk)
    If RunStat = 0 Then
    If Run_CalcConcFactor = 1 Then
        Worksheets(MySheetMix).Cells(30, 8).Value = rho25c  'Thermodynamic density.
    Else
        Worksheets(mySheet).Cells(30, j + 2).Value = rho25c  'Thermodynamic density.
    End If
    End If
    Next i
For i = 1 To nob
       j = CaseCount_II(i)
       kk = i + nob_Input
       Call ReadInputPartD(kk, j)
       Next i
       
124    If nob > 0 Then
    TBH = Worksheets(mySheet).Cells(39, j + 2)
    If (nob_Input + nob_InputII) > 1 Then TBH = Worksheets(MySheetMix).Cells(39, 8)
        If RunMultiMix = 1 Then TBH = Worksheets("MultiMix").Cells(2 + LoopResChem, 3).Value
        If UseSI = 1 Then TBH = TBH * 9 / 5 + 32
        If TBH < 24.8 Then MsgBox ("Initial temperature is below 24.8F or -4C. Initial temperature will be set to 24.8F or -4C.")
        If TBH < 24.8 Then
        If UseSI = 1 Then
            If (nob_Input + nob_InputII) = 1 Then
            Worksheets(mySheet).Cells(39, j + 2) = -4
            Else
            Worksheets(MySheetMix).Cells(39, 8) = -4
            End If
            Else
            If (nob_Input + nob_InputII) = 1 Then
            Worksheets(mySheet).Cells(39, j + 2) = 24.8
            Else
            Worksheets(MySheetMix).Cells(39, 8) = 24.8
            End If
        End If
        End If
        If TBH < 24.8 Then TBH = 24.8
        If TBH > 482 Then MsgBox ("Initial temperature is above 482 F. Initail temperature will be set to 482 F or 250 C.")
        If TBH > 482 Then
        If UseSI = 1 Then
            If (nob_Input + nob_InputII) = 1 Then
            Worksheets(mySheet).Cells(39, j + 2) = 250
            Else
            Worksheets(MySheetMix).Cells(39, 8) = 250
            End If
            Else
            If (nob_Input + nob_InputII) = 1 Then
            Worksheets(mySheet).Cells(39, j + 2) = 482
            Else
            Worksheets(MySheetMix).Cells(39, 8) = 482
            End If
        End If
        End If
        If TBH > 482 Then TBH = 482
    TWH = Worksheets(mySheet).Cells(40, j + 2)
    If (nob_Input + nob_InputII) > 1 Then TWH = Worksheets(MySheetMix).Cells(40, 8)
        If RunMultiMix = 1 Then TWH = Worksheets("MultiMix").Cells(2 + LoopResChem, 3).Value
        If UseSI = 1 Then TWH = TWH * 9 / 5 + 32
        If TWH < 24.8 Then MsgBox ("Final temperature is below 24.8F or -4C. Final temperature will be set to 24.8 F or -4 C.")
        If TWH < 24.8 Then
            If UseSI = 1 Then
            If (nob_Input + nob_InputII) = 1 Then
            Worksheets(mySheet).Cells(40, j + 2) = -4
            Else
            Worksheets(MySheetMix).Cells(40, 8) = -4
            End If
            Else
            If (nob_Input + nob_InputII) = 1 Then
            Worksheets(mySheet).Cells(40, j + 2) = 24.8
            Else
            Worksheets(MySheetMix).Cells(40, 8) = 24.8
            End If
            End If
        End If
        If TWH < 24.8 Then TWH = 24.8
        If TWH > 482 Then MsgBox ("Final temperature is above 482 F. Final temperature will be set to 482 F or 250 C.")
        If TWH > 482 Then
            If UseSI = 1 Then
            If (nob_Input + nob_InputII) = 1 Then
            Worksheets(mySheet).Cells(40, j + 2) = 250
            Else
            Worksheets(MySheetMix).Cells(40, 8) = 250
            End If
            Else
            If (nob_Input + nob_InputII) = 1 Then
            Worksheets(mySheet).Cells(40, j + 2) = 482
            Else
            Worksheets(MySheetMix).Cells(40, 8) = 482
            End If
            End If
        End If
        If TWH > 482 Then TWH = 482

    PBH = Worksheets(mySheet).Cells(41, j + 2)
      If (nob_Input + nob_InputII) > 1 Then PBH = Worksheets(MySheetMix).Cells(41, 8)
        If RunMultiMix = 1 Then PBH = Worksheets("MultiMix").Cells(2 + LoopResChem, 4).Value
        If UseSI = 1 Then PBH = PBH * 14.503774
        If PBH < 12 Then MsgBox ("Initial pressure is below 0.827 bar. Initial pressure will be set to 0.827 bar (12 psia)")
        If PBH < 12 Then
            If UseSI = 1 Then
                If (nob_Input + nob_InputII) = 1 Then
                Worksheets(mySheet).Cells(41, j + 2) = 12 / 14.503774
                Else
                Worksheets(MySheetMix).Cells(41, 8) = 12 / 14.503774
                End If
            Else
                If (nob_Input + nob_InputII) = 1 Then
                Worksheets(mySheet).Cells(41, j + 2) = 12
                Else
                Worksheets(MySheetMix).Cells(41, 8) = 12
                End If
            End If
        End If
        If PBH < 12 Then PBH = 12 'If P is zero, probably it is guage and therefore add 1 atm
        If PBH > 30000 Then MsgBox ("Initial pressure is above 30,000 psi. Initial pressure will be set to 30,000 psia or 2,068.4 bar.")
        If PBH > 30000 Then
            If UseSI = 1 Then
                If (nob_Input + nob_InputII) = 1 Then
                Worksheets(mySheet).Cells(41, j + 2) = 30000 / 14.503774
                Else
                Worksheets(MySheetMix).Cells(41, 8) = 30000 / 14.503774
                End If
            Else
                If (nob_Input + nob_InputII) = 1 Then
                Worksheets(mySheet).Cells(41, j + 2) = 30000
                Else
                Worksheets(MySheetMix).Cells(41, 8) = 30000
                End If
            End If
        End If
        If PBH > 30000 Then PBH = 30000

    PWH = Worksheets(mySheet).Cells(42, j + 2)
    If (nob_Input + nob_InputII) > 1 Then PWH = Worksheets(MySheetMix).Cells(42, 8)
        If RunMultiMix = 1 Then PWH = Worksheets("MultiMix").Cells(2 + LoopResChem, 4).Value
        If UseSI = 1 Then PWH = PWH * 14.503774
        If PWH < 12 Then MsgBox ("Final pressure is below 0.827 bar. Final pressure will be set to 0.827 bar (12 psia).") 'Alow a tolerence of +/- 0.1 psia
        If PWH < 12 Then
            If UseSI = 1 Then
            If (nob_Input + nob_InputII) = 1 Then
            Worksheets(mySheet).Cells(42, j + 2) = 12 / 14.503774
            Else
            Worksheets(MySheetMix).Cells(42, 8) = 12 / 14.503774
            End If
            Else
            If (nob_Input + nob_InputII) = 1 Then
            Worksheets(mySheet).Cells(42, j + 2) = 12
             Else
            Worksheets(MySheetMix).Cells(42, 8) = 12
            End If
            End If
        End If
        If PWH < 12 Then PWH = 12 'If P is zero, probably it is guage and therefore add 1 atm
        If PWH > 30000 Or PWH > 30000 Then MsgBox ("Final pressure is above 30,000 psi. Final pressure will be set to 30000 psia or 2068.4 bar.")
        If PWH > 30000 Then
        If UseSI = 1 Then
        If (nob_Input + nob_InputII) = 1 Then
        Worksheets(mySheet).Cells(42, j + 2) = 30000 / 14.503774
        Else
        Worksheets(MySheetMix).Cells(42, 8) = 30000 / 14.503774
        End If
        Else
        If (nob_Input + nob_InputII) = 1 Then
        Worksheets(mySheet).Cells(42, j + 2) = 30000
        Else
        Worksheets(MySheetMix).Cells(42, 8) = 30000
        End If
        End If
        End If
        If PWH > 30000 Then PWH = 30000
  End If
End Sub

'********************************************************************************************
'C.  This subroutine is called by each of the above calculation-initiation subroutines, I, II, and III.
Sub B3_CalcConcs()
xMeOH = 0: xMEG = 0:
'mf_ParametersWereRead = False
Alk = 0: TAc = 0: TH2Saq = 0: TDS = 0: TH4SiO4 = 0: TNH4 = 0: TH3BO3 = 0: TFe = 0
nTCO2 = 0: nTCH4 = 0: nTH2S = 0: mass_w = 0: Mass_o = 0: mass_MeOH = 0: mass_MEG = 0
API = 0: SGG = 0:  QTotal = 0: TC = 0: VgTP = 0: VO = 0:
total_moles = 0: VW = 0: VO = 0: VgTP = 0: API = 0: SGG = 0:
nTCO2EOS = 0: nTH2sEOS = 0

'This subroutine is called in each of the three calculation routines, either directly or through Calc. total gas routine.
For c = 1 To NumCat
  mc(c) = 0
  molcF(c) = 0
Next c
For a = 1 To NumAn
  ma(a) = 0
  molaF(a) = 0
Next a
For n = 1 To NumNeut
  mn(n) = 0
  molnF(n) = 0
Next n
For i = 1 To 15
 z(i) = 0
Next i
For i = 1 To nob
    VW = VW + VwMix(i)
    VgTP = VgTP + VgTPMix(i)
    VO = VO + VoMix(i)
    mass_w = mass_w + mass_w_Mix(i)
    Mass_o = Mass_o + mass_o_Mix(i)
Next i
mass_w_0 = mass_w     'Define mass_w_0 as the mass of water in aqueous phase measured by meter
If Run_Seawater_Mixing = 0 And Run_MixingTwoWells = 0 And RunStatMix = 0 And RunShellMultiflash <> 1 Then
    For i = 1 To nob
        MixFrac(i) = mass_w_Mix(i) / mass_w
        MixFracOil(i) = VoMix(i) / VO       'MixFracOil and MixFracGas were only used for calculating oil and gas density
        MixFracGas(i) = VgTPMix(i) / VgTP
    Next i
End If
If Run_Seawater_Mixing = 1 Or RunStatMix = 1 Then
    MixFracOil(1) = 1: MixFracOil(2) = 0
    MixFracGas(1) = 1: MixFracGas(2) = 0
    MixFrac(1) = mass_w_Mix(1) / mass_w 'recalculate mixfrac as Kg of H2O from water 1/ total Kg of water
    MixFrac(2) = 1 - MixFrac(1)
End If
If Run_MixingTwoWells = 1 Then
    For i = 1 To nob
    'MixFracTwoWells(i) = VwMix(i) / (VwMix(1) + VwMix(2))  ''Note that VwMix(i)=VwMix(i)*Mixfrac(As in ReadinputParkA
    MixFracTwoWells(1) = mass_w_Mix(1) / mass_w 'recalculate mixfrac as Kg of H2O from water 1/ total Kg of water
    MixFracTwoWells(2) = 1 - MixFracTwoWells(1)
    MixFracOil(i) = MixFrac(i)
    MixFracGas(i) = MixFrac(i)
    Next i
End If
For i = 1 To nob
    If Run_MixingTwoWells = 1 Then
      mc(iH) = mc(iH) + MixFracTwoWells(i) * HstpMix(i)
      mc(iNa) = mc(iNa) + MixFracTwoWells(i) * NaMix(i)
      mc(iK) = mc(iK) + MixFracTwoWells(i) * KMix(i)
      mc(iMg) = mc(iMg) + MixFracTwoWells(i) * MgMix(i)
      mc(iCa) = mc(iCa) + MixFracTwoWells(i) * CaMix(i)
      mc(iSr) = mc(iSr) + MixFracTwoWells(i) * SrMix(i)
      mc(iBa) = mc(iBa) + MixFracTwoWells(i) * BaMix(i)
      mc(iFe) = mc(iFe) + MixFracTwoWells(i) * FeMix(i)
      mc(iZn) = mc(iZn) + MixFracTwoWells(i) * ZnMix(i)
      mc(iPb) = mc(iPb) + MixFracTwoWells(i) * PbMix(i)
      mc(iNH4) = mc(iNH4) + MixFracTwoWells(i) * NH4STPMix(i)
      ma(iOH) = ma(iOH) + MixFracTwoWells(i) * OHstpMix(i)
      ma(iCl) = ma(iCl) + MixFracTwoWells(i) * ClMix(i)
      ma(iAc) = ma(iAc) + MixFracTwoWells(i) * ACstpMix(i)
      ma(iH2BO3) = ma(iH2BO3) + MixFracTwoWells(i) * H2BO3stpMix(i)
      ma(iHCO3) = ma(iHCO3) + MixFracTwoWells(i) * HCO3stpMix(i)
      ma(iCO3) = ma(iCO3) + MixFracTwoWells(i) * CO3stpMix(i)
      ma(iSO4) = ma(iSO4) + MixFracTwoWells(i) * SO4Mix(i)
      ma(iBr) = ma(iBr) + MixFracTwoWells(i) * BrMix(i)
      ma(intF) = ma(intF) + MixFracTwoWells(i) * FMix(i)
      TH4SiO4 = TH4SiO4 + MixFracTwoWells(i) * TH4SiO4Mix(i)
      Alk = Alk + MixFracTwoWells(i) * AlkMix(i)
      TAc = TAc + MixFracTwoWells(i) * TAcMix(i)
      TNH4 = TNH4 + MixFracTwoWells(i) * TNH4Mix(i)
      TH3BO3 = TH3BO3 + MixFracTwoWells(i) * TH3BO3Mix(i)
    Else
      mc(iH) = mc(iH) + MixFrac(i) * HstpMix(i)
      mc(iNa) = mc(iNa) + MixFrac(i) * NaMix(i)
      mc(iK) = mc(iK) + MixFrac(i) * KMix(i)
      mc(iMg) = mc(iMg) + MixFrac(i) * MgMix(i)
      mc(iCa) = mc(iCa) + MixFrac(i) * CaMix(i)
      mc(iSr) = mc(iSr) + MixFrac(i) * SrMix(i)
      mc(iBa) = mc(iBa) + MixFrac(i) * BaMix(i)
      mc(iFe) = mc(iFe) + MixFrac(i) * FeMix(i)
      mc(iZn) = mc(iZn) + MixFrac(i) * ZnMix(i)
      mc(iPb) = mc(iPb) + MixFrac(i) * PbMix(i)
      mc(iNH4) = mc(iNH4) + MixFrac(i) * NH4STPMix(i)
      mc(iRa) = mc(iRa) + MixFrac(i) * RaMix(i)
      ma(iOH) = ma(iOH) + MixFrac(i) * OHstpMix(i)
      ma(iCl) = ma(iCl) + MixFrac(i) * ClMix(i)
      ma(iAc) = ma(iAc) + MixFrac(i) * ACstpMix(i)
      ma(iH2BO3) = ma(iH2BO3) + MixFrac(i) * H2BO3stpMix(i)
      ma(iHCO3) = ma(iHCO3) + MixFrac(i) * HCO3stpMix(i)
      ma(iCO3) = ma(iCO3) + MixFrac(i) * CO3stpMix(i)
      ma(iSO4) = ma(iSO4) + MixFrac(i) * SO4Mix(i)
      ma(iBr) = ma(iBr) + MixFrac(i) * BrMix(i)
      ma(intF) = ma(intF) + MixFrac(i) * FMix(i)
      TH4SiO4 = TH4SiO4 + MixFrac(i) * TH4SiO4Mix(i)
      Alk = Alk + MixFrac(i) * AlkMix(i)
      TAc = TAc + MixFrac(i) * TAcMix(i)
      TNH4 = TNH4 + MixFrac(i) * TNH4Mix(i)
      TH3BO3 = TH3BO3 + MixFrac(i) * TH3BO3Mix(i)
    End If
 ' TDS = TDS + VwMix(i) / VW * CalculatedTDSMix(i) 'TDS is not additive in saturated halite solution, TDS is larger than additive
    mass_MeOH = mass_MeOH_mix(i) + mass_MeOH 'unit=Kg
    mass_MEG = mass_MEG_mix(i) + mass_MEG 'unit=Kg
    API = API + OilDensityMix(i) * MixFracOil(i) 'linear average of oil density (g/cm3)
    SGG = SGG + GasDensityMix(i) * MixFracGas(i) 'linear average of gas density (Kg/m3)
    For iNG = 1 To 15
      z(iNG) = z(iNG) + zMix(i, iNG) * Total_molesMix(i) 'sum of all component in moles
    Next iNG
    total_moles = total_moles + Total_molesMix(i)
    nTCO2 = nTCO2 + nTCO2Mix(i)
    nTCH4 = nTCH4 + nTCH4Mix(i)
    nTH2S = nTH2S + nTH2SMix(i)
    nTCO2EOS = nTCO2EOS + nTCO2MixEOS(i)
    nTH2sEOS = nTH2sEOS + nTH2SMixEOS(i)
Next i
TFe = mc(iFe)
If useEOS > 0 Then
	nTCO2 = nTCO2EOS
	nTH2S = nTH2sEOS
    If total_moles > 0 Then
        For iNG = 1 To 15
            z(iNG) = z(iNG) / total_moles 'sum of reservoir component mole fractions
            If z(iNG) < 0.0000001 Then z(iNG) = 0
            z_before_precipitation(iNG) = z(iNG)
        Next iNG
            zHC = z(1)
        For iNG = 4 To 14 'test if HC are present
            zHC = zHC + z(iNG)
        Next iNG
        If zHC = 0 Then
            useEOS = 0
            If Run_Seawater_Mixing <> 1 Then
            ElseIf Run_MixingTwoWells <> 1 Then
            ElseIf Run10TestCases <> 1 Then
            errmsg(14) = 14
            End If
        End If
        SumofZ = 0:
        For iNG = 1 To 15
         SumofZ = SumofZ + z(iNG)
        Next iNG
    End If
    If Run_Seawater_Mixing = 1 Or Run_MixingTwoWells = 1 Then
        If LoopMixing = 1 Then useEOS = 0
    End If
    If Run_MixingTwoWells = 1 Then
        For i = 1 To nob
          For c = 1 To NumCat
          molcF(c) = molcF(c) + molc(c, i) * MixFracTwoWells(i)
          Next c
          For a = 1 To NumAn
          molaF(a) = molaF(a) + mola(a, i) * MixFracTwoWells(i)
          Next a
          For n = 1 To NumNeut
          molnF(n) = molnF(n) + moln(n, i) * MixFracTwoWells(i)
          Next n
         molAlkF = molAlkF + molAlk(i) * MixFracTwoWells(i): molTACF = molTACF + molTAC(i) * MixFracTwoWells(i):
         molTNH4F = molTNH4F + molTNH4(i) * MixFracTwoWells(i): molTH3BO3F = molTH3BO3F + molTH3BO3(i) * MixFracTwoWells(i)
         molTH2SaqF = molTH2SaqF + molTH2Saq(i) * MixFracTwoWells(i): molTH4SiO4F = molTH4SiO4F + molTH4SiO4(i) * MixFracTwoWells(i)
        Next i
    Else
        For i = 1 To nob
          For c = 1 To NumCat
          molcF(c) = molcF(c) + molc(c, i) * MixFrac(i)
          Next c
          For a = 1 To NumAn
          molaF(a) = molaF(a) + mola(a, i) * MixFrac(i)
          Next a
          For n = 1 To NumNeut
          molnF(n) = molnF(n) + moln(n, i) * MixFrac(i)
          Next n
         molAlkF = molAlkF + molAlk(i) * MixFrac(i): molTACF = molTACF + molTAC(i) * MixFrac(i):
         molTNH4F = molTNH4F + molTNH4(i) * MixFrac(i): molTH3BO3F = molTH3BO3F + molTH3BO3(i) * MixFrac(i)
         molTH2SaqF = molTH2SaqF + molTH2Saq(i) * MixFrac(i): molTH4SiO4F = molTH4SiO4F + molTH4SiO4(i) * MixFrac(i)
        Next i
    End If
    molTFeF = molcF(iFe)
End If

 If mass_MeOH > 0 Then xMeOH = (mass_MeOH / 32) / (mass_MeOH / 32 + mass_w / 18)
 If mass_MEG > 0 Then xMEG = (mass_MEG / 62.07) / (mass_MEG / 62.7 + mass_w / 18)
    Call CalcIonicStrength
If mass_MeOH > 0 Then IStCosolvent = Ist * mass_w / (mass_w + mass_MeOH)
If mass_MEG > 0 Then IStCosolvent = Ist * mass_w / (mass_w + mass_MEG)
If useEOS = 0 Then
    If useTPVol = 1 Then
        mt = fTPFunc(1)
        Else
        mt = fTPFunc(0)
    End If 'iTP=0 T=77F, P=14.696 psi: iTP=1 T=TVol, P=Pvol;iTP=2 T=TpH, P=PpH
    'Calculate the pH and mole fraction of gases for mixed brine
    SGG = SGG / (Patm * 28.97 / (0.08206 * TK))  'Gas specific gravity is density divided by density of air at T,P.
    API = 141.5 / (API / (fH2ODensity(TK, PBar) / 1000)) - 131.5 'API gravity used to calculate gas partitioning in the oil; Vasquez and Beggs
    'Total_moles_before_precipitation = total_moles '????????????????????
    Call C1_ThermodynamicEquilConsts
    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
    nTCO2_before_precipitation = nTCO2
    nTH2S_before_precipitation = nTH2S
    Call PengRobinson3
    RatioOilBPoints = fRatioOilBPoints
    Call C4_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
    
    mt = fmn  'Assign neutral species and HCO3, CO3, HS and recalculate ionic strength, Pitzer Coeff and pH
    Call CalcIonicStrength
    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
    Call C4_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
    rhoTP = CalcRhoTP(TK, TC, PBar, Patm) 'Function subroutine, with speciation
    yCH4 = PCH4 / Ppsia  'These are at T,P for mixed gases.
    yCO2 = PCO2 / Ppsia
    yH2S = PH2S / Ppsia

''calcualte TDS at STP:  mass of solid per Kg water devided by volue of soln in 1Kg water
''Note that no speciation was done for mixed water, therefore the density calculation does not include CO2aq, HCO3, H2Saq, HS,FeSaq
    If TC = 25 Then ' update TDS for STP
    rho25c = rhoTP
    Else
    mt = fTPFunc(0)
    Call C1_ThermodynamicEquilConsts
    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
    nTCO2_before_precipitation = nTCO2
    nTH2S_before_precipitation = nTH2S
    Call PengRobinson3
    RatioOilBPoints = fRatioOilBPoints
    Call C4_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)

    '*********
    mt = fmn  'Assign neutral species and HCO3, CO3, HS and recalculate ionic strength, Pitzer Coeff and pH
    Call CalcIonicStrength
    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
    Call C4_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
    rho25c = CalcRhoTP(TK, TC, PBar, Patm) 'Function subroutine, with speciation
    End If
     End If
If useEOS <> 0 Then
    If useTPVol = 1 Then
      mt = fTPFunc(1)
      Else
      mt = fTPFunc(0)
    End If 'iTP=0 T=77F, P=14.696 psi: iTP=1 T=TVol, P=Pvol;iTP=2 T=TpH, P=PpH
    nTCO2_before_precipitation = nTCO2EOS 'If useEOS>0 then nTCO2 before precipitation is equal to nTCO2EOS
    nTH2S_before_precipitation = nTH2sEOS
    Total_moles_before_precipitation = total_moles
    Call MultiPhaseFlash(False, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
    'For iNG = 1 To 15
    'z(iNG) = zOutput(iNG)
    'Next iNG
    mass_w = total_moles * beta(3) * compositions(15, 4) * 0.01801528
    If mass_w = 0 Then
        errmsg(14) = 14
        useEOS = 0
        GoTo 4000
    End If
'    Call C4_EOS_TCO2_SSPEquilCalcs(0, 5, 2, KspCalcite) '(ppt_or_not, iMetals, iGas, Ksp)
'    '*********
'    mt = fmn  'Assign neutral species and HCO3, CO3, HS and recalculate ionic strength, Pitzer Coeff and pH
'    Call CalcIonicStrength
'    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
'    Call C4_EOS_TCO2_SSPEquilCalcs(0, 5, 2, KspCalcite) '(ppt_or_not, iMetals, iGas, Ksp)
    Call C4_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
    mt = fmn        'CO2aq, HCO3, CO3, H2Saq, HS
    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
    Call C4_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
    
'Calculate API and SSG from flash density if useEOS<>0, to be used of loopTPppt calculation at 60F, 1 atm
    mt = fTPFunc(3)
    Call MultiPhaseFlash(False, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
    If beta(1) > 0 And density(1) < 0.3 Then 'assume as gas
    SGG = density(1) * 1000 / (Patm * 28.97 / (0.08206 * TK)) 'Gas specific gravity is density divided by density of air at T,P.
    Else
    SGG = 0.6
    End If
    If beta(2) > 0 And density(2) > 0.3 Then
    API = 141.5 / (density(2) / (fH2ODensity(TK, PBar) / 1000)) - 131.5 'API gravity used to calculate gas partitioning in the oil; Vasquez and Beggs
    Else
    API = 30
    End If
End If
4000 TDS = 0: CalculateTDSDen = 0 'Calculate TDS from density at 25 C
    For iden = 2 To NumCat
    CalculateTDSDen = CalculateTDSDen + 0.001 * mc(iden) * MWCat(iden)  '=Sum of Kg salt/Kg H2O
    Next iden
    For iden = 2 To NumAn
    CalculateTDSDen = CalculateTDSDen + 0.001 * ma(iden) * MWAn(iden)
    Next iden
    For iden = 2 To NumNeut
    CalculateTDSDen = CalculateTDSDen + 0.001 * mn(iden) * MWNeut(iden)
    Next iden
    TDS = CalculateTDSDen / (1 + CalculateTDSDen) * rho25c * 1000000# 'TDS in unit of mg/L,  numerator=(Kgsalt/KgH2O), denometer=(1+Kgsalt/KgH2O)=(Kgsoln/KgH2O);density Kgsoln/Lsoln

		For c = 1 To NumCat
        mcInit(c) = mc(c)   'redefine conc mcInit for evaporation/concentration calc
        Next c
        For a = 1 To NumAn
        maInit(a) = ma(a)
        Next a
        AlkInit = Alk
        TH4SiO4Init = TH4SiO4
        TNH4Init = TNH4
        TH3BO3Init = TH3BO3
        TAcInit = TAc
        TFeInit = TFe
        mt = fmn
End Sub
'********************************************************************************************
'G.  This subroutine is called only by the first calculation-initiation subroutine, I, above.
Sub B4_CalcFinalBrine()
If nob = 1 And Run_CalcConcFactor = 0 Then
    For i = 9 To 36
        Worksheets("Input").Cells(i + 1, 8).Value = ""
    Next i
    For i = 42 To 48
        Worksheets("Input").Cells(i + 1, 8).Value = ""
    Next i
    For i = 52 To 53
        Worksheets("Input").Cells(i + 1, 8).Value = ""
    Next i
    For i = 57 To 78
        Worksheets("Input").Cells(i + 1, 8).Value = ""
    Next i
Else
 If Run_Seawater_Mixing = 1 Or Run_MixingTwoWells = 1 Then
 GoTo 100
 End If
If UseMolal = 0 Then
Worksheets("Input").Range("h10").Value = mc(iNa) * (22990 * (rho25c - TDS / 1000000#))
Worksheets("Input").Range("h11").Value = mc(iK) * (39102 * (rho25c - TDS / 1000000#))
Worksheets("Input").Range("h12").Value = mc(iMg) * (24305 * (rho25c - TDS / 1000000#))
Worksheets("Input").Range("h13").Value = mc(iCa) * (40080 * (rho25c - TDS / 1000000#))
Worksheets("Input").Range("h14").Value = mc(iSr) * (87620 * (rho25c - TDS / 1000000#))
Worksheets("Input").Range("h15").Value = mc(iBa) * (137330 * (rho25c - TDS / 1000000#))
Worksheets("Input").Range("h16").Value = TFe * (55847 * (rho25c - TDS / 1000000#))
Worksheets("Input").Range("h17").Value = mc(iZn) * (65380 * (rho25c - TDS / 1000000#))
Worksheets("Input").Range("h18").Value = mc(iPb) * (207200 * (rho25c - TDS / 1000000#))
Worksheets("Input").Range("h19").Value = ma(iCl) * (35450 * (rho25c - TDS / 1000000#))
Worksheets("Input").Range("h20").Value = ma(iSO4) * (96064 * (rho25c - TDS / 1000000#))
Worksheets("Input").Range("h21").Value = ma(intF) * (18998 * (rho25c - TDS / 1000000#))
Worksheets("Input").Range("h22").Value = ma(iBr) * (79904 * (rho25c - TDS / 1000000#))
Worksheets("Input").Range("h23").Value = TH4SiO4 * (28085 * (rho25c - TDS / 1000000#))
Worksheets("Input").Range("h24").Value = Alk * (61019 * (rho25c - TDS / 1000000#))
Worksheets("Input").Range("h26").Value = TAc * (60054 * (rho25c - TDS / 1000000#))
Worksheets("Input").Range("h27").Value = TNH4 * (17031 * (rho25c - TDS / 1000000#))
Worksheets("Input").Range("h28").Value = TH3BO3 * (10811 * (rho25c - TDS / 1000000#))
Worksheets("Input").Range("h62").Value = mc(iRa) * 1000000000000# * (226 * (rho25c - TDS / 1000000#))
Else
Worksheets("Input").Range("h10").Value = mc(iNa)
Worksheets("Input").Range("h11").Value = mc(iK)
Worksheets("Input").Range("h12").Value = mc(iMg)
Worksheets("Input").Range("h13").Value = mc(iCa)
Worksheets("Input").Range("h14").Value = mc(iSr)
Worksheets("Input").Range("h15").Value = mc(iBa)
Worksheets("Input").Range("h16").Value = TFe
Worksheets("Input").Range("h17").Value = mc(iZn)
Worksheets("Input").Range("h18").Value = mc(iPb)
Worksheets("Input").Range("h19").Value = ma(iCl)
Worksheets("Input").Range("h20").Value = ma(iSO4)
Worksheets("Input").Range("h21").Value = ma(intF)
Worksheets("Input").Range("h22").Value = ma(iBr)
Worksheets("Input").Range("h23").Value = TH4SiO4
Worksheets("Input").Range("h24").Value = Alk
Worksheets("Input").Range("h26").Value = TAc
Worksheets("Input").Range("h27").Value = TNH4
Worksheets("Input").Range("h28").Value = TH3BO3
End If
Worksheets("Input").Range("h29").Value = TDS
Worksheets("Input").Range("H30").Value = rho25c
Worksheets("Input").Range("h31").Value = yCO2 * 100
'Worksheets("Input").Range("h32").Value = yH2S * 100
Worksheets("Input").Range("h33") = (H2Saq + HS) * (34080 * (rho25c - TDS / 1000000#))
Worksheets("Input").Range("h34") = pH - DpHj
Worksheets("Input").Range("h35").Value = VgTP / 28.31685 ' Unit is Thousands cubic feet  MCF
If UseSI = 1 Then Worksheets("Input").Range("h35").Value = VgTP / 1000 'Unit is thousands cubic meter
Worksheets("Input").Range("h36").Value = VO
If UseSI = 1 Then Worksheets("Input").Range("h36").Value = VO * 0.159
Worksheets("Input").Range("h37").Value = VW
If UseSI = 1 Then Worksheets("Input").Range("h37").Value = VW * 0.159
'Worksheets("Input").Range("h43").Value = API                 'If no, or 0, the read in the API grav and sp grav and use these to calc. the Pbpt.
'Worksheets("Input").Range("h44").Value = SGG
Worksheets("Input").Range("h45").Value = mass_MeOH / 0.7914 / 159 'Barrels of MeOH added per day to well.
If UseSI = 1 Then Worksheets("Input").Range("h45").Value = mass_MeOH / 0.7914 / 159 * 0.159
Worksheets("Input").Range("h46").Value = mass_MEG / 1.1135 / 159 'Barrels of MEG added per day to well.
End If
100 End Sub


'********************************************************************************************
'E.  This subroutine is called by each of the above calculation-initiation subroutines, I, II, and III.
Sub B5_CalculateSIvalues()
If LoopTP = 10 Then
pH = pH
End If

SICal = Null: SIDol = Null: SISid = Null: SIBar = Null: SIGyp = Null: SIHemi = Null: SIAn = Null: SICel = Null:
SIHal = Null: SICaF2 = Null: SIFeS = Null: SIFeSAm = 0: SITrot = 0: SIZnS = Null: SIBaCO3 = Null: SISrCO3 = Null: SIPbS = Null: SIZnCO3 = Null
SIAmSilica = Null: SIQuartz = Null: SIDiopside = Null: SIChrysotile = Null: SIGreenalite = Null

For c = 1 To NumCat
    mc(c) = mcInit(c)
    Next c
    For a = 1 To NumAn
    ma(a) = maInit(a)
    Next a
    Alk = AlkInit
    TH4SiO4 = TH4SiO4Init
    TNH4 = TNH4Init
    TH3BO3 = TH3BO3Init
    TAc = TAcInit
    TFe = TFeInit
If Run_MassTransfer = 1 And LoopTP > 1 Then
    mc(iCa) = mcMT(iCa): mc(iBa) = mcMT(iBa): ma(iSO4) = maMT(iSO4): Alk = AlkMT
End If
'First calcuate Keqs, Act.Coefs, and Act.Coefs(gas) at ISt T and P.
  Call CalcIonicStrength
  Call C1_ThermodynamicEquilConsts
  Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
If useEOS = 0 Then
  Call PengRobinson3
   RatioOilBPoints = fRatioOilBPoints
  Call C4_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
  mt = fmn        'CO2aq, HCO3, CO3, H2Saq, HS
  Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
  Call C4_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)


PBubblePt = nTCH4 / t1 + nTCO2 / t2 + nTH2S / t3 'Note that these pressures are in psia, since Kgw are M/psi.
If Run_MassTransfer = 1 Then
If Ppsia > PBubblePt Then
    VgTP_MT = 0
    Else
    VgTP_MT = Vg_ZRT * Znew * RAtm * 14.696 * TK / 1000 'unit m3, V_ZRT in unit of moles of gas/psia
    End If
    VO_MT = VO * 159 / 1000 'unit=m3
    VW_MT = VW * 159 / 1000  'unit=m3
    QBrineFlow = VW_MT * 1000000# / 86400 'cm^3/sec
End If
End If
If useEOS <> 0 Then
'First calcuate gNeut and aH2O as more saline solution for downhole condition to allow more water in the aqueous phase by flash
If a1 < 20 / Ist Then
a1 = 2
Else
a1 = 20 / Ist
End If
For c = 1 To NumCat
    mc(c) = mcInit(c) * a1
    Next c
    For a = 1 To NumAn
    ma(a) = maInit(a) * a1
    Next a
    Alk = AlkInit * a1
    TH4SiO4 = TH4SiO4Init * a1
    TNH4 = TNH4Init * a1
    TH3BO3 = TH3BO3Init * a1
    TAc = TAcInit * a1
    TFe = TFeInit * a1

  Call CalcIonicStrength
  Call C1_ThermodynamicEquilConsts
  Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)

    Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
    mass_w = total_moles * beta(3) * compositions(15, 4) * 0.01801528 'unit=Kg H2O in aqueous phase
    If compositions(15, 4) < 0.5 Then
    errmsg(8) = 8: Ist = Null: pH = Null: rhoTP = Empty: H2Oevap = 1 'when this is flagged, water is evaporated and exit calculation
        GoTo 500
    End If
    If mass_w < 0.0000001 Then 'if no water exist, exit SI calculation and go to the next T,P
    errmsg(8) = 8: Ist = Null: pH = Null: rhoTP = Empty: H2Oevap = 1 'when this is flagged, water is evaporated and exit calculation
        GoTo 500
    End If
    'If PBar * yCO2 > 152 Then errmsg(13) = 13
    If mass_w / mass_w_0 < 0.05 Then
    errmsg(8) = 8: Ist = Null:: pH = Null: rhoTP = Empty: H2Oevap = 1 'when this is flagged, water is evaporated and exit calculation
    GoTo 500
    End If
    For c = 1 To NumCat
    mc(c) = mcInit(c) * mass_w_0 / mass_w
    Next c
    For a = 1 To NumAn
    ma(a) = maInit(a) * mass_w_0 / mass_w
    Next a
    Alk = AlkInit * mass_w_0 / mass_w
    TH4SiO4 = TH4SiO4Init * mass_w_0 / mass_w
    TNH4 = TNH4Init * mass_w_0 / mass_w
    TH3BO3 = TH3BO3Init * mass_w_0 / mass_w
    TAc = TAcInit * mass_w_0 / mass_w
    mass_wOld = mass_w

    If Run_MassTransfer = 1 And LoopTP > 1 Then
     mc(iCa) = mcMT(iCa) * mass_w_0 / mass_w
     mc(iBa) = mcMT(iBa) * mass_w_0 / mass_w
     ma(iSO4) = maMT(iSO4) * mass_w_0 / mass_w
     Alk = AlkMT * mass_w_0 / mass_w
    End If
    Call CalcIonicStrength
    If Ist > 25 Then
        errmsg(8) = 8: Ist = Null: pH = Null: rhoTP = Empty: H2Oevap = 1 'when this is flagged, water is evaporated and exit calculation
        GoTo 500
    End If
    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
    Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
    mass_w = total_moles * beta(3) * compositions(15, 4) * 0.01801528 'unit=Kg H2O in aqueous phase
    Iteration = 0
     
    While (mass_wOld - mass_w) ^ 2 > 0.0001 * mass_w ^ 2  'iteration loop to calculate amount of water in aqueous phase, at low water cut, beta(3) is a strong function of ionic strength
    If compositions(15, 4) < 0.5 Then
    errmsg(8) = 8: Ist = Null: pH = Null: rhoTP = Empty: H2Oevap = 1 'when this is flagged, water is evaporated and exit calculation
        GoTo 500
    End If
    If mass_w < 0.0000001 Then 'if no water exist, exit SI calculation and go to the next T,P
    errmsg(8) = 8: Ist = Null: pH = Null: rhoTP = Empty: H2Oevap = 1 'when this is flagged, water is evaporated and exit calculation
        GoTo 500
    End If
    For c = 1 To NumCat
    mc(c) = mc(c) * mass_wOld / mass_w
    Next c
    For a = 1 To NumAn
    ma(a) = ma(a) * mass_wOld / mass_w
    Next a
    Alk = Alk * mass_wOld / mass_w
    TH4SiO4 = TH4SiO4 * mass_wOld / mass_w
    TNH4 = TNH4 * mass_wOld / mass_w
    TH3BO3 = TH3BO3 * mass_wOld / mass_w
    TAc = TAc * mass_wOld / mass_w
    mass_wOld = mass_w
    Call CalcIonicStrength
    
    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
    Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
    mass_w = total_moles * beta(3) * compositions(15, 4) * 0.01801528 'unit=Kg H2O in aqueous phase
    mass_w = (mass_wOld + mass_w) / 2
    Iteration = Iteration + 1
    If Iteration > 10 Then
    errmsg(8) = 8: Ist = Null: pH = Null: rhoTP = Empty: H2Oevap = 1 'when this is flagged, water is evaporated and exit calculation
    GoTo 500
    End If
    Wend
'    Call C4_EOS_TCO2_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
'     mt = fmn
'    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
'    Call C4_EOS_TCO2_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
    Call C4_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
    mt = fmn        'CO2aq, HCO3, CO3, H2Saq, HS
    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
    Call C4_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
'Evaluate bubblepoint
    QPBubblePt = 1 'assign to P>bubble point
    If No_Phases = 3 Then  'Evaluate bubble point.  Only when three phase exist pressure is below bubble point when there is only two phases assign pressure >bubblepoint
    QPBubblePt = 0  'P<bubblepoint
    ElseIf No_Phases = 2 Then
        If beta(1) > 0 And density(1) < 0.3 Then ' when gas phase is present
        QPBubblePt = 0 'P<bubblepoint
        ElseIf beta(2) > 0 And density(2) < 0.3 Then
        QPBubblePt = 0 'P<bubblepoint
        End If
    End If

    If Run_MassTransfer = 1 Then
If QPBubblePt = 1 Then VgTP_MT = 0
    If QPBubblePt = 0 Then
    VgTP_MT = beta(1) * total_moles * Compr(1) * RBar * TK / PBar / 1000 'unit m3, V_ZRT in unit of moles of gas/psia
    End If
    VO_MT = VO * 159 / 1000 'unit=m3
    VW_MT = VW * 159 / 1000  'unit=m3
End If
End If
If RunShellMultiflash <> 1 Then
' 'Note that the speciation output is only requested by Ji-young at Shell.  Only output for Ji-young upon request
' Worksheets("Speciation").Cells(14 - LoopTP, 1) = TF
'  Worksheets("Speciation").Cells(14 - LoopTP, 2) = Ppsia
'  Worksheets("Speciation").Cells(14 - LoopTP, 3) = pH - DpHj
'  Worksheets("Speciation").Cells(14 - LoopTP, 4) = H
'  Worksheets("Speciation").Cells(14 - LoopTP, 5) = OH
'  Worksheets("Speciation").Cells(14 - LoopTP, 6) = CO2aq
'  Worksheets("Speciation").Cells(14 - LoopTP, 7) = HCO3
'  Worksheets("Speciation").Cells(14 - LoopTP, 8) = CO3
'  Worksheets("Speciation").Cells(14 - LoopTP, 9) = HAcaq
'  Worksheets("Speciation").Cells(14 - LoopTP, 10) = Ac
'  Worksheets("Speciation").Cells(14 - LoopTP, 11) = H2Saq
'  Worksheets("Speciation").Cells(14 - LoopTP, 12) = HS
'  Worksheets("Speciation").Cells(14 - LoopTP, 13) = NH3
'  Worksheets("Speciation").Cells(14 - LoopTP, 14) = H2BO3
'  Worksheets("Speciation").Cells(14 - LoopTP, 15) = H3SiO4
'  Worksheets("Speciation").Cells(14 - LoopTP, 16) = H2SiO4
'  Worksheets("Speciation").Cells(14 - LoopTP, 17) = mc(iNa)
'  Worksheets("Speciation").Cells(14 - LoopTP, 18) = mc(iK)
'  Worksheets("Speciation").Cells(14 - LoopTP, 19) = mc(iMg)
'  Worksheets("Speciation").Cells(14 - LoopTP, 20) = mc(iCa)
'  Worksheets("Speciation").Cells(14 - LoopTP, 21) = mc(iSr)
'  Worksheets("Speciation").Cells(14 - LoopTP, 22) = mc(iBa)
'  Worksheets("Speciation").Cells(14 - LoopTP, 23) = mc(iFe)
'  Worksheets("Speciation").Cells(14 - LoopTP, 24) = mc(iZn)
'  Worksheets("Speciation").Cells(14 - LoopTP, 25) = mc(iPb)
'  Worksheets("Speciation").Cells(14 - LoopTP, 26) = mc(iCl)
'  Worksheets("Speciation").Cells(14 - LoopTP, 27) = mc(iSO4)
'  Worksheets("Speciation").Cells(14 - LoopTP, 28) = CalcRhoTP(TK, Tc, Pbar, patm)
'
'The following are the saturation indexes for all of the minerals being considered.

SICal = Log10(mc(iCa) * HCO3 * gCat(iCa) * gNCat(iCa) * gAn(iHCO3) * gNAn(iHCO3) * K2HCO3 / (aH * KspCalcite))
SIDol = Log10(mc(iCa) * mc(iMg) * CO3 ^ 2 * gCat(iCa) * gCat(iMg) * gAn(iCO3) ^ 2 / KspDol)
SISid = Log10(mc(iFe) * HCO3 * gCat(iFe) * gAn(iHCO3) * K2HCO3 / (aH * KspSiderite))
SIBar = Log10(mc(iBa) * ma(iSO4) * gCat(iBa) * gAn(iSO4) / KspBarite) + dSIMeOHBar + dSIMEGBar
SIGyp = Log10(mc(iCa) * ma(iSO4) * gCat(iCa) * gAn(iSO4) * aH2O ^ 2 * gNMean(iCaSO42H2O) ^ 2 * aNH2O ^ 2 / KspGypsum)
SIHemi = Log10(mc(iCa) * ma(iSO4) * gCat(iCa) * gAn(iSO4) * aH2O ^ 0.5 * gNMean(ihemiCaSO4) ^ 2 * aNH2O ^ 0.5 / KspHemihydrate)
SIAn = Log10(mc(iCa) * ma(iSO4) * gCat(iCa) * gAn(iSO4) * gNMean(iCaSO4) ^ 2 / KspAnhydrite)
SICel = Log10(mc(iSr) * ma(iSO4) * gCat(iSr) * gAn(iSO4) * gNMean(iSrSO4) ^ 2 / KspCelestite)
SIHal = Log10(mc(iNa) * ma(iCl) * gCat(iNa) * gAn(iCl) / KspHalite) + dSIMeOHHal + dSIMEGHal
SICaF2 = Log10((mc(iCa) * (ma(intF) ^ 2) * gCat(iCa) * gAn(intF) ^ 2 / KspCaF2))
SIBaCO3 = Log10(mc(iBa) * HCO3 * gCat(iBa) * gNCat(iBa) * gAn(iHCO3) * gNAn(iHCO3) * K2HCO3 / (aH * KspBaCO3))
SISrCO3 = Log10(mc(iSr) * HCO3 * gCat(iSr) * gNCat(iSr) * gAn(iHCO3) * gNAn(iHCO3) * K2HCO3 / (aH * KspSrCO3))
'If Use_ZnCl2Const = 1 Then
SIZnS = Log10(mc(iZn) * HS * gCat(iZn) * gAn(iHS) * gNAn(iHS) / aH / KspZnS)
SIPbS = Log10(mc(iPb) * HS * gCat(iPb) * gAn(iHS) * gNAn(iHS) / aH / KspPbS)
SIZnCO3 = Log10(mc(iZn) * CO3 * gCat(iZn) * gAn(iCO3) / KspZnCO3)
'added by Dai 2016

'SIFeSAm = Log10((mc(iFe) / KPFeClSO4) * HS * gFe * gAn(iHS) * gNAn(iHS) / aH / KspFeSAm)
'SIFeS = Log10((mc(iFe) / KPFeClSO4) * HS * gFe * gAn(iHS) * gNAn(iHS) / aH / KspFeS)
'SITrot = Log10((mc(iFe) / KPFeClSO4) * HS * gFe * gAn(iHS) * gNAn(iHS) / aH / KspTrot)
'SIPyrr = Log10((mc(iFe) / KPFeClSO4) * HS * gFe * gAn(iHS) * gNAn(iHS) / aH / KspPyrr)
'Else
'SIZnS = Log10(mc(iZn) * HS * gCat(iZn) * gAn(iHS) * gNAn(iHS) / aH / KspZnS)
'SIPbS = Log10(mc(iPb) * HS * gCat(iPb) * gAn(iHS) * gNAn(iHS) / aH / KspPbS)
'SIZnCO3 = Log10(mc(iZn) * CO3 * gCat(iZn) * gAn(iCO3) / KspZnCO3)
SIFeSAm = Log10(mc(iFe) * HS * gCat(iFe) * gAn(iHS) * gNAn(iHS) / aH / KspFeSAm)
SIFeS = Log10(mc(iFe) * HS * gCat(iFe) * gAn(iHS) * gNAn(iHS) / aH / KspFeS)
SITrot = Log10(mc(iFe) * HS * gCat(iFe) * gAn(iHS) * gNAn(iHS) / aH / KspTrot)
''SIPyrr = Log10(mc(iFe) * HS * gCat(iFe) * gAn(iHS) * gNAn(iHS) / aH / KspPyrr)
'End If
If xMeOH > 0 And mc(iCa) * HCO3 > 0 Then
'SICal = SICal - (1 + 73.69 * TC) * mc(iCa) * HCO3 * xMeOH
SICal = SICal + (10.0432 * (Log10(mc(iCa) * HCO3)) / (1 + (Log10(mc(iCa) * HCO3)) ^ 2)) * xMeOH
SIHal = SIHal - (0.0696 * Exp(xMeOH)) * mc(iCa) * ma(iCl) * xMeOH
End If
If xMEG > 0 And mc(iCa) * HCO3 > 0 Then
SICal = SICal + (8.4131 * (Log10(mc(iCa) * HCO3)) / (1 + (Log10(mc(iCa) * HCO3)) ^ 2)) * xMEG
End If

'Silicate SI values.  No MeOH/MEG is considered at this time.  Also, all SiO2 is assumed to remain as H4SiO4 and not ionized.
SIAmSilica = Log10(H4SiO4 * gNeut(iH4SiO4aq) / KspAmSilica)
SIQuartz = Log10(H4SiO4 * gNeut(iH4SiO4aq) / KspQuartz)
SIDiopside = Log10((mc(iCa) * mc(iMg) * H4SiO4 ^ 2 * gCat(iCa) * gCat(iMg) * gNeut(iH4SiO4aq) ^ 2 / aH ^ 4) / KspDiopside)
SIChrysotile = Log10((mc(iMg) ^ 3 * H4SiO4 ^ 2 * gCat(iMg) ^ 3 * gNeut(iH4SiO4aq) ^ 2 / aH ^ 6) / KspChrysotile)
SIGreenalite = Log10((mc(iFe) ^ 3 * H4SiO4 ^ 2 * gCat(iFe) ^ 3 * gNeut(iH4SiO4aq) ^ 2 / aH ^ 6) / KspGreenalite)
OH = KH2O / (10 ^ -pH * gAn(iOH))
SIMgOH2 = Log10((mc(iMg) * gCat(iMg) * (OH * gAn(iOH)) ^ 2) / KspMgOH2)
SICaOH2 = Log10((mc(iCa) * gCat(iCa) * (OH * gAn(iOH)) ^ 2) / KspCaOH2)
rhoTP = CalcRhoTP(TK, TC, PBar, Patm)
'TDSTP = TDS / rho25c * rhoTP
End If
500 End Sub


'********************************************************************************************
'F.  This subroutine is called only by the first calculation-initiation subroutine, I, above.
Sub B6_InhibitorNeeded()
'*****Constants moved to B1_InitializeIndices******************
'Barite Inhibitor selection and concentration.
fSafetyBar = 1
ConcInhBar = 0
If mc(iBa) * ma(iSO4) > 0 Then                   'If both Ba and SO4 are present, then BaSO4 might precipitate.
   If LoopTP = 1 Or RunWhatIf = 1 Or Run1000Cases = 1 Or LoopResChem = 1 Then                        'Routine to select which inhibitor is most effective for the specific downhole conditions, i.e., inhibitor selection is based upon downhole conditions, whether the brine is Supersaturated there, or not.
    InhNoBar = InhNo
    If SelectInh = 1 Then
      i = 1
      iMaxBar = 1
      bInhBarMax = fbInhBar(iMaxBar, SIBar)   'Test the value of the exponential.
      For i = 1 To 19
        bInhBar(i) = fbInhBar(i, SIBar)
        If bInhBar(i) > bInhBarMax Then
        iMaxBar = i
        bInhBarMax = bInhBar(i)
        End If
      Next i
      InhNoBar = iMaxBar
    End If
    If SelectInh = 1 Then InhNoBar = 2                                   'Presently, based upon experience the program selects BHPMP for barite, regardless.
    Worksheets("Barite").Cells(2, 6) = InhName(InhNoBar)
    Worksheets("Input").Cells(49, 10) = InhName(InhNoBar)
    End If
 If SIBar > 0.001 Then
    BarExpon10 = flogT0Bar(SIBar)    'amy 2013 New
    If Log10(tInh) > BarExpon10 And BarExpon10 < 8 Then
      t0Bar = 10 ^ BarExpon10
     ConcInhBar = fCinhBar(SIBar, tInh)
'   If InhNoBar = 20 Then 'calculate the thermal degradation from Wei Wang's work. This is not used.
'   ConcInhBar = ConcInhBar / (FracInhNo1 * Exp(-Exp(-EaRInh(InhNo1) / TK + LnAInh(InhNo1)) * tInh) + (1 - FracInhNo1) * Exp(-Exp(-EaRInh(InhNo2) / TK + LnAInh(InhNo2)) * tInh))
   
'        ConcInhBar = ConcInhBar / (FracInhNo1 * Exp(-Exp(-EaRInh(InhNo1) / TK + LnAInh(InhNo1)) * tInh) + (1 - FracInhNo1) * Exp(-Exp(-EaRInh(InhNo2) / TK + LnAInh(InhNo2)) * tInh)) ''MIC=active conc/f(thermal activity)
'        Else
'        ConcInhBar = ConcInhBar / Exp(-Exp(-EaRInh(InhNoBar) / TK + LnAInh(InhNoBar)) * tInh) 'Effective Inh Conc=Inh Conc*f(ThermallyActive)
'   End If
    End If
  End If
End If

'Calcite Inhibitor selection and concentration.
fSafetyCal = 1
ConcInhCal = 0
If mc(iCa) * HCO3 > 0 Then
   If LoopTP = 1 Or RunWhatIf = 1 Or Run1000Cases = 1 Or LoopResChem = 1 Then      'Routine to select which inhibitor to use based upon down hole conditions. Also prevent error from What-If
    InhNoCal = InhNo
    If SelectInh = 1 Then
      i = 1
      iMaxCal = 1
      bInhCalMax = fbInhCal(iMaxCal, SICal)
      For i = 1 To 19
        bInhCal(i) = fbInhCal(i, SICal)
        If bInhCal(i) > bInhCalMax Then
        iMaxCal = i
        bInhCalMax = bInhCal(i)
        End If
      Next i
      InhNoCal = iMaxCal
    End If
    If SelectInh = 1 Then InhNoCal = 1   'Presently, based upon experience the program selects NTMP for calcite regardless.
    Worksheets("Calcite").Cells(2, 7) = InhName(InhNoCal)
    Worksheets("Input").Cells(47, 10) = InhName(InhNoCal)
    End If
  If SICal > 0.001 Then
    CalExpon10 = flogT0Cal(SICal)
    If Log10(tInh) > CalExpon10 And CalExpon10 < 8 Then
      t0Cal = 10 ^ CalExpon10
      ConcInhCal = fCinhCal(SICal, tInh)
    End If
    End If
'    If InhNoCal = 14 And InhNo1 > 5 And InhNo1 < 10 Then
'    ConcInhCal = Null: errmsg(9) = 9
'    End If
'    If InhNoCal = 14 And InhNo2 > 5 And InhNo2 < 10 Then
'    ConcInhCal = Null: errmsg(9) = 9
'    End If
  'End If
End If

'Gypsum Inhibitor selection and concentration.

fsafetyGyp = 1
ConcInhGyp = 0
If mc(iCa) * ma(iSO4) > 0 Then                   'If both Ba and SO4 are present, then BaSO4 might precipitate.
    InhNoGyp = 4
'If RunSimpSSP = 0 Then
Worksheets("Input").Cells(51, 10) = InhName(InhNoGyp)
  If SIGyp > 0.1 Then
     GypExpon10 = flogT0Gyp(SIGyp)
    If Log10(tInh) > GypExpon10 And GypExpon10 < 8 Then
        If TK < 373 Then
        t0Gyp = 10 ^ GypExpon10
        ConcInhGyp = fCinhGyp(SIGyp, tInh)
        'ConcInhGyp = ConcInhGyp / Exp(-Exp(-EaRInh(InhNoGyp) / TK + LnAInh(InhNoGyp)) * tInh) 'Effective Inh Conc=Inh Conc*f(ThermallyActive)
        Else
        ConcInhGyp = Null
        End If
      End If
    End If
End If
  'Anhydrite Inhibitor selection and concentration.
fsafetyAn = 1
ConcInhAn = 0
If mc(iCa) * ma(iSO4) > 0 Then                   'If both Ba and SO4 are present, then BaSO4 might precipitate.
    InhNoAn = 4
 'If RunSimpSSP = 0 Then
 Worksheets("Input").Cells(53, 10) = InhName(InhNoAn)
 'If RunSimpSSP = 1 Then Worksheets(mySheet).Cells(30, 9) = InhName(InhNoAn)
 
  If SIAn > 0.1 Then
     AnExpon10 = flogT0An(SIAn)
    If Log10(tInh) > AnExpon10 And AnExpon10 < 8 Then
        If TK > 373 Then
        t0An = 10 ^ AnExpon10
        ConcInhAn = fCinhAn(SIAn, tInh)
        'ConcInhAn = ConcInhAn / Exp(-Exp(-EaRInh(InhNoAn) / TK + LnAInh(InhNoAn)) * tInh) 'Effective Inh Conc=Inh Conc*f(ThermallyActive)
        Else
        ConcInhAn = Null
        End If
    End If
  End If
End If

End Sub



Sub B7_ScaleRisk()   'Calculate T, SI pairs at MIC=0,5 and 20 mg/LB1_InitializeIndices

'calc Barite MIC=0, Barite index =1 and calcite index =2
If mc(iBa) > 0.0000001 And ma(iSO4) > 0.0000001 Then
    BarExpon10 = Log10(tInh)  'Calc at MIC=0, 2 hr tinh
    a = -1.1136 * (xMeOH - 1.2976 * xMeOH ^ 2) * TK
    b = 895.6683 + (BarExpon10 - 1.5232 - 0.8286 * mc(iCa) - 0.225 * Abs(Log10(mc(iBa) / ma(iSO4))) - 4.8404 * xMEG) * TK
    cc = (10.8784 * TK - 5476.992)
    If xMeOH = 0 Then
        SIRisk(InhNoBar, LoopTP, 1, 1) = -cc / b    'SIRisk (Inh no, calc i, MIC=0, barite)
    Else
        qroot = -0.5 * (b - (b ^ 2 - 4 * a * cc) ^ 0.5)  'Set the sign of coef2 to -1 in all cases.  Excel sets Sgn(coef2 = 0) = 0, which causes an error.
        root1 = cc / qroot
        qroot = -0.5 * (b + (b ^ 2 - 4 * a * cc) ^ 0.5)
        root2 = cc / qroot
        SIRisk(InhNoBar, LoopTP, 1, 1) = root2
    End If
    If SIRisk(InhNoBar, LoopTP, 1, 1) < 0 Then SIRisk(InhNoBar, LoopTP, 1, 1) = 0
'    If UseSR = 1 Then SIRisk(InhNoBar, LoopTP, 1, 1) = 10 ^ root2

   tInhRisk = tInh: 'calc at MIC=1 and 2hr
   For iRisk = 1 To NoRiskcalc - 1
'   If InhNoBar = 14 Then  'calculate and deduct the fraction of inhibitor that may degrade at this temperature
'        ConcInhBarRisk(iRisk) = ConcInhBarRisk(iRisk) * (FracInhNo1 * Exp(-Exp(-EaRInh(InhNo1) / TK + LnAInh(InhNo1)) * tInh) + (1 - FracInhNo1) * Exp(-Exp(-EaRInh(InhNo2) / TK + LnAInh(InhNo2)) * tInhRisk))
'        Else
'        ConcInhBarRisk(iRisk) = ConcInhBarRisk(iRisk) * Exp(-Exp(-EaRInh(InhNoBar) / TK + LnAInh(InhNoBar)) * tInhRisk) 'Effective Inh Conc=Inh Conc*f(ThermallyActive)
'   End If
   
'    If InhNoBar = 4 Then  'DTPMP Calculate the soluble concentration
'    TDTPMPM = ConcInhBarRisk(iRisk)
'    ConcInhBarRisk(iRisk) = SpeciationDTPMP(InhNoBar)  'Effective Inh Conc=soluble Inh
'    End If
'    If InhNoBar = 1 Then 'NTMP
'    TNTMPM = ConcInhBarRisk(iRisk)
'    ConcInhBarRisk(iRisk) = SpeciationNTMP(InhNoBar)  'Effective Inh Conc=soluble Inh
'    End If
'    If InhNoBar = 2 Then 'BHPMP
'    TBHPMPM = ConcInhBarRisk(iRisk)
'    ConcInhBarRisk(iRisk) = SpeciationBHPMP(InhNoBar)  'Effective Inh Conc=soluble Inh
'    End If
    
    SIRiskLow = SIRisk(InhNoBar, LoopTP, iRisk, 1)
    SIRiskHigh = 5
    For k = 1 To 10
    SIBarRisk = (SIRiskLow + SIRiskHigh) / 2
    t0Bar = 10 ^ flogT0Bar(SIBarRisk)
    If t0Bar = 0 Then   'If calculated t0=0 then the corresponding SIRisk has to be equal to 0
    SIBarRisk = 0
    GoTo 11
    End If
11  Dep1 = fCinhBar(SIBarRisk, tInhRisk) - ConcInhBarRisk(iRisk)
    If Dep1 > 0 Then SIRiskHigh = SIBarRisk
    If Dep1 < 0 Then SIRiskLow = SIBarRisk
    Next k

     SIRisk(InhNoBar, LoopTP, iRisk + 1, 1) = SIBarRisk
     If SIRisk(InhNoBar, LoopTP, iRisk + 1, 1) < 0 Then SIRisk(InhNoBar, LoopTP, iRisk + 1, 1) = 0
'    If UseSR = 1 Then SIRisk(InhNoBar, LoopTP, iRisk + 1, 1) = 10 ^ SIBarRisk
Next iRisk
 End If
'
If LoopTP = 10 Then
pH = pH
End If

''calc Calcite MIC=0, Barite index =1 and calcite index =2
If mc(iCa) > 0.0000001 And HCO3 > 0.0000001 Then
    CalExpon10 = Log10(tInh)  'Calc at MIC=0, 2 hr tinh
    b = 1876.4 + (CalExpon10 - 4.22) * TK
    cc = (13.8 * TK - 6259.6)
    root2 = -cc / b
    SIRisk(InhNoCal, LoopTP, 1, 2) = root2    'SIRisk (Inh no, calc i, MIC=0, calcite)
    If SIRisk(InhNoCal, LoopTP, 1, 2) < 0 Then SIRisk(InhNoCal, LoopTP, 1, 2) = 0
'    If UseSR = 1 Then SIRisk(InhNoCal, LoopTP, 1, 2) = 10 ^ root2

   tInhRisk = tInh:  'calc at MIC=?? and 2hr
   
   For iRisk = 1 To NoRiskcalc - 1
   
'  If InhNoCal = 14 Then 'calculate and deduct the amount of inhibitor that will degrade
'        ConcInhCalRisk(iRisk) = ConcInhCalRisk(iRisk) * (FracInhNo1 * Exp(-Exp(-EaRInh(InhNo1) / TK + LnAInh(InhNo1)) * tInh) + (1 - FracInhNo1) * Exp(-Exp(-EaRInh(InhNo2) / TK + LnAInh(InhNo2)) * tInh))
'        Else
'        ConcInhCalRisk(iRisk) = ConcInhCalRisk(iRisk) * Exp(-Exp(-EaRInh(InhNoCal) / TK + LnAInh(InhNoCal)) * tInhRisk) 'Effective Inh Conc=Inh Conc*f(ThermallyActive)
'   End If
'    If InhNoCal = 4 Then  'DTPMP
'    TDTPMPM = ConcInhCalRisk(iRisk)
'    ConcInhCalRisk(iRisk) = SpeciationDTPMP(InhNoCal)  'Effective Inh Conc=soluble Inh
'    End If
'    If InhNoCal = 1 Then 'NTMP
'    TNTMPM = ConcInhCalRisk(iRisk)
'    ConcInhCalRisk(iRisk) = SpeciationNTMP(InhNoCal)  'Effective Inh Conc=soluble Inh
'    End If
'    If InhNoCal = 2 Then 'BHPMP
'    TBHPMPM = ConcInhCalRisk(iRisk)
'    ConcInhCalRisk(iRisk) = SpeciationBHPMP(InhNoCal)  'Effective Inh Conc=soluble Inh
'    End If
   
    SIRiskLow = SIRisk(InhNoCal, LoopTP, iRisk, 2)
    SIRiskHigh = 5
    For k = 1 To 10
    SICalRisk = (SIRiskLow + SIRiskHigh) / 2
    t0Cal = 10 ^ flogT0Cal(SICalRisk)
    If t0Cal = 0 Then   'If calculated t0=0 then the corresponding SIRisk has to be equal to 0
    SICalRisk = 0
    GoTo 22
    End If
    Dep1 = fCinhCal(SICalRisk, tInhRisk) - ConcInhCalRisk(iRisk)
    If Dep1 > 0 Then SIRiskHigh = SICalRisk
    If Dep1 < 0 Then SIRiskLow = SICalRisk
    Next k
22    If InhNoCal < 6 Or InhNoCal > 9 Then
    SIRisk(InhNoCal, LoopTP, iRisk + 1, 2) = SICalRisk
    If SIRisk(InhNoCal, LoopTP, iRisk + 1, 2) < 0 Then SIRisk(InhNoCal, LoopTP, iRisk + 1, 2) = 0
    End If
    If InhNoCal = 14 Then ' if mixed inhibitor is chosen and one of the inhibitor is #6,7,8,9 then SiRisk=null
    If InhNo1 > 5 Or InhNo1 < 10 Then SIRisk(InhNoCal, LoopTP, iRisk + 1, 2) = Null
    If InhNo2 > 5 Or InhNo2 < 10 Then SIRisk(InhNoCal, LoopTP, iRisk + 1, 2) = Null
    End If
    'If UseSR = 1 Then SIRisk(InhNoCal, LoopTP, iRisk + 1, 2) = 10 ^ SICalRisk
Next iRisk
End If

'calc anhydrite MIC MIC=0, Barite index =1 and calcite index =2, Anhydrite index=3
If mc(iCa) > 0.00001 And ma(iSO4) > 0.0001 Then
'If InhNoAn = 5 Then 'force calculation to use HDTMP
If TK > 373 Then
    AnExpon10 = Log10(tInh)                          'Calc at MIC=0, 2 hr tinh
    b = 885.8 + (AnExpon10 - 2.15) * TK
    cc = 2.83 * TK - 1766.3
    root2 = -cc / b
   SIRisk(InhNoAn, LoopTP, 1, 3) = root2    'SIRisk (Inh no, calc i, MIC=0, anhydrite)
   If SIRisk(InhNoAn, LoopTP, 1, 3) < 0 Then SIRisk(InhNoAn, LoopTP, 1, 3) = 0
   'If UseSR = 1 Then SIRisk(InhNoAn, LoopTP, 1, 3) = 10 ^ root2

   tInhRisk = tInh:  'calc at MIC=5 and 2hr
   For iRisk = 1 To NoRiskcalc - 1
   
'    ConcInhAnRisk(iRisk) = ConcInhAnRisk(iRisk) * Exp(-Exp(-EaRInh(InhNoAn) / TK + LnAInh(InhNoAn)) * tInhRisk) 'Effective Inh Conc=Inh Conc*f(ThermallyActive
    
    SIRiskLow = SIRisk(InhNoAn, LoopTP, iRisk, 3)
    SIRiskHigh = 5
    For k = 1 To 10
    SIAnRisk = (SIRiskLow + SIRiskHigh) / 2
    t0An = 10 ^ flogT0An(SIAnRisk)
    If t0An = 0 Then   'If calculated t0=0 then the corresponding SIRisk has to be equal to 0
    SIAnRisk = 0
    GoTo 33
    End If
   Dep1 = fCinhAn(SIAnRisk, tInhRisk) - ConcInhAnRisk(iRisk)
    If Dep1 > 0 Then SIRiskHigh = SIAnRisk
    If Dep1 < 0 Then SIRiskLow = SIAnRisk
    Next k
33  SIRisk(InhNoAn, LoopTP, iRisk + 1, 3) = SIAnRisk
    If SIRisk(InhNoAn, LoopTP, iRisk + 1, 3) < 0 Then SIRisk(InhNoAn, LoopTP, iRisk + 1, 3) = 0
   ' If UseSR = 1 Then SIRisk(InhNoAn, LoopTP, iRisk + 1, 3) = 10 ^ SIAnRisk
Next iRisk
End If
'
  If TK < 373 Then
     GypExpon10 = Log10(tInh)                          'Calc at MIC=0, 2 hr tinh
    SIRiskLow = 0
    SIRiskHigh = 1
    For k = 1 To 15
    SIGypRisk = (SIRiskLow + SIRiskHigh) / 2
    t0Gyp = 10 ^ flogT0Gyp(SIGypRisk)
    Dep1 = Log10(t0Gyp) - GypExpon10
    If Dep1 > 0 Then SIRiskLow = SIGypRisk
    If Dep1 < 0 Then SIRiskHigh = SIGypRisk
    Next k
    SIRisk(InhNoAn, LoopTP, 1, 3) = SIGypRisk    'SIRisk (Inh no, calc i, MIC=0, anhydrite)
    If SIRisk(InhNoAn, LoopTP, 1, 3) < 0 Then SIRisk(InhNoAn, LoopTP, 1, 3) = 0 'Gypsum(<373K) and Anhydrite(>373K) share the same SIRisk vector
    'If UseSR = 1 Then SIRisk(InhNoAn, LoopTP, 1, 3) = 10 ^ SIGypRisk

   tInhRisk = tInh: 'calc at MIC=? and 2hr
   For iRisk = 1 To NoRiskcalc - 1
    ConcInhGypRisk(iRisk) = ConcInhGypRisk(iRisk) * Exp(-Exp(-EaRInh(InhNoAn) / TK + LnAInh(InhNoAn)) * tInhRisk)
    SIRiskLow = SIRisk(InhNoAn, LoopTP, iRisk, 3)
    SIRiskHigh = 5
    For k = 1 To 10
    SIGypRisk = (SIRiskLow + SIRiskHigh) / 2
    t0Gyp = 10 ^ flogT0Gyp(SIGypRisk)
    If t0Gyp = 0 Then   'If calculated t0=0 then the corresponding SIRisk has to be equal to 0
    SIGypRisk = 0
    GoTo 44
    End If
    Dep1 = fCinhGyp(SIGypRisk, tInhRisk) - ConcInhGypRisk(iRisk)
    If Dep1 > 0 Then SIRiskHigh = SIGypRisk
    If Dep1 < 0 Then SIRiskLow = SIGypRisk
    Next k
44  If TK > 313 Then errmsg(10) = 10
    SIRisk(InhNoAn, LoopTP, iRisk + 1, 3) = SIGypRisk
    If SIRisk(InhNoAn, LoopTP, iRisk + 1, 3) < 0 Then SIRisk(InhNoAn, LoopTP, iRisk + 1, 3) = 0 'Gypsum(<373K) and Anhydrite(>373K) share the same SIRisk vector
    'If UseSR = 1 Then SIRisk(InhNoAn, LoopTP, iRisk + 1, 3) = 10 ^ SIGypRisk
Next iRisk
End If
'End If
End If
End Sub

Function fMeSSpeciation(im, igas)
'note that the speciation only done in aqueous phase.  Mass balance calc does not include equilibrium with gas and oil
'Cl speciation is not considered

HSOld = HS
FeOld = TFe: ZnOld = TZn: PbOld = TPb
ZP1 = (KstFeSaq * gAn(iHS) * gNAn(iHS) * gCat(iFe) * gNCat(iFe)) / (gNeut(iFeSaq) * gNNeut(iFeSaq) * aH)
ZP2 = BetaDot(iZnCl) * (gDot(iClDot) * ma(iCl)) * gDot(iZnDot) / gDot(iZnCl) + BetaDot(iZnCl2) * (gDot(iClDot) * ma(iCl)) ^ 2 * gDot(iZnDot) / gDot(iZnCl2) + BetaDot(iZnCl3) * (gDot(iClDot) * ma(iCl)) ^ 3 * gDot(iZnDot) / gDot(iZnCl3) + BetaDot(iZnCl4) * (gDot(iClDot) * ma(iCl)) ^ 4 * gDot(iZnDot) / gDot(iZnCl4)
ZP3 = BetaDot(iZnHS2) * gDot(iZnDot) * gDot(iHSDot) ^ 2 / gDot(iZnHS2)
ZP4 = BetaDot(iZnHS3) * gDot(iZnDot) * gDot(iHSDot) ^ 3 / gDot(iZnHS3)
ZP5 = BetaDot(iPbCl) * (gDot(iClDot) * ma(iCl)) * gDot(iPbDot) / gDot(iPbCl) + BetaDot(iPbCl2) * (gDot(iClDot) * ma(iCl)) ^ 2 * gDot(iPbDot) / gDot(iPbCl2) + BetaDot(iPbCl3) * (gDot(iClDot) * ma(iCl)) ^ 3 * gDot(iPbDot) / gDot(iPbCl3) + BetaDot(iPbCl4) * (gDot(iClDot) * ma(iCl)) ^ 4 * gDot(iPbDot) / gDot(iPbCl4)
ZP6 = BetaDot(iPbHS2) * gDot(iPbDot) * gDot(iHSDot) ^ 2 / gDot(iPbHS2)
ZP7 = BetaDot(iPbHS3) * gDot(iPbDot) * gDot(iHSDot) ^ 3 / gDot(iPbHS3)

If im = iFe And igas = 3 Then 'If FeS is precipitating
FeOld = TFe - ppt
mc(iFe) = (TFe - ppt) / (1 + ZP1 * HS)
Else
mc(iFe) = TFe / (1 + ZP1 * HS)
End If
If im = iZn And igas = 3 Then 'If ZnS is precipitating
ZnOld = TZn - ppt
mc(iZn) = (TZn - ppt) / (1 + ZP2 + ZP3 * HS ^ 2 + ZP4 * HS ^ 3)
Else
mc(iZn) = TZn / (1 + ZP2 + ZP3 * HS ^ 2 + ZP4 * HS ^ 3)
End If
If im = iPb And igas = 3 Then 'if PbS is precipitating
PbOld = TPb - ppt
mc(iPb) = (TPb - ppt) / (1 + ZP5 + ZP6 * HS ^ 2 + ZP7 * HS ^ 3)
Else
mc(iPb) = TPb / (1 + ZP5 + ZP6 * HS ^ 2 + ZP7 * HS ^ 3)
End If

If mc(iZn) > 0 Or mc(iPb) > 0 Then
    coef1 = 1
    coef2 = (mc(iZn) * ZP3 + mc(iPb) * ZP6) / (mc(iZn) * ZP4 + mc(iPb) * ZP7)
    coef3 = (hydHS + mc(iFe) * ZP1) / (mc(iZn) * ZP4 + mc(iPb) * ZP7)
   If igas = 3 Then
   coef4 = -(TH2Saq - ppt) / (mc(iZn) * ZP4 + mc(iPb) * ZP7)
   Else
   coef4 = -TH2Saq / (mc(iZn) * ZP4 + mc(iPb) * ZP7)
   End If
    a = coef1 * HS ^ 3 / coef4
    b = coef2 * HS ^ 2 / coef4
    If Abs(a) < 0.0001 Then
       If Abs(b) < 0.0001 Then
       HS = -coef4 / coef3
       Else
       Call QuadraticRoots(coef2, coef3, coef4, root1, root2)
       If root2 > root1 Then
       HS = root2
       Else
       HS = root1
       End If
       End If
       If HS <= 0 Then GoTo 1000
    Else
        Call CubicRoots(coef1, coef2, coef3, coef4, root1, root2, root3)
        HS = root1
        If root2 > HS Then HS = root2
        If root3 > HS Then HS = root3
            If HS <= 0 Then
            HS = 0
            GoTo 1000
            End If
       End If
ElseIf mc(iFe) > 0 Then
    If igas = 3 Then
    HS = (TH2Saq - ppt) / (hydHS + ZP1 * mc(iFe))
    Else
    HS = TH2Saq / (hydHS + ZP1 * mc(iFe))
    End If
Else
    GoTo 1000
End If
If TFe > 0 And HS > 0 And TZn > 0 And TPb > 0 Then
While Abs((FeOld / (1 + ZP1 * HS) - mc(iFe)) / mc(iFe)) > 0.001 Or Abs((PbOld / (1 + ZP5 + ZP6 * HS ^ 2 + ZP7 * HS ^ 3) - mc(iPb)) / mc(iPb)) > 0.001 Or Abs((ZnOld / (1 + ZP2 + ZP3 * HS ^ 2 + ZP4 * HS ^ 3) - mc(iZn)) / mc(iZn)) > 0.001 Or Abs((HSOld - HS) / HS) > 0.001
Call MeSWhileloop(im, igas)
Wend
End If
If TFe > 0 And HS > 0 And TZn = 0 And TPb > 0 Then
While Abs((FeOld / (1 + ZP1 * HS) - mc(iFe)) / mc(iFe)) > 0.001 Or Abs((PbOld / (1 + ZP5 + ZP6 * HS ^ 2 + ZP7 * HS ^ 3) - mc(iPb)) / mc(iPb)) > 0.001 Or Abs((HSOld - HS) / HS) > 0.001
Call MeSWhileloop(im, igas)
Wend
End If
If TFe > 0 And HS > 0 And TZn > 0 And TPb = 0 Then
While Abs((FeOld / (1 + ZP1 * HS) - mc(iFe)) / mc(iFe)) > 0.001 Or Abs((ZnOld / (1 + ZP2 + ZP3 * HS ^ 2 + ZP4 * HS ^ 3) - mc(iZn)) / mc(iZn)) > 0.001 Or Abs((HSOld - HS) / HS) > 0.001
Call MeSWhileloop(im, igas)
Wend
End If
If TFe = 0 And HS > 0 And TZn > 0 And TPb > 0 Then
While Abs((PbOld - mc(iPb)) / mc(iPb)) > 0.001 Or Abs((ZnOld / (1 + ZP2 + ZP3 * HS ^ 2 + ZP4 * HS ^ 3) - mc(iZn)) / mc(iZn)) > 0.001 Or Abs((HSOld - HS) / HS) > 0.001
Call MeSWhileloop(im, igas)
Wend
End If
If TFe = 0 And HS > 0 And TZn > 0 And TPb = 0 Then
While Abs((ZnOld / (1 + ZP2 + ZP3 * HS ^ 2 + ZP4 * HS ^ 3) - mc(iZn)) / mc(iZn)) > 0.001 Or Abs((HSOld - HS) / HS) > 0.001
Call MeSWhileloop(im, igas)
Wend
End If
If TFe = 0 And HS > 0 And TZn = 0 And TPb > 0 Then
While Abs((PbOld / (1 + ZP5 + ZP6 * HS ^ 2 + ZP7 * HS ^ 3) - mc(iPb)) / mc(iPb)) > 0.001 Or Abs((HSOld - HS) / HS) > 0.001
Call MeSWhileloop(im, igas)
Wend
End If

If TFe > 0 And HS > 0 And TZn = 0 And TPb = 0 Then
While Abs((FeOld - mc(iFe)) / mc(iFe)) > 0.001 Or Abs((HSOld - HS) / HS) > 0.001
FeOld = mc(iFe): HSOld = HS:
    If igas = 3 Then
    mc(iFe) = (TFe - ppt) / (1 + ZP1 * HS)
    HS = (TH2Saq - ppt) / (hydHS + ZP1 * mc(iFe))
    Else
    mc(iFe) = TFe / (1 + ZP1 * HS)
    HS = TH2Saq / (hydHS + ZP1 * mc(iFe))
    End If
Wend
End If

1000 fMeSSpeciation = Null
End Function
Sub MeSWhileloop(im, igas)
HSOld = HS
coef1 = 1
coef2 = (mc(iZn) * ZP3 + mc(iPb) * ZP6) / (mc(iZn) * ZP4 + mc(iPb) * ZP7)
coef3 = (hydHS + mc(iFe) * ZP1) / (mc(iZn) * ZP4 + mc(iPb) * ZP7)
coef4 = -TH2Saq / (mc(iZn) * ZP4 + mc(iPb) * ZP7)
    a = coef1 * HS ^ 3 / coef4
    b = coef2 * HS ^ 2 / coef4
    If Abs(a) < 0.0001 Then
       If Abs(b) < 0.0001 Then
       HS = -coef4 / coef3
       Else
       Call QuadraticRoots(coef2, coef3, coef4, root1, root2)
       If root2 > root1 Then
       HS = root2
       Else
       HS = root1
       End If
       End If
       If HS <= 0 Then GoTo 1000
    Else
        Call CubicRoots(coef1, coef2, coef3, coef4, root1, root2, root3)
        HS = root1
        If root2 > HS Then HS = root2
        If root3 > HS Then HS = root3
            If HS <= 0 Then
            HS = 0
            GoTo 1000
            End If
    End If
If im = iFe And igas = 3 Then 'If FeS is precipitating
mc(iFe) = (TFe - ppt) / (1 + ZP1 * HS)
Else
mc(iFe) = TFe / (1 + ZP1 * HS)
End If
If im = iZn And igas = 3 Then 'If ZnS is precipitating
mc(iZn) = (TZn - ppt) / (1 + ZP2 + ZP3 * HS ^ 2 + ZP4 * HS ^ 3)
Else
mc(iZn) = TZn / (1 + ZP2 + ZP3 * HS ^ 2 + ZP4 * HS ^ 3)
End If
If im = iPb And igas = 3 Then 'if PbS is precipitating
mc(iPb) = (TPb - ppt) / (1 + ZP5 + ZP6 * HS ^ 2 + ZP7 * HS ^ 3)
Else
mc(iPb) = TPb / (1 + ZP5 + ZP6 * HS ^ 2 + ZP7 * HS ^ 3)
End If
'mc(iFe) = TFe / (1 + ZP1 * HS)
'mc(iZn) = TZn / (1 + ZP2 + ZP3 * HS ^ 2 + ZP4 * HS ^ 3)
'mc(iPb) = TPb / (1 + ZP5 + ZP6 * HS ^ 2 + ZP7 * HS ^ 3)

1000 End Sub

Function flogT0Bar(si)
'    flogT0Bar = 1.5232 - 10.8784 / si - 895.6683 / TK + 5476.992 / (si * TK) + 0.8286 * mc(iCa) + 0.225 * Abs(Log10(mc(iBa) / ma(iSO4)))    'amy 2013 New
    flogT0Bar = -3.153194285 + -0.92635504 / si + 716.694987 / TK + 1879.905802 / (si * TK) + 0.189075542 * Abs(Log10(mc(iBa) / ma(iSO4)))    'Zhaoyi Dai 2020 New, up to 250 C with new SI
    If xMeOH > 0 Then
    flogT0Bar = flogT0Bar + 1.1136 * si * (1 - 1.2976 * xMeOH) * xMeOH  'Amy 2013
    End If
    If xMEG > 0 Then
    flogT0Bar = flogT0Bar + 4.8464 * xMEG                            'Amy 2013
    End If
End Function


Function fCinhBar(si, tInh)
    If InhNoBar = 20 Then
      bInhBar(InhNo1) = 10 ^ fbInhBar(InhNo1, si)
      bInhBar(InhNo2) = 10 ^ fbInhBar(InhNo2, si)
      bInhBarMixed = FracInhNo1 * bInhBar(InhNo1) + (1 - FracInhNo1) * bInhBar(InhNo2)
      fCinhBar = (1 / bInhBarMixed) * Log10(fSafetyBar * tInh / t0Bar)
    Else
      bInhBar(InhNoBar) = 10 ^ fbInhBar(InhNoBar, si)
      fCinhBar = (1 / bInhBar(InhNoBar)) * Log10(fSafetyBar * tInh / t0Bar)
    End If
End Function
Function fbInhBar(InhNo, si)
fbInhBar = (bi(InhNo, 1) + bi(InhNo, 2) * si + bi(InhNo, 3) / TK + bi(InhNo, 4) * Log10(1 / aH) + bi(InhNo, 5) * Abs(Log10(mc(iBa) / ma(iSO4))))
End Function
Function flogT0Cal(si)
    ' flogT0Cal = 4.22 - 13.8 / si - 1876.4 / TK + 6259.6 / (si * TK)
    'flogT0Cal = 0.8628 - 7.6874 / si - 563.2922 / TK + 3978.0293 / (si * TK) 'Chong 11/1/2018
'    flogT0Cal = -10.87 + 2.21 / si ^ 0.5 + 2295.27 / TK + -0.69 * Log10(mc(iCa) * HCO3) + 0.49 * Abs(Log10(mc(iCa) / ma(iCO3))) 'Chong & Joey 12/02/2020,using He, Fangfu, Chong's data
    flogT0Cal = -5.36 + 1.5 / si + 1779.17 / TK + 0.95 * Abs(Log10(mc(iCa) / ma(iHCO3)))  'Chong using All He, Fangfu, Chong's data, 12/07/2020 revisions made, more analysis needed
    
End Function

Function fCinhCal(si, tInh)
    If InhNoCal = 20 Then
        bInhCal(InhNo1) = 10 ^ fbInhCal(InhNo1, si)
        bInhCal(InhNo2) = 10 ^ fbInhCal(InhNo2, si)
        bInhCalMixed = FracInhNo1 * bInhCal(InhNo1) + (1 - FracInhNo1) * bInhCal(InhNo2)
        fCinhCal = (1 / bInhCalMixed) * Log10(fSafetyCal * tInh / t0Cal)
        Else
        bInhCal(InhNoCal) = 10 ^ fbInhCal(InhNoCal, si)
        fCinhCal = (1 / bInhCal(InhNoCal)) * Log10(fSafetyCal * tInh / t0Cal)
      End If
End Function
Function fbInhCal(InhNo, si)

fbInhCal = (ci(InhNo, 1) + ci(InhNo, 2) * si + ci(InhNo, 3) / TK + ci(InhNo, 4) * Log10(1 / aH) + ci(InhNo, 5) * Abs(Log10(mc(iCa) / HCO3)))
End Function
Function flogT0An(si)
 flogT0An = (2.15 - 2.83 / si - 885.8 / TK + 1766.3 / (si * TK))
End Function
Function fCinhAn(si, tInh)
        bInhAn(InhNoAn) = 10 ^ fbInhAn(InhNoAn, si)
        fCinhAn = (1 / bInhAn(InhNoAn)) * Log10(fsafetyAn * tInh / t0An)
End Function
Function fbInhAn(InhNo, si)

fbInhAn = ai(InhNo, 1) + ai(InhNo, 2) * si + ai(InhNo, 3) / TK + ai(InhNo, 4) * Log10(1 / aH) + ai(InhNo, 5) * Abs(Log10(mc(iCa) / ma(iSO4)))
End Function
Function flogT0Gyp(si)
 flogT0Gyp = (-6.2971 - 0.2212 / si + 2171.2067 / (TK * si ^ 0.2852) + 1.715 / (1 + Ist ^ 0.5))
End Function
Function fCinhGyp(si, tInh)
        bInhGyp(InhNoGyp) = 10 ^ fbInhGyp(InhNoGyp, si)
        fCinhGyp = (1 / bInhGyp(InhNoGyp)) * Log10(fsafetyGyp * tInh / t0Gyp)
End Function
Function fbInhGyp(InhNo, si)

fbInhGyp = gi(InhNo, 1) + gi(InhNo, 3) / (TK * si) + gi(InhNo, 4) * Log10(1 / aH) + gi(InhNo, 5) * Abs(Log10(mc(iCa) / ma(iSO4)))
End Function

Function SpeciationDTPMP(InhNo)

 TDTPMPM = TDTPMPM / 573000
  pKspDTPMPcr = 58.95 + 0.048 * Ist ^ 0.5 - 2084.5 / TK
  bH_DTPMP = 1.04 - 0.0047 * Ist ^ 0.5 - 5.97 / TK    'Protonation constant:  log10(Kstability) = aH + bH_DTPMP*|Charge|,aH=0
  bCa_DTPMP = 1.109 + 0.021 * Ist ^ 0.5 - 176 / TK
'Calculate the cumulative formation constants for inhibitor and Ca-complexes and output
    'First, calulate the acid protonation constants of the inhibitor.
    betaDTPMP(1, 1) = 10 ^ (12.58)                                  'SSP is defined as Option Base 1, hence, j is increased by 1
    betaDTPMP(2, 1) = betaDTPMP(1, 1) * 10 ^ (12.58 - 2.8 / 2)
    hydDTPMP = 1 + betaDTPMP(1, 1) * aH + betaDTPMP(2, 1) * aH ^ 2 'A DTPMP constant, only depends on pH
  For i = 3 To 10
    betaDTPMP(i, 1) = betaDTPMP(i - 1, 1) * 10 ^ (0 + (10 - i + 1) * bH_DTPMP)
    hydDTPMP = hydDTPMP + betaDTPMP(i, 1) * aH ^ i         'At a fixed pH hydDTPMP is a constant
'    Cells(15 + i, 2) = Log10(betaDTPMP(i, 1))
  Next i
    'Second, calculate the cumulative bDTPMP, or stability, constants for Ca-complexes
  For i = 2 To 10
  For j = 1 To (10 - i + 1) \ 2
    betaDTPMP(i, j + 1) = betaDTPMP(i, j) * 10 ^ ((10 - i - 2 * (j - 1)) * bCa_DTPMP) 'j count increased by 1
'    Cells(15 + i, 2 + j) = Log10(betaDTPMP(i, j + 1))
  Next j
  Next i
  
   
 Phn = 10 ^ (-pKspDTPMPcr - 3 * Log10(mc(iCa)) + 4 * pH)
'At a fixed pH, solve the two mass balance equations simultaneously by
'  substituting Phn_free into Ca and use half interval search on the Log10(Ca).
    logCaHigh = Log10(mc(iCa))
    logCaLow = -15
  For k = 1 To 15       'This will coverge to within 1/2^20 = 0.000001 of log10(Ca,M)
        logCa = (logCaHigh + logCaLow) / 2
        Ca = 10 ^ (logCa)
'For this specific value of Ca-free, calculate a value of Phn free
          DenomDTPMP = hydDTPMP
        For i = 2 To 10
        For j = 2 To (10 - i + 1) \ 2 + 1                           'j count increase by 1
           DenomDTPMP = DenomDTPMP + betaDTPMP(i, j) * aH ^ i * Ca ^ (j - 1)
        Next j
        Next i
          fCa = mc(iCa) - Ca    'fCa = (TCaM - Sum of all species that contain Ca)
                             'fCa = 0.00 at the correct value of free Ca(2+)
        For i = 2 To 10
        For j = 2 To (10 - i + 1) \ 2 + 1
           fCa = fCa - (j - 1) * betaDTPMP(i, j) * aH ^ i * Ca ^ (j - 1) * Phn 'Subtract all Ca containing  J count increase by 1 and Ca^ (j-1)
                                                             'species from TCaM
        Next j
        Next i
            If fCa > 0 Then logCaLow = logCa      'Half-interval-search convergence logic
            If fCa < 0 Then logCaHigh = logCa
  Next k
   If TDTPMPM > Phn * DenomDTPMP Then   'if Inh conc is greater than solubility then inh conc=solubility
   
          SpeciationDTPMP = Phn * DenomDTPMP * 573000
   Else
   SpeciationDTPMP = TDTPMPM * 573000
   InhSolLimit(InhNo) = 1
   End If

End Function
Function SpeciationBHPMP(InhNo)
     TBHPMPM = TBHPMPM / 685000
'Calculate T(K) and IS(M) dependenat constants and output results to Excel Sheet
  
  pKspBHPMPcr = 48.459 - 2.596 * Ist ^ 0.5 - 2997.5 / TK
  bH_BHPMP = 0.8369 - 0.08151 * Ist ^ 0.5 - 59.62 / TK     'Calcium complexation constant: log10(Kstability) = bCa*|Charge|
  bCa_BHPMP = 1.2203 - 0.2251 * Ist ^ 0.5 - 210.162 / TK

'Calculate the cumulative formation constants for inhibior and Ca-complexes and output
    'First, calulate the acid protonation constants of the inhibitor.
    betaBHPMP(1, 1) = 10 ^ (12.58)        'change to option base 1
    betaBHPMP(2, 1) = betaBHPMP(1, 1) * 10 ^ (12.58 - 2.8 / 2)
    hydBHPMP = 1 + betaBHPMP(1, 1) * aH + betaBHPMP(2, 1) * aH ^ 2 'A BHPMP constant, only depends on pH
  For i = 3 To 10
    betaBHPMP(i, 1) = betaBHPMP(i - 1, 1) * 10 ^ (2.0014 + (10 - i + 1) * bH_BHPMP)
    hydBHPMP = hydBHPMP + betaBHPMP(i, 1) * aH ^ i         'At a fixed pH hydBHPMP is
    'Worksheets("test").Cells(15 + i, 2) = Log10(betaBHPMP(i, 1))
    
  Next i
    'Second, calculate the cumulative beta, or stability, constants for Ca-complexes
  For i = 2 To 10
  For j = 1 To (10 - i + 1) \ 2
    betaBHPMP(i, j + 1) = betaBHPMP(i, j) * 10 ^ ((10 - i - 2 * (j - 1)) * bCa_BHPMP)
    'Worksheets("test").Cells(15 + i, 2 + j) = Log10(betaBHPMP(i, j + 1))
  Next j
  Next i
  
'At a fixed pH, solve the two mass balance equations simultaneously by
'  substituting Phn_free into Ca and use half interval search on the Log10(Ca).
    Phn = 10 ^ (-pKspBHPMPcr - 4 * Log10(mc(iCa)) + 2 * pH) 'Calculated conc. of free BHPMP^(10-)
    logCaHigh = Log10(mc(iCa))
    logCaLow = -15
  For k = 1 To 20       'This will coverge to within 1/2^20 = 0.000001 of log10(Ca,M)
        logCa = (logCaHigh + logCaLow) / 2
        Ca = 10 ^ (logCa)
'For this specific value of Ca-free, calculate a value of Phn free
          denomBHPMP = hydBHPMP
        For i = 2 To 10
        For j = 2 To (10 - i + 1) \ 2 + 1
           denomBHPMP = denomBHPMP + betaBHPMP(i, j) * aH ^ i * Ca ^ (j - 1)
        Next j
        Next i
          fCa = mc(iCa) - Ca    'fCa = (TCaM - Sum of all species that contain Ca)
                             'fCa = 0.00 at the correct value of free Ca(2+)
        For i = 2 To 10
        For j = 2 To (10 - i + 1) / 2 + 1
           fCa = fCa - (j - 1) * betaBHPMP(i, j) * aH ^ i * Ca ^ (j - 1) * Phn 'Subtract all Ca containing
                                                             'species from TCaM
        Next j
        Next i
            If fCa > 0 Then logCaLow = logCa      'Half-interval-search convergence logic
            If fCa < 0 Then logCaHigh = logCa
  Next k
If TBHPMPM > Phn * denomBHPMP Then
SpeciationBHPMP = Phn * denomBHPMP * 685000
InhSolLimit(InhNo) = 1
Else
SpeciationBHPMP = TBHPMPM * 685000
End If
End Function
Function SpeciationNTMP(InhNo)
TNTMPM = TNTMPM / 299000
  pKspNTMPcr = 32.92 - 5.32 * Ist ^ 0.5 + 1.76 * Ist - 2023 / TK
  aH_NTMP = 2.296 - 0.567 * Ist ^ 0.5 + 0.184 * Ist - 314 / TK 'Protonation constant:  log10(Kstability) = aH + bH*|Charge|
  bH_NTMP = 1.439 - 0.16 * Ist ^ 0.5 + 0.0255 * Ist - 54.3 / TK
  bCa_NTMP = 1.569 - 0.606 * Ist ^ 0.5 + 0.201 * Ist - 206 / TK       'Calcium complexation constant: log10(Kstability) = bCa*|Charge|
'Calculate the cumulative formation constants for inhibitor and Ca-complexes and output
    'First, calulate the acid protonation constants of the inhibitor.
    betaNTMP(1, 1) = 10 ^ (12.3)
    hydNTMP = 1 + betaNTMP(1, 1) * aH  'A ATMP constant, only depends on pH
  For i = 2 To 7
    betaNTMP(i, 1) = betaNTMP(i - 1, 1) * 10 ^ (aH_NTMP + (6 - i + 1) * bH_NTMP) 'change j=1 for option base 1 in SSP
    hydNTMP = hydNTMP + betaNTMP(i, 1) * aH ^ i         'At a fixed pH hydATMP is a constant
    'Worksheets("test").Cells(15 + i, 2) = Log10(betaNTMP(i, 1))
  Next i
    'Second, calculate the cumulative beta, or stability, constants for Ca-complexes
  For i = 1 To 7
  For j = 1 To (6 - i + 1) \ 2
    betaNTMP(i, j + 1) = betaNTMP(i, j) * 10 ^ ((6 - i - 2 * (j - 1)) * bCa_NTMP)
    'Worksheets("test").Cells(15 + i, 2 + j) = Log10(betaNTMP(i, j + 1))
  Next j
  Next i
  Phn = 10 ^ (-pKspNTMPcr - 2.5 * Log10(mc(iCa)) + pH)
'At a fixed pH, solve the Cs mass balance equations half interval search on the Log10(Ca).
    logCaHigh = Log10(mc(iCa))
    logCaLow = -15
  For k = 1 To 20       'This will coverge to within 1/2^20 = 0.000001 of log10(Ca,M)
        logCa = (logCaHigh + logCaLow) / 2
        Ca = 10 ^ (logCa)
'For this specific value of Ca-free, calculate a value of Phn free
          denomNTMP = hydNTMP
        For i = 1 To 7
        For j = 2 To (6 - i + 1) / 2 + 1
           denomNTMP = denomNTMP + betaNTMP(i, j) * aH ^ i * Ca ^ (j - 1)
        Next j
        Next i
          fCa = mc(iCa) - Ca    'fCa = (TCaM - Sum of all species that contain Ca)
                             'fCa = 0.00 at the correct value of free Ca(2+)
        For i = 1 To 7
        For j = 2 To (6 - i + 1) / 2 + 1
           fCa = fCa - (j - 1) * betaNTMP(i, j) * aH ^ i * Ca ^ (j - 1) * Phn 'Subtract all Ca containing
                                                             'species from TCaM
        Next j
        Next i
            If fCa > 0 Then logCaLow = logCa      'Half-interval-search convergence logic
            If fCa < 0 Then logCaHigh = logCa
            
  Next k
 If TNTMPM > Phn * denomNTMP Then
 SpeciationNTMP = Phn * denomNTMP * 299000
 InhSolLimit(InhNo) = 1
 Else
 SpeciationNTMP = TNTMPM * 299000
 End If
  
End Function

'********************************************************************************************
'1.  This subroutine is called by subroutines D, E, and G above.
Sub C1_ThermodynamicEquilConsts()
  TC = TK - 273.15:
  Psat = PsatH2O(TK)
  KgwCO2 = 55.508 / Exp(Log(Psat) - 9.14122 / (TK / 647.096) + 2.8192 * (1 - TK / 647.096) ^ 0.355 / (TK / 647.096) + 11.28516 * (TK / 647.096) ^ -0.41 * Exp(1 - TK / 647.096) - 0.8066) 'IUPAC 2012 KH, unit m/bar
  dV = (37.88 - 0.14442 * TC + 0.001243 * TC ^ 2 - 0.0000044738 * TC ^ 3 + 0.000000005726 * TC ^ 4) * 0.001 ' partial molar volume at infinite, Vinfinite (l/mol)
If TK <= 373.15 Then KgwCO2 = KgwCO2 * (Exp(dV * (PBar - 1) / RBar / TK + 0.0000067 / (2 * RBar * TK) * (PBar - Psat) ^ 2) ^ -1) / 14.503774 'unit mol/Kg/psia
If TK > 373.15 Then KgwCO2 = KgwCO2 * (Exp(dV * (PBar - 1) / RBar / TK + 0.0000067 / (2 * RBar * TK) * (PBar - Psat) ^ 2) ^ -1) / 14.503774 'unit mol/Kg/psia

If TC <= 100 Then Psat = 1.013254 ' Note that Psat was set to 1 atm at <100 C for the convenience of calculate pressure dependence

q1 = -441.490479: q2 = 26901.0527: q3 = 157.2016907: q4 = -0.07219967: q5 = -2003878.4  'From IUPAC 2012 JPhys Chem Ref Data 41:013105
q6 = -19.57801521: q7 = 925.6200149: q8 = 6.714256299: q9 = 0.003645431058: q10 = -0.1743884044:
q11 = -0.00124018735
K1H2CO3 = 10 ^ (q1 + q2 / TK + q3 * Log10(TK) + q4 * TK + q5 / (TK) ^ 2 + (PBar - Psat) * (q6 / TK + q7 / TK ^ 2 + q8 * Log10(TK) / TK) + (PBar - Psat) ^ 2 * (q9 / TK + q10 / TK ^ 2 + q11 * Log10(TK) / TK))

q1 = -332.5306: q2 = 17540.07: q3 = 120.13393: q4 = -0.06545969: q5 = -1277752.3: q6 = -12.81797624
q7 = 603.2417035: q8 = 4.419625804: q9 = 0.00139842542: q10 = -0.07141847943: q11 = -0.0004736672395
K2HCO3 = 10 ^ (q1 + q2 / TK + q3 * Log10(TK) + q4 * TK + q5 / (TK) ^ 2 + (PBar - Psat) * (q6 / TK + q7 / TK ^ 2 + q8 * Log10(TK) / TK) + (PBar - Psat) ^ 2 * (q9 / TK + q10 / TK ^ 2 + q11 * Log10(TK) / TK))

KHAc = 10 ^ ((-1) * (-66.227 + 3216.269 / TK + 10.566 * Log(TK))) * Exp(-(-15.82 - 0.0219 * TC) * (Patm - 1) / (R * TK))
  
  RhoH2OTP = (999.83952 + 16.945176 * TC - 0.0079870401 * TC ^ 2 - 0.000046170461 * TC ^ 3 + 0.00000010556302 * TC ^ 4 - 2.8054253E-10 * TC ^ 5) / (1 + 0.01687985 * TC) ' Density of water at TP, Wagner and Kruse (1998) "Properties of water and steam.
  RhoH2OTP = RhoH2OTP + (0.043922 - 0.000076 * TC + 0.000000126 * TC ^ 2 + 0.00000000319 * TC ^ 3) * (Patm - 1)
  KH2O = 10 ^ (-4.098 - 3245.2 / TK + 223620 / TK ^ 2 - 39840000 / TK ^ 3 + (13.957 - 1262.3 / TK + 856410 / TK ^ 2) * Log10(RhoH2OTP / 1000)) 'Eq adapted from Duan and Li, 2008 Geochim Cosmochimica 72:5128-5145, adopted from Marshall and Franck (1981) J Phys Chem Ref Data 10(2):295-304
  
  'K1H2S = 10 ^ ((-1) * (-12.41 + 3539.1 / TK + 0.02522 * TK)) * Exp(-(-14.8 + 0.002 * Tc - 0.0004 * Tc ^ 2) * (patm - 1) / (r * TK))
  q1 = 782.43945: q2 = 0.361261: q3 = -0.00016722: q4 = -20565.7315: q5 = -142.741722
  K1H2S = 10 ^ (q1 + q2 * TK + q3 * TK ^ 2 + q4 / TK + q5 * Log(TK)) * Exp(-(-14.8 + 0.002 * TC - 0.0004 * TC ^ 2) * (Patm - Psat) / (R * TK)) 'adopted from Suleimenov and Seward, 1997 Geochim Cosmochim

  'K2HS = 10 ^ ((-1) * (-9.53 + 4668 / TK + 0.02276 * TK))  'Naomov, 12.91 at 25 C. Considerable differences exist about K2H2S & it is not used in this program.
'K2HS pudated by June 2017, use pressure dependence for K2HCO3
q1 = 137.2755: q2 = -8235.4184: q3 = -22.5503: q4 = 0.0162:  q6 = -12.81797624
q7 = 603.2417035: q8 = 4.419625804: q9 = 0.00139842542: q10 = -0.07141847943: q11 = -0.0004736672395
K2HS = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + (PBar - Psat) * (q6 / TK + q7 / TK ^ 2 + q8 * Log10(TK) / TK) + (PBar - Psat) ^ 2 * (q9 / TK + q10 / TK ^ 2 + q11 * Log10(TK) / TK))
  
  KNH4 = 10 ^ (-16.79744216 - 1893.658478 / TK + 5.614302869 * Log10(TK)) * Exp((-26.43 + 0.0889 * TC - 0.000905 * TC ^ 2) / (R * TK) * (PBar - Psat)) * _
  Exp(0.5 * 0.001 * ((-5.03 + 0.0814 * TC) / (R * TK)) * (PBar - Psat) ^ 2)  'Solmineq88 and Stumm and Morgan
  
  KH3BO3 = 10 ^ (50.0370439 - 3283.059242 / TK - 19.50251187 * Log10(TK)) * Exp((-29.48 - 0.1622 * TC + 0.002608 * TC ^ 2) / (R * TK) * (PBar - Psat)) * _
  Exp(0.5 * 0.001 * ((-2.84) / (R * TK)) * (PBar - Psat) ^ 2)  'Solmineq88 and Stumm and Morgan for P effec
  
  'The following Henry's Law constants have the units of KH(molality/psia).
  KgoCO2 = 10 ^ ((-1) * (2.198 + 0.00253 * TF - 0.000001681 * TF ^ 2 + 0.000038 * Ppsia))  'Shiliang He's T and pressure dependence
  KgwCH4 = 10 ^ ((-1) * (3.798 + 0.004136 * TF - 0.000009486 * TF ^ 2 + 0.000038 * Ppsia))
  KgoCH4 = 10 ^ ((-1) * (2.728 + 0.002546 * TF - 0.000004265 * TF ^ 2 + 0.000038 * Ppsia))
  KgoH2S = 10 ^ ((-1) * (1.57 + 0.005043 * TF - 0.000005311 * TF ^ 2 + 0.000038 * Ppsia))
    
    ln_H_T_H2S = (13788 / TK - 185.19 + 29.087 * Log(TK) - 0.027637 * TK - 1445200 / TK ^ 2) 'Henry's constant 'Bar/molality, Kassa
    dV = (33.18 + 0.092661 * TC - 0.00054853 * TC ^ 2 + 0.0000015354 * TC ^ 3 - 0.0000000015459 * TC ^ 4) * 0.001 ' partial molar volume at infinite, Vinfinite (l/mol)
    KgwH2S = (Exp(ln_H_T_H2S) * Exp(dV * (Patm * 1.01353 - Psat) / RBar / TK)) ^ (-1) / 14.503774  'molality/psia
    

  If (PBar - Psat) <= 500 Then
  KspCalcite = 10 ^ (-171.9065 - 0.077993 * TK + 2839.319 / TK + 71.595 * Log10(TK)) * 10 ^ ((0.514 - 0.000197 * TC + 1.7096E-15 * TC ^ 6) * (PBar - Psat) / 500)
  End If
  If (PBar - Psat) > 500 Then
  KspCalcite = 10 ^ (-171.9065 - 0.077993 * TK + 2839.319 / TK + 71.595 * Log10(TK)) * 10 ^ (0.514 - 0.000197 * TC + 1.7096E-15 * TC ^ 6) * 10 ^ (((0.928 - 0.000079 * TC + 2.1485E-15 * TC ^ 6) - (0.514 - 0.000197 * TC + 1.7096E-15 * TC ^ 6)) * ((PBar - Psat) - 500) / 500)
  End If
  
  If (PBar - Psat) <= 500 Then KspBarite = 10 ^ (136.035 - 7680.41 / TK - 48.595 * Log10(TK)) * 10 ^ ((0.394 - 0.0001119 * TC + 1.5305E-15 * TC ^ 6) * (PBar - Psat) / 500)
  If (PBar - Psat) > 500 Then KspBarite = 10 ^ (136.035 - 7680.41 / TK - 48.595 * Log10(TK)) * 10 ^ (0.394 - 0.0001119 * TC + 1.5305E-15 * TC ^ 6) * 10 ^ (((0.674 + 0.0001229 * TC + 1.9202E-15 * TC ^ 6) - (0.394 - 0.0001119 * TC + 1.5305E-15 * TC ^ 6)) * ((PBar - Psat) - 500) / 500)

   'Dai V2015 0303   from Howell's paper
KspCelestite = Exp(-4762.71 - 0.878035 * TK + 0.000184788 * TK ^ 2 - 320587.4 / TK + 731.756 * Log(TK) + 99430.6 * Log(TK) / TK - 2.9811 * (TK - 263) / TK * Log(TK - 263))  'Howell & Raju 1992
dV = -(337.2 + -1.754 * TK + 0.002658 * TK ^ 2) * 0.001
dk = (-388.1 + 2.26 * TK + -0.00338 * TK ^ 2) * 0.000001
If TK <= 373.15 Then KspCelestite = KspCelestite * (Exp(-dV * (PBar - 1) / RBar / TK + dk / (2 * RBar * TK) * (PBar - 1) ^ 2))
If TK > 373.15 Then KspCelestite = KspCelestite * (Exp(-dV * (PBar - Psat) / RBar / TK + dk / (2 * RBar * TK) * (PBar - Psat) ^ 2))

  'KspHemihydrate = 10 ^ ((-1) * (-183.603 + 8033.771 / TK + 28.173 * Log(TK))) * 10 ^ ((0.423 - 0.0001 * TC) * Patm / 500)
  If (PBar - Psat) <= 500 Then KspHemihydrate = 10 ^ ((-1) * (-183.603 + 8033.771 / TK + 28.173 * Log(TK))) * 10 ^ ((0.423 - 0.0001 * TC + 1.6176E-15 * TC ^ 6) * (PBar - Psat) / 500)
  If (PBar - Psat) > 500 Then KspHemihydrate = 10 ^ ((-1) * (-183.603 + 8033.771 / TK + 28.173 * Log(TK))) * 10 ^ (0.423 - 0.0001 * TC + 1.6176E-15 * TC ^ 6) * 10 ^ (((0.729 + 0.0001576 * TC + 2.0302E-15 * TC ^ 6) - (0.423 - 0.0001 * TC + 1.6176E-15 * TC ^ 6)) * ((PBar - Psat) - 500) / 500)
  
'==========================Dai 20151102, Helgeson, with new fitted T dependence
    If (PBar - Psat) <= 500 Then
    KspGypsum = 10 ^ (-128.9622 + 1.761129 * TK - 0.01484172 * TK ^ 2 + 0.000837554 * TK ^ 2.5 - 0.00001384613 * TK ^ 3) * 10 ^ ((0.328 + 0.0000589 * TC + 1.612E-15 * TC ^ 6) * (PBar - Psat) / 500)
    End If
    If (PBar - Psat) > 500 Then
    KspGypsum = 10 ^ (-128.9622 + 1.761129 * TK - 0.01484172 * TK ^ 2 + 0.000837554 * TK ^ 2.5 - 0.00001384613 * TK ^ 3) * 10 ^ (0.328 + 0.0000589 * TC + 1.612E-15 * TC ^ 6) * 10 ^ (((0.553 + 0.0004785 * TC + 2.018E-15 * TC ^ 6) - (0.328 + 0.0000589 * TC + 1.612E-15 * TC ^ 6)) * ((PBar - Psat) - 500) / 500)
    End If

'    If (PBar - Psat) <= 500 Then
'    KspAnhydrite = 10 ^ (1.113065 - 0.01151165 * TK - 0.0001750558 * TK ^ 2 + 0.00001450899 * TK ^ 2.5 - 0.0000003246635 * TK ^ 3) * 10 ^ ((0.423 - 0.0001 * TC + 1.6176E-15 * TC ^ 6) * (PBar - Psat) / 500)
'    End If
'    If (PBar - Psat) > 500 Then
'      KspAnhydrite = 10 ^ (1.113065 - 0.01151165 * TK - 0.0001750558 * TK ^ 2 + 0.00001450899 * TK ^ 2.5 - 0.0000003246635 * TK ^ 3) * 10 ^ (0.423 - 0.0001 * TC + 1.6176E-15 * TC ^ 6) * 10 ^ (((0.729 + 0.0001576 * TC + 2.0302E-15 * TC ^ 6) - (0.423 - 0.0001 * TC + 1.6176E-15 * TC ^ 6)) * ((PBar - Psat) - 500) / 500)
'    End If
    
    'added by G.D. 10212019
    KspAnhydrite = 10 ^ ((-44.9380794269878 + 1.08048295151073E-02 * PBar) * Log10(TK) + (1.818855325 * PBar - 4943.71187) / TK - 3.19664522256897E-02 * PBar + 123.46568)

    
  KspSiderite = Exp(129.97 / TK - 50.205 + 7.3143 * Log(TK) - 0.052913 * TK) * Exp(-(-48.76 - 0.5304 * TC) * (Patm - Psat) / (R * TK))
  'KspRaSO4 = 10 ^ (137.98 - 8346 / TK - 48.595 * Log10(TK)) * 10 ^ ((0.349 - 0.0001119 * Tc) * patm / 500) 'P-effect assumed same as barite
  If (PBar - Psat) <= 500 Then KspRaSO4 = 10 ^ (137.98 - 8346 / TK - 48.595 * Log10(TK)) * 10 ^ ((0.394 - 0.0001119 * TC + 1.5305E-15 * TC ^ 6) * (PBar - Psat) / 500)
  If (PBar - Psat) > 500 Then KspRaSO4 = 10 ^ (137.98 - 8346 / TK - 48.595 * Log10(TK)) * 10 ^ (0.394 - 0.0001119 * TC + 1.5305E-15 * TC ^ 6) * 10 ^ (((0.674 + 0.0001229 * TC + 1.9202E-15 * TC ^ 6) - (0.394 - 0.0001119 * TC + 1.5305E-15 * TC ^ 6)) * ((PBar - Psat) - 500) / 500)

'Dai fitted with Ksp_T from Pitzer 1984_Table 5, and V0 from Kaasa, and K0 from Millero 1987
KspHalite = 10 ^ (462.55683140897 + 0.225843153104659 * TK - 11062.1698808439 / TK - 84.5268944091097 * Log(TK) - 1.08055601606581E-04 * TK ^ 2)

dV = (-14.156 + 0.22255 * TC - 0.0031441 * TC ^ 2 + 0.00001744 * TC ^ 3 - 0.000000045213 * TC ^ 4) * 0.001
dk = -1.183398E-14 * TK ^ 4 + 2.019932E-11 * TK ^ 3 - 0.00000001332746 * TK ^ 2 + 0.000003882627 * TK - 0.0004193603
KspHalite = KspHalite * (Exp(-dV * (PBar - Psat) / RBar / TK + dk / (2 * RBar * TK) * (PBar - Psat) ^ 2))
  
  'KspFeS = 10 ^ ((-1) * (-13.53 + 2731.3 / TK + 0.02654 * TK)) * 10 ^ ((0.2 - 0.00005 * TC + 1.044E-15 * TC ^ 6) * PBar / 500) 'Naomov curve fitted, Similar to Machinowite.
  'KspZnS = 10 ^ (5.6346 - 3554.7311 / TK - 0.0185 * TK) * 10 ^ ((0.198 + 0.0000094 * Tc + 1.049E-15 * Tc ^ 6) * PBar / 500) 'Spaelerite curve fitted from Solmineq.
  'KspZnS = 10 ^ (10.2221 - 4322.0035 / TK - 0.0247 * TK) * 10 ^ ((0.198 + 0.0000094 * TC + 1.049E-15 * TC ^ 6) * PBar / 500) 'ZnS Ksp based on Bourcier and Barnes (100-250C data and pKsp at 25C by Visual Minteq and PhreeQC)

  'KspFeS = 10 ^ ((-1) * (-131.7597 + 6433.7653 / TK + 19.9621 * Log(TK))) * 10 ^ ((0.2 - 0.00005 * TC + 1.044E-15 * TC ^ 6) * PBar / 500) 'Naomov curve fitted, Similar to Machinowite.
  'KspFeS = 10 ^ ((-1) * (-131.083 + 5983.56 / TK + 20.0643 * Log(TK))) * 10 ^ ((0.2 - 0.00005 * TC + 1.044E-15 * TC ^ 6) * PBar / 500) 'Xin new fitting 10/23/19
  KspFeS = 10 ^ ((-1) * (-129.964067035986 + 6151.50521920783 / TK + 19.7824266766714 * Log(TK))) * 10 ^ ((0.2 - 0.00005 * TC + 1.044E-15 * TC ^ 6) * PBar / 500) 'Xin new fitting 12/1/20
  
  KspZnS = 10 ^ ((-1) * (-138.1059 + 8665.5519 / TK + 21.0391 * Log(TK))) * 10 ^ ((0.198 + 0.0000094 * TC + 1.049E-15 * TC ^ 6) * PBar / 500) 'Sphalerite based onTagirov and Seward, 2010
  KspPbS = 10 ^ ((-1) * (-113.4984 + 9436.5178 / TK + 16.9658 * Log(TK))) * 10 ^ ((0.202 - 0.0000663 * TC + 9.142E-16 * TC ^ 6) * PBar / 500) 'Galena from Solmineq
  KspFeSAm = 10 ^ ((-1) * (-14.12 + 2731.3 / TK + 0.02654 * TK)) * 10 ^ ((0.2 - 0.00005 * TC + 1.044E-15 * TC ^ 6) * PBar / 500) 'modified from FeS using Davison's 25C Ksp=2.95
  KspTrot = 10 ^ (-101.92925047219 + 2310.1324958895 / TK + 17.89882023677 * Log(TK) - 0.039206108448706 * TK) * 10 ^ ((0.2 - 0.00005 * TC + 1.044E-15 * TC ^ 6) * PBar / 500) 'modified from FeS using Davison's 25C Ksp=2.95
  KspPyrr = 10 ^ (-108.04725226365 + 2391.1732648763 / TK + 19.064810519867 * Log(TK) - 4.15135620025018E-02 * TK) * 10 ^ ((0.2 - 0.00005 * TC + 1.044E-15 * TC ^ 6) * PBar / 500) 'modified from FeS using Davison's 25C Ksp=2.95
  
  KspCaF2 = 10 ^ (66.348 - 4298.2 / TK - 25.271 * Log10(TK)) * 10 ^ ((0.399 - 0.0000047 * TC) * Patm / 500) 'Fluorite Stumm and Morgan page 353
  KspDol = 10 ^ ((-1) * (257.2181 + 0.1438 * TK - 3197.3234 / TK - 109.6227 * Log10(TK))) * 10 ^ ((0.982 - 0.0003101 * TC) * Patm / 500) 'Solmineq, Add by Amy, New for SSP 2011
  KspDol = 10 ^ ((-1) * (-175.9 + 6835.4 / TK + 68.727 * Log10(TK))) * 10 ^ ((0.982 - 0.0003101 * TC) * Patm / 500) 'From D. Langmuir (1997)page 206
  DielecConst = 1 / (0.0068 * xMeOH ^ 2 + 0.0115 * xMeOH + 0.0128)
  KstCaHCO3 = 0.034877 * Exp(139190# / DielecConst / TK) * Exp(-5.1328E-38 * (2.528E+23 * IStCosolvent / DielecConst / TK) ^ 0.5 / (1.5365E-33 * DielecConst * TK * (1 + 0.00000000024 * (2.528E+23 * IStCosolvent / DielecConst / TK) ^ 0.5)))   ' From Morel and Hering p.399 assumed a radius of 2.4 A
 
''Use Duan and Li's  pressure dependence for K1, K2 carbonates
'  KH4SiO4 = 10 ^ ((52.6007 - 3968.3828 / TK - 8.6203 * Log(TK)))
'  KH3SiO3 = 10 ^ ((93.4549 - 5990.2009 / TK - 14.926 * Log(TK)))
'
'  If TK <= 373.15 Then
'  KH4SiO4 = Exp(Log(KH4SiO4) + (-45.08004597 / TK + 2131.318848 / TK ^ 2 + 6.714256299 / TK * Log(TK)) * (patm * 1.013254 - 1) + (0.008393915212 / TK - 0.4015441404 / TK ^ 2 - 0.00124018735 / TK * Log(TK)) * (patm * 1.013254 - 1) ^ 2)
'  KH3SiO3 = Exp(Log(KH3SiO3) + (-29.51448102 / TK + 1389.015354 / TK ^ 2 + 4.419625804 / TK * Log(TK)) * (patm * 1.013254 - 1) + (0.003219993525 / TK - 0.1644471261 / TK ^ 2 - 0.0004736672395 / TK * Log(TK)) * (patm * 1.013254 - 1) ^ 2)
'  End If
'  If TK > 373.15 Then
'  KH4SiO4 = Exp(Log(KH4SiO4) + (-45.08004597 / TK + 2131.318848 / TK ^ 2 + 6.714256299 / TK * Log(TK)) * (patm * 1.013254 - Psat) + (0.008393915212 / TK - 0.4015441404 / TK ^ 2 - 0.00124018735 / TK * Log(TK)) * (patm * 1.013254 - Psat) ^ 2)
'  KH3SiO3 = Exp(Log(KH3SiO3) + (-29.51448102 / TK + 1389.015354 / TK ^ 2 + 4.419625804 / TK * Log(TK)) * (patm * 1.013254 - Psat) + (0.003219993525 / TK - 0.1644471261 / TK ^ 2 - 0.0004736672395 / TK * Log(TK)) * (patm * 1.013254 - Psat) ^ 2)
'  End If
''Duan and Li
'  KspChrysotile = 10 ^ ((-31.061 + 12947.1725 / TK + 3.4429 * Log(TK))) * 10 ^ ((0.432 + 0.0001186 * Tc) * patm / 500) 'Ksp for Chrysolite, Mg3Si2O5(OH)4, No. 30 from SOLMINEQ.88
'  KspDiopside = 10 ^ ((-6.1457 + 7136.8922 / TK + 0.3132 * Log(TK))) * 10 ^ ((0.422 - 0.0000558 * Tc) * patm / 500) 'Ksp for Diopside, CaMgSi2O6, No. 40 from SOLMINEQ.88
'  KspGreenalite = 10 ^ ((-4.7097 + 8899.727 / TK - 0.4566 * Log(TK))) * 10 ^ ((0.645 - 0.000798 * Tc) * patm / 500)  'Ksp for Greenalite, Fe3Si2O5(OH)4, No. 50 from SOLMINEQ.88
'  KspQuartz = 10 ^ ((-7.4187 - 831.5246 / TK + 1.105 * Log(TK))) * 10 ^ ((0.111 - 0.0000936 * Tc) * patm / 500) 'Ksp for Quartz, SiO2, No. 103 from SOLMINEQ.88
'  KspAmSilica = 10 ^ ((-3.8626 - 514.8137 / TK + 0.509 * Log(TK))) * 10 ^ ((0.118 - 0.0000936 * Tc) * patm / 500) 'Ksp for Amorphous Silica, SiO2, No. 111 from SOLMINEQ.88
  KspZnCO3 = 10 ^ ((-1) * (8.7334 - 2173.9249 / TK + 1.4880105 * Log(TK))) * 10 ^ ((0.468 - 0.000176 * TC) * Patm / 500)  'Ksp for Smithsonite from No. 174 Solimineq.88.
  KspCaOH2 = 10 ^ ((110.3408 - 4516.4997 / TK - 40.6657 * Log10(TK))) * 10 ^ ((0.528 - 0.0002789 * TC) * Patm / 500) 'Ksp for Porlandite from No. 99 Solimineq.88.
  KspMgOH2 = 10 ^ ((92.6256 - 4665.57436 / TK - 15.52458654 * Log(TK))) * 10 ^ ((0.484 - 0.0001633 * TC) * Patm / 500) 'Ksp for Brucite from No. 135 Solimineq.88.

'  KspHuntite = 10 ^ ((171.5342 - 4782.4811 / TK - 32.709 * Log(TK))) * 10 ^ ((1.942 - 0.0005414 * TC) * Patm / 500)    'Ksp for Huntite No. 55 from SOLMINEQ.88
'Revise Pressure dependence of SrCO3 and BaCO3,  Use Pressure dependence from Somoneq
  If PBar - Psat <= 500 Then
  KspSrCO3 = 10 ^ (155.6841 - 7272.6012 / TK - 56.8052 * Log10(TK)) * 10 ^ ((0.528 - 0.000259 * TC + 1.682E-15 * TC ^ 6) * (PBar - Psat) / 500)
  End If
  If PBar - Psat > 500 Then
  KspSrCO3 = 10 ^ (155.6841 - 7272.6012 / TK - 56.8052 * Log10(TK)) * 10 ^ ((0.528 - 0.000259 * TC + 1.682E-15 * TC ^ 6) * 10 ^ ((0.951 - 0.0001671 * TC + 2.114E-15 * TC ^ 6) - (0.528 - 0.000259 * TC + 1.682E-15 * TC ^ 6)) * ((PBar - Psat) - 500) / 500)
  End If
  If PBar - Psat <= 500 Then
  KspBaCO3 = 10 ^ (244.3819 - 11526.0874 / TK - 86.6577 * Log10(TK)) * 10 ^ ((0.523 - 0.0003039 * TC + 1.631E-15 * TC ^ 6) * (PBar - Psat) / 500)
  End If
  If PBar - Psat > 500 Then
  KspBaCO3 = 10 ^ (244.3819 - 11526.0874 / TK - 86.6577 * Log10(TK)) * 10 ^ (0.523 - 0.0003039 * TC + 1.631E-15 * TC ^ 6) * 10 ^ (((0.936 - 0.0002343 * TC + 2.05E-15 * TC ^ 6) - (0.523 - 0.0003039 * TC + 1.631E-15 * TC ^ 6)) * ((PBar - Psat) - 500) / 500)
  End If
'If pbar-psat <= 500 Then
'   KspMagnesite = 10 ^ (-425.6408 - 0.0982 * TK + 14063.7456 / TK + 161.4977 * Log10(TK)) * 10 ^ ((0.464 - 0.0000684 * Tc + 1.816E-15 * Tc ^ 6) * (pbar - psat) / 500)
'  End If
'  If pbar-psat > 500 Then
'   KspMagnesite = 10 ^ (-425.6408 - 0.0982 * TK + 14063.7456 / TK + 161.4977 * Log10(TK)) * 10 ^ (0.464 - 0.0000684 * Tc + 1.816E-15 * Tc ^ 6) * 10 ^ (((-0.198 + 0.00796 * Tc + 1.0345E-15 * Tc ^ 6) - (0.464 - 0.0000684 * Tc + 1.816E-15 * Tc ^ 6)) * ((pbar - psat) - 500) / 500)
'  End If
'  KspCaMgCO3 = 0.2 * KspCalcite + 0.8 * KspMagnesite ' CaMgSolid solution at 80% MgCO3, CaCO3

  '*********************New Silica for T=0-350 C
q1 = -69.27744384: q2 = -1.893100838: q3 = 11.76344126: q4 = -0.025416705: q5 = 0.0000102738: q6 = -19.57801521: q7 = 925.6200149: q8 = 6.714256299: q9 = 0.003645431058: q10 = -0.1743884044:
q11 = -0.00124018735                               'KH4SiO4 from Solmineq, Dai refit to 350C, pressure dependence from K1 for carbonic acid by IUPAC JPhy chem ref data 41:
If TK <= 373.15 Then KH4SiO4 = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 / (TK) ^ 2 + (PBar - 1) * (q6 / TK + q7 / TK ^ 2 + q8 * Log10(TK) / TK) + (PBar - 1) ^ 2 * (q9 / TK + q10 / TK ^ 2 + q11 * Log10(TK) / TK))
If TK > 373.15 Then KH4SiO4 = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 / (TK) ^ 2 + (PBar - Psat) * (q6 / TK + q7 / TK ^ 2 + q8 * Log10(TK) / TK) + (PBar - Psat) ^ 2 * (q9 / TK + q10 / TK ^ 2 + q11 * Log10(TK) / TK))
q1 = -104.8656231: q2 = 1.44107352: q3 = 18.76152428: q4 = -0.046106584: q5 = -0.0000299188: q6 = -12.81797624
q7 = 603.2417035: q8 = 4.419625804: q9 = 0.00139842542: q10 = -0.07141847943: q11 = -0.0004736672395
If TK <= 373.15 Then KH3SiO3 = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 / (TK) ^ 2 + (PBar - 1) * (q6 / TK + q7 / TK ^ 2 + q8 * Log10(TK) / TK) + (PBar - 1) ^ 2 * (q9 / TK + q10 / TK ^ 2 + q11 * Log10(TK) / TK))
If TK > 373.15 Then KH3SiO3 = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 / (TK) ^ 2 + (PBar - Psat) * (q6 / TK + q7 / TK ^ 2 + q8 * Log10(TK) / TK) + (PBar - Psat) ^ 2 * (q9 / TK + q10 / TK ^ 2 + q11 * Log10(TK) / TK))


q1 = 417.2882131: q2 = 1.474994811: q3 = -73.40388764: q4 = 0.110687481: q5 = 0.0000797508:
q6 = 0.432: q7 = 0.0001186: q8 = 1.7613E-15: q9 = 0.661: q10 = 0.0007287: q11 = 2.1954E-15 ''Ksp for Chrysolite, Mg3Si2O5(OH)4, No. 30 from SOLMINEQ.88
If PBar - Psat <= 500 Then
KspChrysotile = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 / (TK) ^ 2) * 10 ^ ((q6 + q7 * TC + q8 * TC ^ 6) * (PBar - Psat) / 500)
End If
If PBar - Psat > 500 Then
KspChrysotile = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 / (TK) ^ 2) * 10 ^ (q6 + q7 * TC + q8 * TC ^ 6) * 10 ^ (((q9 + q10 * TC + q11 * TC ^ 6) - (q6 + q7 * TC + q8 * TC ^ 6)) * ((PBar - Psat) - 500) / 500)
End If
q1 = 210.5283437: q2 = 1.482041773: q3 = -35.80594147: q4 = 0.043892489: q5 = -0.0000593566:
q6 = 0.422: q7 = -0.0000558: q8 = 2.113E-15: q9 = 0.638: q10 = 0.0001832: q11 = 1.37E-15 'Ksp for Diopside, CaMgSi2O6, No. 40 from SOLMINEQ.88
If PBar - Psat <= 500 Then
KspDiopside = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 / (TK) ^ 2) * 10 ^ ((q6 + q7 * TC + q8 * TC ^ 6) * (PBar - Psat) / 500)
End If
If PBar - Psat > 500 Then
KspDiopside = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 / (TK) ^ 2) * 10 ^ (q6 + q7 * TC + q8 * TC ^ 6) * 10 ^ (((q9 + q10 * TC + q11 * TC ^ 6) - (q6 + q7 * TC + q8 * TC ^ 6)) * ((PBar - Psat) - 500) / 500)
End If

q1 = 201.8967952: q2 = 6.283898117: q3 = -32.54753804: q4 = 0.020272784: q5 = 0.044972535: q6 = 0.645: q7 = -0.000798: q8 = 1.4829E-15: q9 = 1.156: q10 = -0.0007986: q11 = 2.0008E-15
'Ksp for Greenalite, Fe3Si2O5(OH)4, No. 50 from SOLMINEQ.88
If PBar - Psat <= 500 Then
KspGreenalite = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 / (TK) ^ 2) * 10 ^ ((q6 + q7 * TC + q8 * TC ^ 6) * (PBar - Psat) / 500)
End If
If PBar - Psat > 500 Then
KspGreenalite = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 / (TK) ^ 2) * 10 ^ (q6 + q7 * TC + q8 * TC ^ 6) * 10 ^ (((q9 + q10 * TC + q11 * TC ^ 6) - (q6 + q7 * TC + q8 * TC ^ 6)) * ((PBar - Psat) - 500) / 500)
End If
q1 = -38.98708976: q2 = 1.465048127: q3 = 6.604416649: q4 = -0.008608808: q5 = -0.0000366598
q6 = 0.111: q7 = -0.0000936: q8 = 4.53E-17: q9 = 0.208: q10 = -0.000153: q11 = 5.59E-17 'Ksp for Quartz, SiO2, No. 103 from SOLMINEQ.88
If PBar - Psat <= 500 Then
KspQuartz = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 / (TK) ^ 2) * 10 ^ ((q6 + q7 * TC + q8 * TC ^ 6) * (PBar - Psat) / 500)
End If
If PBar - Psat > 500 Then
KspQuartz = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 / (TK) ^ 2) * 10 ^ (q6 + q7 * TC + q8 * TC ^ 6) * 10 ^ (((q9 + q10 * TC + q11 * TC ^ 6) - (q6 + q7 * TC + q8 * TC ^ 6)) * ((PBar - Psat) - 500) / 500)
End If
q1 = -22.01528297: q2 = 1.353509335: q3 = 3.633407549: q4 = -0.004631088: q5 = -0.0000366598
q6 = 0.118: q7 = -0.0000936: q8 = 4.53E-17: q9 = 0.216: q10 = -0.000153: q11 = 5.59E-17 'Amorphous silica, No 111 from SOLMINEQ.88
If PBar - Psat <= 500 Then
KspAmSilica = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 / (TK) ^ 2) * 10 ^ ((q6 + q7 * TC + q8 * TC ^ 6) * (PBar - Psat) / 500)
End If
If PBar - Psat > 500 Then
KspAmSilica = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 / (TK) ^ 2) * 10 ^ (q6 + q7 * TC + q8 * TC ^ 6) * 10 ^ (((q9 + q10 * TC + q11 * TC ^ 6) - (q6 + q7 * TC + q8 * TC ^ 6)) * ((PBar - Psat) - 500) / 500)
End If
Psat = PsatH2O(TK) ' reset Psat to vapor pressure of water

'D for Ra partition to sulfates and carbonates from Langmuir & Melchior Geochim Cosmochim Acta 49: 2423 1985 (0-100 C)
  DRaBarite = 10 ^ (428.2 / TK - 1.181) 'Langmuir & Melchior
  DRaCelestite = 10 ^ (1438 / TK - 2.375)
  DRaAnhydrite = 10 ^ (1930 / TK - 3.57)
  DRaCalcite = 10 ^ (40.53 / TK - 0.2221)
  GammaSolidRaBarite = 266.6258 / 1.987 / TK    'Zhu Ceoghimica Cosmochimica Acta 2004
  GammaSolidRaCelestite = 1950.176 / 1.987 / TK
  GammaSolidRaAnhydrite = GammaSolidRaCelestite                   'Set the solid activity or Ra(Anhydrite)=Ra(Celestite)
'Xin Wang
'KstFeSaq = 10 ^ ((-1) * (-3.41334023 + 1672.38358388 / TK + 0.0000166952 * Log(TK)))
'KstFeSaq = 10 ^ ((-1) * (-4.725394 + 2102.78004 / TK + 0.0387598 * Log(TK))) '10/23/19 fit
'KstFeSaq = 10 ^ ((-1) * (-4.734781643 + 2103.08899657 / TK + 0.016903071 * Log(TK))) '11/1/19 fit
KstFeSaq = 10 ^ ((-1) * (-4.57800335606811 + 1772.69547293922 / TK + 0.386641958182017 * Log10(TK))) '1/19/20,Xin new fitted, ensures gc(iFe) is reasonable at all 10 m

'Zn and Pb complexes
BetaDot(iZnCl) = 10 ^ (659.6174 + 0.3209708 * TK - 0.000115975 * TK ^ 2 - 15493.94 / TK - 121.5629 * Log(TK)) 'Solmineq, value similar to Ruaya and Seward 1986
BetaDot(iZnCl2) = 10 ^ (-4283.384 - 2.106234 * TK + 0.0009509436 * TK ^ 2 + 97639.55 / TK + 789.8018 * Log(TK))
BetaDot(iZnCl3) = 10 ^ (679.9657 + 0.3263276 * TK - 0.0001204947 * TK ^ 2 - 15801.06 / TK - 125.1792 * Log(TK))
BetaDot(iZnCl4) = 10 ^ (-972.732 + 12.21668 * TK - 0.06111154 * TK ^ 2 + 0.0001521141 * TK ^ 3 - 0.0000001881333 * TK ^ 4 + 9.252311E-11 * TK ^ 5)
BetaDot(iPbCl) = 10 ^ (-52.97153 - 0.02182295 * TK + 0.00002386252 * TK ^ 2 + 1994.203 / TK + 9.141143 * Log(TK))
BetaDot(iPbCl2) = 10 ^ (673.5621 + 0.2532472 * TK - 0.00006306824 * TK ^ 2 - 17402.88 / TK - 119.8971 * Log(TK))
BetaDot(iPbCl3) = 10 ^ (-1819.472 - 0.8596028 * TK + 0.0003943687 * TK ^ 2 + 43775.55 / TK + 332.6902 * Log(TK))
BetaDot(iPbCl4) = 10 ^ (-509.5157 + 6.837851 * TK - 0.03624178 * TK ^ 2 + 0.00009494584 * TK ^ 3 - 0.000000122756 * TK ^ 4 + 6.262392E-11 * TK ^ 5)
'Tagirov and Seward Chem Geology 269:301 2010
q1 = -896.5577: q2 = 22674.5156: q3 = 164.5225: q4 = -0.4194: q5 = 0.000198
BetaDot(iZnHS2) = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 * TK ^ 2)
q1 = -919.4104: q2 = 24289.7072: q3 = 168.7472: q4 = -0.4308: q5 = 0.000202
BetaDot(iZnHS3) = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 * TK ^ 2)
'q1 = 2293.0598: q2 = -54175.1084: q3 = -413.3935: q4 = 0.9758: q5 = -0.000368
'BetaDot(iZnHS4) = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 * TK ^ 2)
'Sverjensky, Shock. Helgeson 1997 Geochim Cosmochim Acta 61:1359
q1 = -1622.2843: q2 = 42144.5235: q3 = 297.1852: q4 = -0.7658: q5 = 0.000345
BetaDot(iPbHS2) = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 * TK ^ 2)
q1 = -832.0208: q2 = 25256.693: q3 = 150.534: q4 = -0.3694: q5 = 0.000177:
BetaDot(iPbHS3) = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 * TK ^ 2)
'q1 = -2300.2624: q2 = 55727.9476: q3 = 420.5195: q4 = -1.0681: q5 = 0.000459 'Solmineq  ZnAce, PbAce, Pb(Ace)2, Pb(Ace)3
'BetaDot(iZnAc) = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 * TK ^ 2)
'q1 = -396.3243: q2 = 8716.761: q3 = 74.5666: q4 = -0.22: q5 = 0.000114
'BetaDot(iPbAc) = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 * TK ^ 2)
'q1 = -525.3236: q2 = 11468.7581: q3 = 99.2488: q4 = -0.2988: q5 = 0.000159
'BetaDot(iPbAc2) = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 * TK ^ 2)
'q1 = -539.2198: q2 = 12099.8909: q3 = 101.3733: q4 = -0.2979: q5 = 0.000153
'BetaDot(iPbAc3) = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 * TK ^ 2)
End Sub
Sub C2_PitzerActCoefsConstants()
    b0(iH, iBr) = 0.2085:: b0(iNa, iAc) = 0.1426: b0(iNa, iHS) = -0.103
    b0(iNa, iBr) = 0.0973:  b0(iNa, iH2BO3) = -0.0427:
    
    b0(iK, iAc) = 0.15298: b0(iK, iBr) = 0.0569: b0(iK, iH2BO3) = 0.035
    
    b0(iMg, iHS) = 0.466: b0(iMg, iBr) = 0.5769 * 3 / 4
    
    b0(iCa, iOH) = -0.1747:  b0(iCa, iCO3) = 0.16: b0(iCa, iHS) = 0.069: b0(iCa, iBr) = 0.5088 * 3 / 4
    
    b0(iSr, iHCO3) = 0.12: b0(iSr, iCO3) = 0   'Note that Shiiliang He thesis value is -11.9, which gives very small g(CO3)
    b0(iSr, iBr) = 0.4415 * 3 / 4
    
    b0(iBa, iOH) = 0.17175:   b0(iBa, iBr) = 0.4194 * 3 / 4
    
    b0(iFe, iOH) = 0.17175: b0(iFe, iCl) = 0.35011: b0(iFe, iAc) = 0.28725:    b0(iFe, iCO3) = 1.919
    b0(iFe, iSO4) = 0.2568
    
    
    b0(iZn, iOH) = 0.17175:  b0(iZn, iCl) = 0.0887:  b0(iZn, iSO4) = 0.18404
    b0(iZn, iBr) = 0.6213 * 3 / 4
    
    b1(iH, iBr) = 0.3477: b1(iNa, iAc) = 0.3237: b1(iNa, iHS) = 0.884
    b1(iNa, iBr) = 0.2791:  b1(iNa, iH2BO3) = 0.089
    
    b1(iK, iAc) = 0.34195: b1(iK, iBr) = 0.2212: b1(iK, iH2BO3) = 0.14
    
    b1(iMg, iHS) = 2.264: b1(iMg, iBr) = 2.337 * 3 / 4
    
    b1(iCa, iOH) = -0.2303:   b1(iCa, iCO3) = 2.1
    b1(iCa, iHS) = 2.264: b1(iCa, iBr) = 2.151 * 3 / 4
    
    b1(iSr, iBr) = 2.282 * 3 / 4
    
    b1(iBa, iOH) = 1.2:    b1(iBa, iBr) = 2.093 * 3 / 4
    
    b1(iFe, iCl) = 1.40092:  b1(iFe, iHCO3) = 14.76: b1(iFe, iCO3) = -5.134: b1(iFe, iSO4) = 3.063
    
    b1(iZn, iCl) = 0.99773:  b1(iZn, iSO4) = 3.031:    b1(iZn, iBr) = 2.179 * 3 / 4
    
    b2(iCa, iOH) = -5.72:  b2(iCa, iCO3) = -69
    b2(iFe, iCO3) = -274:  b2(iFe, iSO4) = -42
    b2(iZn, iSO4) = -27.709
    
    CPhi(iH, iBr) = 0.00152:
    
    CPhi(iNa, iAc) = -0.00629: CPhi(iNa, iBr) = 0.00116:    CPhi(iNa, iH2BO3) = 0.0114
    
    CPhi(iK, iAc) = -0.00474:  CPhi(iK, iHCO3) = -0.008:  CPhi(iK, iCO3) = -0.0015: CPhi(iK, iCO3) = 0.0005   'Kaasa's book... added by Dai
    
    CPhi(iK, iBr) = -0.0018:
    
    CPhi(iMg, iBr) = 0.00589 * 0.5303
    
    CPhi(iFe, iCl) = -0.01412:  CPhi(iFe, iSO4) = 0.0209
    CPhi(iZn, iCl) = 0.00095:  CPhi(iZn, iSO4) = 0.03286
    
    CPhi(iCa, iBr) = -0.00485 * 0.5303
    CPhi(iSr, iBr) = 0.00231 * 0.5303
    CPhi(iBa, iBr) = -0.03009 * 0.5303
    CPhi(iZn, iBr) = -0.2035 * 0.5303
    
    Tccp(iH, iNa) = 0.036: Tccp(iNa, iH) = 0.036
    Tccp(iH, iK) = 0.005: Tccp(iK, iH) = 0.005
    Tccp(iH, iMg) = 0.005: Tccp(iMg, iH) = 0.005
    Tccp(iH, iCa) = 0.092: Tccp(iCa, iH) = 0.092
    Tccp(iH, iSr) = 0.07: Tccp(iSr, iH) = 0.07
    Tccp(iNa, iK) = -0.012: Tccp(iK, iNa) = -0.012
    Tccp(iNa, iMg) = 0.07: Tccp(iMg, iNa) = 0.07
    
    Tccp(iK, iCa) = 0.032: Tccp(iCa, iK) = 0.032
    Tccp(iMg, iCa) = 0.1244: Tccp(iCa, iMg) = 0.1244
    Yccpa(iH, iNa, iCl) = -0.004: Yccpa(iNa, iH, iCl) = -0.004
    Yccpa(iH, iK, iCl) = -0.011: Yccpa(iK, iH, iCl) = -0.011
    Yccpa(iH, iK, iSO4) = 0.197: Yccpa(iK, iH, iSO4) = 0.197
    Yccpa(iH, iMg, iCl) = -0.011: Yccpa(iMg, iH, iCl) = -0.011
    Yccpa(iH, iMg, iSO4) = -0.0178: Yccpa(iMg, iH, iSO4) = -0.0178
    Yccpa(iH, iCa, iCl) = -0.015: Yccpa(iCa, iH, iCl) = -0.015
    Yccpa(iH, iSr, iCl) = 0.01: Yccpa(iSr, iH, iCl) = 0.01
    Yccpa(iH, iSr, iSO4) = 0.03: Yccpa(iSr, iH, iSO4) = 0.03
    Yccpa(iNa, iK, iCl) = -0.0018: Yccpa(iK, iNa, iCl) = -0.0018
    Yccpa(iNa, iK, iHCO3) = -0.003: Yccpa(iK, iNa, iHCO3) = -0.003
    Yccpa(iNa, iK, iCO3) = 0.003: Yccpa(iK, iNa, iCO3) = 0.003
    Yccpa(iNa, iK, iSO4) = -0.01: Yccpa(iK, iNa, iSO4) = -0.01
    Yccpa(iNa, iMg, iCl) = -0.008: Yccpa(iMg, iNa, iCl) = -0.008
    Yccpa(iNa, iMg, iSO4) = -0.015: Yccpa(iMg, iNa, iSO4) = -0.015
    Yccpa(iNa, iCa, iSO4) = -0.055: Yccpa(iCa, iNa, iSO4) = -0.055
    Yccpa(iK, iMg, iCl) = -0.022: Yccpa(iMg, iK, iCl) = -0.022
    Yccpa(iK, iMg, iSO4) = -0.048: Yccpa(iMg, iK, iSO4) = -0.048
    Yccpa(iK, iCa, iCl) = -0.025: Yccpa(iCa, iK, iCl) = -0.025
    Yccpa(iMg, iCa, iCl) = -0.0238: Yccpa(iCa, iMg, iCl) = -0.0238
    Yccpa(iMg, iCa, iSO4) = 0.024: Yccpa(iCa, iMg, iSO4) = 0.024
    Taap(iOH, iCl) = -0.05: Taap(iCl, iOH) = -0.05
    Taap(iOH, iCO3) = 0.1: Taap(iCO3, iOH) = 0.1
    Taap(iOH, iSO4) = -0.013: Taap(iSO4, iOH) = -0.013
    Taap(iCl, iHCO3) = 0.0359: Taap(iHCO3, iCl) = 0.0359 'Li and Duan 2007
    Taap(iCl, iCO3) = -0.053: Taap(iCO3, iCl) = -0.053 'Li and Duan 2007
    Taap(iHCO3, iCO3) = -0.04: Taap(iCO3, iHCO3) = -0.04
    Taap(iHCO3, iSO4) = 0.01: Taap(iSO4, iHCO3) = 0.01
    Taap(iCO3, iSO4) = 0.02: Taap(iSO4, iCO3) = 0.02
    Taap(iH2BO3, iCl) = -0.065: Taap(iCl, iH2BO3) = -0.065
    Taap(iH2BO3, iSO4) = -0.012: Taap(iSO4, iH2BO3) = -0.012
    Yaapc(iOH, iCl, iNa) = -0.006: Yaapc(iCl, iOH, iNa) = -0.006
    Yaapc(iOH, iCl, iK) = -0.006: Yaapc(iCl, iOH, iK) = -0.006
    Yaapc(iOH, iCl, iCa) = -0.025: Yaapc(iCl, iOH, iCa) = -0.025
    Yaapc(iOH, iCO3, iNa) = -0.017: Yaapc(iCO3, iOH, iNa) = -0.017
    Yaapc(iOH, iCO3, iK) = -0.01: Yaapc(iCO3, iOH, iK) = -0.01
    Yaapc(iOH, iSO4, iNa) = -0.009: Yaapc(iSO4, iOH, iNa) = -0.009
    Yaapc(iOH, iSO4, iK) = -0.05: Yaapc(iSO4, iOH, iK) = -0.05
    
    Yaapc(iCl, iHCO3, iK) = -0.006: Yaapc(iHCO3, iCl, iK) = -0.006
    Yaapc(iCl, iHCO3, iMg) = -0.025: Yaapc(iHCO3, iCl, iMg) = -0.025
    'Yaapc(iCl, iCO3, iNa) = 0.0085: Yaapc(iCO3, iCl, iNa) = 0.0085
    Yaapc(iCl, iCO3, iNa) = 0.016: Yaapc(iCO3, iCl, iNa) = 0.016 'Li and Duan
    
    Yaapc(iCl, iCO3, iK) = 0.004: Yaapc(iCO3, iCl, iK) = 0.004
    Yaapc(iCl, iSO4, iMg) = -0.004: Yaapc(iSO4, iCl, iMg) = -0.004
    Yaapc(iCl, iSO4, iCa) = -0.018: Yaapc(iSO4, iCl, iCa) = -0.018
    Yaapc(iHCO3, iCO3, iNa) = 0.002: Yaapc(iCO3, iHCO3, iNa) = 0.002
    Yaapc(iHCO3, iCO3, iK) = 0.012: Yaapc(iCO3, iHCO3, iK) = 0.012
    Yaapc(iHCO3, iSO4, iNa) = -0.005: Yaapc(iSO4, iHCO3, iNa) = -0.005
    Yaapc(iHCO3, iSO4, iMg) = -0.161: Yaapc(iSO4, iHCO3, iMg) = -0.161
    Yaapc(iCO3, iSO4, iNa) = -0.005: Yaapc(iSO4, iCO3, iNa) = -0.005
    Yaapc(iCO3, iSO4, iK) = -0.009: Yaapc(iSO4, iCO3, iK) = -0.009
    Yaapc(iH2BO3, iCl, iNa) = -0.0073: Yaapc(iCl, iH2BO3, iNa) = -0.0073
    Lnc(iH3BO3, iNa) = -0.097
    'Lnc(iMeOHaq, iNa) = 0.033        'This value was determined by A. Xiao, Jan, 1999.  It ascribes all interaction to the Na ion and a value of zero to the Cl; this will be revisited when data is available.
    Lna(iHAcaq, iCl) = 0.076
    Lna(iH3BO3, iCl) = 0.091
    Lna(iH3BO3, iSO4) = 0.018
    'Lna(iMeOHaq, iCl) = 0               'This is set to zero, for future determination.

End Sub
Sub C2_Pitzer2019()
'1.  Standard partial molar volume of SO4 ion
'2.  Pressure dependence of Na-SO4, along with Temperature dependence from Pabalan and Pitzer
'3.  Pressure dependence of Mg-SO4, along with Temperature dependence from Phutela and Pitzer
'4.  Temperature dependence of Ca-SO4
'5.  Temperature dependence of Ba-SO4, related to Ca-SO4
'6.  Temperature dependence of Na-Ca
'7.  Temperature dependence of Na-Ba, related to Na-Ca
'8.  Temperature dependence of Na-Ca-Cl
'9.  Temperature dependence of Na-Ba-Cl, related to Na-Ca-Cl
'10. Pressure dependence revision for Ca-Cl above 400 bars
'11. Pressure dependence revision for Ba-Cl above 400 bars
'12. Temperature and pressure dependence of Cl-HCO3-Na
Call V0TP
'b0(iH, iCl) = fPP(TK, 0.1775, -0.013, 0.0000188, 0, 0, 0)
'b0(iH, iCl) = fPP(TK, 0.1775, 0.0003081, 0, 0, 0, 0) 'From PHREEQC
b0(iH, iCl) = 0.1769 + -0.0914 * Log(fH2ODensity(TK, PBar) / 997.048) + 0 * (fH2ODensity(TK, PBar) - 997.048) / 1 + -0.0004034 * (TC - 25) / 1 + 0.000062 * (PBar - 1) / 10 'Holmes et al. 1987_Model I_BP
b0(iH, iSO4) = fPP(TK, 0.08198, -0.17932, 0.000106, 4655, 49.798, 0)
'b0(iNa, iOH) = fPP(TK, 0.08176, 0.00721, -0.00000184, -863.72, -4.5653, 0)
b0(iNa, iOH) = 276.33247 + -7310.7724 / (TK) + -49.35997 * Log(TK) + 0.11070737 * (TK) + -0.000041248335 * (TK) ^ 2 + 11.931122 / (TK - 227) + 1.6386916 / (647 - TK) 'from Pabalan and Pitzer 1987

'    q1 = -656.81518: q2 = 24.8691295: q3 = 0.000053812752667: q4 = -5.58874699E-08: q5 = 6.589326333E-12
'    q6 = -4.4640952: q7 = 0.01110991383: q8 = -2.657339906E-07: q9 = 1.746006963E-10: q10 = 1.0462619E-14
'    q11 = -0.000005307012889: q12 = 8.634023325E-10: q13 = -4.1785962E-13
'    q14 = -1.579365943: q15 = 0.002202282079: q16 = -1.310550324E-07: q17 = -6.381368333E-11
'    q18 = 9.706578079: q19 = -0.02686039622: q20 = 0.00001534474401: q21 = -3.215398267E-09
'b0(iNa, iCl) = q1 / TK + q2 + q3 * Pbar + q4 * Pbar ^ 2 + q5 * Pbar ^ 3 + q6 * Log(TK) + (q7 + q8 * Pbar + q9 * Pbar ^ 2 + q10 * Pbar ^ 3) * TK _
'                + (q11 + q12 * Pbar + q13 * Pbar ^ 2) * TK ^ 2 + (q14 + q15 * Pbar + q16 * Pbar ^ 2 + q17 * Pbar ^ 3) / (TK - 227) _
'                + (q18 + q19 * Pbar + q20 * Pbar ^ 2 + q21 * Pbar ^ 3) / (680 - TK)
    q1 = -656.81518: q2 = 24.8691295: q3 = 0.000053812752667: q4 = -5.58874699E-08: q5 = 6.589326333E-12
    q6 = -4.4640952: q7 = 0.01110991383: q8 = -2.657339906E-07: q9 = 1.746006963E-10: q10 = 1.0462619E-14
    q11 = -0.000005307012889: q12 = 8.634023325E-10: q13 = -4.1785962E-13
    q14 = -1.579365943: q15 = 0.002202282079: q16 = -1.310550324E-07: q17 = -6.381368333E-11
    q18 = 9.706578079: q19 = -0.02686039622: q20 = 0.00001534474401: q21 = -3.215398267E-09
b0(iNa, iCl) = q1 / TK + q2 + q3 * PBar + q4 * PBar ^ 2 + q5 * PBar ^ 3 + q6 * Log(TK) + (q7 + q8 * PBar + q9 * PBar ^ 2 + q10 * PBar ^ 3) * TK _
                + (q11 + q12 * PBar + q13 * PBar ^ 2) * TK ^ 2 + (q14 + q15 * PBar + q16 * PBar ^ 2 + q17 * PBar ^ 3) / (TK - 227) _
                + (q18 + q19 * PBar + q20 * PBar ^ 2 + q21 * PBar ^ 3) / (680 - TK)

b0(iNa, iHCO3) = fPP(TK, 0.02837, -0.0103, 0.00000782, -579.52, 0, 0)
b0(iNa, iCO3) = fPP(TK, 0.03856, 0.00128, 0.0000056, -1986.1, -7.5408, 0)

'%based on Pabalan & Pitzer 1988 and Dai 20151112
    q1 = 0.60955633: q2 = -16.090797: q3 = -0.10932828: q4 = 0.00025321479: q5 = -0.000000099384034: q6 = 0.040107638: q7 = 0.021711348: q8 = 0.001738512: q9 = 0.001722469: q10 = -0.01255087: q11 = -0.0104936: q12 = 92308.895357: q13 = 963.974106
b0(iNa, iSO4) = q1 * TK ^ 2 / 6 + q2 * TK / 2 + q3 * TK ^ 2 * (Log(TK) / 2 - 5 / 12) / 3 + q4 * TK ^ 3 / 12 + q5 * TK ^ 4 / 20 + _
                    q6 * (TK / 2 + 3 * 227 ^ 2 / 2 / TK + 227 * (TK - 227) * Log(TK - 227) / TK) - q7 * (TK / 2 + 3 * 647 ^ 2 / 2 / TK - 647 * (647 - TK) * Log(647 - TK) / TK) - q12 / TK - q9 * (298.15 ^ 2 / TK) + q13 + q11 _
                    + 0.001 * (PBar - 200) * fPZ6(TK, 0.047242702840047, -5.38099320830228E-02, 1.18935539713076E-02, -1.47824630406919E-02, -0.733032327494331, 3.62293033499918E-02) + 0.000001 * (PBar - 200) ^ 2 * fPZ6(TK, -5.32348171981031E-02, -0.101775451027319, 2.21588585653303E-02, 4.05106192359346E-03, 0.661622313615445, -2.06389886993178E-02)
    
b0(iK, iOH) = fPP(TK, 0.1298, 0.00721, -0.00000184, -863.72, -4.5653, 0)    'Kaasa's book... added by Dai
                q1 = 0.04808: q2 = -758.48: q3 = -4.7062: q4 = 0.010072:  q5 = -0.0000037599: q6 = 0
b0(iK, iCl) = q1 + q2 * (1 / TK - 1 / 298.15) + q3 * Log(TK / 298.15) + q4 * (TK - 298.15) + q5 * (TK ^ 2 - 298.15 ^ 2) + q6 * Log(TK - 260)
b0(iK, iHCO3) = fPP(TK, -0.01344, -0.21739, 0.0000921, 10020, 82.417, 0)    'Kaasa's book... added by Dai
b0(iK, iCO3) = fPP(TK, 0.12765, 0.0151, -0.0000148, 454.53, 0, 0)    'Kaasa's book... added by Dai
'b0(iK, iSO4) = fPP(TK, 0, 0.00424, 0.00000000977, -606.85, -3.0789, 0)    'Kaasa's book... added by Dai
'based on Dai 20151112
'Kaasa's book... added by Dai, actually by Holmes, double checked by Dai
b0(iK, iSO4) = fPP(TK, 0, 0.00424, 0.00000000977, -606.85, -3.0789, 0) + 0.001 * (PBar - 200) * fPZ6(TK, -3.78606959461161E-02, -0.117878400340705, 0.274800180783657, -6.43463283494378E-02, -1.96395999732603, 2.16674763010344E-02) + 0.000001 * (PBar - 200) ^ 2 * fPZ6(TK, -0.285218812395032, -0.853413242667859, -0.228114332820375, 9.55341201750416E-02, 7.18488790131111, -0.11317948093169)
b0(iK, iHS) = fPP(TK, -0.337, 0, 0, 0, 0, 0)    'Kaasa's book... added by Dai
'        q1 = -94.1895832: q2 = -0.040475002: q3 = 2345.50368: q4 = 17.09123: q5 = -0.922885841: q6 = 0.0000151488422: q7 = -1.39082
'  b0(iCa, iCl) = q1 + q2 * TK + q3 / TK + q4 * Log(TK) + q5 / (TK - 263) + q6 * TK ^ 2 + q7 / (680 - TK)
    q1 = 0#: q2 = 0.00414544383: q3 = -0.0000276747461: q4 = 3.37946704E-08: q5 = 0#    ' Holmes Ca-Cl term
    q6 = 0#: q7 = 0.00118276629: q8 = 0.00126084149: q9 = -0.158424548: q10 = -0.0000032972643
    q11 = 3.37768212E-09: q12 = 0.00241466763: q13 = -0.0229175172: q14 = 0#: q15 = 0#
    q16 = -1.2497591E-10: q17 = 3.54502058E-13
b0(iCa, iCl) = fHolmes(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17)
b0(iCa, iHCO3) = fPP(TK, 0.25604, 1.9273, -0.000813, -89647, -733.92, 0)    'Kaasa's book... added by Dai
'b0(iCa, iSO4) = fP15_Dai(TK, Patm, -10.5361190636106, 0.205664444939446, -65.2857968819972, 44.7423091568304, 56.1620260419139, -71.9988074022374, 140.748142016476, 143.081211400636, -32.5802043839439, -8.23793470833476, -30.5334659543555, 0.806721196218813, 107.190112846421, 24.4201733514506, -168.16469104398) 'Dai 20150303 V30_v4.2_fmincon b0 = [-1, 1]
'based on Dai 20151112
'b0(iCa, iSO4) = fPZ18(TK, Patm, -0.494629250030361, -0.749545888676735, -0.21424528769075, 1.62670270479419E-02, 2.86337877681789, -6.09381470629684E-02, -0.477018899337428, -1.00541523130633, -9.56302147721033E-02, 5.05537899364662E-02, 4.5102791792219, -0.171800415729606, 0.13463279520948, -0.364229611022972, 0.10468831625086, 1.58878622392185E-02, -2.72248616963377, 9.60631103680074E-02)
''base on Deng 2019
'b0(iCa, iSO4) = fP15_Dai(TK, Patm, -6.126012743, 12.02828826, 3.784076878, 0.558438871, 5.866960912, -0.335884088, 3.318099563, -0.14245705, -6.04527033, 19.23873106, -7.444145079, 9.053995167, 15.51512452, 0.180445172, 2.922881799)

' added by GD 20191021
b0(iCa, iSO4) = fHolmes(TK, PBar, 20.4885394057851, 0.182733456879443, -1.35163233606994E-03, 5.14105639711679E-07, 8.70101445510704E-05, -2.52953035845223E-02, -1.00755838424923, -0.057005580645621, 8.93006760077719, 1.34345737705482E-04, -1.1135110963711E-07, -0.211564774545699, 0.153436546399729, -8.89933782533691E-05, 1.13985897736532E-02, 2.25220460716217E-07, -1.85334832426362E-10)

'b0(iCa, iBr) = fPP(TK, 4.02660021393008, 4.14792188386667E-02, -2.04956849196662E-04, -41532.8317586609, 16.3874373243407, 5761642.62523336)    'update by Dai 10/30/14'Cause strong interaction at high Br conc and high T,P , don't use in SSP
'b0(iMg, iCl) = 0.000000593915 * TK ^ 2 - 0.000931654 * TK + 0.576066
    q1 = 0.405500216: q2 = 0.004145444: q3 = -0.000228457: q4 = -0.0000000633123: q5 = 0.0000401087
    q6 = 0: q7 = -0.001712441: q8 = 0.001260841: q9 = -0.152128885: q10 = -0.00000346379
    q11 = 0.00000000370249: q12 = 0.002414668: q13 = -0.022917517: q14 = 0: q15 = 0
    q16 = -0.000000000124976: q17 = 3.05038E-13
b0(iMg, iCl) = fHolmes(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17)
b0(iMg, iHCO3) = fPP(TK, 0.0385, 0.8738, -0.00037, -40167, -330.82, 0)    'Kaasa's book... added by Dai
''From SSP2013
    q1 = -1.0282: q2 = 0.008479: q3 = -0.0000233667: q4 = 0.000000021575: q5 = 0.00068402: q6 = 0.21499
b0(iMg, iSO4) = q1 * (TK / 2 + 298 ^ 2 / (2 * TK) - 298) + q2 * (TK ^ 2 / 6 _
    + 298 ^ 3 / (3 * TK) - 298 ^ 2 / 2) + q3 * (TK ^ 3 / 12 + 298 ^ 4 / (4 * TK) _
    - 298 ^ 3 / 3) + q4 * (TK ^ 4 / 20 + 298 ^ 5 / (5 * TK) - 298 ^ 4 / 4) + q5 * (298 - 298 ^ 2 / TK) + q6 _
    + 0.001 * (PBar - 20) * fPZ6(TK, 4.69338657997024E-02, 0.1885487503942, -2.57681401400115E-02, -2.92174438263678E-03, -5.28701612182822E-02, 0.010175024490052) + 0.000001 * (PBar - 20) ^ 2 * fPZ6(TK, 4.21601882371307E-02, 0.470528627913928, -1.38985610560422E-02, -8.14864903217854E-03, -0.63735169569643, 3.21374826812395E-03)
'%based on Phutela & Pitzer and P dependence from Dai 20151112
'b0(iMg, iSO4) = 0.59690142792285 * b0(iCa, iSO4)
'b0(iBa, iCl) = fP15_Dai(TK, Patm, 16.5417646226592, -37.5324048315648, -91.6809733383215, 30.2541528608278, 73.5682018602279, -0.931170284513233, -6.71377166585435, -15.8334030683524, 12.3015915612095, 9.47793408550419, -7.30539213491135, 6.444099018094, 10.9119923984186, 4.89711138533183, -10.0643137662595) 'Dai 20150303 V30_v4.2_fmincon b0 = [-1, 1]
    q1 = -2.84735725: q2 = 0.061583644: q3 = -0.001004361: q4 = 0.0000000337947: q5 = 0.000140902
    q6 = -0.002234499: q7 = 0.001182766: q8 = 0.001235248: q9 = -0.158424548: q10 = -0.00000329726
    q11 = 0.00000000337768: q12 = 0.002414668: q13 = -0.022917517: q14 = 0: q15 = 0
    q16 = -0.000000000124976: q17 = 3.54502E-13
b0(iBa, iCl) = fHolmes(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17)
'b0(iBa, iSO4) = 0.64821112664257 * b0(iCa, iSO4) 'from V0303
b0(iBa, iSO4) = 0.536160193861812 * b0(iCa, iSO4) 'based on Dai 20151112
'b0(iSr, iCl) = 1.13438263016093 * b0(iCa, iCl) ''Dai 20150303 V201_fmincon, b0 = [-1,1], CPhi = [-0.1,0.1], revised on 20150319
    q1 = -137.411207: q2 = 2.111859321: q3 = -0.049522204: q4 = -0.00000719953: q5 = 0.007892885
    q6 = -0.027503059: q7 = 1.086188061: q8 = 0.001298469: q9 = -0.158424548: q10 = -0.00000329726
    q11 = 0.00000000337768: q12 = 0.002414668: q13 = -0.022917517: q14 = 0: q15 = 0:
    q16 = -0.000000000124976: q17 = 3.54502E-13:
    q8 = 1.26948963407883E-03 'based on Dai 20151112
b0(iSr, iCl) = fHolmes(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17)

'b0(iSr, iSO4) = 0.731448471985499 * b0(iCa, iSO4) ''Dai 20150303 V201_fmincon, b0 = [-1,1], CPhi = [-0.1,0.1], revised on 20150319
b0(iSr, iSO4) = 0.78474727943517 * b0(iCa, iSO4)  'based on Dai 20151112
    
'b1(iH, iCl) = fPP(TK, 0.2945, 0.00028, -0.00000025, 0, 0, 0)
'b1(iH, iCl) = fPP(TK, 0.2945, 0.0001419, 0, 0, 0, 0) 'PHREEQC
b1(iH, iCl) = 0.2973 + 16.147 * Log(fH2ODensity(TK, PBar) / 997.048) + -0.0176 * (fH2ODensity(TK, PBar) - 997.048) / 1 + 0 * (TC - 25) / 1 + 0.00072 * (PBar - 1) / 10 'Holmes et al. 1987_Model I_BP

'b1(iNa, iOH) = fPP(TK, 0.30499, 0.0634, -0.0000276, -3232.7, -24.573, 0)
b1(iNa, iOH) = 462.86977 + -10294.181 / (TK) + -85.960581 * Log(TK) + 0.23905969 * (TK) + -0.00010795894 * (TK) ^ 2 'from Pabalan and Pitzer 1987

b1(iNa, iCl) = 119.31966 / TK - 0.48309327 + 0.0014068095 * TK - 4.2345814 / (TK - 227)
b1(iNa, iHCO3) = fPP(TK, 0.0475, 0.14998, -0.0000574, -8814.8, -63.826, 0)
b1(iNa, iCO3) = fPP(TK, 1.5208, -0.66971, 0.000333, 19064, 204.49, 0)
'b1(iNa, iSO4) = fHe(TK, -39.96416, -0.07893828, 0.0000539524184, -1342.960157, 11.28639004) 'Dai 20150303 V30_v4.2_fmincon b0 = [-1, 1]
'%based on Pabalan & Pitzer 1988
q1 = 1.1040235: q2 = -25.758534: q3 = -0.20290775: q4 = 0.00053309441: q5 = -0.00000023576724: q6 = 0#: q7 = 0.14455381: q8 = 0.005820066: q9 = 0.005512612: q10 = 0.703766: q11 = 0.690077: q12 = 363078.71668: q13 = 1926.602872
b1(iNa, iSO4) = q1 * TK ^ 2 / 6 + q2 * TK / 2 + q3 * TK ^ 2 * (Log(TK) / 2 - 5 / 12) / 3 + q4 * TK ^ 3 / 12 + q5 * TK ^ 4 / 20 + q6 * (TK / 2 + 3 * 227 ^ 2 / 2 / TK + 227 * (TK - 227) * Log(TK - 227) / TK) - q7 * (TK / 2 + 3 * 647 ^ 2 / 2 / TK - 647 * (647 - TK) * Log(647 - TK) / TK) - q12 / TK - q9 * (298.15 ^ 2 / TK) + q13 + q11

        q1 = 0.0476: q2 = 303.9: q3 = 1.066: q4 = 0: q5 = 0: q6 = 0.047
b1(iK, iOH) = fPP(TK, 0.32, 0.0634, -0.0000276, -3232.7, -24.573, 0)    'Kaasa's book... added by Dai
b1(iK, iCl) = q1 + q2 * (1 / TK - 1 / 298.15) + q3 * Log(TK / 298.15) + q4 _
            * (TK - 298.15) + q5 * (TK ^ 2 - 298.15 ^ 2) + q6 * Log(TK - 260)
b1(iK, iHCO3) = fPP(TK, 0.0401, -0.31301, 0.000135, 13868, 116.4, 0)    'Kaasa's book... added by Dai
b1(iK, iCO3) = fPP(TK, 1.4248, 0.0977, -0.0000968, 3164, 0, 0)    'Kaasa's book... added by Dai
b1(iK, iSO4) = fPP(TK, 0.6179, 0.042, 0.0000169, -8714, -42.582, 0)    'Kaasa's book... added by Dai
b1(iK, iHS) = fPP(TK, 0.884, 0, 0, 0, 0, 0)    'Kaasa's book... added by Dai

'b1(iCa, iCl) = 3.4787 - 0.015417 * TK + 0.000031791 * TK ^ 2
    q1 = 0#: q2 = -0.16737337: q3 = 0.0195851174: q4 = 0.00000751975973: q5 = -0.00367501519 'Holmes Ca-Cl interaction
    q6 = -0.0239198164: q7 = 0#: q8 = 0#: q9 = 0#: q10 = 0.00000107765583
    q11 = -3.96914481E-09: q12 = 0#: q13 = 0#: q14 = 0#: q15 = 0#
    q16 = 0#: q17 = 0#
b1(iCa, iCl) = fHolmes(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17)
b1(iCa, iHCO3) = fPP(TK, 0.30575, -0.28251, 0.000118, 14501, 110.86, 0)    'Kaasa's book... added by Dai
'based on Dai 20151112
'b1(iCa, iSO4) = fPZ6(TK, 0.216835860358007, 2.94460699553935, 0.547386688355732, 4.19474854673938E-02, 8.88433983937036, 0.710249084919705)
''based on Deng 2019
'b1(iCa, iSO4) = fPZ6(TK, -0.281018995, -0.659113896, 1.243447739, 0.0000547, -15.56641197, 0.568837881)
'Added by GD 20191021
b1(iCa, iSO4) = fPZ6(TK, -58.3369742068748, 240.112816949155, 14.6657417194044, 0.874458506940693, 2.86581921261989, -11.9026193709332)

'b1(iCa, iSO4) = fPP(TK, 3.1973, 0.0546, 0, 0, 0, 0) 'Dai 20150303 V30_v4.2_fmincon b0 = [-1, 1]
'b1(iMg, iCl) = 0.0000260169 * TK ^ 2 - 0.0109438 * TK + 2.60135
    q1 = 0: q2 = -0.16737337: q3 = 0.019728358: q4 = 0.00000753744: q5 = -0.003696071
    q6 = -0.025038112: q7 = 0: q8 = 0: q9 = 0: q10 = 0.00000107766
    q11 = -0.00000000396914: q12 = 0: q13 = 0: q14 = 0: q15 = 0: q16 = 0: q17 = 0
b1(iMg, iCl) = fHolmes(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17)
    
b1(iMg, iHCO3) = fPP(TK, 0.87005, -8.1001, 0.00344, 373490, 3064.9, 0)    'Kaasa's book... added by Dai
''From SSP2013
'b1(iMg, iSO4) = -0.29596 * (TK / 2 + 298 ^ 2 / (2 * TK) - 298) + 0.00094564 * (TK ^ 2 / 6 _
'                          + 298 ^ 3 / (3 * TK) - 298 ^ 2 / 2) + 0.01028 * (298 - 298 ^ 2) / TK + 3.3646
'b1(iMg, iSO4) = 0.59690142792285 * b1(iCa, iSO4) 'from V0303
'based on Phutela & Pitzer
b1(iMg, iSO4) = -0.29596 * (TK / 2 + 298 ^ 2 / (2 * TK) - 298) + 0.00094564 * (TK ^ 2 / 6 + 298 ^ 3 / (3 * TK) - 298 ^ 2 / 2) + 0.01028 * (298 - 298 ^ 2 / TK) + 3.3646
'b1(iBa, iCl) = fHe(TK, -104.22916, 0.00322576, -0.000006774397, 4374.0805, 15.87491)
    q1 = 0: q2 = -0.583253079: q3 = 0.062151491: q4 = 0.0000222759: q5 = -0.011539945
    q6 = -0.078415969: q7 = 0: q8 = 0.000197778: q9 = 0: q10 = 0.00000107766
    q11 = -0.00000000396914: q12 = 0: q13 = 0: q14 = 0: q15 = 0: q16 = 0: q17 = 0
b1(iBa, iCl) = fHolmes(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17)

'b1(iBa, iSO4) = 0.64821112664257 * b1(iCa, iSO4) 'from V0303
b1(iBa, iSO4) = 0.536160193861812 * b1(iCa, iSO4) 'based on Dai 20151112

'b1(iSr, iCl) = 1.13438263016093 * b1(iCa, iCl) ''Dai 20150303 V201_fmincon, b0 = [-1,1], CPhi = [-0.1,0.1], revised on 20150319
    q1 = 0: q2 = -0.164948621: q3 = 0.01951972: q4 = 0.00000772188: q5 = -0.003675015
    q6 = -0.023919816: q7 = 0: q8 = -0.000144388: q9 = 0: q10 = 0.00000107766
    q11 = -0.00000000396914: q12 = 0: q13 = 0: q14 = 0: q15 = 0: q16 = 0: q17 = 0:
b1(iSr, iCl) = fHolmes(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17)

'    b1(iSr, iSO4) = 0.731448471985499 * b1(iCa, iSO4) ''Dai 20150303 V201_fmincon, b0 = [-1,1], CPhi = [-0.1,0.1], revised on 20150319
b1(iSr, iSO4) = 0.78474727943517 * b1(iCa, iSO4)  'based on Dai 20151112
'        q1 = -0.13764: q2 = 0.12121: q3 = -0.00027642: q4 = 0: q5 = -0.21515: q6 = -32.743
'''From SSP2013
'b2(iMg, iSO4) = q1 * (TK / 2 + 298 ^ 2 / (2 * TK) - 298) + q2 * (TK ^ 2 / 6 _
'                          + 298 ^ 3 / (3 * TK) - 298 ^ 2 / 2) + q3 * (TK ^ 3 / 12 + 298 ^ 4 / (4 * TK) _
'                          - 298 ^ 3 / 3) + q4 * (TK ^ 4 / 20 + 298 ^ 5 / (5 * TK) - 298 ^ 4 / 4) + q5 * (298 - 298 ^ 2) / TK + q6
b2(iCa, iCl) = -0.5 / Exp(-16.5 + 7150 / TK) 'Holmes
b2(iMg, iCl) = b2(iCa, iCl)
b2(iBa, iCl) = b2(iCa, iCl)
b2(iSr, iCl) = b2(iCa, iCl)
'b2(iCa, iSO4) = fP15_Dai(TK, Patm, 538.026458464901, -1569.85247389329, -853.605006234056, 736.307259106955, -2701.97658502464, 75.0431919773201, -247.237327725784, 30.3031830524187, 119.334650170278, -295.083956880185, -48.2622359864595, -238.100362450215, 107.94676394814, 81.2446441308715, 221.399491703847) 'Dai 20150303 V30_v4.2_fmincon b0 = [-1, 1]
'based on Dai 20151112
'b2(iCa, iSO4) = 100 * fPZ18(TK, Patm, 0.444341027314027, 0.375236156989475, 7.67802461830241E-02, -0.19470086322267, -5.48793385601989, 0.149023404426594, 0.504541253587314, 1.3724950688111, 5.98474715217473E-03, -2.37350477553407E-02, -5.24555631905523, 6.32366437072728E-02, 0.109074998916649, -8.73565135817388E-02, 2.20323570715558E-03, -1.76098886096137E-02, -3.62900236157019, 2.10319909698316E-02)
''based on Deng 2019
'b2(iCa, iSO4) = fP15_Dai(TK, Patm, 22.20700174, -57.91409519, -121.8396914, 176.2472123, -1456.139358, 137.3918213, -920.4570331, 1357.41233, 231.4939789, -3426.072599, 57.38247115, -775.0809784, 108.9148035, 270.6161616, -400.9282411)

'added by GD 20191021
b2(iCa, iSO4) = fHolmes(TK, PBar, -3451.92417674836, -25.0510497042672, 0.52463858314361, -6.03901870423439E-04, -5.41906113936402E-02, 4.17388513213358, 96.8711207569075, -1.38634677934667, 452.409611072822, -3.37062199562341E-04, 4.42711788329082E-06, -15.5294298988312, -58.8816456334969, -4.86122268847504E-03, 0.458609072994063, 1.52062601592044E-05, -1.41724741011899E-08)

'b2(iMg, iSO4) = 0.59690142792285 * b2(iCa, iSO4) 'from V0303
'based on Phutela & Pitzer and P dependence from Dai 20151112
b2(iMg, iSO4) = -13.764 * (TK / 2 + 298 ^ 2 / (2 * TK) - 298) + 0.12121 * (TK ^ 2 / 6 + 298 ^ 3 / (3 * TK) - 298 ^ 2 / 2) + -0.00027642 * (TK ^ 3 / 12 + 298 ^ 4 / (4 * TK) - 298 ^ 3 / 3) + -0.21515 * (298 - 298 ^ 2 / TK) + -32.743 + _
                0.1 * (PBar - 20) * fPZ6(TK, 0.412262082080429, 0.400058114021816, 3.00888166907448E-02, -2.94302940870418E-02, -4.42981067782703, 5.66583267829718E-02) + _
                0.0001 * (PBar - 20) ^ 2 * fPZ6(TK, 0.234558885627083, -0.245867648958111, 6.55732421096113E-02, -2.74923796315413E-02, -4.12894058959444, 0.011915963054195)

'b2(iBa, iSO4) = 0.64821112664257 * b2(iCa, iSO4) 'from V0303
b2(iBa, iSO4) = 0.536160193861812 * b2(iCa, iSO4) 'based on Dai 20151112

'b2(iSr, iSO4) = 0.731448471985499 * b2(iCa, iSO4) ''Dai 20150303 V201_fmincon, b0 = [-1,1], CPhi = [-0.1,0.1], revised on 20150319
b2(iSr, iSO4) = 0.78474727943517 * b2(iCa, iSO4)  'based on Dai 20151112
'CPhi(iH, iCl) = fPP(TK, 0.0008, -0.000119, -0.0000001, 0, 0, 0)
'CPhi(iH, iCl) = fPP(TK, 0.0008, 0.00006213, 0, 0, 0, 0) 'PHREEQC
CPhi(iH, iCl) = 2 * (0.000362 + 0 * Log(fH2ODensity(TK, PBar) / 997.048) + 0 * (fH2ODensity(TK, PBar) - 997.048) / 1 + -0.00003036 * (TC - 25) / 1 + 0 * (PBar - 1) / 10) 'Holmes et al. 1987_Model I_BP

CPhi(iH, iSO4) = fPP(TK, 0.06375, -0.11362, 0.0000582, 3218.7, 34.424, 0)
'CPhi(iNa, iOH) = fPP(TK, 0.00495, -0.00274, 0.00000104, 195.95, 1.2493, 0)
CPhi(iNa, iOH) = -16.615961 + 444.59966 / (TK) + 2.9680772 * Log(TK) + -0.0067008449 * (TK) + 0.000002533892 * (TK) ^ 2 + -0.68923899 / (TK - 227) + -0.081156286 / (647 - TK) 'from Pabalan and Pitzer 1987
      q1 = -6.1084589: q2 = 0.40217793: q3 = 0.000022902837: q4 = -0.075354649
      q5 = 0.0001531767295: q6 = -0.000000090550901: q7 = -1.53860082E-08: q8 = 8.69266E-11
      q9 = 0.353104136: q10 = -0.00043314252: q11 = -0.09187145529: q12 = 0.00051904777
CPhi(iNa, iCl) = q1 / TK + q2 + q3 * PBar + q4 * Log(TK) + (q5 + q6 * PBar) * TK _
                      + (q7 + q8 * PBar) * TK ^ 2 + (q9 + q10 * PBar) / (TK - 227) + (q11 + q12 * PBar) / (680 - TK)


'  CPhi(iNa, iSO4) = 0.00374
'CPhi(iNa, iSO4) = fbarite(TK, Patm, 296.1131144097, -6080.220817968, 0.1629064730175, -55.72132287941, -7.66102221179E-05, -1.167150216852, 26.39696485387, -0.000575632476579, 0.2154911601829, 2.520418764756E-07, 0.000876443859356, -0.02016104895849, 4.225379909957E-07, -1.612282275228E-04, -1.817153137315E-10)
'CPhi(iNa, iSO4) = fP15_Dai(TK, Patm, 0.241344837970682, -3.41218477314529E-02, -2.6008116573077, 0.574614111091451, 2.77529345183464, -3.59333642844727, 4.21550353366441, 7.35307097754857, 0.788761374227224, -5.66642988698132, -1.53792036402391, -1.34840033811142, -4.02515461710222, 5.29972992050365, 2.04484240252333)
'based on Pabalan & Pitzer 1988
    q1 = -0.291330454580456: q2 = 7.47067054163403: q3 = 5.25526087271343E-02: q4 = -1.25440539335741E-04: q5 = 5.05817041380687E-08: q6 = -1.46616028524056E-02: q7 = -1.09759151043306E-02: q8 = -3.16065983167313E-04: q9 = -3.26114253370686E-04: q10 = 1.07722061259521E-02: q11 = 1.05906493888146E-02: q12 = -43691.7324087285: q13 = -441.068472680535
CPhi(iNa, iSO4) = q1 * TK ^ 2 / 6 + q2 * TK / 2 + q3 * TK ^ 2 * (Log(TK) / 2 - 5 / 12) / 3 + q4 * TK ^ 3 / 12 + q5 * TK ^ 4 / 20 + q6 * (TK / 2 + 3 * 227 ^ 2 / 2 / TK + 227 * (TK - 227) * Log(TK - 227) / TK) - q7 * (TK / 2 + 3 * 647 ^ 2 / 2 / TK - 647 * (647 - TK) * Log(647 - TK) / TK) - q12 / TK - q9 * (298.15 ^ 2 / TK) + q13 + q11

CPhi(iK, iOH) = fPP(TK, 0.0041, -0.00274, 0.00000104, 195.95, 1.2493, 0)    'Kaasa's book... added by Dai
        q1 = -0.000788: q2 = 91.27: q3 = 0.58643: q4 = -0.001298: q5 = 0.00000049567: q6 = 0
CPhi(iK, iCl) = q1 + q2 * (1 / TK - 1 / 298.15) + q3 * Log(TK / 298.15) + q4 _
              * (TK - 298.15) + q5 * (TK ^ 2 - 298.15 ^ 2) + q6 * Log(TK - 260)
CPhi(iK, iSO4) = fPP(TK, 0.00915, -0.000181, 0, -16.092, 0, 0)    'Kaasa's book... added by Dai
                    
     ' CPhi(iCa, iCl) = -0.00034
    '        q1 = -30.3578731: q2 = -0.0136264728: q3 = 764.582238: q4 = 5.50458061
    '        q5 = -0.327377782: q6 = 0.00000569405869: q7 = -0.536231106
    '  CPhi(iCa, iCl) = q1 + q2 * TK + q3 / TK + q4 * Log(TK) + q5 / (TK - 263) + q6 * TK ^ 2 + q7 / (680 - TK)
    
    q1 = -0.131583284: q2 = 0#: q3 = 0.000289257572: q4 = 0.000000128494802: q5 = -0.000056273068 'Holmes
    q6 = -0.000594574164: q7 = 0#: q8 = -0.000000958297102: q9 = 0#: q10 = 0#
    q11 = 6.34029223E-12: q12 = 0#: q13 = 0#: q14 = -5.60197799E-09: q15 = 0.0000017747878
    q16 = 0#: q17 = 0#
CPhi(iCa, iCl) = fHolmes(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17)
'CPhi(iCa, iSO4) = fP15_Dai(TK, Patm, -60.06215152577, 81.1921157166883, 162.677081152119, -8.27232327894333, -124.089814833125, 30.0444629185176, -77.0506303352576, -43.0355533776656, 25.4342834446802, -53.3391850752351, 30.8051799843425, -9.51973580922885, -101.964800925563, -19.0997814187339, 147.778225640582) 'Dai 20150303 V30_v4.2_fmincon b0 = [-1, 1]
'based on Dai 20151112
'CPhi(iCa, iSO4) = fPZ18(TK, Patm, -0.303699629696649, -7.73691572357835E-02, -9.28957465541166E-04, 7.16206348764524E-02, 2.46786789679507, 2.77538419066926E-02, -0.102413954390255, -0.495672953225603, 1.23118744085347E-02, 4.76129805111671E-02, 5.70247958406649, -5.35158689082738E-02, 0.230453227504701, -6.99878462660856E-02, 0.103878360032065, -7.73402235008142E-02, -1.17777793966289, -8.69647080564623E-03)
''Based on Deng 2019
'CPhi(iCa, iSO4) = fP15_Dai(TK, Patm, 4.760402643, -1.609738227, 0.805674965, -7.232378427, -1.486691181, 3.19974358, -6.58671948, -2.664858726, 2.256407497, -4.551834009, -1.250088357, 7.653015973, -0.148136644, -1.47628604, -10.36596819)

'added by GD 20191021
CPhi(iCa, iSO4) = fHolmes(TK, PBar, 5.77985723123435, -0.121409849839165, -1.87628978264948E-04, -3.77175580664723E-07, 1.40342341987879E-04, 3.77829703206553E-03, 0.20380678760812, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) 'No pressure dependence, by GD


'CPhi(iMg, iSO4) = 0.59690142792285 * CPhi(iCa, iSO4)'from V0303
'    CPhi(iMg, iCl) = 0.000000241831 * TK ^ 2 + -0.000249949 * TK + 0.059532
    q1 = -0.131583284: q2 = -0.000958991: q3 = 0.000341089: q4 = 0.000000128495: q5 = -0.0000644255
    q6 = -0.00067376: q7 = 0.00079875: q8 = -0.00000118509: q9 = 0: q10 = 0: q11 = 6.34029E-12
    q12 = 0: q13 = 0: q14 = -0.00000000560198: q15 = 0.00000177479: q16 = 0: q17 = 1.31968E-14
CPhi(iMg, iCl) = fHolmes(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17)

'            q1 = 0.10541: q2 = -0.00089316: q3 = 0.00000251: q4 = -0.0000000023436 ''From SSP2013
'            q5 = -0.000087899: q6 = 0.006993
'    CPhi(iMg, iSO4) = 4 * (q1 * (TK / 2 + 298 ^ 2 / (2 * TK) - 298) + q2 * (TK ^ 2 / 6 _
'              + 298 ^ 3 / (3 * TK) - 298 ^ 2 / 2) + q3 * (TK ^ 3 / 12 + 298 ^ 4 / (4 * TK) _
'              - 298 ^ 3 / 3) + q4 * (TK ^ 4 / 20 + 298 ^ 5 / (5 * TK) - 298 ^ 4 / 4) + q5 * (298 - 298 ^ 2) / TK + q6)
'based on Phutela & Pitzer
CPhi(iMg, iSO4) = 4 * (0.10541 * (TK / 2 + 298 ^ 2 / (2 * TK) - 298) + -0.00089316 * (TK ^ 2 / 6 + 298 ^ 3 / (3 * TK) - 298 ^ 2 / 2) + 0.00000251 * (TK ^ 3 / 12 + 298 ^ 4 / (4 * TK) - 298 ^ 3 / 3) + -0.0000000023436 * (TK ^ 4 / 20 + 298 ^ 5 / (5 * TK) - 298 ^ 4 / 4) + -0.000087899 * (298 - 298 ^ 2 / TK) + 0.006993)

'CPhi(iBa, iCl) = fP15_Dai(TK, Patm, -9.41112726225198, 10.9780733799791, 22.5172484412428, 1.19969902142518, -19.4816042679477, -2.58887847188975, -1.87860846738183E-03, -5.09386834320211, 6.44631709688276, 4.8929995721645, -2.71730795557339, -0.23293688671554, -3.83658084811711, 6.59386868095626, 2.28676489431816) 'Dai 20150303 V30_v4.2_fmincon b0 = [-1, 1]
            q1 = -0.131583284: q2 = 0: q3 = 0.000247683: q4 = 0.0000000895556: q5 = -0.0000465877
            q6 = -0.000630297: q7 = 0: q8 = 0.00000625234: q9 = 0: q10 = 0
            q11 = 6.34029E-12: q12 = 0: q13 = 0: q14 = -0.00000000560198: q15 = 0.00000177479: q16 = 0: q17 = 0
CPhi(iBa, iCl) = fHolmes(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17)

'CPhi(iBa, iSO4) = 0.64821112664257 * CPhi(iCa, iSO4) 'from V0303
CPhi(iBa, iSO4) = 0.536160193861812 * CPhi(iCa, iSO4) 'based on Dai 20151112
'CPhi(iSr, iCl) = 1.13438263016093 * CPhi(iCa, iCl) ''Dai 20150303 V201_fmincon, b0 = [-1,1], CPhi = [-0.1,0.1], revised on 20150319
            q1 = -0.131583284: q2 = 0.002686696: q3 = 0.0000837031: q4 = 0.0000000361626: q5 = -0.0000167901
            q6 = -0.000594574: q7 = 0: q8 = -0.00000601422: q9 = 0: q10 = 0
            q11 = 6.34029E-12: q12 = 0: q13 = 0: q14 = -0.00000000560198: q15 = 0.00000177479: q16 = 0: q17 = 0:
CPhi(iSr, iCl) = fHolmes(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17)

'CPhi(iSr, iSO4) = 0.731448471985499 * CPhi(iCa, iSO4) ''Dai 20150303 V201_fmincon, b0 = [-1,1], CPhi = [-0.1,0.1], revised on 20150319
CPhi(iSr, iSO4) = 0.78474727943517 * CPhi(iCa, iSO4)  'based on Dai 20151112

Lnc(iCO2aq, iNa) = fPP(TK, 0.0803, 0.0955, -0.0000382, -4937.1, -38.454, 0)  ' Below LN values are from Kaasa
Lnc(iCO2aq, iK) = fPP(TK, 0.04856, 0.0955, -0.0000382, -4937.1, -38.454, 0)
Lnc(iCO2aq, iMg) = fPP(TK, 0.14998, 0.00237, -0.0000008, 377.48, 0, 0)
Lnc(iCO2aq, iCa) = fPP(TK, 0.15267, 0.00203, -0.000000465, 370.68, 0, 0)
Lnc(iCO2aq, iBa) = fPP(TK, 0.15267, 0.00203, -0.000000465, 370.68, 0, 0)
Lnc(iCO2aq, iSr) = fPP(TK, 0.15267, 0.00203, -0.000000465, 370.68, 0, 0)
Lnc(iCO2aq, iFe) = fPP(TK, 0.15267, 0.00203, -0.000000465, 370.68, 0, 0)
Lna(iCO2aq, iCl) = fPP(TK, 0.01919, -0.00527, 0.00000164, 492.38, 2.7967, 0)
Lna(iCO2aq, iBr) = fPP(TK, 0.01919, -0.00527, 0.00000164, 492.38, 2.7967, 0)
Lna(iCO2aq, iSO4) = fPP(TK, 0.19003, 0.0295, -0.0000215, 1970.8, 0, 0)
'*********************************** Holmes iK, iCl term
    q1 = -0.0210289: q2 = 0.603967: q3 = 0.00367768: q4 = -0.00000705537: q5 = 0.00000000197968
    q6 = -0.00247588: q7 = 0.14416: q8 = 0.000677136: q9 = 0.000656838: q10 = 0.04808
    q11 = 0.050038: q12 = -2931.268116: q13 = -33.953143: q14 = 0: q15 = 0: q16 = 0: q17 = 0: q18 = 0
b0(iK, iCl) = q1 * TK ^ 2 / 6 + q2 * TK / 2 + q3 * TK ^ 2 * (Log(TK) / 2 - 5 / 12) / 3 + q4 * TK ^ 3 / 12 + q5 * TK ^ 4 / 20 + q6 * (TK / 2 + 3 * 227 ^ 2 / 2 / TK + 227 * (TK - 227) * Log(TK - 227) / TK) - q7 * (2 * (647 - TK) * Log(647 - TK) / TK + Log(647 - TK)) - q12 / TK - q9 * (298.15 ^ 2 / TK) + q13 + q11

    q1 = 0: q2 = 0: q3 = 0.0000000945016: q4 = -0.000000000290741: q5 = 0
    q6 = 0.00326205: q7 = 0.000000839662: q8 = 0: q9 = -0.00000000441638: q10 = 6.71235E-12
    q11 = 0: q12 = -0.0000442327: q13 = -0.000000000797437: q14 = 0: q15 = 4.12771E-12
    q16 = -6.24996E-15: q17 = 0: q18 = 0.0000000416221
b0(iK, iCl) = b0(iK, iCl) + (q1 + q2 / TK + q3 * TK + q4 * TK ^ 2 + q6 / (647 - TK)) * (PBar - 179) + (PBar ^ 2 - 179 ^ 2) / 2 * (q7 + q8 / TK + q9 * TK + q10 * TK ^ 2 + q12 / (647 - TK)) + (PBar ^ 3 - 179 ^ 3) / 3 * (q13 + q14 / TK + q15 * TK + q16 * TK ^ 2 + q18 / (647 - TK))

    q1 = 0.220813: q2 = -4.61849: q3 = -0.0410116: q4 = 0.000110445: q5 = -0.0000000473196
    q6 = -0.027412: q7 = 0.332883: q8 = 0.000967854: q9 = 0.000967854: q10 = 0.218752
    q11 = 0.218752: q12 = 6353.355434: q13 = 193.004059: q14 = 0: q15 = 0: q16 = 0: q17 = 0: q18 = 0
b1(iK, iCl) = q1 * TK ^ 2 / 6 + q2 * TK / 2 + q3 * TK ^ 2 * (Log(TK) / 2 - 5 / 12) / 3 + q4 * TK ^ 3 / 12 + q5 * TK ^ 4 / 20 + q6 * (TK / 2 + 3 * 227 ^ 2 / 2 / TK + 227 * (TK - 227) * Log(TK - 227) / TK) - q7 * (2 * (647 - TK) * Log(647 - TK) / TK + Log(647 - TK)) - q12 / TK - q9 * (298.15 ^ 2 / TK) + q13 + q11

    q1 = 0: q2 = 0.000764891: q3 = 0: q4 = -0.0000000112131: q5 = 1.72256E-11:
    q6 = 0: q7 = -0.00571188: q8 = -0.0000412364: q9 = -0.0000412364: q10 = -0.000394
    q11 = -0.000394: q12 = 28.17218: q13 = -0.125567: q14 = 0: q15 = 0: q16 = 0: q17 = 0: q18 = 0:
CPhi(iK, iCl) = 2 * (q1 * TK ^ 2 / 6 + q2 * TK / 2 + q3 * TK ^ 2 * (Log(TK) / 2 - 5 / 12) / 3 + q4 * TK ^ 3 / 12 + q5 * TK ^ 4 / 20 + q6 * (TK / 2 + 3 * 227 ^ 2 / 2 / TK + 227 * (TK - 227) * Log(TK - 227) / TK) - q7 * (2 * (647 - TK) * Log(647 - TK) / TK + Log(647 - TK)) - q12 / TK - q9 * (298.15 ^ 2 / TK) + q13 + q11)
    
'%Pabalan and Pitzer
Taap(iCl, iSO4) = 0.03: Taap(iSO4, iCl) = 0.03

'%based on Pabalan & Pitzer 1988
Yaapc(iCl, iSO4, iNa) = -0.016958 + 3.13544 / TK + 0.0000216352 * TK + -131254# / (647 - TK) ^ 4
Yaapc(iSO4, iCl, iNa) = -0.016958 + 3.13544 / TK + 0.0000216352 * TK + -131254# / (647 - TK) ^ 4
'Duan and Li 2008 Carbonate
    q1 = 0.0661: q2 = 0#: q3 = 0#: q4 = 0#: q5 = 0#: q6 = 0.0000000375951: q7 = 0#: q8 = 0#
b0(iNa, iHCO3) = fDuan1(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8)
    q1 = 0.5153: q2 = -0.0005991: q3 = 0#: q4 = -25.81: q5 = -2.659: q6 = 0#: q7 = 0.0000875: q8 = -0.0000000266
b0(iNa, iCO3) = fDuan1(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8)
    q1 = -4.116: q2 = 0.006309: q3 = 924#: q4 = -52.02: q5 = -80.26: q6 = 0#: q7 = 0.0001634: q8 = -0.000000139
b1(iNa, iHCO3) = fDuan1(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8)

    q1 = 2.044: q2 = -0.004303: q3 = 0#: q4 = -25.45: q5 = 361.8: q6 = 0#: q7 = 0#: q8 = 0#
b1(iNa, iCO3) = fDuan1(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8)

CPhi(iNa, iHCO3) = 0

    q1 = -0.0914: q2 = 0#: q3 = 0#: q4 = 6.482: q5 = 8.048: q6 = 0#: q7 = -0.0000289: q8 = 0#
CPhi(iNa, iCO3) = fDuan1(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8)


    q1 = -0.2739092216: q2 = 0.0007399855859: q3 = 55.5213285: q4 = 0#: q5 = 0#: q6 = 0#: q7 = 0#:
    q8 = 0.005683638727: q9 = -0.0008009093476: q10 = 0#: q11 = -0.0000174562027
Lnc(iCO2aq, iNa) = fDuan2(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11)
Lna(iCO2aq, iCl) = 0
    q1 = -0.01665719188: q2 = 0.0000013916186: q3 = 0#: q4 = 0#: q5 = 0#
    q6 = 0#: q7 = 0#: q8 = -0.001873812115: q9 = -0.001577400757: q10 = 0#: q11 = 0#
zeta(iCO2aq, iNa, iCl) = fDuan2(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11)

'based on Dai 20151112
Tccp(iNa, iCa) = fPZ_DL_6(TK, Patm, -0.147510859131801, 9.76229611297803E-04, -4.82248417271452, -2.06519624782849, -1.51280704258336E-05, -1.04898649291008E-08)
Tccp(iCa, iNa) = Tccp(iNa, iCa)
Tccp(iNa, iBa) = 1.14420890430833 * Tccp(iNa, iCa)
Tccp(iBa, iNa) = Tccp(iNa, iBa)
Tccp(iNa, iSr) = 1.89691943139874 * Tccp(iNa, iCa)
Tccp(iSr, iNa) = Tccp(iNa, iSr)

Yccpa(iNa, iCa, iCl) = fPZ_DL_6(TK, Patm, 2.26910136864354E-02, -2.43069462162211E-04, 2.40163930955923, 0.900545162398897, 9.17559621916219E-06, 1.11650476459493E-09)
Yccpa(iCa, iNa, iCl) = Yccpa(iNa, iCa, iCl)
Yccpa(iNa, iBa, iCl) = 1.29191707034912 * Yccpa(iNa, iCa, iCl)
Yccpa(iBa, iNa, iCl) = Yccpa(iNa, iBa, iCl)
Yccpa(iNa, iSr, iCl) = 2.32054171945995 * Yccpa(iNa, iCa, iCl)
Yccpa(iSr, iNa, iCl) = Yccpa(iNa, iSr, iCl)

'based on Dai 20151112
Yaapc(iCl, iHCO3, iNa) = fPZ_DL_6(TK, Patm, 3.29114286722895E-02, -9.905848162123E-05, -1.1319579697159, -6.66253293573831E-02, -1.209935715211E-05, 5.05498885272366E-09)
Yaapc(iHCO3, iCl, iNa) = Yaapc(iCl, iHCO3, iNa)
Yaapc(iSO4, iHCO3, iNa) = fPZ6(TK, -2.30508813504961, 10.9078063774135, 0.173488671930141, 2.38184731898223E-02, -10.9432999062871, 6.12652697241691E-03)
Yaapc(iHCO3, iSO4, iNa) = Yaapc(iSO4, iHCO3, iNa)

'%based on IUPAC
Lnc(iCO2aq, iCa) = 0.2045 - 0.000284 * (TK - 298.15)
b0(iCa, iHCO3) = -3.7313 + 1371.42 / TK - 57330 / TK ^ 2
b1(iCa, iHCO3) = 4.3005 - 2819.46 / TK + 483720 / TK ^ 2
b0(iMg, iHCO3) = -1.9113 + 769.53 / TK - 57330 / TK ^ 2
b1(iMg, iHCO3) = 14.3043 - 5590.6 / TK + 483720 / TK ^ 2

Lna(iCO2aq, iHCO3) = 0
Lna(iCO2aq, iCO3) = 0
Lnn(iCO2aq, iCO2aq) = 0

Tccp(iNa, iCa) = fPZ_DL_6(TK, Patm, -9.00319213981419E-02, 3.32942474038081E-04, -1.71678275211677, 6.96629148452292, 3.53927512842587E-05, -1.39564921696874E-09)
Tccp(iCa, iNa) = Tccp(iNa, iCa)
Yccpa(iNa, iCa, iCl) = fPZ_DL_6(TK, Patm, -2.03123697088405E-02, 6.79617962918556E-05, 1.46202927499665, -2.31987379795446, -1.23017318725963E-05, -2.5328414139378E-09)
Yccpa(iCa, iNa, iCl) = Yccpa(iNa, iCa, iCl)

Tccp(iNa, iCa) = fPZ_DL_6(TK, PsatH2O(TK), -9.00319213981419E-02, 3.32942474038081E-04, -1.71678275211677, 6.96629148452292, 3.53927512842587E-05, -1.39564921696874E-09)
Tccp(iNa, iCa) = Tccp(iNa, iCa) + -0.00000025 * TK * (Patm - PsatH2O(TK))
Tccp(iCa, iNa) = Tccp(iNa, iCa)
Yccpa(iNa, iCa, iCl) = fPZ_DL_6(TK, PsatH2O(TK), -2.03123697088405E-02, 6.79617962918556E-05, 1.46202927499665, -2.31987379795446, -1.23017318725963E-05, -2.5328414139378E-09)
Yccpa(iNa, iCa, iCl) = Yccpa(iNa, iCa, iCl) + 0.00000001 * TK * (Patm - PsatH2O(TK))
Yccpa(iCa, iNa, iCl) = Yccpa(iNa, iCa, iCl)

''===========================H2Saq coefficients
q1 = -0.10242: q2 = 0.000322: q3 = 27.88934: q4 = 0#: q5 = 0#: q6 = 0#: q7 = 0#:            'Noe that q1-q3 are fitted by Dai based on Barrett's data, q7-q11 are set to equal to CO2aq parameters
    q8 = 0.005683638727: q9 = -0.0008009093476: q10 = 0#: q11 = -0.0000174562027
Lnc(iH2Saq, iNa) = fDuan2(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11)
Lna(iH2Saq, iCl) = 0
    q1 = 0.06745: q2 = -0.000104: q3 = -13.71127: q4 = 0#: q5 = 0#
    q6 = 0#: q7 = 0#: q8 = -0.001873812115: q9 = -0.001577400757: q10 = 0#: q11 = 0#
zeta(iH2Saq, iNa, iCl) = fDuan2(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11)

'The following code for pH correction has not been tested by Amy Feb 22, 2017
''Mesmer & Holmes 1992, fitted by Kaasa
'Tccp(iH, iNa) = fPP(TK, 0.02577, -0.00179, 0.000003, 0, 0, 0)
'Tccp(iNa, iH) = Tccp(iH, iNa)
''Christov & Moller 2004
'Taap(iOH, iCl) = 0.110485703 + 0 * (Tc + 273.15) + 0 * (Tc + 273.15) ^ 2 + -49.3613455 / (Tc + 273.15)
'Taap(iCl, iOH) = Taap(iOH, iCl)
'Yccpa(iH, iNa, iCl) = -0.0145623335 + 0 * (Tc + 273.15) + 0 * (Tc + 273.15) ^ 2 + 3.59308925 / (Tc + 273.15)
'Yccpa(iNa, iH, iCl) = Yccpa(iH, iNa, iCl)
'Yaapc(iOH, iCl, iNa) = 12.7601977 + 0.00366503385 * (Tc + 273.15) + 0# * (Tc + 273.15) ^ 2 + -355.227032 / (Tc + 273.15) + -2.2105122 * Log(Tc + 273.15) + 0.00323085637 / (Tc + 273.15 - 263) + -27.1988632 / (680 - Tc - 273.15)
'Yaapc(iCl, iOH, iNa) = Yaapc(iOH, iCl, iNa)

For m = 1 To NumCat  'fbtermma calculation in density calculation, set parameter for sulfide = parameters for carbonate
b0(m, iSion) = b0(m, iCO3)
b1(m, iSion) = b1(m, iCO3)
b2(m, iSion) = b2(m, iCO3)
CPhi(m, iSion) = CPhi(m, iCO3)
Next m
'Dai fit some Fe related paramters 20161116
'b0(iFe, iCl) = 0.16461: b1(iFe, iCl) = 2.93571: b2(iFe, iCl) = -37.4637: CPhi(iFe, iCl) = 0.05
'b0(iFe, iHS) = -0.5: b1(iFe, iHS) = -5: b2(iFe, iHS) = -1126.1: CPhi(iFe, iHS) = -0.05
b0(iFe, iAc) = -0.5: b1(iFe, iAc) = -5: b2(iFe, iAc) = 0: CPhi(iFe, iAc) = -0.05
'b0(iFe, iSO4) = -0.23181: b1(iFe, iSO4) = 5: b2(iFe, iSO4) = 0: CPhi(iFe, iSO4) = -0.05
'Dai fit some Fe related paramters 20161116
''Xin Wang
'b0(iFe, iCl) = 3.17041518379 - 0.0085371682081 * TK: b1(iFe, iCl) = -11.7316157206 + 0.039715548359 * TK: b2(iFe, iCl) = -19.57228512275: CPhi(iFe, iCl) = 0.05
'b0(iFe, iHS) = 3.204713767809: b1(iFe, iHS) = 2.985226613913: b2(iFe, iHS) = -126.123930840032: CPhi(iFe, iHS) = -0.3096840105814
'b0(iFe, iSO4) = -9.566967039 - 1.357447543 * (TK - Tr) - 7.4359193198 * 100 / TK: b1(iFe, iSO4) = 28.1528250426 + 0.11683123732 / TK: b2(iFe, iSO4) = -0.0148848087247: CPhi(iFe, iSO4) = -0.05
''Xin Wang 07/18/2020
'b0(iFe, iCl) = 0.892599314 - -0.00179602 * TK: b1(iFe, iCl) = 1.567290503 - 0.000565994 * TK: b2(iFe, iCl) = -67.57946776 + 0.148869669 * TK: CPhi(iFe, iCl) = 0.05
'b0(iFe, iHS) = 1.72134312: b1(iFe, iHS) = -11.6522406901265: b2(iFe, iHS) = -8.82441284104844E-02: CPhi(iFe, iHS) = 0.5
'b0(iFe, iSO4) = -1: b1(iFe, iSO4) = -11.57220813 + 0.122519770226748 * TK + -0.000165536 * TK ^ 2: b2(iFe, iSO4) = -0.5 * (10 ^ (-0.8398 - 0.895 * Log10(TK) + 0.012 * TK)): CPhi(iFe, iSO4) = -0.05
'Xin 12/01/2020, ensures gc(iFe) is reasonable at all 10 m
b0(iFe, iCl) = 0.05 + 0.001 * (TK - 298.15): b1(iFe, iCl) = 5.639834738 - 7.21091902166862E-03 * TK: b2(iFe, iCl) = -36.51133921 - 6.59720850886405E-03 * TK: CPhi(iFe, iCl) = 0.05
b0(iFe, iHS) = 1.999536302: b1(iFe, iHS) = -12.2860517351668: b2(iFe, iHS) = -4.94686944425638E-05: CPhi(iFe, iHS) = 0.5
b0(iFe, iSO4) = -0.999999943766306 - 1.99999911511231E-03 * (TK - 298.15): b1(iFe, iSO4) = -36.1108185261268 + 0.22019249845693 * TK - 2.23069409321093E-04 * TK ^ 2: b2(iFe, iSO4) = -0.5 * (10 ^ (-0.8398 - 0.895 * Log10(TK) + 0.012 * TK)): CPhi(iFe, iSO4) = -0.05


End Sub



Function fV0(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17, q18)

fV0 = q1 + q2 / TK + q3 * TK + q4 * TK ^ 2 + q5 / (TK - 227) + q6 / (647 - TK) + PBar * (q7 + q8 / TK + q9 * TK + q10 * TK ^ 2 + _
q11 / (TK - 227) + q12 / (647 - TK)) + PBar ^ 2 * (q13 + q14 / TK + q15 * TK + q16 * TK ^ 2 + q17 / (TK - 227) + q18 / (647 - TK))
End Function
Sub V0TP() 'unit cm3/mol

V0_c(iNa) = fV0(TK, PBar, 8.76686173829976, 10.7463747460684, -3.94438220704875E-02, 6.24254747432051E-05, -270.67565216552, 3.71906197249154, _
-0.548144793641968, 60.4681423698375, 1.6487628506002E-03, -1.78543820686743E-06, -7.22279554933479E-02, 6.1016223460645, 5.37401040542647E-04, -5.78337684998825E-02, -1.64057441413787E-06, 1.85284769422731E-09, 2.33307684437836E-04, -8.30091414725064E-03)

V0_c(iK) = fV0(TK, PBar, 1365.58178, -146187.60179, -4.00314, 0.004292463, 0#, -18894.00317, -6.66675, 715.61054, 0.019742057, -0.000020810979, _
0#, 81.91098, 0.00534941, -0.573121, -0.0000158576885, 0.0000000166987, 0#, -0.0649312)

V0_c(iMg) = fV0(TK, PBar, 15.5470319999999, 18848.33832, -0.380047233, 0.00100500148, -761.133887, -22952.60934, -1.27205782, 142.833027, _
0.00343937874, -0.00000368366162, 0#, 36.3788742, 0#, 0#, 0.000000400785822, 0#, 0#, -0.0429183805)

V0_c(iCa) = fV0(TK, PBar, 136.567817, 3135.53072, -0.68264817, 0.0012917585, -761.133887, -22952.60934, -1.6506531, 162.991634, 0.0048786976, _
-0.00000616046222, 0#, 71.877495, 0#, 0#, 0.000000400785822, 0#, 0#, -0.0429183805)

V0_c(iBa) = fV0(TK, PBar, 131.77473, 3135.53072, -0.65074076, 0.0012917585, -761.133887, -22952.60934, -1.6506531, 162.991634, 0.0048786976, _
-0.00000616046222, 0#, 71.877495, 0#, 0#, 0.000000400785822, 0#, 0#, -0.0429183805)

V0_c(iSr) = fV0(TK, PBar, 131.475189, 3135.53072, -0.66249868, 0.0012917585, -761.133887, -22952.60934, -1.6506531, 167.104986, 0.0048786976, _
-0.00000616046222, 0#, 69.810131, 0#, 0#, 0.000000400785822, 0#, 0#, -0.0429183805)
'Sr needs updates
V0_a(iCl) = fV0(TK, PBar, 195.93822, -23046.39821, -0.29604, 0.000299867, 0#, -13674.59683, -0.20212, 19.60946, 0.000482443, -0.000000766921, 0#, _
21.30102, 0#, 0#, 0.0000000714885, 0#, 0#, -0.00727)
'V0_a(iSO4) = fV0(TK, Pbar, 27.4554375152355, 11118.694164444, 0.030718594895819, 1.19721044620422E-04, -603.990784501134, -20068.950698125, _
-1.41244550798504E-03, -0.292407135609742, 3.7742647555103E-05, 5.00512190208687E-08, -0.730773115407055, 0.649616991262688, -1.65988890686552E-05, -8.49619998637762E-03, 3.33182503729136E-08, 2.55046221323894E-11, 1.69962862666371E-03, 1.54474219445451E-03)
'%based on Dai 20151007
'q1 = 10.316619746151: q2 = 3272.93986049384: q3 = 0.165715851736482: q4 = -2.51568304422058E-04: q5 = -537.668580888258: q6 = -9367.63682683533: q7 = 5.81001163051211E-05: q8 = -0.242020665269739: q9 = 1.41151491896361E-05: q10 = 2.64027029498036E-09: q11 = 0.980997961094229: q12 = -0.294949165064944: q13 = 2.31381159571309E-06: q14 = 5.72625168448313E-03: q15 = 4.06838781100257E-08: q16 = -1.34177023544942E-10: q17 = -2.21259974926831E-03: q18 = 1.36061169290469E-04
'V0_a(iSO4) = q1 + q2 / TK + q3 * TK + q4 * TK ^ 2 + q5 / (TK - 227) + q6 / (647 - TK) + Pbar * (q7 + q8 / TK + q9 * TK + q10 * TK ^ 2 + q11 / (TK - 227) + q12 / (647 - TK)) + Pbar ^ 2 * (q13 + q14 / TK + q15 * TK + q16 * TK ^ 2 + q17 / (TK - 227) + q18 / (647 - TK))
'%based on Dai 20151027
q1 = 20.1255488592824: q2 = 8382.68656863382: q3 = 8.63029649907132E-02: q4 = 3.86933893465996E-05: q5 = -262.073120048569: q6 = -20014.7787488445: q7 = 1.93246311860811E-02: q8 = 1.16742679461389: q9 = 9.95461079547389E-06: q10 = 7.58647008800297E-08: q11 = -1.30203576761739: q12 = -2.31700638251545: q13 = -3.61401771714286E-05: q14 = -4.71960303681654E-03: q15 = -7.8135942334434E-09: q16 = 4.3129299430231E-11: q17 = 1.77316241419105E-03: q18 = 7.24281664341625E-03
V0_a(iSO4) = q1 + q2 / TK + q3 * TK + q4 * TK ^ 2 + q5 / (TK - 227) + q6 / (647 - TK) + PBar * (q7 + q8 / TK + q9 * TK + q10 * TK ^ 2 + q11 / (TK - 227) + q12 / (647 - TK)) + PBar ^ 2 * (q13 + q14 / TK + q15 * TK + q16 * TK ^ 2 + q17 / (TK - 227) + q18 / (647 - TK))
End Sub

'********************************************************************************************
'3.  This subroutine is called by subroutines D, E, and G above.  Include modification from Wei Shi and Zhaoyi Dai
Sub C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)

'This subroutine uses TK, Patm, and ISt(m) to calculate activity coefficients of anions,
'cations, neutral compounds (CO2aq, H2Saq, and HAc_aq).
'Pitzer ion interaction coefficients are entered below explicitly for ease of reading, etc.
If xMeOH > 0 Or xMEG > 0 Then
mt = fgammaN
End If
Call C2_Pitzer2019
         U1 = 342.79:    U2 = -0.0050866:    U3 = 0.0000009469:    U4 = -2.0525:    U5 = 3115.9:    U6 = -182.89
         U7 = -8032.5:    U8 = 4214200:    U9 = 2.1417
         D1000 = U1 * Exp(U2 * TK + U3 * TK ^ 2):    cc = U4 + U5 / (U6 + TK):    b = U7 + U8 / TK + U9 * TK
 '   Dielec = D1000 + cc * Log((B + Patm) / (B + 1000))
    Dielec = D1000 + cc * Log((b + PBar) / (b + 1000))

    dens0 = 999.83952:    a1 = 16.945176:    a2 = -0.0079870401:    a3 = -0.000046170461:    a4 = 0.00000010556302
    a5 = -2.8054253E-10:    a6 = 0.01687985:    a7 = 0.043922:    a8 = -0.000076:    a9 = 0.000000126:    a10 = 0.00000000319
    dens1atm = (dens0 + a1 * TC + a2 * TC ^ 2 + a3 * TC ^ 3 + a4 * TC ^ 4 + a5 * TC ^ 5) / (1 + a6 * TC)
    dens = dens1atm + (a7 + a8 * TC + a9 * TC ^ 2 + a10 * TC ^ 3) * (Patm - 1)
    dens = fH2ODensity(TK, PBar)
    APhi = (1 / 3) * ((2 * pi * NAv * dens) ^ 0.5) * (eElec ^ 2 / (4 * pi * eps0 * Dielec * kBoltz * TK)) ^ 1.5

'Calculate the gX and gpX functions that are a function of ISt and charge, only.
       
       X14 = 1.4 * Ist ^ 0.5                           'For 2:(-2) pairs or ions
    gX14 = 2 * (1 - (1 + X14) * Exp(-X14)) / X14 ^ 2
    gpX14 = -2 * (1 - (1 + X14 + 0.5 * X14 ^ 2) * Exp(-X14)) / X14 ^ 2
        X20 = 2 * Ist ^ 0.5                             'For 1:(-2), (-1):2, or 1:(-1) pairs
    gX20 = 2 * (1 - (1 + X20) * Exp(-X20)) / X20 ^ 2
    gpX20 = -2 * (1 - (1 + X20 + 0.5 * X20 ^ 2) * Exp(-X20)) / X20 ^ 2
        X12 = 12 * Ist ^ 0.5
    gX12 = 2 * (1 - (1 + X12) * Exp(-X12)) / X12 ^ 2
    gpX12 = -2 * (1 - (1 + X12 + 0.5 * X12 ^ 2) * Exp(-X12)) / X12 ^ 2
    
        'added by GD 20191021
    xCaSO4 = 32 * APhi * Ist ^ 0.5
    gXCaSO4 = 2 * (1 - (1 + xCaSO4) * Exp(-xCaSO4)) / xCaSO4 ^ 2
    gpXCaSO4 = -2 * (1 - (1 + xCaSO4 + 0.5 * xCaSO4 ^ 2) * Exp(-xCaSO4)) / xCaSO4 ^ 2

    
'Calculate the JX and JpX functions for like charged, but different, ions, i.e., 1:2 or -1:-2.
'   These functions are from Pitzer's text, 1995, appendix.
        X12 = 6 * 1 * 2 * APhi * Ist ^ 0.5
    JX12 = X12 / (4 + 4.581 * X12 ^ (-0.7237) * Exp(-0.012 * X12 ^ 0.528))
        X12 = 1.001 * X12                                   'For numerical derivative
        JX12delta = X12 / (4 + 4.581 * X12 ^ (-0.7237) * Exp(-0.012 * X12 ^ 0.528))
        X12 = X12 / 1.001                                   'Return X to original value
    JpX12 = (JX12delta - JX12) / (0.001 * X12)              'Derivative of JX12 w.r.t. X12
        X11 = 6 * 1 * 1 * APhi * Ist ^ 0.5
    JX11 = X11 / (4 + 4.581 * X11 ^ (-0.7237) * Exp(-0.012 * X11 ^ 0.528))
        X11 = X11 * 1.001
        JX11delta = X11 / (4 + 4.581 * X11 ^ (-0.7237) * Exp(-0.012 * X11 ^ 0.528))
        X11 = X11 / 1.001
    JpX11 = (JX11delta - JX11) / (0.001 * X11)
        X22 = 6 * 2 * 2 * APhi * Ist ^ 0.5
    JX22 = X22 / (4 + 4.581 * X22 ^ (-0.7237) * Exp(-0.012 * X22 ^ 0.528))
        X22 = X22 * 1.001
        JX22delta = X22 / (4 + 4.581 * X22 ^ (-0.7237) * Exp(-0.012 * X22 ^ 0.528))
        X22 = X22 / 1.001
    JpX22 = (JX22delta - JX22) / (0.001 * X22)
    
        ETh = (0.5 / Ist) * (JX12 - 0.5 * (JX11 + JX22))
        EThp = (0.25 / Ist ^ 2) * (X12 * JpX12 - 0.5 * (X11 * JpX11 + X22 * JpX22)) - ETh / Ist           'The "/1.001" returns X's to original values.
        Phip = EThp
    
'--------------------------------------------------------------------
'Calculate the FTerms
 
    f_gamma = -APhi * (Ist ^ 0.5 / (1 + 1.2 * Ist ^ 0.5) + (2 / 1.2) * Log(1 + 1.2 * Ist ^ 0.5))
    For c = 1 To NumCat
    For a = 1 To NumAn
        Bpca = b1(c, a) * gpX14 / Ist + b2(c, a) * gpX12 / Ist
'If ChCat(c) * ChAn(a) <> -4 Then Bpca = b1(c, a) * gpX20 / Ist + b2(c, a) * gpX12 / Ist
 'Holmes and Dai
 If ChCat(c) = 1 Then
     X20 = 2 * Ist ^ 0.5                             'For 1:(-2) or 1:(-1) pairs
 If c = 2 And a = 6 Then X20 = 1.4 * Ist ^ 0.5      'For Na-SO4
 If c = 3 And a = 6 Then X20 = 1.4 * Ist ^ 0.5      'For K-SO4
   'gX20 = 2 * (1 - (1 + X20) * Exp(-X20)) / X20 ^ 2
    gpX20 = -2 * (1 - (1 + X20 + 0.5 * X20 ^ 2) * Exp(-X20)) / X20 ^ 2
    Bpca = b1(c, a) * gpX20 / Ist + b2(c, a) * gpX12 / Ist
End If
 If ChCat(c) = 2 And ChAn(a) = -1 Then
    X20 = (2 - 0.00181 * (TK - 298.15)) * Ist ^ 0.5    'For 2:(-1) pairs
   'gX20 = 2 * (1 - (1 + X20) * Exp(-X20)) / X20 ^ 2
    gpX20 = -2 * (1 - (1 + X20 + 0.5 * X20 ^ 2) * Exp(-X20)) / X20 ^ 2
    Bpca = b1(c, a) * gpX20 / Ist + b2(c, a) * gpX12 / Ist
End If

'added by GD 20191021
  If c = 5 And a = 6 Then
  Bpca = b1(c, a) * gpX14 / Ist + b2(c, a) * gpXCaSO4 / Ist       'only for Ca-SO4, alpha2 = 32*APhi
  End If
  
        f_gamma = f_gamma + mc(c) * ma(a) * Bpca
    Next a
    Next c

    For c = 1 To NumCat - 1
    For cp = c + 1 To NumCat
        If ChCat(c) <> ChCat(cp) Then f_gamma = f_gamma + mc(c) * mc(cp) * Phip
    Next cp
    Next c

    For a = 1 To NumAn - 1
    For ap = a + 1 To NumAn
        If ChAn(a) <> ChAn(ap) Then f_gamma = f_gamma + ma(a) * ma(ap) * Phip
    Next ap
    Next a

'-----------------------------------------------------------------------
'Iterate through all metals
For m = 1 To NumCat
    
    term1 = (ChCat(m) ^ 2) * f_gamma      'The D-H term
    
'Calculate binary-type Term2
    term2 = 0
  For a = 1 To NumAn
        BMa = b0(m, a) + b1(m, a) * gX14 + b2(m, a) * gX12    'For 2:(-2) electrolytes
'   If ChCat(m) * ChAn(a) <> -4 Then BMa = b0(m, a) + b1(m, a) * gX20 + b2(m, a) * gX12
'Holmes and Dai
 If ChCat(m) = 1 Then
     X20 = 2 * Ist ^ 0.5                             'For 1:(-2) or 1:(-1) pairs
 If c = 2 And a = 6 Then X20 = 1.4 * Ist ^ 0.5      'For Na-SO4
 If c = 3 And a = 6 Then X20 = 1.4 * Ist ^ 0.5      'For K-SO4
   gX20 = 2 * (1 - (1 + X20) * Exp(-X20)) / X20 ^ 2
'  gpX20 = -2 * (1 - (1 + X20 + 0.5 * X20 ^ 2) * Exp(-X20)) / X20 ^ 2
    BMa = b0(m, a) + b1(m, a) * gX20 + b2(m, a) * gX12
End If
 If ChCat(m) = 2 And ChAn(a) = -1 Then
    X20 = (2 - 0.00181 * (TK - 298.15)) * Ist ^ 0.5    'For 2:(-1) pairs
   gX20 = 2 * (1 - (1 + X20) * Exp(-X20)) / X20 ^ 2
 ' gpX20 = -2 * (1 - (1 + X20 + 0.5 * X20 ^ 2) * Exp(-X20)) / X20 ^ 2
    BMa = b0(m, a) + b1(m, a) * gX20 + b2(m, a) * gX12
End If

'added by GD 20191021
  If m = 5 And a = 6 Then
  BMa = b0(m, a) + b1(m, a) * gX14 + b2(m, a) * gXCaSO4       'only for Ca-SO4, alpha2 = 32*APhi
  End If

        CMa = CPhi(m, a) / (2 * Abs(ChCat(m) * ChAn(a)) ^ 0.5)
    term2 = term2 + ma(a) * (2 * BMa + MoleCharge * CMa)
  Next a

'Calculate ternary-type Term3
      term3 = 0
  For c = 1 To NumCat
        PhiMc = Tccp(m, c)                                  'If charges are equal
    If ChCat(m) <> ChCat(c) Then PhiMc = Tccp(m, c) + ETh   'If charges are not equal
        SumYMca = 0
    For a = 1 To NumAn
        SumYMca = SumYMca + ma(a) * Yccpa(m, c, a)
    Next a
    term3 = term3 + mc(c) * (2 * PhiMc + SumYMca)
  Next c
  
'Calculate ternary-type Terms4
    term4 = 0
  For a = 1 To NumAn - 1
  For ap = a + 1 To NumAn
    term4 = term4 + ma(a) * ma(ap) * Yaapc(a, ap, m)
  Next ap
  Next a

'Calculate binary-type Term5
    term5 = 0
  For c = 1 To NumCat
  For a = 1 To NumAn
    Cca = CPhi(c, a) / (2 * Abs(ChCat(c) * ChAn(a)) ^ 0.5)
    term5 = term5 + mc(c) * ma(a) * Cca
  Next a
  Next c
    term5 = Abs(ChCat(m)) * term5

'Calculate neutral-type Term6
    term6 = 0
  For n = 1 To NumNeut
    term6 = term6 + mn(n) * 2 * Lnc(n, m)
  Next n
  term7 = 0
  For n = 1 To NumNeut
  For a = 1 To NumAn
  If n = 2 And m = 2 Then
  pH = pH
  End If
  term7 = term7 + 6 * mn(n) * ma(a) * zeta(n, m, a)
  Next a
  Next n
  
    termsum = term1 + term2 + term3 + term4 + term5 + term6 + term7
    ActCoefM = Exp(termsum)
    gCat(m) = ActCoefM
Next m

    gCat(iPb) = gCat(iZn)  'Change as soon as we find Pitzer Act. Coefs for Pb2+
    gCat(iNH4) = gCat(iK)  'Change as soon as we find Pitzer Act. Coefs for NH4+
    gCat(iRa) = gCat(iCa)
'------------------------------------------------------------------------
'Iterate through all anions
For iPz = 1 To NumAn
    
    term1 = (ChAn(iPz) ^ 2) * f_gamma      'The D-H term
    
'Calculate binary-type Term2
    term2 = 0
  For c = 1 To NumCat
        BcX = b0(c, iPz) + b1(c, iPz) * gX14 + b2(c, iPz) * gX12    'For 2:(-2) electrolytes
'If ChAn(iPz) * ChCat(c) <> -4 Then BcX = b0(c, iPz) + b1(c, iPz) * gX20 + b2(c, iPz) * gX12
'Holmes and Dai
 If ChCat(c) = 1 Then
     X20 = 2 * Ist ^ 0.5                             'For 1:(-2) or 1:(-1) pairs
 If c = 2 And iPz = 6 Then X20 = 1.4 * Ist ^ 0.5      'For Na-SO4
 If c = 3 And iPz = 6 Then X20 = 1.4 * Ist ^ 0.5      'For K-SO4
   gX20 = 2 * (1 - (1 + X20) * Exp(-X20)) / X20 ^ 2
'  gpX20 = -2 * (1 - (1 + X20 + 0.5 * X20 ^ 2) * Exp(-X20)) / X20 ^ 2
    BcX = b0(c, iPz) + b1(c, iPz) * gX20 + b2(c, iPz) * gX12
End If
 If ChCat(c) = 2 And ChAn(iPz) = -1 Then
    X20 = (2 - 0.00181 * (TK - 298.15)) * Ist ^ 0.5    'For 2:(-1) pairs
   gX20 = 2 * (1 - (1 + X20) * Exp(-X20)) / X20 ^ 2
 ' gpX20 = -2 * (1 - (1 + X20 + 0.5 * X20 ^ 2) * Exp(-X20)) / X20 ^ 2
    BcX = b0(c, iPz) + b1(c, iPz) * gX20 + b2(c, iPz) * gX12
End If

'added by GD 20191021
  If c = 5 And iPz = 6 Then
  BcX = b0(c, iPz) + b1(c, iPz) * gX14 + b2(c, iPz) * gXCaSO4       'only for Ca-SO4, alpha2 = 32*APhi
  End If

        CcX = CPhi(c, iPz) / (2 * Abs(ChAn(iPz) * ChCat(c)) ^ 0.5)
    term2 = term2 + mc(c) * (2 * BcX + MoleCharge * CcX)
  Next c

'Calculate ternary-type Term3
      term3 = 0
  For a = 1 To NumAn
      PhiXa = Taap(iPz, a)                                    'If charges are equal
    If ChAn(iPz) <> ChAn(a) Then PhiXa = Taap(iPz, a) + ETh     'If charges are not equal
        SumYXac = 0
    For c = 1 To NumCat
        SumYXac = SumYXac + mc(c) * Yaapc(iPz, a, c)
    Next c
    term3 = term3 + ma(a) * (2 * PhiXa + SumYXac)
  Next a
  
'Calculate ternary-type Terms4
    term4 = 0
  For c = 1 To NumCat - 1
  For cp = c + 1 To NumCat
    term4 = term4 + mc(c) * mc(cp) * Yccpa(c, cp, iPz)
  Next cp
  Next c

'Calculate binary-type Term5
    term5 = 0
  For c = 1 To NumCat
  For a = 1 To NumAn
    Cca = CPhi(c, a) / (2 * Abs(ChCat(c) * ChAn(a)) ^ 0.5)
    term5 = term5 + mc(c) * ma(a) * Cca
  Next a
  Next c
    term5 = Abs(ChAn(iPz)) * term5
    
'Calculate neutral-type Term6
    term6 = 0
  For n = 1 To NumNeut
    term6 = term6 + mn(n) * 2 * Lna(n, iPz)
  Next n
  
   term7 = 0
  For n = 1 To NumNeut
  For c = 1 To NumCat
  If iPz = 2 And n = 2 Then
  pH = pH
  End If
  term7 = term7 + 6 * mn(n) * mc(c) * zeta(n, c, iPz)
  Next c
  Next n
    termsum = term1 + term2 + term3 + term4 + term5 + term6 + term7
    ActCoefX = Exp(termsum)
    gAn(iPz) = ActCoefX
Next iPz
gAn(iSion) = gAn(iCO3) 'set Act coeff of Sulfide equal to that of Carbonate, also check c2_Pitzer2019
'---------------------------------------------------------------------
'Activity coefficients of the nuetral compounds

For n = 1 To NumNeut
        termn = 0
    For c = 1 To NumCat
        termn = termn + mc(c) * 2 * Lnc(n, c)
    Next c
    For a = 1 To NumAn
        termn = termn + ma(a) * 2 * Lna(n, a)
    Next a
    If n = 2 Then
    pH = pH
    End If
    termn = termn + 2 * mn(n) * Lnn(n, n)
  
  For c = 1 To NumCat
  For a = 1 To NumAn
  If c = 2 And a = 2 Then
  pH = pH
  End If
  termn = termn + mc(c) * ma(a) * zeta(n, c, a)
  Next a
  Next c
        ActCoefn = Exp(termn)
        gNeut(n) = ActCoefn
Next n
    ' Use the following, until better estimates are found, see below.
    'gNeut(iH2Saq) = gNeut(iCO2aq)
    gNeut(iCH4aq) = gNeut(iCO2aq): gNeut(iHAcaq) = gNeut(iCO2aq): gNeut(iNH3) = gNeut(iCO2aq): gNeut(iFeSaq) = gNeut(iH2Saq)
    gNeut(iH4SiO4aq) = 10 ^ (0.00978 * 10 ^ (280 / TK) * Ist)  'Solmineq 88 page 46
'------------------------------------------------------------------------
'Osmotic coefficient, Phi, and activity, a, of water
    term1 = -APhi * Ist ^ 1.5 / (1 + 1.2 * Ist ^ 0.5)
    term2 = 0
For c = 1 To NumCat
For a = 1 To NumAn
    BPhica = b0(c, a) + b1(c, a) * Exp(-1.4 * Ist ^ 0.5) _
             + b2(c, a) * Exp(-12 * Ist ^ 0.5)                                      'For 2:(-2) electrolytes
             
'
'  If ChCat(c) * ChAn(a) <> -4 Then BPhica = b0(c, a) + b1(c, a) * Exp(-2# * Ist ^ 0.5) _
'                                            + b2(c, a) * Exp(-12 * Ist ^ 0.5)
    
  'Corrected by GD 20191021
'==================================================================
  'If ChCat(c) * ChAn(a) <> -4 Then BPhica = b0(c, a) + b1(c, a) * Exp(-2# * Ist ^ 0.5) _
                                            + b2(c, a) * Exp(-12 * Ist ^ 0.5)
 If ChCat(c) = 1 Then
     X20 = 2 * Ist ^ 0.5                             'For 1:(-2) or 1:(-1) pairs
 If c = 2 And a = 6 Then X20 = 1.4 * Ist ^ 0.5      'For Na-SO4
 If c = 3 And a = 6 Then X20 = 1.4 * Ist ^ 0.5      'For K-SO4
   
'  gpX20 = -2 * (1 - (1 + X20 + 0.5 * X20 ^ 2) * Exp(-X20)) / X20 ^ 2
    BPhica = b0(c, a) + b1(c, a) * Exp(-X20) + b2(c, a) * Exp(-12 * Ist ^ 0.5)
End If

 If ChCat(c) = 2 And ChAn(a) = -1 Then
    X20 = (2 - 0.00181 * (TK - 298.15)) * Ist ^ 0.5    'For 2:(-1) pairs
   'gX20 = 2 * (1 - (1 + X20) * Exp(-X20)) / X20 ^ 2
 ' gpX20 = -2 * (1 - (1 + X20 + 0.5 * X20 ^ 2) * Exp(-X20)) / X20 ^ 2
    BPhica = b0(c, a) + b1(c, a) * Exp(-X20) + b2(c, a) * Exp(-12 * Ist ^ 0.5)
End If

'added by GD 20191021
  If c = 5 And a = 6 Then
  BPhica = b0(c, a) + b1(c, a) * Exp(-1.4 * Ist ^ 0.5) + b2(c, a) * Exp(-xCaSO4)   'only for Ca-SO4, alpha2 = 32*APhi
  End If
  
'=====================================================================

        Cca = CPhi(c, a) / (2 * Abs(ChCat(c) * ChAn(a)) ^ 0.5)
    term2 = term2 + mc(c) * ma(a) * (BPhica + MoleCharge * Cca)
Next a
Next c

    term3 = 0
For c = 1 To NumCat - 1
For cp = c + 1 To NumCat
        PhiPhiccp = Tccp(c, cp)                 'If charges are equal
    If ChCat(c) <> ChCat(cp) Then PhiPhiccp = Tccp(c, cp) + ETh + Ist * EThp    'If not
        Sumccpa = 0
    For a = 1 To NumAn
        Sumccpa = Sumccpa + ma(a) * Yccpa(c, cp, a)
    Next a
        term3 = term3 + mc(c) * mc(cp) * (PhiPhiccp + Sumccpa)
Next cp
Next c

    term4 = 0
  For a = 1 To NumAn - 1
  For ap = a + 1 To NumAn
        PhiPhiaap = Taap(a, ap)                 'If charges are equal
    If ChAn(a) <> ChAn(ap) Then PhiPhiaap = Taap(a, ap) + ETh + Ist * EThp      'If not
        Sumaapc = 0
    For c = 1 To NumCat
        Sumaapc = Sumaapc + mc(c) * Yaapc(a, ap, c)
    Next c
        term4 = term4 + ma(a) * ma(ap) * (PhiPhiaap + Sumaapc)
  Next ap
  Next a
   
    term5 = 0

  For n = 1 To NumNeut
    For c = 1 To NumCat
        term5 = term5 + mn(n) * mc(c) * Lnc(n, c)
    Next c
        term6 = 0
    For a = 1 To NumAn
        term6 = term6 + mn(n) * ma(a) * Lna(n, a)
    Next a
  Next n
  term7 = 0
  For n = 1 To NumNeut
  For c = 1 To NumCat
  For a = 1 To NumAn
  If n = 2 And c = 2 And a = 2 Then
  pH = pH
  End If
  
  term7 = term7 + mn(n) * mc(c) * ma(a) * zeta(n, c, a)
  Next a
  Next c
  Next n
    termsum = term1 + term2 + term3 + term4 + term5 + term6 + term7
    PhiH2O = 2 * termsum / mtotal + 1 'Osmotic coefficient of water
'    aH2O = Exp(-18 * mtotal * PhiH2O / 1000)        'Activity of water
    aH2O = 1
    If Abs(18 * mtotal * PhiH2O / 1000) < 600 Then aH2O = Exp(-18 * mtotal * PhiH2O / 1000)           'Activity of water
    
'Bdot parameters for Zn and Pb complexes
B_dot = 0.03804695 + 0.0001031039 * TC + 0.0000007119498 * TC ^ 2 - 0.00000001968215 * TC ^ 3 + 1.276773E-10 * TC ^ 4 - 2.71893E-13 * TC ^ 5   ' fitted by Alex Lu based on Pg 142 in Somlmineq
B_gamma = (50.29158649 * (0.001 * dens) ^ 0.5) / (Dielec * TK) ^ 0.5 'Pg 48 in Somlmineq
Lambda_gamma = -Log10(1 + 0.0180153 * mtotal) 'the equations are from Barrett & Anderson 1988, Table 3
'Pg 122 in Somlmineq
a0(iClDot) = 3: a0(iZnDot) = 6: a0(iPbDot) = 4.5: a0(iHSDot) = 3#: a0(iZnCl) = 4: a0(iZnCl2) = 0: a0(iZnCl3) = 4: a0(iZnCl4) = 5
a0(iPbCl) = 4: a0(iPbCl2) = 0: a0(iPbCl3) = 4: a0(iPbCl4) = 5: a0(iZnHS2) = 0: a0(iZnHS3) = 4: a0(iPbHS2) = 0: a0(iPbHS3) = 4

gDot(iClDot) = 10 ^ (-3 / Log(10) * APhi * 1 * Ist ^ 0.5 / (1 + a0(iClDot) * B_gamma * Ist ^ 0.5) + Lambda_gamma + B_dot * Ist) 'Solmineq Pg 51, and Ananthaswamy & Atkinson 1984
gDot(iZnDot) = 10 ^ (-3 / Log(10) * APhi * 4 * Ist ^ 0.5 / (1 + a0(iZnDot) * B_gamma * Ist ^ 0.5) + Lambda_gamma + B_dot * Ist)
gDot(iPbDot) = 10 ^ (-3 / Log(10) * APhi * 4 * Ist ^ 0.5 / (1 + a0(iPbDot) * B_gamma * Ist ^ 0.5) + Lambda_gamma + B_dot * Ist)
gDot(iHSDot) = 10 ^ (-3 / Log(10) * APhi * 4 * Ist ^ 0.5 / (1 + a0(iHSDot) * B_gamma * Ist ^ 0.5) + Lambda_gamma + B_dot * Ist)
gDot(iZnCl) = 10 ^ (-3 / Log(10) * APhi * 1 * Ist ^ 0.5 / (1 + a0(iZnCl) * B_gamma * Ist ^ 0.5) + Lambda_gamma + B_dot * Ist)
gDot(iZnCl2) = 1
gDot(iZnCl3) = 10 ^ (-3 / Log(10) * APhi * 1 * Ist ^ 0.5 / (1 + a0(iZnCl3) * B_gamma * Ist ^ 0.5) + Lambda_gamma + B_dot * Ist)
gDot(iZnCl4) = 10 ^ (-3 / Log(10) * APhi * 4 * Ist ^ 0.5 / (1 + a0(iZnCl4) * B_gamma * Ist ^ 0.5) + Lambda_gamma + B_dot * Ist)
gDot(iZnHS2) = 1
gDot(iZnHS3) = 10 ^ (-3 / Log(10) * APhi * 1 * Ist ^ 0.5 / (1 + a0(iZnHS3) * B_gamma * Ist ^ 0.5) + Lambda_gamma + B_dot * Ist)
gDot(iPbCl) = 10 ^ (-3 / Log(10) * APhi * 1 * Ist ^ 0.5 / (1 + a0(iPbCl) * B_gamma * Ist ^ 0.5) + Lambda_gamma + B_dot * Ist)
gDot(iPbCl2) = 1
gDot(iPbCl3) = 10 ^ (-3 / Log(10) * APhi * 1 * Ist ^ 0.5 / (1 + a0(iPbCl3) * B_gamma * Ist ^ 0.5) + Lambda_gamma + B_dot * Ist)
gDot(iPbCl4) = 10 ^ (-3 / Log(10) * APhi * 4 * Ist ^ 0.5 / (1 + a0(iPbCl4) * B_gamma * Ist ^ 0.5) + Lambda_gamma + B_dot * Ist)
gDot(iPbHS2) = 1
gDot(iPbHS3) = 10 ^ (-3 / Log(10) * APhi * 1 * Ist ^ 0.5 / (1 + a0(iPbHS3) * B_gamma * Ist ^ 0.5) + Lambda_gamma + B_dot * Ist)
''Amy test without Lambda_gamma term. Lambda_gamma is not used in Solmineq page 46
'
'' 'Added by Dai 2016
''If Use_ZnCl2Const = 1 Then
''B_dot = 0.03804695 + 0.0001031039 * Tc + 0.0000007119498 * Tc ^ 2 - 0.00000001968215 * Tc ^ 3 + 1.276773E-10 * Tc ^ 4 - 2.71893E-13 * Tc ^ 5   ' fitted by Alex Lu based on Pg 142 in Somlmineq
''B_gamma = (50.29158649 * (0.001 * dens) ^ 0.5) / (Dielec * TK) ^ 0.5 'Pg 48 in Somlmineq
''Lambda_gamma = -Log10(1 + 0.0180153 * mtotal) 'the equations are from Barrett & Anderson 1988, Table 3
'''Pg 122 in Somlmineq
''a0Cl = 3
'a0Fe = 6
'a0SO4 = 4
'a0HS = 3.5
'a0S = 5#
'a0FeCl1 = 4
'a0FeCl2 = 0
'a0FeSO4 = 0
'a0FeHS2 = 0
'a0FeS = 0
'a0FeHS1 = 4 '????unknown in Solmineq
'a0FeAc = 5
'
'''gCl = 10 ^ (-3 / Log(10) * APhi * 1 * Ist ^ 0.5 / (1 + a0Cl * B_gamma * Ist ^ 0.5) + B_dot * Ist) 'Solmineq Pg 51, and Ananthaswamy & Atkinson 1984, + Lambda_gamma
''gFe = 10 ^ (-3 / Log(10) * APhi * 4 * Ist ^ 0.5 / (1 + a0Fe * B_gamma * Ist ^ 0.5) + B_dot * Ist)
''gSO4 = 10 ^ (-3 / Log(10) * APhi * 4 * Ist ^ 0.5 / (1 + a0SO4 * B_gamma * Ist ^ 0.5) + B_dot * Ist)
''gHS = 10 ^ (-3 / Log(10) * APhi * 4 * Ist ^ 0.5 / (1 + a0HS * B_gamma * Ist ^ 0.5) + B_dot * Ist)
''gFeCl1 = 10 ^ (-3 / Log(10) * APhi * 1 * Ist ^ 0.5 / (1 + a0FeCl1 * B_gamma * Ist ^ 0.5) + B_dot * Ist)
''gS = 10 ^ (-3 / Log(10) * APhi * 4 * Ist ^ 0.5 / (1 + a0S * B_gamma * Ist ^ 0.5) + B_dot * Ist)
''gFeCl2 = 1
''gFeSO4 = 1
''gFeHS2 = 1
''gFeS = 1
''gFeHS1 = 10 ^ (-3 / Log(10) * APhi * 1 * Ist ^ 0.5 / (1 + a0FeHS1 * B_gamma * Ist ^ 0.5) + B_dot * Ist)
''gFeAc = 10 ^ (-3 / Log(10) * APhi * 1 * Ist ^ 0.5 / (1 + a0FeAc * B_gamma * Ist ^ 0.5) + B_dot * Ist)
''Amy Test adding Lambda_gamma to Fe act coeff.
'
''gCl = 10 ^ (-3 / Log(10) * APhi * 1 * Ist ^ 0.5 / (1 + a0Cl * B_gamma * Ist ^ 0.5) + B_dot * Ist) 'Solmineq Pg 51, and Ananthaswamy & Atkinson 1984, + Lambda_gamma
'gFe = 10 ^ (-3 / Log(10) * APhi * 4 * Ist ^ 0.5 / (1 + a0Fe * B_gamma * Ist ^ 0.5) + Lambda_gamma + B_dot * Ist)
'gSO4 = 10 ^ (-3 / Log(10) * APhi * 4 * Ist ^ 0.5 / (1 + a0SO4 * B_gamma * Ist ^ 0.5) + Lambda_gamma + B_dot * Ist)
'gHS = 10 ^ (-3 / Log(10) * APhi * 4 * Ist ^ 0.5 / (1 + a0HS * B_gamma * Ist ^ 0.5) + Lambda_gamma + B_dot * Ist)
'gFeCl1 = 10 ^ (-3 / Log(10) * APhi * 1 * Ist ^ 0.5 / (1 + a0FeCl1 * B_gamma * Ist ^ 0.5) + Lambda_gamma + B_dot * Ist)
'gS = 10 ^ (-3 / Log(10) * APhi * 4 * Ist ^ 0.5 / (1 + a0S * B_gamma * Ist ^ 0.5) + Lambda_gamma + B_dot * Ist)
'gFeCl2 = 1
'gFeSO4 = 1
'gFeHS2 = 1
'gFeS = 1
'gFeHS1 = 10 ^ (-3 / Log(10) * APhi * 1 * Ist ^ 0.5 / (1 + a0FeHS1 * B_gamma * Ist ^ 0.5) + Lambda_gamma + B_dot * Ist)
'gFeAc = 10 ^ (-3 / Log(10) * APhi * 1 * Ist ^ 0.5 / (1 + a0FeAc * B_gamma * Ist ^ 0.5) + Lambda_gamma + B_dot * Ist)
'gAC = gCl 'a0 (the ion size parameter) is not available for AC set gAC-gCl
'
''BnFeCl1 = 1 / 10 ^ (0.000187556319013 + -0.0082036309627 * TK + 821.925048053 / TK + 0.0204310698126 * Log(TK) + 1.28232221053E-06 * TK ^ 2)   'Solmineq
''BnFeCl1 = Exp(56.08 + 0.0496 * TK - 12.5 * Log(TK))  'From Henrich and Seward 1990
'BnFeCl1 = Exp(55.75 + 0.0496 * TK - 12.5 * Log(TK))  'From Henrich and Seward 1990 ' changed by Ya from 56.08 to 55.75
'BnFeCl2 = 1 / 10 ^ (0.0165487985778 - 0.0486553753988 * TK + 464.026446529 / TK + 3.64786865333 * Log(TK) + 4.0420471205E-06 * TK ^ 2)
'BnFeSO4 = 1 / 10 ^ (419.687194083 + 0.233092065759 * TK - 9157.36748279 / TK - 78.9939189784 * Log(TK) - 0.000121755430974 * TK ^ 2)
'BnFeHS2 = 10 ^ (6.46) 'Davinson et al.
'BnFeS = 10 ^ (3.552 - 5.7) 'Rickard 2006
'BnFeHS1 = 10 ^ (3.2) 'Richard & Luther 2007 Davison 1999 & Ya
''Solmineq FeAC, FeAC2
'BnFeAc = 10 ^ ((-1) * (1360.89967809 + 0.697398905127 * TK - 29546.2075432 / TK - 253.093084506 * Log(TK) - 0.000321300420657 * TK ^ 2))
'q1 = -1733.9011: q2 = 37349.4973: q3 = 324.3231: q4 = -0.933: q5 = 0.000459
'BnFeAc2 = 10 ^ (q1 + q2 / TK + q3 * Log(TK) + q4 * TK + q5 * TK ^ 2)
'
''BnFeAc = 10 ^ 1.4
'KPFeClSO4 = 1
'KPFeClSO4 = 1 + BnFeCl1 * (gCl * ma(iCl)) * gFe / gFeCl1 + BnFeCl2 * (gCl * ma(iCl)) ^ 2 * gFe / gFeCl2 + BnFeSO4 * (gSO4 * ma(iSO4)) * gFe / gFeSO4 _
'            + BnFeS * (gAn(iHS) * ma(iHS) * gFe) / 10 ^ (-pH) + BnFeHS1 * (gAn(iHS) * ma(iHS)) * gFe / gFeHS1 + BnFeAc * (gAC * gNAn(iAc) * ma(iAc)) * gFe / gFeAc '+ BnFeHS2 * (gAn(iHS) * ma(iHS)) ^ 2 * gFe / gFeHS2 _
'
''KPFeClSO4 = 1 + BnFeCl1 * (gCl * ma(iCl)) * gFe / gFeCl1 + BnFeCl2 * (gCl * ma(iCl)) ^ 2 * gFe / gFeCl2 + BnFeSO4 * (gSO4 * ma(iSO4)) * gFe / gFeSO4 _
'            + BnFeS * (gAn(iHS) * ma(iHS) * gFe) / 10 ^ (-pH) + BnFeHS1 * (gAn(iHS) * ma(iHS)) * gFe / gFeHS1 '+ BnFeHS2 * (gAn(iHS) * ma(iHS)) ^ 2 * gFe / gFeHS2 _
'
''End If
    
End Sub

'**************************************************************************************************
'This subroutine accepts T, P, and gas composition and returns CH4, CO2, and H2S fugacity coefficients.
'It has been written to be easily expanded to do all VLE and EOS work in the future.
Sub PengRobinson3()
'If LoopTP = 2 Then Stop
PBar = Patm * 1.013254
If yCO2 = 0 And yH2S = 0 Then yCH4 = 1  'If there is no gas let yCH4 = 1, to avoid division by zero..
yGas(iCH4g) = yCH4: yGas(iCO2g) = yCO2: yGas(iH2Sg) = yH2S
TCr(iCH4g) = 190.4: TCr(iCO2g) = 304.1: TCr(iH2Sg) = 373.2:    'Critical T in Kelvin
Pc(iCH4g) = 46#: Pc(iCO2g) = 73.8: Pc(iH2Sg) = 89.4:            'Critical P in bars
Omega(iCH4g) = 0.011: Omega(iCO2g) = 0.239: Omega(iH2Sg) = 0.081:   'omega values

For iNG = 1 To 3
  For jNG = 1 To 3
    kPr(iNG, jNG) = 0
  Next jNG
Next iNG
    kPr(iCH4g, iCO2g) = 0.0919: kPr(iCO2g, iCH4g) = 0.0919          'Prausnitz page 83
    kPr(iH2Sg, iCO2g) = 0.0974: kPr(iCO2g, iH2Sg) = 0.0974          'Prausnitz page 83
    kPr(iH2Sg, iCH4g) = 0.084: kPr(iCH4g, iH2Sg) = 0.084
For iNG = 1 To 3          'Peng-Robinson constant terms for each component

    F_Omega(iNG) = 0.37464 + 1.54226 * Omega(iNG) - 0.26992 * Omega(iNG) ^ 2    'Prausnitz page 43
    aPR(iNG) = (0.45724 * RBar ^ 2 * TCr(iNG) ^ 2 / Pc(iNG)) * (1 + F_Omega(iNG) * _
             (1 - (TK / TCr(iNG)) ^ 0.5)) ^ 2
    bPR(iNG) = 0.0778 * RBar * TCr(iNG) / Pc(iNG)
Next iNG
        
        aPrmix = 0: bPRmix = 0              'Mixing rules for aPR and bPR for mixed gases
For iNG = 1 To 3
        bPRmix = bPRmix + yGas(iNG) * bPR(iNG)
    For jNG = 1 To 3
        aPrmix = aPrmix + yGas(iNG) * yGas(jNG) * (aPR(iNG) * aPR(jNG)) ^ (0.5) * (1 - kPr(iNG, jNG))
    Next jNG
Next iNG
AStarPR = aPrmix * PBar / (RBar * TK) ^ 2
BStarPr = bPRmix * PBar / (RBar * TK)

'Set up and solve Peng-Robinson cubic equation in terms of compresability, Z.   Prausnitz Eq. 3.6.2
'Coefficents of cubic PengRobinson equation of state
  coef1 = 1                                               'Coefficient of cubic term
  coef2 = -(1 - BStarPr)
  coef3 = AStarPR - 2 * BStarPr - 3 * BStarPr ^ 2
  coef4 = (-AStarPR * BStarPr + BStarPr ^ 2 + BStarPr ^ 3)
'Use the explicit Cubic Equation formula in Press, et al., "Numerical Recipes" page 146
Call CubicRoots(coef1, coef2, coef3, coef4, root1, root2, root3)
'Select the largest root as the gas compressability, Z
  Znew = root1
  If root2 > Znew Then Znew = root2
  If root3 > Znew Then Znew = root3
  VolGasMolar = Znew * RBar * TK / PBar

For iNG = 1 To 3
     Sum_aijPR(iNG) = 0
   For jNG = 1 To 3
     Sum_aijPR(iNG) = Sum_aijPR(iNG) + 2 * yGas(jNG) * (aPR(iNG) * aPR(jNG)) ^ 0.5 * (1 - kPr(iNG, jNG))
   Next jNG
Next iNG

For iNG = 1 To 3
  term1 = (aPrmix / (2.8284 * bPRmix * RBar * TK)) * (Sum_aijPR(iNG) / aPrmix - bPR(iNG) / bPRmix)
  term2 = Log((VolGasMolar + 2.4142 * bPRmix) / (VolGasMolar - 0.4142 * bPRmix))
  term3 = (bPR(iNG) / bPRmix) * (Znew - 1)
  term4 = Log(Znew - BStarPr)
  gGas(iNG) = Exp(term3 - term4 - term1 * term2)
Next iNG
End Sub

Sub C4_SSPEquilCalcs(ppt_or_not, im, igas, Ksp)
If ppt_or_not = 1 Then
RunPpt = 1
Else
RunPpt = 0
End If
'If useEOS <> 0 Then
'nTCO2 = nTCO2_before_precipitation
'nTH2S = nTH2S_before_precipitation
'nTCH4 = total_moles * z_before_precipitation(1)
'API = 40: SGG = 0.8
'RatioOilBPoints = fRatioOilBPoints
'If beta(1) > 0 Then 'gas phase
'gGas(iCH4g) = phi(1, 1)
'gGas(iCO2g) = phi(2, 1)
'gGas(iH2Sg) = phi(3, 1)
'Else
'gGas(iCH4g) = 1
'gGas(iCO2g) = 1
'gGas(iH2Sg) = 1
'End If
'If beta(2) > 0 Then
'gL(iCH4o) = phi(1, 2)
'gL(iCO2o) = phi(2, 2)
'gL(iH2So) = phi(3, 2)
'Else
'gL(iCH4o) = 1
'gL(iCO2o) = 1
'gL(iH2So) = 1
'End If
'For iNG = 1 To 3
'If gGas(iNG) = 0 Then gGas(iNG) = 1
'If gL(iNG) = 0 Then gL(iNG) = 1
'Next iNG
'End If
'ppt_or_not: "0" means no precipitation; "1" means only precipitation; and "2" means allow both precipitation and dissolution.
ppt = 0
'The following half-interval search followed by a Newton-Raphson routine
pHHigh = 14
pHLow = 0
For i = 1 To 30
  pH = (pHHigh + pHLow) / 2
  aH = 10 ^ (-pH)
  H = aH / (gCat(iH) * gNCat(iH))
  OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
  
  'The following statements around the cubic Vg eqation and the quadratic ppt equation are used to get consistent values of Vg and ppt at each pH value.
  'Initially, ppt = 0 and Vg is calculated and then this value of Vg is put into the Ksp equation to calcuate ppt(new) and this is put into the cubic Vg
  '  equation to recalculate Vg with the improved value of ppt and the process is repeated until the convergence is +/- 0.0001 in both ppt and Vg or for 100
  '  interations.  Generally, only two or three iterations are needed.

  ppt = 0: pptOld = 1 * 10 ^ 42: Vg_ZRT = 0: Vg_ZRT_Old = 1 * 10 ^ 42: Iteration = 0  'initial estimates for ppt and Vg/ZRT
While Abs((ppt - pptOld + 1E-21) / (ppt + pptOld + 1E-16)) + _
      Abs((Vg_ZRT - Vg_ZRT_Old + 1E-21) / (Vg_ZRT + Vg_ZRT_Old + 1E-16)) > 0.0001 And Iteration < 100
  'This While/Wend loop calculates the effect of ppt on the gas composition and partitioning.
    Iteration = Iteration + 1:      pptOld = ppt:      Vg_ZRT_Old = Vg_ZRT
If useEOS = 0 Then
    t1 = gGas(iCH4g) * (RatioOilBPoints * KgoCH4 * Mass_o / gL(iCH4g) _
      + KgwCH4 * mass_w / (gNeut(iCH4aq) * gNNeut(iCH4aq)))
    t2 = gGas(iCO2g) * (RatioOilBPoints * KgoCO2 * Mass_o / gL(iCO2o) _
      + KgwCO2 * mass_w * (1 / (gNeut(iCO2aq) * gNNeut(iCO2aq)) _
      + (K1H2CO3 * aH2O) / (aH * gAn(iHCO3) * gNAn(iHCO3)) _
      + (K1H2CO3 * aH2O) * K2HCO3 / (aH ^ 2 * gAn(iCO3) * gNAn(iCO3))))                't2*Vg_ZRT=moles Co2 in water+Oil phase
    t3 = gGas(iH2Sg) * (RatioOilBPoints * KgoH2S * Mass_o / gL(iH2So) _
      + KgwH2S * mass_w * (1 / (gNeut(iH2Saq) * gNNeut(iH2Saq)) _
      + K1H2S / (aH * gAn(iHS) * gNAn(iHS)) + K1H2S * K2HS / (aH ^ 2 * gAn(iSion) * gNAn(iSion))))                                    't3*Vg_ZRT=moles H2S in water+Oil phase
    s1 = nTCH4 / Ppsia
    S2 = nTCO2 / Ppsia
    If igas = 2 Then S2 = (nTCO2 - ppt * mass_w) / Ppsia
    s3 = nTH2S / Ppsia
    If igas = 3 Then s3 = (nTH2S - ppt * mass_w) / Ppsia
    coef1 = 1
    coef2 = t1 + t2 + t3 - (s1 + S2 + s3)
    coef3 = t1 * t2 + t1 * t3 + t2 * t3 - (s1 * t2 + s1 * t3 + s3 * t1 + s3 * t2 + S2 * t1 + S2 * t3)
    coef4 = t1 * t2 * t3 - (t1 * t2 * s3 + t1 * t3 * S2 + t2 * t3 * s1)
    Call CubicRoots(coef1, coef2, coef3, coef4, root1, root2, root3)
    Vg_ZRT = root1
    If root2 > Vg_ZRT Then Vg_ZRT = root2
    If root3 > Vg_ZRT Then Vg_ZRT = root3
    If Vg_ZRT < 0 Then Vg_ZRT = 0   'Prevents the consideration of needed added gas volume, i.e., Vg <0.  The physics requires that Vg => 0.
 End If
    If ppt_or_not = 0 Then GoTo 223  'If no precipitation is to be used, then skip out of the "While...Wend" loop and leave ppt = 0.
If igas = 2 Then
If useEOS = 0 Then
    a = 1
    b = -(mc(im) * mass_w + nTCO2) / mass_w
    cc = (mc(im) * nTCO2 - Ksp * (Vg_ZRT + t2) * aH ^ 2 / ((K1H2CO3 * aH2O) * K2HCO3 * KgwCO2 * gGas(iCO2g) * gCat(im) * gNCat(im))) / mass_w
ElseIf useEOS <> 0 Then
    total_moles_Temp = Total_moles_before_precipitation - ppt
    zTemp(1) = z_before_precipitation(1) * Total_moles_before_precipitation / total_moles_Temp
    zTemp(2) = (z_before_precipitation(2) * Total_moles_before_precipitation - ppt * mass_w) / total_moles_Temp
    If zTemp(2) < 0 Then
    ppt = 0
    GoTo 223  'When ppt is too large, HCO3 value is too high, i.e. pH is too high
    End If
    For iz = 3 To 15
    zTemp(iz) = z_before_precipitation(iz) * Total_moles_before_precipitation / total_moles_Temp
    Next iz
    If RunH2SGUI <> 1 Then
    Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
    Else
     Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
                TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
    End If
    PCO2 = compositions(2, 4) * phi(2, 3) * Ppsia / gGas(iCO2g)
    'PH2S = compositions(3, 4) * phi(3, 3) * Ppsia / gGas(iH2Sg)
    a = 1
    b = -(mc(im) * mass_w + nTCO2) / mass_w
    cc = (mc(im) * nTCO2 - Ksp * (nTCO2 / PCO2) * aH ^ 2 / ((K1H2CO3 * aH2O) * K2HCO3 * KgwCO2 * gGas(iCO2g) * gCat(im) * gNCat(im))) / mass_w
End If
    Call QuadraticRoots(a, b, cc, ppt, root2)
End If
    
If igas = 3 Then
If useEOS = 0 Then
    a = 1
    b = -(mc(im) * mass_w + nTH2S) / mass_w
    cc = (mc(im) * nTH2S - Ksp * (Vg_ZRT + t3) * aH ^ 2 / (K1H2S * KgwH2S * gGas(iH2Sg) * gCat(im) * gNCat(im))) / mass_w
ElseIf useEOS <> 0 Then
    total_moles_Temp = Total_moles_before_precipitation - ppt
    For iz = 1 To 2
     zTemp(iz) = z_before_precipitation(iz) * Total_moles_before_precipitation / total_moles_Temp
    Next iz
     zTemp(3) = (z_before_precipitation(3) * Total_moles_before_precipitation - ppt * mass_w) / total_moles_Temp
     If zTemp(3) < 0 Then
    ppt = 0
    GoTo 223  'When ppt is too large, HCS value is too high, i.e. pH is too high
    End If
    For iz = 4 To 15
    zTemp(iz) = z_before_precipitation(iz) * Total_moles_before_precipitation / total_moles_Temp
    Next iz
    If RunH2SGUI <> 1 Then
    Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
    Else
     Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
                TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
    End If
    PH2S = compositions(3, 4) * phi(3, 3) * Ppsia / gGas(iH2Sg)
    'H2Saq = compositions(3, 4) * beta(3) * total_moles_Temp / mass_w / gNeut(iH2Saq) / gNNeut(iH2Saq)
     a = 1
    b = -(mc(im) * mass_w + nTH2S) / mass_w
    cc = (mc(im) * nTH2S - Ksp * (nTH2S / PH2S + t3) * aH ^ 2 / (K1H2S * KgwH2S * gGas(iH2Sg) * gCat(im) * gNCat(im))) / mass_w
    End If
      Call QuadraticRoots(a, b, cc, ppt, root2)
End If
    
    ' The following is for Ca-Mg(OH)2.
    If igas = 8 Then
      ppt = mc(iCa) - KspCaOH2 / (OH ^ 2 * gCat(iCa) * gAn(iOH) ^ 2)
    End If
    If igas = 9 Then
      ppt = mc(iMg) - KspMgOH2 / (OH ^ 2 * gCat(iMg) * gAn(iOH) ^ 2)
    End If
    
    'The following are for the silicates and metal silicates.
    If igas = 12 Then  'Use greenalite, 3Fe + 2H4SiO4 -->Fe3Si2(solid) + 6H+, will precipitate.
      kc = KspGreenalite * aH ^ 6 / (gCat(iFe) ^ 3 * gNeut(iH4SiO4aq) ^ 2) 'KC conditional constant to simplify algebra at each pH.
      If mc(iFe) / 3 >= TH4SiO4 / 2 Then pptNew = (TH4SiO4 - (kc / mc(iFe) ^ 3) ^ 0.5) / 2 'Si is the limiting reagent.
      If mc(iFe) / 3 < TH4SiO4 / 2 Then pptNew = (mc(iFe) - (kc / TH4SiO4 ^ 2) ^ 0.3333) / 3 '  0.99 * 2 * mc(iFe) / 3  'Fe is the limiting reagent.
      ISilicate = 0
      While ISilicate < 1000 And Abs((pptNew - ppt) / pptNew) > 0.00001
        ISilicate = ISilicate + 1
        ppt = pptNew
        fppt = (mc(iFe) - 3 * ppt) ^ 3 * (TH4SiO4 - 2 * ppt) ^ 2 - kc
        dfppt = -1 * (9 * (mc(iFe) - 3 * ppt) ^ 2 * (TH4SiO4 - 2 * ppt) ^ 2 + 4 * ((mc(iFe) - 3 * ppt) ^ 3) * (TH4SiO4 - 2 * ppt))
        If (mc(iFe) - 3 * ppt) = 0 Or (TH4SiO4 - 2 * ppt) = 0 Then GoTo 312   '100.0000% of limiting reagent will precipitate.
        pptNew = ppt - fppt / dfppt
        If ISilicate = 999 Then errmsg(6) = 6
      Wend
312   TH4SiO4_Greenalite = (TH4SiO4 - 2 * ppt)
      ppt = ppt * 6 / 2
    End If
    
    If igas = 13 Then
      kc = KspDiopside * aH ^ 4 / (gCat(iCa) * gCat(iMg) * gNeut(iH4SiO4aq) ^ 2) 'KC conditional constant.
      If mc(iCa) < mc(iMg) And mc(iCa) < TH4SiO4 / 2 Then pptNew = mc(iCa) - kc / (mc(iMg) * TH4SiO4 ^ 2) 'Ca is the limiting reagent.
      If mc(iMg) < mc(iCa) And mc(iMg) < TH4SiO4 / 2 Then pptNew = mc(iMg) - kc / (mc(iCa) * TH4SiO4 ^ 2)  'Mg is the limiting reagent.
      If TH4SiO4 / 2 <= mc(iCa) And TH4SiO4 / 2 <= mc(iMg) Then pptNew = (TH4SiO4 - (kc / (mc(iCa) * mc(iMg))) ^ 0.5) / 2 'Si is the limiting reagent.
      ISilicate = 0
      While ISilicate < 1000 And Abs((pptNew - ppt) / pptNew) > 0.00001
        ISilicate = ISilicate + 1
        ppt = pptNew
        fppt = (mc(iCa) - ppt) * (mc(iMg) - ppt) * (TH4SiO4 - 2 * ppt) ^ 2 - kc
        dfppt = -1 * (mc(iMg) - ppt) * (TH4SiO4 - 2 * ppt) ^ 2 - 1 * (mc(iCa) - ppt) * (TH4SiO4 - 2 * ppt) ^ 2 - 4 * (mc(iCa) - ppt) * (mc(iMg) - ppt) * (TH4SiO4 - 2 * ppt)
        If (mc(iMg) - ppt) = 0 Or (TH4SiO4 - 2 * ppt) = 0 Or (mc(iCa) - ppt) = 0 Then GoTo 313
        pptNew = ppt - fppt / dfppt
        If ISilicate = 999 Then errmsg(6) = 6
      Wend
313   ppt = ppt * 4 / 2
      TH4SiO4_Dipside = (TH4SiO4 - 2 * ppt)
    End If
    
    If igas = 14 Then 'use Chrysotile
      kc = KspChrysotile * aH ^ 6 / (gCat(iMg) ^ 3 * gNeut(iH4SiO4aq) ^ 2) 'KC conditional constant.
      If mc(iMg) / 3 >= TH4SiO4 / 2 Then pptNew = (TH4SiO4 - (kc / mc(iMg) ^ 3) ^ 0.5) / 2 'Si is the limiting reagent.
      If mc(iMg) / 3 < TH4SiO4 / 2 Then pptNew = (mc(iMg) - (kc / TH4SiO4 ^ 2) ^ 0.3333) / 3 'Mg is the limiting reagent.
      ISilicate = 0
      While ISilicate < 1000 And Abs((pptNew - ppt) / pptNew) > 0.00001
        ISilicate = ISilicate + 1
        ppt = pptNew
        fppt = (mc(iMg) - 3 * ppt) ^ 3 * (TH4SiO4 - 2 * ppt) ^ 2 - kc
        If (mc(iMg) - 3 * ppt) = 0 Or (TH4SiO4 - 2 * ppt) = 0 Then GoTo 314
        dfppt = -1 * (9 * (mc(iMg) - 3 * ppt) ^ 2 * (TH4SiO4 - 2 * ppt) ^ 2 + 4 * ((mc(iMg) - 3 * ppt) ^ 3) * (TH4SiO4 - 2 * ppt))
        pptNew = ppt - fppt / dfppt
        If ISilicate = 999 Then errmsg(6) = 6
      Wend
314   ppt = ppt * 6 / 2
      TH4SiO4_Chrysotile = (TH4SiO4 - 2 * ppt)
    End If
    
    If ppt_or_not = 1 And ppt < 0 Then ppt = 0
    'If you do not want to allow for precipitation nor dissolution, then set ppt = 0.  Since SI > 0 to be here, ppt is always positive.
    'If you are allowing for precipitation or for dissolution, then you need to allow ppt to be +/0/- for speciation in the Alk equation.
    If Iteration = 1 And igas > 3 Then GoTo 223
Wend
223 'Continue
If useEOS = 0 Then
  PCH4 = (nTCH4 / (Vg_ZRT + t1))  'These are not the partial pressures for the Original brine data.
  PCO2 = (nTCO2 / (Vg_ZRT + t2))
  If igas = 2 Then PCO2 = ((nTCO2 - ppt * mass_w) / (Vg_ZRT + t2))
  PH2S = (nTH2S / (Vg_ZRT + t3))
  If igas = 3 Then PH2S = (nTH2S - ppt * mass_w) / (Vg_ZRT + t3)
ElseIf useEOS <> 0 Then
PCO2 = compositions(2, 4) * phi(2, 3) * Ppsia / gGas(iCO2g)
PH2S = compositions(3, 4) * phi(3, 3) * Ppsia / gGas(iH2Sg)
End If
  CO2aq = KgwCO2 * PCO2 * gGas(iCO2g) / (gNeut(iCO2aq) * gNNeut(iCO2aq))
  H2Saq = KgwH2S * PH2S * gGas(iH2Sg) / (gNeut(iH2Saq) * gNNeut(iH2Saq))
  HCO3 = (K1H2CO3 * aH2O) * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
  CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
  HS = K1H2S * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
  TH2Saq = H2Saq + HS
  hydHS = aH * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq)) + 1
  If nTH2S > 0 Then
'  If mc(iPb) = 0 And mc(iZn) = 0 Then
'  mt = fFeSSpeciation2(iM, igas) 'speciate mc(iFe) and HS
'  Else
  mt = fMeSSpeciation(im, igas) 'speciate mc(iFe) and HS
  End If
  S = K2HS * HS * gAn(iHS) * gNAn(iHS) / (aH * gAn(iSion) * gNAn(iSion))
  hydAc = aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1
  AC = TAc / hydAc
  HAcaq = TAc - AC
  hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
  H2BO3 = TH3BO3 / hydH2BO3
  hydNH3 = aH * gNeut(iNH3) * gNNeut(iNH3) / (KNH4 * gCat(iNH4) * gNCat(iNH4)) + 1
  NH3 = TNH4 / hydNH3

  hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
  aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
  H2SiO4 = TH4SiO4 / hydH2SiO4
  H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
  H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
  'a = TH4SiO4 - (H2SiO4 + H3SiO4 + H4SiO4)
  If igas = 10 Then
    H4SiO4 = KspAmSilica / (gNeut(iH4SiO4aq))
    H3SiO4 = KH4SiO4 * KspAmSilica / (aH * gAn(iH3SiO4))
    H2SiO4 = KH4SiO4 * KH3SiO3 * KspAmSilica / (aH ^ 2 * gAn(iH2SiO4))
    pptAmSilica = TH4SiO4 - (H2SiO4 + H3SiO4 + H4SiO4)
  End If
  If igas = 11 Then
    H4SiO4 = KspQuartz
    H3SiO4 = KH4SiO4 * KspQuartz / aH
    H2SiO4 = KH4SiO4 * KH3SiO3 * KspAmSilica / aH ^ 2
  End If
  
  If igas = 12 Then
    H2SiO4 = TH4SiO4_Greenalite / hydH2SiO4
    H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
    H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
  End If
  If igas = 13 Then
    H2SiO4 = TH4SiO4_Dipside / hydH2SiO4
    H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
    H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
  End If
  If igas = 14 Then
    H2SiO4 = TH4SiO4_Chrysotile / hydH2SiO4
    H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
    H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
  End If

  faH = Alk - 2 * ppt - (HCO3 + 2 * CO3 + HS + 2 * S + AC + NH3 + H2BO3 + H3SiO4 + 2 * H2SiO4 + OH - H)
  ypH(i) = faH: xpH(i) = pH: xppt(i) = ppt 'Used in Newton-Raphson iteration, at the end of this For loop.
  If faH > 0 Then pHLow = pH
  If faH < 0 Then pHHigh = pH
Next i

'The following statements take the last two interation values of pH and of faH and uses a Newton-Raphson method to calculate the best pH value.
'From this improved pH value the ppt values are recalulated for final output.  This generally improves the convergence from three significant
'  figures to about eight+ significant figures with little additional computation; once the iteration is close to the answer.
If Abs(ypH(i - 1) / ((ypH(i - 1) - ypH(i - 2)) / (xpH(i - 1) - xpH(i - 2)))) < 0.001 Then
  pH = pH - ypH(i - 1) / ((ypH(i - 1) - ypH(i - 2)) / (xpH(i - 1) - xpH(i - 2)))  '(i-1) is used since the last i is one larger than the number of loops.
  Else
  pH = Abs((xpH(i - 1) + xpH(i - 2))) / 2
  If RunPpt = 0 Then errmsg(5) = 5
End If
aH = 10 ^ (-pH)
H = aH / (gCat(iH) * gNCat(iH))
OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
ppt = 0: pptOld = 1E+42: Vg_ZRT = 0: Vg_ZRT_Old = 1E+42: Iteration = 0 'initial estimates for ppt and Vg/ZRT
While Abs((ppt - pptOld + 1E-21) / (ppt + pptOld + 1E-16)) + _
    Abs((Vg_ZRT - Vg_ZRT_Old + 1E-21) / (Vg_ZRT + Vg_ZRT_Old + 1E-16)) > 0.0001 And Iteration < 100
  Iteration = Iteration + 1:      pptOld = ppt:      Vg_ZRT_Old = Vg_ZRT
If useEOS = 0 Then
  t1 = gGas(iCH4g) * (RatioOilBPoints * KgoCH4 * Mass_o / gL(iCH4g) _
    + KgwCH4 * mass_w / (gNeut(iCH4aq) * gNNeut(iCH4aq)))
  t2 = gGas(iCO2g) * (RatioOilBPoints * KgoCO2 * Mass_o / gL(iCO2o) _
    + KgwCO2 * mass_w * (1 / (gNeut(iCO2aq) * gNNeut(iCO2aq)) _
    + (K1H2CO3 * aH2O) / (aH * gAn(iHCO3) * gNAn(iHCO3)) _
    + (K1H2CO3 * aH2O) * K2HCO3 / (aH ^ 2 * gAn(iCO3) * gNAn(iCO3))))
 t3 = gGas(iH2Sg) * (RatioOilBPoints * KgoH2S * Mass_o / gL(iH2So) _
      + KgwH2S * mass_w * (1 / (gNeut(iH2Saq) * gNNeut(iH2Saq)) _
      + K1H2S / (aH * gAn(iHS) * gNAn(iHS)) + K1H2S * K2HS / (aH ^ 2 * gAn(iSion) * gNAn(iSion))))                                    't3*Vg_ZRT=moles H2S in water+Oil phase
  s1 = nTCH4 / Ppsia
  S2 = nTCO2 / Ppsia
  If igas = 2 Then S2 = (nTCO2 - ppt * mass_w) / Ppsia
  s3 = nTH2S / Ppsia
  If igas = 3 Then s3 = (nTH2S - ppt * mass_w) / Ppsia
  coef1 = 1
  coef2 = t1 + t2 + t3 - (s1 + S2 + s3)
  coef3 = t1 * t2 + t1 * t3 + t2 * t3 - (s1 * t2 + s1 * t3 + s3 * t1 + s3 * t2 + S2 * t1 + S2 * t3)
  coef4 = t1 * t2 * t3 - (t1 * t2 * s3 + t1 * t3 * S2 + t2 * t3 * s1)
  Call CubicRoots(coef1, coef2, coef3, coef4, root1, root2, root3)
  Vg_ZRT = root1
  If root2 > Vg_ZRT Then Vg_ZRT = root2
  If root3 > Vg_ZRT Then Vg_ZRT = root3
  If Vg_ZRT < 0 Then Vg_ZRT = 0   'Prevents the consideration of needed added gas volume, i.e., Vg <0.
End If
If ppt_or_not = 0 Then GoTo 323  'If no precipitation is to be used, exit the "While...Wend" loop and leave ppt = 0.
If igas = 2 Then
If useEOS = 0 Then
      a = 1
      b = -(mc(im) * mass_w + nTCO2) / mass_w
      cc = (mc(im) * nTCO2 - Ksp * (Vg_ZRT + t2) * aH ^ 2 / ((K1H2CO3 * aH2O) * K2HCO3 * KgwCO2 * gGas(iCO2g) * gCat(im) * gNCat(im))) / mass_w
ElseIf useEOS <> 0 Then
    total_moles_Temp = Total_moles_before_precipitation - ppt
    zTemp(1) = z_before_precipitation(1) * Total_moles_before_precipitation / total_moles_Temp
    zTemp(2) = (z_before_precipitation(2) * Total_moles_before_precipitation - ppt * mass_w) / total_moles_Temp
    For iz = 3 To 15
    zTemp(iz) = z_before_precipitation(iz) * Total_moles_before_precipitation / total_moles_Temp
    Next iz
    If RunH2SGUI <> 1 Then
    Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
    Else
     Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
                TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
    End If
    CO2aq = compositions(2, 4) * beta(3) * total_moles_Temp / mass_w / (gNeut(iCO2aq) * gNNeut(iCO2aq))
    a = 1
    b = -(mc(im) + CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) * (K1H2CO3 * aH2O) / (aH * gAn(iHCO3) * gNAn(iHCO3)))
    cc = (mc(im) * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) * (K1H2CO3 * aH2O) / (aH * gAn(iHCO3) * gNAn(iHCO3)) - Ksp * aH / K2HCO3)
End If
      Call QuadraticRoots(a, b, cc, ppt, root2)
    End If
    
    If igas = 3 Then
If useEOS = 0 Then
    a = 1
    cc = (mc(im) * nTH2S - Ksp * (Vg_ZRT + t3) * aH ^ 2 / (K1H2S * KgwH2S * gGas(iH2Sg) * gCat(im) * gNCat(im))) / mass_w
    'End If
    b = -(mc(im) * mass_w + nTH2S) / mass_w
ElseIf useEOS <> 0 Then
    total_moles_Temp = Total_moles_before_precipitation - ppt
    For iz = 1 To 2
     zTemp(iz) = z_before_precipitation(iz) * Total_moles_before_precipitation / total_moles_Temp
    Next iz
     zTemp(3) = (z_before_precipitation(3) * Total_moles_before_precipitation - ppt * mass_w) / total_moles_Temp
    For iz = 4 To 15
    zTemp(iz) = z_before_precipitation(iz) * Total_moles_before_precipitation / total_moles_Temp
    Next iz
    If RunH2SGUI <> 1 Then
    Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
    Else
     Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
                TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
    End If
    H2Saq = compositions(3, 4) * beta(3) * total_moles_Temp / mass_w / gNeut(iH2Saq) / gNNeut(iH2Saq)
     a = 1
    b = -(mc(im) + H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) * K1H2S / (aH * gAn(iHS) * gNAn(iHS)))
    cc = (mc(im) * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) * K1H2S / (aH * gAn(iHS) * gNAn(iHS)) - Ksp * aH)
End If
    Call QuadraticRoots(a, b, cc, ppt, root2)
 End If
    
  ' The following is added to calculate the ppt for Ca-Mg(OH)2.
  If igas = 8 Then
    ppt = mc(iCa) - KspCaOH2 / (OH ^ 2 * gCat(iCa) * gAn(iOH) ^ 2)
  End If
  If igas = 9 Then
    ppt = mc(iMg) - KspMgOH2 / (OH ^ 2 * gCat(iMg) * gAn(iOH) ^ 2)
  End If
  
  If igas = 12 Then  'Greenalite: 3Fe + 2H4SiO4 -->Fe3Si2(solid) + 6H+.
    kc = KspGreenalite * aH ^ 6 / (gCat(iFe) ^ 3 * gNeut(iH4SiO4aq) ^ 2) 'KC conditional constant.
    If mc(iFe) / 3 >= TH4SiO4 / 2 Then pptNew = (TH4SiO4 - (kc / mc(iFe) ^ 3) ^ 0.5) / 2 'Si is the limiting reagent.
    If mc(iFe) / 3 < TH4SiO4 / 2 Then pptNew = (mc(iFe) - (kc / TH4SiO4 ^ 2) ^ 0.3333) / 3 'Fe is the limiting reagent.
    ISilicate = 0
    While ISilicate < 1000 And Abs((pptNew - ppt) / pptNew) > 0.00001
      ISilicate = ISilicate + 1
      ppt = pptNew
      fppt = (mc(iFe) - 3 * ppt) ^ 3 * (TH4SiO4 - 2 * ppt) ^ 2 - kc
      dfppt = -1 * (9 * (mc(iFe) - 3 * ppt) ^ 2 * (TH4SiO4 - 2 * ppt) ^ 2 + 4 * ((mc(iFe) - 3 * ppt) ^ 3) * (TH4SiO4 - 2 * ppt))
      If (mc(iFe) - 3 * ppt) = 0 Or (TH4SiO4 - 2 * ppt) = 0 Then GoTo 412   '100.000% of limiting reagent will precipitate.
      pptNew = ppt - fppt / dfppt
      If ISilicate = 999 Then errmsg(6) = 6
    Wend
412 TH4SiO4_Greenalite = (TH4SiO4 - 2 * ppt)
    ppt = ppt * 6 / 2
  End If
  
  If igas = 13 Then
    kc = KspDiopside * aH ^ 4 / (gCat(iCa) * gCat(iMg) * gNeut(iH4SiO4aq) ^ 2) 'KC conditional constant.
    If mc(iCa) < mc(iMg) And mc(iCa) < TH4SiO4 / 2 Then pptNew = mc(iCa) - kc / (mc(iMg) * TH4SiO4 ^ 2) 'Ca is the limiting reagent.
    If mc(iMg) < mc(iCa) And mc(iMg) < TH4SiO4 / 2 Then pptNew = mc(iMg) - kc / (mc(iCa) * TH4SiO4 ^ 2)  'Mg is the limiting reagent.
    If TH4SiO4 / 2 <= mc(iCa) And TH4SiO4 / 2 <= mc(iMg) Then pptNew = (TH4SiO4 - (kc / (mc(iCa) * mc(iMg))) ^ 0.5) / 2 'Si is the limiting reagent.
    ISilicate = 0
    While ISilicate < 1000 And Abs((pptNew - ppt) / pptNew) > 0.00001
      ISilicate = ISilicate + 1
      ppt = pptNew
      fppt = (mc(iCa) - ppt) * (mc(iMg) - ppt) * (TH4SiO4 - 2 * ppt) ^ 2 - kc
      dfppt = -1 * (mc(iMg) - ppt) * (TH4SiO4 - 2 * ppt) ^ 2 - 1 * (mc(iCa) - ppt) * (TH4SiO4 - 2 * ppt) ^ 2 - 4 * (mc(iCa) - ppt) * (mc(iMg) - ppt) * (TH4SiO4 - 2 * ppt)
      If (mc(iMg) - ppt) = 0 Or (TH4SiO4 - 2 * ppt) = 0 Or (mc(iCa) - ppt) = 0 Then GoTo 413
      pptNew = ppt - fppt / dfppt
      If ISilicate = 999 Then errmsg(6) = 6
    Wend
413 ppt = ppt * 4 / 2
    TH4SiO4_Dipside = (TH4SiO4 - 2 * ppt)
  End If
  
  If igas = 14 Then
    kc = KspChrysotile * aH ^ 6 / (gCat(iMg) ^ 3 * gNeut(iH4SiO4aq) ^ 2) 'KC conditional constant.
    If mc(iMg) / 3 >= TH4SiO4 / 2 Then pptNew = (TH4SiO4 - (kc / mc(iMg) ^ 3) ^ 0.5) / 2 'Si is the limiting reagent.
    If mc(iMg) / 3 < TH4SiO4 / 2 Then pptNew = (mc(iMg) - (kc / TH4SiO4 ^ 2) ^ 0.3333) / 3 'Mg is the limiting reagent.
    ISilicate = 0
    While ISilicate < 1000 And Abs((pptNew - ppt) / pptNew) > 0.00001
      ISilicate = ISilicate + 1
      ppt = pptNew
      fppt = (mc(iMg) - 3 * ppt) ^ 3 * (TH4SiO4 - 2 * ppt) ^ 2 - kc
      If (mc(iMg) - 3 * ppt) = 0 Or (TH4SiO4 - 2 * ppt) = 0 Then GoTo 414
      dfppt = -1 * (9 * (mc(iMg) - 3 * ppt) ^ 2 * (TH4SiO4 - 2 * ppt) ^ 2 + 4 * ((mc(iMg) - 3 * ppt) ^ 3) * (TH4SiO4 - 2 * ppt))
      pptNew = ppt - fppt / dfppt
      If ISilicate = 999 Then errmsg(6) = 6
    Wend
414 ppt = ppt * 6 / 2
    TH4SiO4_Chrysotile = (TH4SiO4 - 2 * ppt)
  End If
  
  If ppt_or_not = 1 And ppt < 0 Then ppt = 0
  If Iteration = 1 And igas > 3 Then GoTo 323
Wend
323  'Continue
If useEOS = 0 Then
PCH4 = (nTCH4 / (Vg_ZRT + t1))    'These are not the partial pressures for the Original brine data.
PCO2 = (nTCO2 / (Vg_ZRT + t2))
If igas = 2 Then PCO2 = ((nTCO2 - ppt * mass_w) / (Vg_ZRT + t2))
PH2S = (nTH2S / (Vg_ZRT + t3))
If igas = 3 Then PH2S = (nTH2S - ppt * mass_w) / (Vg_ZRT + t3)
ElseIf useEOS <> 0 Then
PCO2 = compositions(2, 4) * phi(2, 3) * Ppsia / gGas(iCO2g)
PH2S = compositions(3, 4) * phi(3, 3) * Ppsia / gGas(iH2Sg)
End If
CO2aq = KgwCO2 * PCO2 * gGas(iCO2g) / (gNeut(iCO2aq) * gNNeut(iCO2aq))
H2Saq = KgwH2S * PH2S * gGas(iH2Sg) / (gNeut(iH2Saq) * gNNeut(iH2Saq))
HCO3 = (K1H2CO3 * aH2O) * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
HS = K1H2S * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
'If TFe > 0 And nTH2S > 0 Then mt = fFeSSpeciation2(iM, igas) 'speciate mc(iFe) and HS
If TH2Saq > 0 Then mt = fMeSSpeciation(im, igas) 'output mc(iFe),mc(iZn), mc(iPb), HS
mn(iFeSaq) = KstFeSaq * mc(iFe) * HS * gAn(iHS) * gNAn(iHS) * gCat(iFe) * gNCat(iFe) / (gNeut(iFeSaq) * gNNeut(iFeSaq) * aH)
S = K2HS * HS * gAn(iHS) * gNAn(iHS) / (aH * gAn(iSion) * gNAn(iSion))
hydAc = aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1
AC = TAc / hydAc
HAcaq = TAc - AC
hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
H2BO3 = TH3BO3 / hydH2BO3
hydNH3 = aH * gNeut(iNH3) * gNNeut(iNH3) / (KNH4 * gCat(iNH4) * gNCat(iNH4)) + 1
NH3 = TNH4 / hydNH3

  hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
  aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
  H2SiO4 = TH4SiO4 / hydH2SiO4
  H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
  H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
  'a = TH4SiO4 - (H2SiO4 + H3SiO4 + H4SiO4)
  If igas = 10 Then
    H4SiO4 = KspAmSilica / (gNeut(iH4SiO4aq))
    H3SiO4 = KH4SiO4 * KspAmSilica / (aH * gAn(iH3SiO4))
    H2SiO4 = KH4SiO4 * KH3SiO3 * KspAmSilica / (aH ^ 2 * gAn(iH2SiO4))
    pptAmSilica = TH4SiO4 - (H2SiO4 + H3SiO4 + H4SiO4)
  End If
If igas = 11 Then
  H4SiO4 = KspQuartz
  H3SiO4 = KH4SiO4 * KspQuartz / aH
  H2SiO4 = KH4SiO4 * KH3SiO3 * KspAmSilica / aH ^ 2
End If

If igas = 12 Then
  H2SiO4 = TH4SiO4_Greenalite / hydH2SiO4
  H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
  H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
End If
If igas = 13 Then
  H2SiO4 = TH4SiO4_Dipside / hydH2SiO4
  H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
  H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
End If
If igas = 14 Then
  H2SiO4 = TH4SiO4_Chrysotile / hydH2SiO4
  H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
  H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
End If

faH = Alk - 2 * ppt - (HCO3 + 2 * CO3 + HS + 2 * S + AC + NH3 + H2BO3 + H3SiO4 + 2 * H2SiO4 + OH - H)

If igas = 10 Or igas = 11 Then
  ppt = TH4SiO4 - (H4SiO4 + H3SiO4 + H2SiO4)
  If ppt < 0 Then ppt = 0
End If
End Sub

'*************************************************************************************************************
Sub C4_EOS_TCO2_SSPEquilCalcs(ppt_or_not, im, igas, Ksp)  'ppt_or_not: "0" means no precipitation; "1" means only precipitation; and "2" means allow both precipitation and dissolution.
'The following half-interval search followed by a Newton-Raphson routine
'Use zTemp() and total_moles-temp for transfering temperary data
'Every cycle, these values are conserved nTCO2_before_precipitation, nTH2S_before_precipitation,Total_moles_before_precipitation,z_before_precipitation

ppt = 0:
pHHigh = 14
pHLow = 0
For i = 1 To 15
    pH = (pHHigh + pHLow) / 2
    aH = 10 ^ (-pH)
    H = aH / (gCat(iH) * gNCat(iH))
    OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
    nTCO2EOS = nTCO2_before_precipitation
    nTH2sEOS = nTH2S_before_precipitation
    total_moles_Temp = Total_moles_before_precipitation
    For iz = 1 To 15
    zTemp(iz) = z_before_precipitation(iz)
    Next iz
    If RunH2SGUI <> 1 Then
    Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
    Else
     Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
                TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
    End If
    t1 = 1: t2 = 1: t5 = 1: t6 = 1
    If beta(1) > 0 Then
    If phi(2, 1) <> 0 Then t1 = (gNeut(iCO2aq) * gNNeut(iCO2aq)) / (KgwCO2 * phi(2, 1))
    If phi(3, 1) <> 0 Then t5 = (gNeut(iH2Saq) * gNNeut(iH2Saq)) / (KgwH2S * phi(3, 1))
    End If
    If beta(2) > 0 Then
    If phi(2, 2) <> 0 Then
    If beta(1) > 0 Then t2 = phi(2, 1) * RatioOilBPoints * KgoCO2 / phi(2, 2)
    End If
    If phi(3, 2) <> 0 Then
    If beta(1) > 0 Then t6 = phi(3, 1) * RatioOilBPoints * KgoH2S / phi(3, 2)
    End If
    End If
    
    t3 = (K1H2CO3 * aH2O) * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
    t4 = (K1H2CO3 * aH2O) * K2HCO3 * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH ^ 2 * gAn(iCO3) * gNAn(iCO3))
    t7 = K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
    t8 = K1H2S * K2HS * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH ^ 2 * gAn(iSion) * gNAn(iSion)) 'Place holder for S-2 species
    s1 = 0.01801528 * compositions(15, 4) 'Unit Kg/ per mole of phase 3
    S2 = MW_Phase(2) / 1000 ' Unit Kg/mole of phase 2
    s3 = beta(1) * t1 / Ppsia + beta(2) * S2 * t1 * t2 + beta(3) * (1 + t3 + t4)
    s4 = beta(1) * t5 / Ppsia + beta(2) * S2 * t5 * t6 + beta(3) * (1 + t7 + t8)
    'mass_w = s1 * beta(3) * total_moles_temp
    Delta_nTCO2EOS = zTemp(2) * s1 / s3 * (t3 + t4) * beta(3) * total_moles_Temp
    Delta_nTH2SEOS = zTemp(3) * s1 / s4 * (t7 + t8) * beta(3) * total_moles_Temp
    If Delta_nTCO2EOS > nTCO2_before_precipitation Then Delta_nTCO2EOS = nTCO2_before_precipitation * (1 - 1 / (1 + t3 + t4)) 'set delta CO2 H2S limits
    If Delta_nTH2SEOS > nTH2S_before_precipitation Then Delta_nTH2SEOS = nTH2S_before_precipitation * (1 - 1 / (1 + t7 + t8))
    total_moles_Temp = Total_moles_before_precipitation - Delta_nTCO2EOS - Delta_nTH2SEOS
    zTemp(1) = z_before_precipitation(1) * Total_moles_before_precipitation / total_moles_Temp
    zTemp(2) = (nTCO2_before_precipitation - Delta_nTCO2EOS) / total_moles_Temp
    zTemp(3) = (nTH2S_before_precipitation - Delta_nTH2SEOS) / total_moles_Temp
    For iz = 4 To 15
    zTemp(iz) = z_before_precipitation(iz) * Total_moles_before_precipitation / total_moles_Temp
    Next iz
    mt = fEOS_Speciation
'    CO2_w_before_ppt = (CO2aq + HCO3 + CO3)
'    H2S_w_before_ppt = (H2Saq + HS + S)

'    t11 = 1 + (aH * gAn(iCO3) * gNAn(iCO3) / (K2HCO3 * gAn(iHCO3) * gNAn(iHCO3))) + (aH ^ 2 * gAn(iCO3) * gNAn(iCO3) / ((K1H2CO3 * aH2O) * K2HCO3 * gNeut(iCO2aq) * gNNeut(iCO2aq)))
'    t12 = 1 + (aH * gAn(iHS) * gNAn(iHS)) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq)) + (aH ^ 2 * gAn(iSion) * gNAn(iSion) / (K1H2S * K2HS * gNeut(iH2Saq) * gNNeut(iH2Saq)))
S2 = 0: s3 = 0: q3 = 0: q4 = 0: s5 = 0: s6 = 0: q5 = 0: q6 = 0
If compositions(2, 4) > 0 Then
S2 = compositions(2, 2) * beta(1) / compositions(2, 4) * beta(3)
s3 = compositions(2, 3) * beta(2) / compositions(2, 4) * beta(3)
q3 = nTCO2_before_precipitation / (s1 * beta(3) * total_moles_Temp)
q4 = S2 + s3 + 1 + t3 + t4
End If

If compositions(3, 4) > 0 Then
s5 = compositions(3, 2) * beta(1) / compositions(3, 4) * beta(3)
s6 = compositions(3, 3) * beta(2) / compositions(3, 4) * beta(3)
q5 = nTH2S_before_precipitation / (s1 * beta(3) * total_moles_Temp)
q6 = S2 + s3 + 1 + t7 + t8
End If
    'The following statements around the cubic Vg eqation and the quadratic ppt equation are used to get consistent values of Vg and ppt at each pH value.
    'Initially, ppt = 0 and Vg is calculated and then this value of Vg is put into the Ksp equation to calcuate ppt(new) and this is put into the cubic Vg
    '  equation to recalculate Vg with the improved value of ppt and the process is repeated until the convergence is +/- 0.0001 in both ppt and Vg or for 100
    '  interations.  Generally, only two or three iterations are needed.

    ppt = 0: pptOld = 1 * 10 ^ 42:  Iteration = 0  'initial estimates for ppt and Vg/ZRT
If ppt_or_not = 0 Then GoTo 223  'If no precipitation is to be used, then skip out of the "While...Wend" loop and leave ppt = 0.
While Abs((ppt - pptOld + 1E-21) / (ppt + pptOld + 1E-16)) > 0.0001 And Iteration < 20
    'This While/Wend loop calculates the effect of ppt on the gas composition and partitioning.
        Iteration = Iteration + 1:      pptOld = ppt:
        If igas = 2 Then
        
            a = 1
'            If iM = 9 Then ' for ZnCO3
'            cc = (mc(iM) * q3 - KPZnCl2 * Ksp * q4 / t4 / (gZn * gNCat(iM) * gAn(iCO3) * gNAn(iCO3)))
'            Else
            cc = (mc(im) * q3 - Ksp * q4 / t4 / (gCat(im) * gNCat(im) * gAn(iCO3) * gNAn(iCO3)))
'            End If
            b = -(mc(im) + q3)
'            Else
'            CC = mc(iM) * CO2_w_before_ppt - Ksp * t11 / (gCat(iM) * gNCat(iM) * gAn(iCO3) * gNAn(iCO3))
'            End If
            Call QuadraticRoots(a, b, cc, ppt, root2)
            If ppt > 0 Then
            total_moles_Temp = Total_moles_before_precipitation - Delta_nTCO2EOS - Delta_nTH2SEOS - ppt * s1 * beta(3) * total_moles_Temp
            If total_moles_Temp > 0 Then
            zTemp(1) = z_before_precipitation(1) * Total_moles_before_precipitation / total_moles_Temp
            zTemp(2) = (nTCO2_before_precipitation - Delta_nTCO2EOS - ppt * s1 * beta(3) * total_moles_Temp) / total_moles_Temp
            zTemp(3) = (nTH2S_before_precipitation - Delta_nTH2SEOS) / total_moles_Temp
            For iz = 4 To 15
            zTemp(iz) = z_before_precipitation(iz) * Total_moles_before_precipitation / total_moles_Temp
            Next iz
            Else
            ppt = 0
            GoTo 223
            End If
            If (nTCO2_before_precipitation - Delta_nTCO2EOS - ppt * s1 * beta(3) * total_moles_Temp) < 0 Then   'set ppt=0 if there is not enough CO2 to form ppt
            ppt = 0
            GoTo 223
            End If
            End If
        End If
        If igas = 3 Then
            a = 1
'            If iM = 9 Then 'for ZnS
'            cc = (mc(iM) * q5 - KPZnCl2 * Ksp * aH * q6 / t7 / (gZn * gNCat(iM) * gAn(iHS) * gNAn(iHS)))
'            ElseIf iM = iPb Then 'for PbS
'            cc = (mc(iM) * q5 - KPPbCl2 * Ksp * aH * q6 / t7 / (gPb * gNCat(iM) * gAn(iHS) * gNAn(iHS)))
'            Else
            cc = (mc(im) * q5 - Ksp * aH * q6 / t7 / (gCat(im) * gNCat(im) * gAn(iHS) * gNAn(iHS)))
'            End If
           
'            Else
'            CC = (mc(iM) * H2S_w_before_ppt - Ksp * aH * t12 / (gCat(iM) * gNCat(iM) * gAn(iHS) * gNAn(iHS)))
'            End If
            b = -(mc(im) + q5)
            Call QuadraticRoots(a, b, cc, ppt, root2)
           If ppt > 0 Then
            total_moles_Temp = Total_moles_before_precipitation - Delta_nTCO2EOS - Delta_nTH2SEOS - ppt * s1 * beta(3) * total_moles_Temp
            If total_moles_Temp > 0 Then
            zTemp(1) = z_before_precipitation(1) * Total_moles_before_precipitation / total_moles_Temp
            zTemp(2) = (nTCO2_before_precipitation - Delta_nTCO2EOS) / total_moles_Temp
            zTemp(3) = (nTH2S_before_precipitation - Delta_nTH2SEOS - ppt * s1 * beta(3) * total_moles_Temp) / total_moles_Temp
            For iz = 4 To 15
            zTemp(iz) = z_before_precipitation(iz) * Total_moles_before_precipitation / total_moles_Temp
            Next iz
            Else
            ppt = 0
            GoTo 223
            End If
            If (nTH2S_before_precipitation - Delta_nTH2SEOS - ppt * s1 * beta(3) * total_moles_Temp) < 0 Then   'set ppt=0 if there is not enough CO2 to form ppt
            ppt = 0
            GoTo 223
            End If
            End If
        End If

        ' The following is for Ca-Mg(OH)2.
        If igas = 8 Then
            ppt = mc(iCa) - KspCaOH2 / (OH ^ 2 * gCat(iCa) * gAn(iOH) ^ 2)
        End If
        If igas = 9 Then
            ppt = mc(iMg) - KspMgOH2 / (OH ^ 2 * gCat(iMg) * gAn(iOH) ^ 2)
        End If

        'The following are for the silicates and metal silicates.
        If igas = 12 Then  'Use greenalite, 3Fe + 2H4SiO4 -->Fe3Si2(solid) + 6H+, will precipitate.
            kc = KspGreenalite * aH ^ 6 / (gCat(iFe) ^ 3 * gNeut(iH4SiO4aq) ^ 2) 'KC conditional constant to simplify algebra at each pH.
            If mc(iFe) / 3 >= TH4SiO4 / 2 Then pptNew = (TH4SiO4 - (kc / mc(iFe) ^ 3) ^ 0.5) / 2 'Si is the limiting reagent.
            If mc(iFe) / 3 < TH4SiO4 / 2 Then pptNew = (mc(iFe) - (kc / TH4SiO4 ^ 2) ^ 0.3333) / 3 '  0.99 * 2 * mc(iFe) / 3  'Fe is the limiting reagent.
            ISilicate = 0
            While ISilicate < 1000 And Abs((pptNew - ppt) / pptNew) > 0.00001
              ISilicate = ISilicate + 1
              ppt = pptNew
              fppt = (mc(iFe) - 3 * ppt) ^ 3 * (TH4SiO4 - 2 * ppt) ^ 2 - kc
              dfppt = -1 * (9 * (mc(iFe) - 3 * ppt) ^ 2 * (TH4SiO4 - 2 * ppt) ^ 2 + 4 * ((mc(iFe) - 3 * ppt) ^ 3) * (TH4SiO4 - 2 * ppt))
              If (mc(iFe) - 3 * ppt) = 0 Or (TH4SiO4 - 2 * ppt) = 0 Then GoTo 312   '100.0000% of limiting reagent will precipitate.
              pptNew = ppt - fppt / dfppt
              If ISilicate = 999 Then errmsg(6) = 6
            Wend
312     TH4SiO4_Greenalite = (TH4SiO4 - 2 * ppt)
        ppt = ppt * 6 / 2
        End If

        If igas = 13 Then
            kc = KspDiopside * aH ^ 4 / (gCat(iCa) * gCat(iMg) * gNeut(iH4SiO4aq) ^ 2) 'KC conditional constant.
            If mc(iCa) < mc(iMg) And mc(iCa) < TH4SiO4 / 2 Then pptNew = mc(iCa) - kc / (mc(iMg) * TH4SiO4 ^ 2) 'Ca is the limiting reagent.
            If mc(iMg) < mc(iCa) And mc(iMg) < TH4SiO4 / 2 Then pptNew = mc(iMg) - kc / (mc(iCa) * TH4SiO4 ^ 2)  'Mg is the limiting reagent.
            If TH4SiO4 / 2 <= mc(iCa) And TH4SiO4 / 2 <= mc(iMg) Then pptNew = (TH4SiO4 - (kc / (mc(iCa) * mc(iMg))) ^ 0.5) / 2 'Si is the limiting reagent.
            ISilicate = 0
            While ISilicate < 1000 And Abs((pptNew - ppt) / pptNew) > 0.00001
              ISilicate = ISilicate + 1
              ppt = pptNew
              fppt = (mc(iCa) - ppt) * (mc(iMg) - ppt) * (TH4SiO4 - 2 * ppt) ^ 2 - kc
              dfppt = -1 * (mc(iMg) - ppt) * (TH4SiO4 - 2 * ppt) ^ 2 - 1 * (mc(iCa) - ppt) * (TH4SiO4 - 2 * ppt) ^ 2 - 4 * (mc(iCa) - ppt) * (mc(iMg) - ppt) * (TH4SiO4 - 2 * ppt)
              If (mc(iMg) - ppt) = 0 Or (TH4SiO4 - 2 * ppt) = 0 Or (mc(iCa) - ppt) = 0 Then GoTo 313
              pptNew = ppt - fppt / dfppt
              If ISilicate = 999 Then errmsg(6) = 6
            Wend
313     ppt = ppt * 4 / 2
        TH4SiO4_Dipside = (TH4SiO4 - 2 * ppt)
        End If

        If igas = 14 Then 'use Chrysotile
        kc = KspChrysotile * aH ^ 6 / (gCat(iMg) ^ 3 * gNeut(iH4SiO4aq) ^ 2) 'KC conditional constant.
        If mc(iMg) / 3 >= TH4SiO4 / 2 Then pptNew = (TH4SiO4 - (kc / mc(iMg) ^ 3) ^ 0.5) / 2 'Si is the limiting reagent.
        If mc(iMg) / 3 < TH4SiO4 / 2 Then pptNew = (mc(iMg) - (kc / TH4SiO4 ^ 2) ^ 0.3333) / 3 'Mg is the limiting reagent.
        ISilicate = 0
            While ISilicate < 1000 And Abs((pptNew - ppt) / pptNew) > 0.00001
              ISilicate = ISilicate + 1
              ppt = pptNew
              fppt = (mc(iMg) - 3 * ppt) ^ 3 * (TH4SiO4 - 2 * ppt) ^ 2 - kc
              If (mc(iMg) - 3 * ppt) = 0 Or (TH4SiO4 - 2 * ppt) = 0 Then GoTo 314
              dfppt = -1 * (9 * (mc(iMg) - 3 * ppt) ^ 2 * (TH4SiO4 - 2 * ppt) ^ 2 + 4 * ((mc(iMg) - 3 * ppt) ^ 3) * (TH4SiO4 - 2 * ppt))
              pptNew = ppt - fppt / dfppt
              If ISilicate = 999 Then errmsg(6) = 6
            Wend
314     ppt = ppt * 6 / 2
        TH4SiO4_Chrysotile = (TH4SiO4 - 2 * ppt)
        End If
        If ppt_or_not = 1 And ppt < 0 Then ppt = 0
        'If you do not want to allow for precipitation nor dissolution, then set ppt = 0.  Since SI > 0 to be here, ppt is always positive.
        'If you are allowing for precipitation or for dissolution, then you need to allow ppt to be +/0/- for speciation in the Alk equation.
        If Iteration = 1 And igas > 3 Then GoTo 223
    Wend

223 If ppt_or_not = 1 And ppt > 0 Then mt = fEOS_Speciation
    hydAc = aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1
    AC = TAc / hydAc
    HAcaq = TAc - AC
    hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
    H2BO3 = TH3BO3 / hydH2BO3
    hydNH3 = aH * gNeut(iNH3) * gNNeut(iNH3) / (KNH4 * gCat(iNH4) * gNCat(iNH4)) + 1
    NH3 = TNH4 / hydNH3

  hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
  aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
  H2SiO4 = TH4SiO4 / hydH2SiO4
  H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
  H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
  'a = TH4SiO4 - (H2SiO4 + H3SiO4 + H4SiO4)
  If igas = 10 Then
    H4SiO4 = KspAmSilica / (gNeut(iH4SiO4aq))
    H3SiO4 = KH4SiO4 * KspAmSilica / (aH * gAn(iH3SiO4))
    H2SiO4 = KH4SiO4 * KH3SiO3 * KspAmSilica / (aH ^ 2 * gAn(iH2SiO4))
    pptAmSilica = TH4SiO4 - (H2SiO4 + H3SiO4 + H4SiO4)
  End If
    
    If igas = 11 Then
        H4SiO4 = KspQuartz
        H3SiO4 = KH4SiO4 * KspQuartz / aH
        H2SiO4 = KH4SiO4 * KH3SiO3 * KspAmSilica / aH ^ 2
    End If
    If igas = 12 Then
        H2SiO4 = TH4SiO4_Greenalite / hydH2SiO4
        H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
        H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
    End If
    If igas = 13 Then
        H2SiO4 = TH4SiO4_Dipside / hydH2SiO4
        H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
        H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
    End If
    If igas = 14 Then
        H2SiO4 = TH4SiO4_Chrysotile / hydH2SiO4
        H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
        H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
    End If
    faH = Alk - 2 * ppt - (HCO3 + 2 * CO3 + HS + 2 * S + AC + NH3 + H2BO3 + H3SiO4 + 2 * H2SiO4 + OH - H)
    ypH(i) = faH: xpH(i) = pH: xppt(i) = ppt 'Used in Newton-Raphson iteration, at the end of this For loop.
    If faH > 0 Then pHLow = pH
    If faH < 0 Then pHHigh = pH
    
Next i

'The following statements take the last two interation values of pH and of faH and uses a Newton-Raphson method to calculate the best pH value.
'From this improved pH value the ppt values are recalulated for final output.  This generally improves the convergence from three significant
'  figures to about eight+ significant figures with little additional computation; once the iteration is close to the answer.
If Abs(ypH(i - 1) / ((ypH(i - 1) - ypH(i - 2)) / (xpH(i - 1) - xpH(i - 2)))) < 0.001 Then
    pH = pH - ypH(i - 1) / ((ypH(i - 1) - ypH(i - 2)) / (xpH(i - 1) - xpH(i - 2)))  '(i-1) is used since the last i is one larger than the number of loops.
Else
    pH = Abs((xpH(i - 1) + xpH(i - 2))) / 2
    errmsg(5) = 5
End If

    aH = 10 ^ (-pH)
    H = aH / (gCat(iH) * gNCat(iH))
    OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
    mt = fEOS_Speciation
'    CO2_w_before_ppt = (CO2aq + HCO3 + CO3)
'    H2S_w_before_ppt = (H2Saq + HS + S)
'    t11 = 1 + (aH * gAn(iCO3) * gNAn(iCO3) / (K2HCO3 * gAn(iHCO3) * gNAn(iHCO3))) + (aH ^ 2 * gAn(iCO3) * gNAn(iCO3) / ((K1H2CO3 * aH2O) * K2HCO3 * gNeut(iCO2aq) * gNNeut(iCO2aq)))
'    t12 = 1 + (aH * gAn(iHS) * gNAn(iHS)) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq)) + (aH ^ 2 * gAn(iSion) * gNAn(iSion) / (K1H2S * K2HS * gNeut(iH2Saq) * gNNeut(iH2Saq)))
If compositions(2, 4) > 0 Then
S2 = compositions(2, 2) * beta(1) / compositions(2, 4) * beta(3)
s3 = compositions(2, 3) * beta(2) / compositions(2, 4) * beta(3)
q3 = nTCO2_before_precipitation / (s1 * beta(3) * total_moles_Temp)
q4 = S2 + s3 + 1 + t3 + t4
End If
If compositions(3, 4) > 0 Then
s5 = compositions(3, 2) * beta(1) / compositions(3, 4) * beta(3)
s6 = compositions(3, 3) * beta(2) / compositions(3, 4) * beta(3)
q5 = nTH2S_before_precipitation / (s1 * beta(3) * total_moles_Temp)
q6 = S2 + s3 + 1 + t7 + t8
End If
    'The following statements around the cubic Vg eqation and the quadratic ppt equation are used to get consistent values of Vg and ppt at each pH value.
    'Initially, ppt = 0 and Vg is calculated and then this value of Vg is put into the Ksp equation to calcuate ppt(new) and this is put into the cubic Vg
    '  equation to recalculate Vg with the improved value of ppt and the process is repeated until the convergence is +/- 0.0001 in both ppt and Vg or for 100
    '  interations.  Generally, only two or three iterations are needed.

    ppt = 0: pptOld = 1 * 10 ^ 42:  Iteration = 0  'initial estimates for ppt and Vg/ZRT
If ppt_or_not = 0 Then GoTo 323  'If no precipitation is to be used, then skip out of the "While...Wend" loop and leave ppt = 0.
While Abs((ppt - pptOld + 1E-21) / (ppt + pptOld + 1E-16)) > 0.0001 And Iteration < 20
    'This While/Wend loop calculates the effect of ppt on the gas composition and partitioning.
        Iteration = Iteration + 1:      pptOld = ppt:
       If igas = 2 Then
            a = 1
'            If iM = 9 Then ' for ZnCO3
'            cc = (mc(iM) * q3 - KPZnCl2 * Ksp * q4 / t4 / (gZn * gNCat(iM) * gAn(iCO3) * gNAn(iCO3)))
'            Else
            cc = (mc(im) * q3 - Ksp * q4 / t4 / (gCat(im) * gNCat(im) * gAn(iCO3) * gNAn(iCO3)))
'            End If
            b = -(mc(im) + q3)
            Call QuadraticRoots(a, b, cc, ppt, root2)
            If ppt > 0 Then
            total_moles_Temp = Total_moles_before_precipitation - Delta_nTCO2EOS - Delta_nTH2SEOS - ppt * s1 * beta(3) * total_moles_Temp
            If total_moles_Temp > 0 Then
            zTemp(1) = z_before_precipitation(1) * Total_moles_before_precipitation / total_moles_Temp
            zTemp(2) = (nTCO2_before_precipitation - Delta_nTCO2EOS - ppt * s1 * beta(3) * total_moles_Temp) / total_moles_Temp
            zTemp(3) = (nTH2S_before_precipitation - Delta_nTH2SEOS) / total_moles_Temp
            For iz = 4 To 15
            zTemp(iz) = z_before_precipitation(iz) * Total_moles_before_precipitation / total_moles_Temp
            Next iz
            Else
            ppt = 0
            GoTo 323
            End If
            If (nTCO2_before_precipitation - Delta_nTCO2EOS - ppt * s1 * beta(3) * total_moles_Temp) < 0 Then   'set ppt=0 if there is not enough CO2 to form ppt
            ppt = 0
            GoTo 323
            End If
            End If
        End If
        If igas = 3 Then
            a = 1
'           If iM = 9 Then 'for ZnS
'            cc = (mc(iM) * q5 - KPZnCl2 * Ksp * aH * q6 / t7 / (gZn * gNCat(iM) * gAn(iHS) * gNAn(iHS)))
'            ElseIf iM = iPb Then 'for PbS
'            cc = (mc(iM) * q5 - KPPbCl2 * Ksp * aH * q6 / t7 / (gPb * gNCat(iM) * gAn(iHS) * gNAn(iHS)))
'            Else
            cc = (mc(im) * q5 - Ksp * aH * q6 / t7 / (gCat(im) * gNCat(im) * gAn(iHS) * gNAn(iHS)))
'            End If
           
'            Else
'            CC = (mc(iM) * H2S_w_before_ppt - Ksp * aH * t12 / (gCat(iM) * gNCat(iM) * gAn(iHS) * gNAn(iHS)))
'            End If
            b = -(mc(im) + q5)
            Call QuadraticRoots(a, b, cc, ppt, root2)
           If ppt > 0 Then
            total_moles_Temp = Total_moles_before_precipitation - Delta_nTCO2EOS - Delta_nTH2SEOS - ppt * s1 * beta(3) * total_moles_Temp
            If total_moles_Temp > 0 Then
            zTemp(1) = z_before_precipitation(1) * Total_moles_before_precipitation / total_moles_Temp
            zTemp(2) = (nTCO2_before_precipitation - Delta_nTCO2EOS) / total_moles_Temp
            zTemp(3) = (nTH2S_before_precipitation - Delta_nTH2SEOS - ppt * s1 * beta(3) * total_moles_Temp) / total_moles_Temp
            For iz = 4 To 15
            zTemp(iz) = z_before_precipitation(iz) * Total_moles_before_precipitation / total_moles_Temp
            Next iz
            Else
            ppt = 0
            GoTo 323
            End If
            If (nTH2S_before_precipitation - Delta_nTH2SEOS - ppt * s1 * beta(3) * total_moles_Temp) < 0 Then   'set ppt=0 if there is not enough CO2 to form ppt
            ppt = 0
            GoTo 323
            End If
            End If
        End If

        ' The following is for Ca-Mg(OH)2.
        If igas = 8 Then
            ppt = mc(iCa) - KspCaOH2 / (OH ^ 2 * gCat(iCa) * gAn(iOH) ^ 2)
        End If
        If igas = 9 Then
            ppt = mc(iMg) - KspMgOH2 / (OH ^ 2 * gCat(iMg) * gAn(iOH) ^ 2)
        End If

        'The following are for the silicates and metal silicates.
        If igas = 12 Then  'Use greenalite, 3Fe + 2H4SiO4 -->Fe3Si2(solid) + 6H+, will precipitate.
            kc = KspGreenalite * aH ^ 6 / (gCat(iFe) ^ 3 * gNeut(iH4SiO4aq) ^ 2) 'KC conditional constant to simplify algebra at each pH.
            If mc(iFe) / 3 >= TH4SiO4 / 2 Then pptNew = (TH4SiO4 - (kc / mc(iFe) ^ 3) ^ 0.5) / 2 'Si is the limiting reagent.
            If mc(iFe) / 3 < TH4SiO4 / 2 Then pptNew = (mc(iFe) - (kc / TH4SiO4 ^ 2) ^ 0.3333) / 3 '  0.99 * 2 * mc(iFe) / 3  'Fe is the limiting reagent.
            ISilicate = 0
            While ISilicate < 1000 And Abs((pptNew - ppt) / pptNew) > 0.00001
              ISilicate = ISilicate + 1
              ppt = pptNew
              fppt = (mc(iFe) - 3 * ppt) ^ 3 * (TH4SiO4 - 2 * ppt) ^ 2 - kc
              dfppt = -1 * (9 * (mc(iFe) - 3 * ppt) ^ 2 * (TH4SiO4 - 2 * ppt) ^ 2 + 4 * ((mc(iFe) - 3 * ppt) ^ 3) * (TH4SiO4 - 2 * ppt))
              If (mc(iFe) - 3 * ppt) = 0 Or (TH4SiO4 - 2 * ppt) = 0 Then GoTo 412   '100.0000% of limiting reagent will precipitate.
              pptNew = ppt - fppt / dfppt
              If ISilicate = 999 Then errmsg(6) = 6
            Wend
412     TH4SiO4_Greenalite = (TH4SiO4 - 2 * ppt)
        ppt = ppt * 6 / 2
        End If

        If igas = 13 Then
            kc = KspDiopside * aH ^ 4 / (gCat(iCa) * gCat(iMg) * gNeut(iH4SiO4aq) ^ 2) 'KC conditional constant.
            If mc(iCa) < mc(iMg) And mc(iCa) < TH4SiO4 / 2 Then pptNew = mc(iCa) - kc / (mc(iMg) * TH4SiO4 ^ 2) 'Ca is the limiting reagent.
            If mc(iMg) < mc(iCa) And mc(iMg) < TH4SiO4 / 2 Then pptNew = mc(iMg) - kc / (mc(iCa) * TH4SiO4 ^ 2)  'Mg is the limiting reagent.
            If TH4SiO4 / 2 <= mc(iCa) And TH4SiO4 / 2 <= mc(iMg) Then pptNew = (TH4SiO4 - (kc / (mc(iCa) * mc(iMg))) ^ 0.5) / 2 'Si is the limiting reagent.
            ISilicate = 0
            While ISilicate < 1000 And Abs((pptNew - ppt) / pptNew) > 0.00001
              ISilicate = ISilicate + 1
              ppt = pptNew
              fppt = (mc(iCa) - ppt) * (mc(iMg) - ppt) * (TH4SiO4 - 2 * ppt) ^ 2 - kc
              dfppt = -1 * (mc(iMg) - ppt) * (TH4SiO4 - 2 * ppt) ^ 2 - 1 * (mc(iCa) - ppt) * (TH4SiO4 - 2 * ppt) ^ 2 - 4 * (mc(iCa) - ppt) * (mc(iMg) - ppt) * (TH4SiO4 - 2 * ppt)
              If (mc(iMg) - ppt) = 0 Or (TH4SiO4 - 2 * ppt) = 0 Or (mc(iCa) - ppt) = 0 Then GoTo 413
              pptNew = ppt - fppt / dfppt
              If ISilicate = 999 Then errmsg(6) = 6
            Wend
413     ppt = ppt * 4 / 2
        TH4SiO4_Dipside = (TH4SiO4 - 2 * ppt)
        End If

        If igas = 14 Then 'use Chrysotile
        kc = KspChrysotile * aH ^ 6 / (gCat(iMg) ^ 3 * gNeut(iH4SiO4aq) ^ 2) 'KC conditional constant.
        If mc(iMg) / 3 >= TH4SiO4 / 2 Then pptNew = (TH4SiO4 - (kc / mc(iMg) ^ 3) ^ 0.5) / 2 'Si is the limiting reagent.
        If mc(iMg) / 3 < TH4SiO4 / 2 Then pptNew = (mc(iMg) - (kc / TH4SiO4 ^ 2) ^ 0.3333) / 3 'Mg is the limiting reagent.
        ISilicate = 0
            While ISilicate < 1000 And Abs((pptNew - ppt) / pptNew) > 0.00001
              ISilicate = ISilicate + 1
              ppt = pptNew
              fppt = (mc(iMg) - 3 * ppt) ^ 3 * (TH4SiO4 - 2 * ppt) ^ 2 - kc
              If (mc(iMg) - 3 * ppt) = 0 Or (TH4SiO4 - 2 * ppt) = 0 Then GoTo 414
              dfppt = -1 * (9 * (mc(iMg) - 3 * ppt) ^ 2 * (TH4SiO4 - 2 * ppt) ^ 2 + 4 * ((mc(iMg) - 3 * ppt) ^ 3) * (TH4SiO4 - 2 * ppt))
              pptNew = ppt - fppt / dfppt
              If ISilicate = 999 Then errmsg(6) = 6
            Wend
414     ppt = ppt * 6 / 2
        TH4SiO4_Chrysotile = (TH4SiO4 - 2 * ppt)
        End If
        If ppt_or_not = 1 And ppt < 0 Then ppt = 0
        'If you do not want to allow for precipitation nor dissolution, then set ppt = 0.  Since SI > 0 to be here, ppt is always positive.
        'If you are allowing for precipitation or for dissolution, then you need to allow ppt to be +/0/- for speciation in the Alk equation.
        If Iteration = 1 And igas > 3 Then GoTo 323
    Wend

323 If ppt_or_not = 1 And ppt > 0 Then mt = fEOS_Speciation
    hydAc = aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1
    AC = TAc / hydAc
    HAcaq = TAc - AC
    hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
    H2BO3 = TH3BO3 / hydH2BO3
    hydNH3 = aH * gNeut(iNH3) * gNNeut(iNH3) / (KNH4 * gCat(iNH4) * gNCat(iNH4)) + 1
    NH3 = TNH4 / hydNH3
    hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
    aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
    H2SiO4 = TH4SiO4 / hydH2SiO4
    H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
    H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
  'a = TH4SiO4 - (H2SiO4 + H3SiO4 + H4SiO4)
  If igas = 10 Then
    H4SiO4 = KspAmSilica / (gNeut(iH4SiO4aq))
    H3SiO4 = KH4SiO4 * KspAmSilica / (aH * gAn(iH3SiO4))
    H2SiO4 = KH4SiO4 * KH3SiO3 * KspAmSilica / (aH ^ 2 * gAn(iH2SiO4))
    pptAmSilica = TH4SiO4 - (H2SiO4 + H3SiO4 + H4SiO4)
  End If

    If igas = 11 Then
        H4SiO4 = KspQuartz
        H3SiO4 = KH4SiO4 * KspQuartz / aH
        H2SiO4 = KH4SiO4 * KH3SiO3 * KspAmSilica / aH ^ 2
    End If
    If igas = 12 Then
        H2SiO4 = TH4SiO4_Greenalite / hydH2SiO4
        H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
        H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
    End If
    If igas = 13 Then
        H2SiO4 = TH4SiO4_Dipside / hydH2SiO4
        H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
        H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
    End If
    If igas = 14 Then
        H2SiO4 = TH4SiO4_Chrysotile / hydH2SiO4
        H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
        H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
    End If
    faH = Alk - 2 * ppt - (HCO3 + 2 * CO3 + HS + 2 * S + AC + NH3 + H2BO3 + H3SiO4 + 2 * H2SiO4 + OH - H)
    If igas = 10 Or igas = 11 Then
        ppt = TH4SiO4 - (H4SiO4 + H3SiO4 + H2SiO4)
        If ppt < 0 Then ppt = 0
    End If
    'cehck**********************************************
mass_w = s1 * beta(3) * total_moles_Temp

End Sub

Function fEOS_Speciation()
If RunH2SGUI <> 1 Then
    Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
Else
 Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
                TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
End If
    s1 = 0.01801528 * compositions(15, 4) 'Unit Kg/ per mole of phase 3
    CO2aq = compositions(2, 4) / s1
    H2Saq = compositions(3, 4) / s1
    HCO3 = (K1H2CO3 * aH2O) * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
    CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
    HS = K1H2S * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
    S = K2HS * HS * gAn(iHS) * gNAn(iHS) / (aH * gAn(iSion) * gNAn(iSion))
    t9 = (HCO3 + CO3) * s1 * beta(3) * total_moles_Temp
    t10 = (HS + S) * s1 * beta(3) * total_moles_Temp
    If igas = 2 Then
    q1 = nTCO2_before_precipitation - ppt * s1 * beta(3) * total_moles_Temp
    Else
    q1 = nTCO2_before_precipitation
    End If
    If igas = 3 Then
    q2 = nTH2S_before_precipitation - ppt * s1 * beta(3) * total_moles_Temp
    Else
    q2 = nTH2S_before_precipitation
    End If
    If t9 > q1 Then Delta_nTCO2EOS = q1 * (1 - 1 / (1 + t3 + t4))  'At high pH, the limiting factor is nTCO2_before_precipitation, set most of CO2 in aqueous phase
    If t10 > q2 Then Delta_nTH2SEOS = q2 * (1 - 1 / (1 + t7 + t8))
    total_moles_Temp = Total_moles_before_precipitation - Delta_nTCO2EOS - Delta_nTH2SEOS - ppt * s1 * beta(3) * total_moles_Temp
    zTemp(1) = z_before_precipitation(1) * Total_moles_before_precipitation / total_moles_Temp
    zTemp(2) = (q1 - Delta_nTCO2EOS) / total_moles_Temp
    zTemp(3) = (q2 - Delta_nTH2SEOS) / total_moles_Temp
    For iz = 4 To 15
    zTemp(iz) = z_before_precipitation(iz) * Total_moles_before_precipitation / total_moles_Temp
    Next iz
    If RunH2SGUI <> 1 Then
    Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
    Else
     Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
                TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
    End If
    s1 = 0.01801528 * compositions(15, 4) 'Unit Kg/ per mole of phase 3
    CO2aq = compositions(2, 4) / s1
    H2Saq = compositions(3, 4) / s1
    HCO3 = (K1H2CO3 * aH2O) * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
    CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
    HS = K1H2S * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
    S = K2HS * HS * gAn(iHS) * gNAn(iHS) / (aH * gAn(iSion) * gNAn(iSion))
    t9 = (HCO3 + CO3) * s1 * beta(3) * total_moles_Temp
    t10 = (HS + S) * s1 * beta(3) * total_moles_Temp

Iteration = 0
If t9 > 0 Then
'While Abs(Delta_nTCO2EOS - t9 + 1E-21) / (q1 + 1E-16) > 0.0001 And Iteration < 20
While Abs(1 - (Delta_nTCO2EOS / t9)) > 0.001 And Iteration < 20
nTCO2EOS = q1 - (Delta_nTCO2EOS + t9) / 2
nTH2sEOS = q2 - (Delta_nTH2SEOS + t10) / 2
total_moles_Temp = Total_moles_before_precipitation - (Delta_nTCO2EOS + t9) / 2 - (Delta_nTH2SEOS + t10) / 2 - ppt * s1 * beta(3) * total_moles_Temp
Delta_nTCO2EOS = (Delta_nTCO2EOS + t9) / 2: Delta_nTH2SEOS = (Delta_nTH2SEOS + t10) / 2
zTemp(1) = z_before_precipitation(1) * Total_moles_before_precipitation / total_moles_Temp
zTemp(2) = nTCO2EOS / total_moles_Temp
zTemp(3) = nTH2sEOS / total_moles_Temp
    For iz = 4 To 15
    zTemp(iz) = z_before_precipitation(iz) * Total_moles_before_precipitation / total_moles_Temp
Next iz
If RunH2SGUI <> 1 Then
    Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
Else
 Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
                TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
End If
    s1 = 0.01801528 * compositions(15, 4) 'Unit Kg/ per mole of phase 3
    CO2aq = compositions(2, 4) / s1
    H2Saq = compositions(3, 4) / s1
    HCO3 = (K1H2CO3 * aH2O) * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
    CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
    HS = K1H2S * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
    S = K2HS * HS * gAn(iHS) * gNAn(iHS) / (aH * gAn(iSion) * gNAn(iSion))
t9 = (HCO3 + CO3) * s1 * beta(3) * total_moles_Temp
t10 = (HS + S) * s1 * beta(3) * total_moles_Temp
If t9 > q1 Then t9 = q1 * (1 - 1 / (1 + t3 + t4))
If t10 > q2 Then t10 = q2 * (1 - 1 / (1 + t7 + t8))
Iteration = Iteration + 1
Wend
End If
If t10 > 0 Then
'While Abs(Delta_nTH2SEOS - t10) / q2 > 0.0001 And Iteration < 20
While Abs(1 - Delta_nTH2SEOS / t10) > 0.001 And Iteration < 20
nTCO2EOS = q1 - (Delta_nTCO2EOS + t9) / 2
nTH2sEOS = q2 - (Delta_nTH2SEOS + t10) / 2
total_moles_Temp = Total_moles_before_precipitation - (Delta_nTCO2EOS + t9) / 2 - (Delta_nTH2SEOS + t10) / 2 - ppt * s1 * beta(3) * total_moles_Temp
'Delta_nTCO2EOS = t9: Delta_nTH2SEOS = t10
Delta_nTCO2EOS = (Delta_nTCO2EOS + t9) / 2: Delta_nTH2SEOS = (Delta_nTH2SEOS + t10) / 2
zTemp(1) = z_before_precipitation(1) * Total_moles_before_precipitation / total_moles_Temp
zTemp(2) = nTCO2EOS / total_moles_Temp
zTemp(3) = nTH2sEOS / total_moles_Temp
    For iz = 4 To 15
    zTemp(iz) = z_before_precipitation(iz) * Total_moles_before_precipitation / total_moles_Temp
Next iz
If RunH2SGUI <> 1 Then
    Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
Else
   Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
                TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
End If
    s1 = 0.01801528 * compositions(15, 4) 'Unit Kg/ per mole of phase 3
    CO2aq = compositions(2, 4) / s1
    H2Saq = compositions(3, 4) / s1
    HCO3 = (K1H2CO3 * aH2O) * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
    CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
    HS = K1H2S * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
    S = K2HS * HS * gAn(iHS) * gNAn(iHS) / (aH * gAn(iSion) * gNAn(iSion))
t9 = (HCO3 + CO3) * s1 * beta(3) * total_moles_Temp
t10 = (HS + S) * s1 * beta(3) * total_moles_Temp
If t9 > q1 Then
t9 = q1 * (1 - 1 / (1 + t3 + t4))
End If
If t10 > q2 Then
t10 = q2 * (1 - 1 / (1 + t7 + t8))
End If
Iteration = Iteration + 1
Wend
End If
TCO2 = Delta_nTCO2EOS / (s1 * beta(3) * total_moles_Temp) + CO2aq
If TCO2 * (s1 * beta(3) * total_moles_Temp) > q1 Then
TCO2 = q1 / (s1 * beta(3) * total_moles_Temp)
End If
TH2Saq = Delta_nTH2SEOS / (s1 * beta(3) * total_moles_Temp) + H2Saq
If TH2Saq * (s1 * beta(3) * total_moles_Temp) > q2 Then
TH2Saq = q2 / (s1 * beta(3) * total_moles_Temp)
End If
      aH = 10 ^ (-pH)
      OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
      HCO3 = TCO2 / (aH / (K1H2CO3 * aH2O) / gNeut(iCO2aq) / gNNeut(iCO2aq) * gAn(iHCO3) * gNAn(iHCO3) + 1 + K2HCO3 / aH / gAn(iCO3) / gNAn(iCO3) * gAn(iHCO3) * gNAn(iHCO3))
      CO2aq = aH * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / ((K1H2CO3 * aH2O) * gNeut(iCO2aq) * gNNeut(iCO2aq))
      CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
      hydHS = aH * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq)) + 1 + (K2HS * gAn(iHS) * gNAn(iHS)) / (aH * gAn(iSion) * gNAn(iSion))
      HS = TH2Saq / hydHS
      'If TH2Saq > 0 Then mt = fFeSSpeciation
      If TH2Saq > 0 Then mt = fMeSSpeciation(im, igas)  'output mc(iFe),mc(iZn), mc(iPb), HS
      H2Saq = aH * HS * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq))
      S = K2HS * HS * gAn(iHS) * gNAn(iHS) / (aH * gAn(iSion) * gNAn(iSion))
    mn(iFeSaq) = KstFeSaq * mc(iFe) * HS * gAn(iHS) * gNAn(iHS) * gCat(iFe) * gNCat(iFe) / (gNeut(iFeSaq) * gNNeut(iFeSaq) * aH)
mt = fEOS_Speciation
End Function

Sub C5_CalcpHPCO2PH2SSTP()
'This subroutine is only used in the ReadInAll data.  This subroutine
'  must be used first to calulate the STP solution pH or the STP yCO2 or yH2S that is needed to calculate the nTCO2, etc.
'  before the routine calulations of speciation, etc., can begin.
'***** Note that useEOS is always equal to zero when running ReadInDataC so the species will be calculated.
'***** The pH and species will not be recalculated in ReadInDataD if useEOS<>0

'  1.  Use P-CO2 measured at STP along with Alkalinity and either P-H2S or TH2Saq to calculate pH-stp.
If use_pH = 0 And UseH2Sgas = 0 And useEOS = 0 Then    'Then, yCO2 must be specified.  Need to calculate the pH and yH2Sstp.
    pHHigh = 14: pHLow = 0  'Half-interval search root finder works very well for pH equations.
    For k = 1 To 30
        pH = (pHHigh + pHLow) / 2
        aH = 10 ^ (-pH)
        H = aH / (gCat(iH) * gNCat(iH))
        OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
        CO2aq = KgwCO2 * Ppsia * yCO2 * gGas(iCO2g) / (gNeut(iCO2aq) * gNNeut(iCO2aq))
        HCO3 = (K1H2CO3 * aH2O) * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
        CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
        hydHS = aH * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq)) + 1 + (K2HS * gAn(iHS) * gNAn(iHS)) / (aH * gAn(iSion) * gNAn(iSion))
        HS = TH2Saq / hydHS
        'If TH2Saq > 0 Then mt = fFeSSpeciation
        If TH2Saq > 0 Then mt = fMeSSpeciation(2, 2)
        H2Saq = aH * HS * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq))
        S = K2HS * HS * gAn(iHS) * gNAn(iHS) / (aH * gAn(iSion) * gNAn(iSion))
        yH2S = H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (KgwH2S * Ppsia * gGas(iH2Sg))
        hydAc = aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1 'Note gNNeut(iHACaq)=1
        AC = TAc / hydAc
        HAcaq = TAc - AC
        hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
        H2BO3 = TH3BO3 / hydH2BO3
        hydNH3 = aH * gNeut(iNH3) * gNNeut(iNH3) / (KNH4 * gCat(iNH4) * gNCat(iNH4)) + 1
        NH3 = TNH4 / hydNH3
        hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
              aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
        H2SiO4 = TH4SiO4 / hydH2SiO4
        H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
        H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
        faH = Alk - (HCO3 + 2 * CO3 + HS + 2 * S + AC + NH3 + H2BO3 + H3SiO4 + 2 * H2SiO4 + OH - H)
        If faH > 0 Then pHLow = pH
        If faH < 0 Then pHHigh = pH
    Next k
    pHMeterReading = pH - DpHj
    mn(iFeSaq) = KstFeSaq * mc(iFe) * HS * gAn(iHS) * gNAn(iHS) * gCat(iFe) * gNCat(iFe) / (gNeut(iFeSaq) * gNNeut(iFeSaq) * aH)
    If yH2S > 1 Then
    errmsg(3) = 3
    yH2S = 1
    End If
End If

If use_pH = 0 And UseH2Sgas = 1 And useEOS = 0 Then 'Use the values of yH2Sg, yCO2g, TAc, and Alk to calculate the pH value at STP.
    pHHigh = 14: pHLow = 0                  'Half-interval search root finder works very well for pH equations.
    For k = 1 To 30  'This permits covergence of to pH to 8-significant figures; sometime needed if precipitation is only a small fraction of Alkalinity.
        pH = (pHHigh + pHLow) / 2
        aH = 10 ^ (-pH)
        H = aH / (gCat(iH) * gNCat(iH))
        OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
        CO2aq = KgwCO2 * Ppsia * yCO2 * gGas(iCO2g) / (gNeut(iCO2aq) * gNNeut(iCO2aq))
        HCO3 = (K1H2CO3 * aH2O) * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
        CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
        H2Saq = KgwH2S * Ppsia * yH2S * gGas(iH2Sg) / (gNeut(iH2Saq) * gNNeut(iH2Saq))
        HS = K1H2S * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
        S = K2HS * HS * gAn(iHS) * gNAn(iHS) / (aH * gAn(iSion) * gNAn(iSion))
        hydAc = aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1
        AC = TAc / hydAc
        HAcaq = TAc - AC
        hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
        H2BO3 = TH3BO3 / hydH2BO3
        hydNH3 = aH * gNeut(iNH3) * gNNeut(iNH3) / (KNH4 * gCat(iNH4) * gNCat(iNH4)) + 1
        NH3 = TNH4 / hydNH3
        hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
              aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
        H2SiO4 = TH4SiO4 / hydH2SiO4
        H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
        H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
        faH = Alk - (HCO3 + 2 * CO3 + HS + 2 * S + AC + NH3 + H2BO3 + H3SiO4 + 2 * H2SiO4 + OH - H)
        If faH > 0 Then pHLow = pH
        If faH < 0 Then pHHigh = pH
    Next k
    pHMeterReading = pH - DpHj
    mc(iFe) = TFe / (1 + KstFeSaq * HS * gAn(iHS) * gNAn(iHS) * gCat(iFe) * gNCat(iFe) / (gNeut(iFeSaq) * gNNeut(iFeSaq) * aH))
    mn(iFeSaq) = KstFeSaq * mc(iFe) * HS * gAn(iHS) * gNAn(iHS) * gCat(iFe) * gNCat(iFe) / (gNeut(iFeSaq) * gNNeut(iFeSaq) * aH)
End If

'  2. Use measured pH along with Alkalinity and either P-H2S or TH2Ssq to calculate P-C02.
    If use_pH = 1 Then                             'Use the pH measured at STP.
        aH = 10 ^ (-pH)
        If UseH2Sgas = 0 Then  'Calculate yH2Sstp from TH2Saq and pH.  If TH2Saq is given, use it, otherwise use PH2S.
            hydHS = aH * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq)) + 1 + (K2HS * gAn(iHS) * gNAn(iHS)) / (aH * gAn(iSion) * gNAn(iSion))
            HS = TH2Saq / hydHS
            'If TH2Saq > 0 Then mt = fFeSSpeciation 'output  mc(iFe), HS
            If TH2Saq > 0 Then mt = fMeSSpeciation(2, 2) 'output  mc(iFe), HS
            H2Saq = aH * HS * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq))
            S = K2HS * HS * gAn(iHS) * gNAn(iHS) / (aH * gAn(iSion) * gNAn(iSion))
            yH2S = H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (KgwH2S * Ppsia * gGas(iH2Sg))
            If yH2S > 1 Then
            errmsg(3) = 3
            yH2S = 1
            End If
        Else                                  'Calculate the P-H2S, or yH2S, from pH and TH2Saq.
            H2Saq = KgwH2S * Ppsia * yH2S * gGas(iH2Sg) / gNeut(iH2Saq) / gNNeut(iH2Saq)
            HS = K1H2S * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
            S = K2HS * HS * gAn(iHS) * gNAn(iHS) / (aH * gAn(iSion) * gNAn(iSion))
            mc(iFe) = TFe / (1 + KstFeSaq * HS * gAn(iHS) * gNAn(iHS) * gCat(iFe) * gNCat(iFe) / (gNeut(iFeSaq) * gNNeut(iFeSaq) * aH))
            TH2Saq = H2Saq + HS + 2 * S + KstFeSaq * mc(iFe) * HS * gAn(iHS) * gNAn(iHS) * gCat(iFe) * gNCat(iFe) / (gNeut(iFeSaq) * gNNeut(iFeSaq) * aH)
        End If
        If TH2Saq = 0 And yH2S = 0 Then
            H2Saq = 0: HS = 0: TH2Saq = 0: yH2S = 0:
        End If
'Next, calculate the yCO2 from pH, TAc, and HS.
      H = aH / gCat(iH) / gNCat(iH)
      OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
      AC = TAc / (aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1) 'Note gNNeut(iHACaq)=1
      HAcaq = TAc - AC
      hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
      H2BO3 = TH3BO3 / hydH2BO3
      hydNH3 = aH * gNeut(iNH3) * gNNeut(iNH3) / (KNH4 * gCat(iNH4) * gNCat(iNH4)) + 1
      NH3 = TNH4 / hydNH3
      hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
              aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
      H2SiO4 = TH4SiO4 / hydH2SiO4
      H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
      H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
      tHCO3 = (K1H2CO3 * aH2O) * KgwCO2 * Ppsia * gGas(iCO2g) / (aH * gAn(iHCO3) * gNAn(iHCO3))
      tCO3 = (K1H2CO3 * aH2O) * K2HCO3 * KgwCO2 * Ppsia * gGas(iCO2g) / (aH ^ 2 * gAn(iCO3) * gNAn(iCO3))
      yCO2 = (Alk + H - AC - HS - OH - NH3 - H2BO3 - H3SiO4 - 2 * H2SiO4) / (tHCO3 + 2 * tCO3)
      HCO3 = (K1H2CO3 * aH2O) * KgwCO2 * Ppsia * yCO2 * gGas(iCO2g) / (aH * gAn(iHCO3) * gNAn(iHCO3))
      CO3 = (K1H2CO3 * aH2O) * K2HCO3 * KgwCO2 * Ppsia * yCO2 * gGas(iCO2g) / (aH ^ 2 * gAn(iCO3) * gNAn(iCO3))
      CO2aq = KgwCO2 * Ppsia * yCO2 * gGas(iCO2g) / gNeut(iCO2aq) / gNNeut(iCO2aq)
      mn(iFeSaq) = KstFeSaq * mc(iFe) * HS * gAn(iHS) * gNAn(iHS) * gCat(iFe) * gNCat(iFe) / (gNeut(iFeSaq) * gNNeut(iFeSaq) * aH)
     If yCO2 > 1 Then
        errmsg(1) = 1
        yCO2 = 1: yCO2 = 1
      End If
      If yCO2 < 0 Then
      errmsg(2) = 2
          yCO2 = 0: HCO3 = 0: CO3 = 0: CO2aq = 0 'Caps %CO2 at 0
      End If
 End If

'  3. Use measured pH along with YCO2 and either P-H2S or TH2Ssq to calculate Alkalinity.
If use_pH = 2 And useEOS = 0 Then 'Use the pH measured at STP.
        aH = 10 ^ (-pH)
If UseH2Sgas = 0 Then 'Calculate yH2Sstp from TH2Saq and pH.  If TH2Saq is given, use it, otherwise use PH2S.
    hydHS = aH * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq)) + 1 + (K2HS * gAn(iHS) * gNAn(iHS)) / (aH * gAn(iSion) * gNAn(iSion))
    HS = TH2Saq / hydHS
    'If TH2Saq > 0 Then mt = fFeSSpeciation 'output mc(iFe), HS
    If TH2Saq > 0 Then mt = fMeSSpeciation(2, 2) 'output mc(iFe), mc(iZn), mc(iPb),HS
    H2Saq = aH * HS * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq))
    S = K2HS * HS * gAn(iHS) * gNAn(iHS) / (aH * gAn(iSion) * gNAn(iSion))
    yH2S = H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (KgwH2S * Ppsia * gGas(iH2Sg))
    If yH2S > 1 Then
    errmsg(3) = 3
     yH2S = 1
    End If
Else                                  'Calculate the P-H2S, or yH2S, from pH and TH2Saq.
    H2Saq = KgwH2S * Ppsia * yH2S * gGas(iH2Sg) / gNeut(iH2Saq) / gNNeut(iH2Saq)
    HS = K1H2S * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
    S = K2HS * HS * gAn(iHS) * gNAn(iHS) / (aH * gAn(iSion) * gNAn(iSion))
    mc(iFe) = TFe / (1 + KstFeSaq * HS * gAn(iHS) * gNAn(iHS) * gCat(iFe) * gNCat(iFe) / (gNeut(iFeSaq) * gNNeut(iFeSaq) * aH))
    TH2Saq = H2Saq + HS + S + KstFeSaq * mc(iFe) * HS * gAn(iHS) * gNAn(iHS) * gCat(iFe) * gNCat(iFe) / (gNeut(iFeSaq) * gNNeut(iFeSaq) * aH)
End If
    If TH2Saq = 0 And yH2S = 0 Then
    H2Saq = 0: HS = 0: TH2Saq = 0: yH2S = 0: TH2SaqMix(i) = 0: yH2SMix(i) = 0
    End If
    hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
      aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
    H2SiO4 = TH4SiO4 / hydH2SiO4
    H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
    H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
    'Next, calculate the yCO2stp from pH, TAc, and HS.
    H = aH / gCat(iH) / gNCat(iH)
    OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
    AC = TAc / (aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1) 'Note gNNeut(iHACaq)=1
    HAcaq = TAc - AC
    hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
    H2BO3 = TH3BO3 / hydH2BO3
    hydNH3 = aH * gNeut(iNH3) * gNNeut(iNH3) / (KNH4 * gCat(iNH4) * gNCat(iNH4)) + 1
    NH3 = TNH4 / hydNH3
    HCO3 = (K1H2CO3 * aH2O) * KgwCO2 * Ppsia * yCO2 * gGas(iCO2g) / (aH * gAn(iHCO3) * gNAn(iHCO3))
    CO3 = (K1H2CO3 * aH2O) * K2HCO3 * KgwCO2 * Ppsia * yCO2 * gGas(iCO2g) / (aH ^ 2 * gAn(iCO3) * gNAn(iCO3))
    Alk = HCO3 + 2 * CO3 + AC + NH3 + H2BO3 + HS + H3SiO4 + 2 * H2SiO4 + OH - H
    CO2aq = KgwCO2 * Ppsia * yCO2 * gGas(iCO2g) / gNeut(iCO2aq) / gNNeut(iCO2aq)
    mn(iFeSaq) = KstFeSaq * mc(iFe) * HS * gAn(iHS) * gNAn(iHS) * gCat(iFe) * gNCat(iFe) / (gNeut(iFeSaq) * gNNeut(iFeSaq) * aH)
End If
'4. Use TCO2 closed system alone with Alkality to calculate pH
If use_pH = 3 And UseH2Sgas = 0 And useEOS = 0 Then       'Then, yCO2stp must be specified.  Need to calculate the pH and yH2Sstp.
    pHHigh = 14: pHLow = 0  'Half-interval search root finder works very well for pH equations.
    For k = 1 To 30
        pH = (pHHigh + pHLow) / 2
        aH = 10 ^ (-pH)
        H = aH / (gCat(iH) * gNCat(iH))
        OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
        HCO3 = TCO2 / (aH / (K1H2CO3 * aH2O) / gNeut(iCO2aq) / gNNeut(iCO2aq) * gAn(iHCO3) * gNAn(iHCO3) + 1 + K2HCO3 / aH / gAn(iCO3) / gNAn(iCO3) * gAn(iHCO3) * gNAn(iHCO3))
        CO2aq = aH * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / ((K1H2CO3 * aH2O) * gNeut(iCO2aq) * gNNeut(iCO2aq))
        CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
        yCO2 = CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (KgwCO2 * Ppsia * gGas(iCO2g))
        hydHS = aH * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq)) + 1 + (K2HS * gAn(iHS) * gNAn(iHS)) / (aH * gAn(iSion) * gNAn(iSion))
        HS = TH2Saq / hydHS
        'If TH2Saq > 0 Then mt = fFeSSpeciation 'output mc(iFe), HS
        If TH2Saq > 0 Then mt = fMeSSpeciation(2, 2) 'output mc(iFe),mc(iZn), mc(iPb), HS
        H2Saq = aH * HS * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq))
        S = K2HS * HS * gAn(iHS) * gNAn(iHS) / (aH * gAn(iSion) * gNAn(iSion))
        yH2S = H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (KgwH2S * Ppsia * gGas(iH2Sg))
        hydAc = aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1 'Note gNNeut(iHACaq)=1
        AC = TAc / hydAc
        HAcaq = TAc - AC
        hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
        H2BO3 = TH3BO3 / hydH2BO3
        hydNH3 = aH * gNeut(iNH3) * gNNeut(iNH3) / (KNH4 * gCat(iNH4) * gNCat(iNH4)) + 1
        NH3 = TNH4 / hydNH3
        hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
              aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
        H2SiO4 = TH4SiO4 / hydH2SiO4
        H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
        H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
        faH = Alk - (HCO3 + 2 * CO3 + HS + 2 * S + AC + NH3 + H2BO3 + H3SiO4 + 2 * H2SiO4 + OH - H)
        If faH > 0 Then pHLow = pH
        If faH < 0 Then pHHigh = pH
    Next k
    pHMeterReading = pH - DpHj
    mn(iFeSaq) = KstFeSaq * mc(iFe) * HS * gAn(iHS) * gNAn(iHS) * gCat(iFe) * gNCat(iFe) / (gNeut(iFeSaq) * gNNeut(iFeSaq) * aH)
    If yH2S > 1 Then
    errmsg(3) = 3
    yH2S = 1
    End If
End If

If use_pH = 3 And UseH2Sgas = 1 And useEOS = 0 Then 'Use the values of yH2Sg, yCO2g, TAc, and Alk to calculate the pH value at STP.
    pHHigh = 14: pHLow = 0                  'Half-interval search root finder works very well for pH equations.
    For k = 1 To 30  'This permits covergence of to pH to 8-significant figures; sometime needed if precipitation is only a small fraction of Alkalinity.
        pH = (pHHigh + pHLow) / 2
        aH = 10 ^ (-pH)
        H = aH / (gCat(iH) * gNCat(iH))
        OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
        HCO3 = TCO2 / (aH / (K1H2CO3 * aH2O) / gNeut(iCO2aq) / gNNeut(iCO2aq) * gAn(iHCO3) * gNAn(iHCO3) + 1 + K2HCO3 / aH / gAn(iCO3) / gNAn(iCO3) * gAn(iHCO3) * gNAn(iHCO3))
        CO2aq = aH * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / ((K1H2CO3 * aH2O) * gNeut(iCO2aq) * gNNeut(iCO2aq))
        CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
        H2Saq = KgwH2S * Ppsia * yH2S * gGas(iH2Sg) / (gNeut(iH2Saq) * gNNeut(iH2Saq))
        HS = K1H2S * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
        S = K2HS * HS * gAn(iHS) * gNAn(iHS) / (aH * gAn(iSion) * gNAn(iSion))
        hydAc = aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1
        AC = TAc / hydAc
        HAcaq = TAc - AC
        hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
        H2BO3 = TH3BO3 / hydH2BO3
        hydNH3 = aH * gNeut(iNH3) * gNNeut(iNH3) / (KNH4 * gCat(iNH4) * gNCat(iNH4)) + 1
        NH3 = TNH4 / hydNH3
        hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
              aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
        H2SiO4 = TH4SiO4 / hydH2SiO4
        H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
        H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
        faH = Alk - (HCO3 + 2 * CO3 + HS + 2 * S + AC + NH3 + H2BO3 + H3SiO4 + 2 * H2SiO4 + OH - H)
        If faH > 0 Then pHLow = pH
        If faH < 0 Then pHHigh = pH
    Next k
    yCO2 = CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (KgwCO2 * Ppsia * gGas(iCO2g))
    mc(iFe) = TFe / (1 + KstFeSaq * HS * gAn(iHS) * gNAn(iHS) * gCat(iFe) * gNCat(iFe) / (gNeut(iFeSaq) * gNNeut(iFeSaq) * aH))
    mn(iFeSaq) = KstFeSaq * mc(iFe) * HS * gAn(iHS) * gNAn(iHS) * gCat(iFe) * gNCat(iFe) / (gNeut(iFeSaq) * gNNeut(iFeSaq) * aH)
    pHMeterReading = pH - DpHj
End If
End Sub


Sub D1_CalcDensity(i)
'************************************
        HCO3stpMix(i) = AlkMix(i): ACstpMix(i) = TAcMix(i): HstpMix(i) = 0.000001: OHstpMix(i) = 0.0000001: CO3stpMix(i) = 0: _
        HSstpMix(i) = 0: NH4STPMix(i) = TNH4Mix(i): H2BO3stpMix(i) = 0
        Iteration2 = 0
        mc(iH) = HstpMix(i): mc(iNa) = NaMix(i): mc(iK) = KMix(i): mc(iMg) = MgMix(i): mc(iCa) = CaMix(i): TCa = mc(iCa)
        mc(iSr) = SrMix(i): mc(iBa) = BaMix(i): mc(iFe) = FeMix(i): mc(iZn) = ZnMix(i): mc(iPb) = PbMix(i)
        ma(iOH) = OHstpMix(i): ma(iCl) = ClMix(i): ma(iAc) = ACstpMix(i): mc(iNH4) = NH4STPMix(i): ma(iH2BO3) = H2BO3stpMix(i)
        ma(iHCO3) = HCO3stpMix(i): ma(iCO3) = CO3stpMix(i)
        ma(iH3SiO4) = 0: ma(iH2SiO4) = 0
        ma(iSO4) = SO4Mix(i): ma(iHS) = HSstpMix(i): ma(intF) = FMix(i): ma(iBr) = BrMix(i)
        Alk = AlkMix(i): TAc = TAcMix(i): TH2Saq = TH2SaqMix(i): TH4SiO4 = TH4SiO4Mix(i): TH3BO3 = TH3BO3Mix(i): TNH4 = TNH4Mix(i)
        mn(iNH3) = 0: mn(iH3BO3) = TH3BO3:
        mn(iH4SiO4aq) = TH4SiO4: TFe = mc(iFe)
'        If use_pH = 3 Then TCO2 = TCO2Mix(i)
        TDSOld = TDSMix(i):  rhoOld = rho_Mix(i): TDS = TDSMix(i): TDSSSE = 1:
'        yCO2 = yCO2Mix(i): yH2S = yH2SMix(i): yCH4 = 1 - yCO2 - yH2S
If UseMolal = 0 Then
    While TDSSSE > 0.00000001 And Iteration2 < 20
        Call D2_CalcDensitypH(i) 'Calculate ISt, density, and HCO3, AC, HS speciation from TDS
            TDS = 0: CalculateTDSDen = 0 'Calculate TDS from density
        For iden = 2 To NumCat
            TDS = TDS + 1000 * rho25c * mc(iden) * MWCat(iden)                  '=Sum of mg salt/L*(Kg soln/Kg H2O)
            CalculateTDSDen = CalculateTDSDen + 0.001 * mc(iden) * MWCat(iden)   '=Sum of Kg salt/Kg H2O
        Next iden
        For iden = 2 To NumAn
            TDS = TDS + 1000 * rho25c * ma(iden) * MWAn(iden)
            CalculateTDSDen = CalculateTDSDen + 0.001 * ma(iden) * MWAn(iden)
        Next iden
        For iden = 2 To NumNeut
            TDS = TDS + 1000 * rho25c * mn(iden) * MWNeut(iden)
            CalculateTDSDen = CalculateTDSDen + 0.001 * mn(iden) * MWNeut(iden)
        Next iden
            TDS = TDS / (1 + CalculateTDSDen)                               'denometer=(1+Kgsalt/KgH2O)=(Kgsoln/KgH2O)
        For iden = 2 To NumCat 'Calculate molality from new TDS
            mc(iden) = mc(iden) * (rho25c - TDSOld / 1000000#) / (rho25c - TDS / 1000000#)
        Next iden
        For iden = 2 To NumAn
            ma(iden) = ma(iden) * (rho25c - TDSOld / 1000000#) / (rho25c - TDS / 1000000#)
        Next iden
        For iden = 2 To NumNeut
            mn(iden) = mn(iden) * (rho25c - TDSOld / 1000000#) / (rho25c - TDS / 1000000#)
        Next iden
            Alk = Alk * (rho25c - TDSOld / 1000000#) / (rho25c - TDS / 1000000#)
            TAc = TAc * (rho25c - TDSOld / 1000000#) / (rho25c - TDS / 1000000#)
            TCO2 = TCO2 * (rho25c - TDSOld / 1000000#) / (rho25c - TDS / 1000000#)
            TNH4 = TNH4 * (rho25c - TDSOld / 1000000#) / (rho25c - TDS / 1000000#)
            TH3BO3 = TH3BO3 * (rho25c - TDSOld / 1000000#) / (rho25c - TDS / 1000000#)
            TH2Saq = TH2Saq * (rho25c - TDSOld / 1000000#) / (rho25c - TDS / 1000000#)
            TH4SiO4 = TH4SiO4 * (rho25c - TDSOld / 1000000#) / (rho25c - TDS / 1000000#)
            TFe = TFe * (rho25c - TDSOld / 1000000#) / (rho25c - TDS / 1000000#)
        Call D2_CalcDensitypH(i) 'Calculate ISt, density, and HCO3, AC, HS speciation from TDS
        If TDSOld = 0 Then GoTo 10
            TDSSSE = (TDS / TDSOld - 1) ^ 2
            TDSOld = TDS
            Iteration2 = Iteration2 + 1
    Wend
 Else
        Call CalcIonicStrength
        xMeOH = 0: xMEG = 0: IStCosolvent = Ist
        mt = fTPFunc(0) 'iTP=0 T=77F, P=14.696 psi: iTP=1 T=TVol, P=Pvol;iTP=2 T=TpH, P=PpH
        'rho25c = CalcRho
         rho25c = CalcRhoTP(TK, TC, PBar, Patm) 'Function subroutine
        pH = pHMeterStpMix(i) + DpHj
''amy check ????????????????????????????????????????????????????
'        If use_pH = 0 Then mt = fTPFunc(0) 'Option0 77F, 14.696 psi: Option1 T=TVol, P=Pvol; Option2 T=TpH, P=PpH
'        If use_pH = 1 Then mt = fTPFunc(2) 'Option0 77F, 14.696 psi: Option1 T=TVol, P=Pvol; Option2 T=TpH, P=PpH
'        If use_pH = 2 Or use_pH = 3 Then mt = fTPFunc(0) 'Option0 77F, 14.696 psi: Option1 T=TVol, P=Pvol; Option2 T=TpH, P=PpH
        Call C1_ThermodynamicEquilConsts
        Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
        Call PengRobinson3
        Call C5_CalcpHPCO2PH2SSTP
        mc(iH) = H: ma(iOH) = OH: ma(iAc) = AC: mn(iNH3) = NH3: ma(iH2BO3) = H2BO3: ma(iHCO3) = HCO3: ma(iCO3) = CO3: ma(iHS) = HS
        ma(iH3SiO4) = H3SiO4: ma(iH2SiO4) = H2SiO4: mn(iH4SiO4aq) = H4SiO4: mn(iNH3) = NH3: mn(iH3BO3) = TH3BO3 - H2BO3
        mn(iCO2aq) = CO2aq: mn(iH2Saq) = H2Saq: mn(iHAcaq) = HAcaq
        If useEOSmix(kk) = 1 Then
        mc(iH) = 0.0000001: ma(iOH) = 0.0000001: ma(iAc) = TAc: ma(iHCO3) = Alk: ma(iHS) = 0: mn(iH4SiO4aq) = TH4SiO4: mn(iH3BO3) = TH3BO3: mc(iNH4) = TNH4
        End If
        mt = fTPFunc(0) 'iTP=0 T=77F, P=14.696 psi: iTP=1 T=TVol, P=Pvol;iTP=2 T=TpH, P=PpH
        Call CalcIonicStrength
        'rho25c = CalcRho
        rho25c = CalcRhoTP(TK, TC, PBar, Patm)
'        If yCO2 + yH2S <= 1 Then  ' UseTPpH is chosen, the gas composition is calculated at T,P of pH
'        yCH4 = 1 - (yCO2 + yH2S)
'        Else
'        yCH4 = 0
'        End If

 End If
 
10 End Sub
 
Sub D2_CalcDensitypH(i)

    Call CalcIonicStrength 'before CO2, H2S, FeSaq speciation
    pH = pHMeterStpMix(i) + DpHj
    If Ist >= 25 Then
    MsgBox "The calculated ionic strength is " & Ist & ".  This is greater than 20 m (moles of salt/kg of water), the upper limit.  The calculation will be terminated.  It is suggested that you check the input, conc unit, and retry the calculation."
    End
    End If
    Iteration = 0: rhoSSE = 1
        While rhoSSE > 0.00000001 And Iteration < 30
            mt = fTPFunc(0) 'iTP=0 T=77F, P=14.696 psi: iTP=1 T=TVol, P=Pvol;iTP=2 T=TpH, P=PpH
            'rho25c = CalcRho  'Call a function subroutine CalcRho.
            rho25c = CalcRhoTP(TK, TC, PBar, Patm)
            For iden = 1 To NumCat
            mc(iden) = mc(iden) * (rhoOld - TDS / 1000000#) / (rho25c - TDS / 1000000#)
            Next iden
            For iden = 1 To NumAn
            ma(iden) = ma(iden) * (rhoOld - TDS / 1000000#) / (rho25c - TDS / 1000000#)
            Next iden
            For iden = 1 To NumNeut
            mn(iden) = mn(iden) * (rhoOld - TDS / 1000000#) / (rho25c - TDS / 1000000#)
            Next iden
            Alk = Alk * (rhoOld - TDS / 1000000#) / (rho25c - TDS / 1000000#)
            TAc = TAc * (rhoOld - TDS / 1000000#) / (rho25c - TDS / 1000000#)
            TCO2 = TCO2 * (rhoOld - TDS / 1000000#) / (rho25c - TDS / 1000000#)
            TNH4 = TNH4 * (rhoOld - TDS / 1000000#) / (rho25c - TDS / 1000000#)
            TH3BO3 = TH3BO3 * (rhoOld - TDS / 1000000#) / (rho25c - TDS / 1000000#)
            TH2Saq = TH2Saq * (rhoOld - TDS / 1000000#) / (rho25c - TDS / 1000000#)
            TH4SiO4 = TH4SiO4 * (rhoOld - TDS / 1000000#) / (rho25c - TDS / 1000000#)
            TFe = TFe * (rhoOld - TDS / 1000000#) / (rho25c - TDS / 1000000#)
            rhoSSE = (rho25c - rhoOld) ^ 2
            rhoOld = rho25c
            Iteration = Iteration + 1
        Wend
    xMeOH = 0: xMEG = 0: IStCosolvent = Ist
    Call CalcIonicStrength 'before CO2, H2S, FeSaq speciation
    pH = pHMeterStpMix(i) + DpHj
'    If use_pH = 0 Then mt = fTPFunc(0) 'Option0 77F, 14.696 psi: Option1 T=TVol, P=Pvol; Option2 T=TpH, P=PpH
'    If use_pH = 1 Then mt = fTPFunc(2) 'Option0 77F, 14.696 psi: Option1 T=TVol, P=Pvol; Option2 T=TpH, P=PpH
'    If use_pH = 2 Or use_pH = 3 Then mt = fTPFunc(0) 'Option0 77F, 14.696 psi: Option1 T=TVol, P=Pvol; Option2 T=TpH, P=PpH
    Call C1_ThermodynamicEquilConsts
    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
    Call PengRobinson3
    Call C5_CalcpHPCO2PH2SSTP 'CO2, H2S, FeSaq speciation
    mc(iH) = H: ma(iOH) = OH: ma(iAc) = AC: mn(iNH3) = NH3: ma(iH2BO3) = H2BO3: ma(iHCO3) = HCO3: ma(iCO3) = CO3: ma(iHS) = HS
    ma(iH3SiO4) = H3SiO4: ma(iH2SiO4) = H2SiO4: mn(iH4SiO4aq) = H4SiO4: mn(iNH3) = NH3: mn(iH3BO3) = TH3BO3 - H2BO3
    mn(iCO2aq) = CO2aq: mn(iH2Saq) = H2Saq: mn(iHAcaq) = HAcaq
    If useEOSmix(kk) = 1 Then
    mc(iH) = 0.0000001: ma(iOH) = 0.0000001: ma(iAc) = TAc: ma(iHCO3) = Alk: ma(iHS) = TH2Saq: mn(iH4SiO4aq) = TH4SiO4: mn(iH3BO3) = TH3BO3: mc(iNH4) = TNH4
    mn(iNH3) = 0: ma(iH2BO3) = 0:  ma(iCO3) = 0: ma(iH3SiO4) = 0: ma(iH2SiO4) = 0:  mn(iH3BO3) = 0: mn(iCO2aq) = 0: mn(iH2Saq) = 0: mn(iHAcaq) = 0
    End If
'If yCO2 + yH2S <= 1 Then  ' UseTPpH is chosen, the gas composition is calculated at T,P of pH
'    yCH4 = 1 - (yCO2 + yH2S)
'    Else
'    yCH4 = 0
'    End If
End Sub
Function CalcRhoTP(TK, TC, PBar, Patm)         'make calcRho for all T, P
' Calculate excess molar volume changes due to pressure, calculate derivative of activity coeff due to pressure 1 atm to 1001 atm
'Calculate at the set TK value.  If not STP condition (Patm<>1) then calculate excess properties at delta pressure=1e-6 bar
Call C2_Pitzer2019
AphiP = fAphicalc
       X14 = 1.4 * Ist ^ 0.5                           'For 2:(-2) pairs or ions
    gX14 = 2 * (1 - (1 + X14) * Exp(-X14)) / X14 ^ 2
    gpX14 = -2 * (1 - (1 + X14 + 0.5 * X14 ^ 2) * Exp(-X14)) / X14 ^ 2
        X20 = 2 * Ist ^ 0.5                             'For 1:(-2), (-1):2, or 1:(-1) pairs
    gX20 = 2 * (1 - (1 + X20) * Exp(-X20)) / X20 ^ 2
    gpX20 = -2 * (1 - (1 + X20 + 0.5 * X20 ^ 2) * Exp(-X20)) / X20 ^ 2
        X12 = 12 * Ist ^ 0.5
    gX12 = 2 * (1 - (1 + X12) * Exp(-X12)) / X12 ^ 2
    gpX12 = -2 * (1 - (1 + X12 + 0.5 * X12 ^ 2) * Exp(-X12)) / X12 ^ 2
mt = fBtermcalc
For m = 1 To NumCat
For a = 1 To NumAn
btermP(m, a) = bterm(m, a)
CtermP(m, a) = CPhi(m, a)
Next a
Next m
PBar = PBar + 0.000001: Patm = PBar / 1.013254: Ppsia = PBar * 14.503774: 'at 1e-6 bar delta pressure
Call C2_Pitzer2019

AphiPPlus = fAphicalc
mt = fBtermcalc
For m = 1 To NumCat
For a = 1 To NumAn
btermPPlus(m, a) = bterm(m, a)
CtermPPlus(m, a) = CPhi(m, a)
Next a
Next m
PBar = PBar - 0.0000001: Patm = PBar / 1.013254: Ppsia = PBar * 14.503774 'return P to original value
Call V0TP 'recalculate V0 at T, P
Av = -4 * RBar * TK * (AphiPPlus - AphiP) / 0.000001
Fv = Av / RBar / TK * Ist / 1.2 * Log(1 + 1.2 * Ist ^ 0.5) 'Unit mol/Kg/bar
For m = 1 To NumCat
For a = 1 To NumAn
bVterm(m, a) = (btermPPlus(m, a) - btermP(m, a)) / 0.000001 'Unit Kg/mol/bar
cVterm(m, a) = (CtermPPlus(m, a) - CtermP(m, a)) / 0.000001 'Unit (Kg/mol)^2/bar
Next a
Next m
Ex_Pitzer = 0
For m = 1 To NumCat
For a = 1 To NumAn
Ex_Pitzer = Ex_Pitzer + 2 * mc(m) * ma(a) * (bVterm(m, a) + mc(m) * ChCat(m) * cVterm(m, a) / (2 * (Abs(ChCat(m) * ChAn(a))) ^ 0.5)) 'unit mol/Kg/bar
Next a
Next m

V_ex = (Fv + Ex_Pitzer) * RBar * TK  'L/Kg
V_ion = V_ex * 1000 'cm3/Kg
For a = 1 To NumAn
V_ion = V_ion + ma(a) * V0_a(a) 'Note Unit of V0 is cm3/Kg
Next a
For c = 1 To NumCat
V_ion = V_ion + mc(c) * V0_c(c)
Next c
For n = 1 To NumNeut
V_ion = V_ion + mn(n) * V0_n(n)
Next n
'If useEOS = 1 Then
'    dens = density(3) * 1000 'unit g/L
'Else
    dens = fH2ODensity(TK, PBar) ' g/L density of pure water at T, P
'End If
    'dens = fH2ODensity(TK, PBar) ' Kg/m3 density of pure water at T, P
        VperKgWater = (1 / dens * 1000000#) + V_ion 'volume in cm3 of 1 kg water at T

        MassperKgwater = 1000 'g of water of 1 kg water
    For iden = 1 To NumCat
        MassperKgwater = MassperKgwater + mc(iden) * MWCat(iden)
    Next iden
    For iden = 1 To NumAn
        MassperKgwater = MassperKgwater + ma(iden) * MWAn(iden)
    Next iden
For iden = 1 To NumNeut
        MassperKgwater = MassperKgwater + mn(iden) * MWNeut(iden) 'g
    Next iden
        CalcRhoTP = MassperKgwater / VperKgWater  'g/cm3
End Function


Function fAphicalc()
         U1 = 342.79:    U2 = -0.0050866:    U3 = 0.0000009469:    U4 = -2.0525:    U5 = 3115.9:    U6 = -182.89
         U7 = -8032.5:    U8 = 4214200:    U9 = 2.1417
         D1000 = U1 * Exp(U2 * TK + U3 * TK ^ 2):    cc = U4 + U5 / (U6 + TK):    b = U7 + U8 / TK + U9 * TK
    Dielec = D1000 + cc * Log((b + PBar) / (b + 1000))
    dens = fH2ODensity(TK, PBar) 'Unit Kg/m3
    fAphicalc = (1 / 3) * ((2 * pi * NAv * dens) ^ 0.5) * (eElec ^ 2 / (4 * pi * eps0 * Dielec * kBoltz * TK)) ^ 1.5
End Function
'Calculate the gX and gpX functions that are a function of ISt and charge, only.
Function fBtermcalc()
For m = 1 To NumCat
  For a = 1 To NumAn
        bterm(m, a) = b0(m, a) + b1(m, a) * gX14 + b2(m, a) * gX12   'For 2:(-2) electrolytes
'   If ChCat(m) * ChAn(a) <> -4 Then BMa = b0(m, a) + b1(m, a) * gX20 + b2(m, a) * gX12
'Holmes and Dai
 If ChCat(m) = 1 Then
     X20 = 2 * Ist ^ 0.5                             'For 1:(-2) or 1:(-1) pairs
 If c = 2 And a = 6 Then X20 = 1.4 * Ist ^ 0.5      'For Na-SO4
 If c = 3 And a = 6 Then X20 = 1.4 * Ist ^ 0.5      'For K-SO4
   gX20 = 2 * (1 - (1 + X20) * Exp(-X20)) / X20 ^ 2
'  gpX20 = -2 * (1 - (1 + X20 + 0.5 * X20 ^ 2) * Exp(-X20)) / X20 ^ 2
    bterm(m, a) = b0(m, a) + b1(m, a) * gX20 + b2(m, a) * gX12
End If
 If ChCat(m) = 2 And ChAn(a) = -1 Then
    X20 = (2 - 0.00181 * (TK - 298.15)) * Ist ^ 0.5    'For 2:(-1) pairs
   gX20 = 2 * (1 - (1 + X20) * Exp(-X20)) / X20 ^ 2
 ' gpX20 = -2 * (1 - (1 + X20 + 0.5 * X20 ^ 2) * Exp(-X20)) / X20 ^ 2
    bterm(m, a) = b0(m, a) + b1(m, a) * gX20 + b2(m, a) * gX12
End If
Next a
Next m
fBtermcalc = mt
End Function


'D.  This subroutine sets up parameters for individual well calculation of nTCO2, nTCH4, nTH2O,and QC
'This subroutine is called in each of the two calculation routines through B2_ReadinAllData routine for each well checked.
 Sub CalcIonicStrength()
'Calcule common system terms and functions for Pitzer theory:  ISt, Z, m-total gX, gpX, JX, and JpX.

    mtotal = 0
    MoleCharge = 0#
    Ist = 0#
    SumOfCations = 0#
     For c = 1 To NumCat
       MoleCharge = MoleCharge + ChCat(c) * mc(c)
       SumOfCations = SumOfCations + ChCat(c) * mc(c)
       Ist = Ist + ChCat(c) ^ 2 * mc(c)
       mtotal = mtotal + mc(c)
     Next c
'       SumOfAnions = -0.0000001
       SumOfAnions = 0
     For a = 1 To NumAn
       MoleCharge = MoleCharge + Abs(ChAn(a)) * ma(a)
       SumOfAnions = SumOfAnions + ChAn(a) * ma(a)
       Ist = Ist + ChAn(a) ^ 2 * ma(a)
       mtotal = mtotal + ma(a)
     Next a
     If Ist <= 0 Then
     Ist = 2 * 0.0000001 'When only negative alkalinity is  entered in the input sheet, set ionic molality =(H+OH) of pure water
     End If
       Ist = Ist / 2
              DpHj = 0.129 * Ist ^ 0.5
End Sub

Sub QualityControlCalculations(kk, j)

If RunStat = 1 Then
    AlkMix(kk) = Worksheets(mySheet).Cells(24, j + 2).Value / (61019 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
    AlkMix(kk) = AlkMix(kk) + 2 * Worksheets(mySheet).Cells(25, j + 2).Value / (60019 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
    TAcMix(kk) = Worksheets(mySheet).Cells(30, j + 2).Value / 59.044 'convert to sum of carboxylic acid in meq/L
    TAcMix(kk) = TAcMix(kk) + Worksheets(mySheet).Cells(31, j + 2).Value / 73.07
    TAcMix(kk) = TAcMix(kk) + Worksheets(mySheet).Cells(32, j + 2).Value / 87.098
    TAcMix(kk) = TAcMix(kk) + Worksheets(mySheet).Cells(33, j + 2).Value / 87.11
    TAcMix(kk) = TAcMix(kk) + Worksheets(mySheet).Cells(34, j + 2).Value / 101.13
    TAcMix(kk) = TAcMix(kk) + Worksheets(mySheet).Cells(35, j + 2).Value / 101.13
    TAcMix(kk) = TAcMix(kk) + Worksheets(mySheet).Cells(36, j + 2).Value / 115.16
    TAcMix(kk) = TAcMix(kk) + Worksheets(mySheet).Cells(37, j + 2).Value / 115.16
    TAcMix(kk) = TAcMix(kk) + Worksheets(mySheet).Cells(38, j + 2).Value / 129.178
    TAcMix(kk) = TAcMix(kk) * 59.044 'convert to mg/L as acetate
    TAcMix(kk) = TAcMix(kk) / (59044 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
Else
    If UseMolal = 0 Then
    AlkMix(kk) = Worksheets(mySheet).Cells(24, j + 2).Value / (61019 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
    AlkMix(kk) = AlkMix(kk) + 2 * Worksheets(mySheet).Cells(25, j + 2).Value / (60019 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
    AlkMix(kk) = AlkMix(kk) + Worksheets(mySheet).Cells(48, j + 2).Value / (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#)
    AlkMix(kk) = AlkMix(kk) - Worksheets(mySheet).Cells(47, j + 2).Value / (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#)
    TAcMix(kk) = Worksheets(mySheet).Cells(26, j + 2).Value / (59044 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
    Else
    AlkMix(kk) = Worksheets(mySheet).Cells(24, j + 2).Value
    AlkMix(kk) = AlkMix(kk) + 2 * Worksheets(mySheet).Cells(25, j + 2).Value
    AlkMix(kk) = AlkMix(kk) + Worksheets(mySheet).Cells(48, j + 2).Value
    AlkMix(kk) = AlkMix(kk) - Worksheets(mySheet).Cells(47, j + 2).Value
    TAcMix(kk) = Worksheets(mySheet).Cells(26, j + 2).Value
    End If
End If
UseH2Sgas = UseH2SgasMix(kk)
    SumOfCations = 0.0000001
    For c = 1 To NumCat
      SumOfCations = SumOfCations + ChCat(c) * mc(c)
    Next c
        SumOfAnions = -0.0000001
    For a = 1 To NumAn
      SumOfAnions = SumOfAnions + ChAn(a) * ma(a)
    Next a

'1.  use the measured pH and Alk to calculate the P-CO2 in the QC part of Input Sheet.
        pH = pHMeterStpMix(kk) + DpHj
        aH = 10 ^ (-pH)

If RunStat = 1 Then
        yCO2 = Worksheets(mySheet).Cells(26, j + 2).Value / 100
        TH2Saq = Worksheets(mySheet).Cells(27, j + 2).Value / (34080 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
        yH2S = 0

Else
        yCO2 = Worksheets(mySheet).Cells(31, j + 2).Value / 100
        If UseH2SgasMix(kk) = 1 Then
        yH2S = Worksheets(mySheet).Cells(33, j + 2).Value / 100
        TH2Saq = 0
        End If
        If UseH2SgasMix(kk) = 0 Then
        If UseMolal = 0 Then
        TH2Saq = Worksheets(mySheet).Cells(33, j + 2).Value / (34080 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
        yH2S = 0
        Else
        TH2Saq = Worksheets(mySheet).Cells(33, j + 2).Value
        yH2S = 0
        End If
        End If
End If
If useEOS = 0 Then
    If UseH2Sgas = 0 Then  'Calculate TH2Saq from yH2Sstp and pH.  If TH2Saq is given, use it, otherwise use PH2S.
        HS = TH2Saq / (aH * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq)) + 1)
        If TH2Saq > 0 Then
        mt = fMeSSpeciation(2, 2) 'speciation for HS
        H2Saq = aH * HS * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq))
        yH2S = H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (KgwH2S * Ppsia * gGas(iH2Sg))
        If yH2S > 1 Then errmsg(3) = 3
        Else
        yH2S = 0
        End If
    End If                                 'Calculate the P-H2S, or yH2S, from pH and TH2Saq.
    If UseH2Sgas = 1 Then
        If yH2S > 0 Then
        H2Saq = KgwH2S * Ppsia * yH2S * gGas(iH2Sg) / gNeut(iH2Saq) / gNNeut(iH2Saq)
        HS = K1H2S * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
        ZP1 = (KstFeSaq * gAn(iHS) * gNAn(iHS) * gCat(iFe) * gNCat(iFe)) / (gNeut(iFeSaq) * gNNeut(iFeSaq) * aH)
        ZP2 = BetaDot(iZnCl) * (gDot(iClDot) * ma(iCl)) * gDot(iZnDot) / gDot(iZnCl) + BetaDot(iZnCl2) * (gDot(iClDot) * ma(iCl)) ^ 2 * gDot(iZnDot) / gDot(iZnCl2) + BetaDot(iZnCl3) * (gDot(iClDot) * ma(iCl)) ^ 3 * gDot(iZnDot) / gDot(iZnCl3) + BetaDot(iZnCl4) * (gDot(iClDot) * ma(iCl)) ^ 4 * gDot(iZnDot) / gDot(iZnCl4)
        ZP3 = BetaDot(iZnHS2) * gDot(iZnDot) * gDot(iHSDot) ^ 2 / gDot(iZnHS2)
        ZP4 = BetaDot(iZnHS3) * gDot(iZnDot) * gDot(iHSDot) ^ 3 / gDot(iZnHS3)
        ZP5 = BetaDot(iPbCl) * (gDot(iClDot) * ma(iCl)) * gDot(iPbDot) / gDot(iPbCl) + BetaDot(iPbCl2) * (gDot(iClDot) * ma(iCl)) ^ 2 * gDot(iPbDot) / gDot(iPbCl2) + BetaDot(iPbCl3) * (gDot(iClDot) * ma(iCl)) ^ 3 * gDot(iPbDot) / gDot(iPbCl3) + BetaDot(iPbCl4) * (gDot(iClDot) * ma(iCl)) ^ 4 * gDot(iPbDot) / gDot(iPbCl4)
        ZP6 = BetaDot(iPbHS2) * gDot(iPbDot) * gDot(iHSDot) ^ 2 / gDot(iPbHS2)
        ZP7 = BetaDot(iPbHS3) * gDot(iPbDot) * gDot(iHSDot) ^ 3 / gDot(iPbHS3)
        mc(iFe) = TFe / (1 + ZP1 * HS)
        mc(iZn) = TZn / (1 + ZP2 + ZP3 * HS ^ 2 + ZP4 * HS ^ 3)
        mc(iPb) = TPb / (1 + ZP5 + ZP6 * HS ^ 2 + ZP7 * HS ^ 3)
        TH2Saq = H2Saq + (HS + mc(iFe) * ZP1 * HS + mc(iZn) * (ZP3 * HS ^ 2 + ZP4 * HS ^ 3) + mc(iPb) * (ZP6 * HS ^ 2 + ZP7 * HS ^ 3))
        Else
        TH2Saq = 0
        End If
    End If
        If TH2Saq = 0 And yH2S = 0 Then HS = 0
        H = aH / gCat(iH) / gNCat(iH)
        OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
        AC = TAc / (aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1) 'Note gNNeut(iHACaq)=1
        hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
        H2BO3 = TH3BO3 / hydH2BO3
        hydNH3 = aH * gNeut(iNH3) * gNNeut(iNH3) / (KNH4 * gCat(iNH4) * gNCat(iNH4)) + 1
        NH3 = TNH4 / hydNH3
        hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
              aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
        H2SiO4 = TH4SiO4 / hydH2SiO4
        H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
        H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
        tHCO3 = (K1H2CO3 * aH2O) * KgwCO2 * Ppsia * gGas(iCO2g) / (aH * gAn(iHCO3) * gNAn(iHCO3))
        tCO3 = (K1H2CO3 * aH2O) * K2HCO3 * KgwCO2 * Ppsia * gGas(iCO2g) / (aH ^ 2 * gAn(iCO3) * gNAn(iCO3))
        yCO2 = (Alk + H - AC - NH3 - H2BO3 - HS - H3SiO4 - 2 * H2SiO4 - OH) / (tHCO3 + 2 * tCO3)
        HCO3 = (K1H2CO3 * aH2O) * KgwCO2 * Ppsia * yCO2 * gGas(iCO2g) / (aH * gAn(iHCO3) * gNAn(iHCO3))
        CO3 = (K1H2CO3 * aH2O) * K2HCO3 * KgwCO2 * Ppsia * yCO2 * gGas(iCO2g) / (aH ^ 2 * gAn(iCO3) * gNAn(iCO3))
        If yCO2 > 1 Then errmsg(1) = 1
        If yCO2 < 0 Then
        errmsg(2) = 2
        yCO2 = 0  'Caps %CO2 at 0
        End If
    
    If RunStat = 1 And CaseCount(1) = 1 Then 'for StatQC produced water
 
        Worksheets("Output data sheet").Cells(6, 4) = yCO2 * 100  'QC check for assuming that pH and Alk are correct, what would PCO2 be?
    ElseIf RunStat = 1 And CaseCount(1) = 9 Then 'for StatQC fresh water
        Worksheets("Output data sheet").Cells(18, 4) = yCO2 * 100  'QC check for assuming that pH and Alk are correct, what would PCO2 be?
    ElseIf RunH2SGUI = 1 Then
        Worksheets(mySheet).Cells(83, j + 2) = yH2S * 100
        If UseMolal = 0 Then
        Worksheets(mySheet).Cells(84, j + 2) = TH2Saq * (34080 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
        Else
        Worksheets(mySheet).Cells(84, j + 2) = TH2Saq
        End If
        Worksheets(mySheet).Cells(86, j + 2) = yCO2 * 100 'QC check for assuming that pH and Alk are correct, what would PCO2 be?
    Else
        If kk <= nob_Input Then
        Worksheets("Input").Cells(14, j + 15) = yH2S * 100
        If UseMolal = 0 Then
        Worksheets("Input").Cells(15, j + 15) = TH2Saq * (34080 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
        Else
        Worksheets("Input").Cells(15, j + 15) = TH2Saq
        End If
        Worksheets("Input").Cells(17, j + 15) = yCO2 * 100  'QC check for assuming that pH and Alk are correct, what would PCO2 be?
        End If
        If kk > nob_Input And kk <= nob_Input + nob_InputII Then
        Worksheets("Input II").Cells(83, j + 2) = yH2S * 100
        If UseMolal = 0 Then
        Worksheets("Input II").Cells(84, j + 2) = TH2Saq * (34080 * (rho25CMix(i + nob_Input) - CalculatedTDSMix(i + nob_Input) / 1000000#))
        Else
        Worksheets("Input II").Cells(84, j + 2) = TH2Saq
        End If
        Worksheets("Input II").Cells(86, j + 2) = yCO2 * 100 'QC check for assuming that pH and Alk are correct, what would PCO2 be?
        End If
    End If
    ' 2.  Use STP P-CO2 along with Alkalinity to calculate pH.
        If UseH2Sgas = 0 Then         'Then, yCO2stp must be specified.  Need to calculate the pH and yH2Sstp.
        If RunStat = 1 Then
            yCO2 = Worksheets(mySheet).Cells(26, j + 2).Value / 100
        Else
            yCO2 = Worksheets(mySheet).Cells(31, j + 2).Value / 100
        End If
            pHHigh = 14: pHLow = 0  'Half-interval search root finder works very well for pH equations.
            For k = 1 To 30
                pH = (pHHigh + pHLow) / 2
                aH = 10 ^ (-pH)
                H = aH / (gCat(iH) * gNCat(iH))
                OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
                CO2aq = KgwCO2 * Ppsia * yCO2 * gGas(iCO2g) / (gNeut(iCO2aq) * gNNeut(iCO2aq))
                HCO3 = (K1H2CO3 * aH2O) * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
                CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
                hydHS = aH * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq)) + 1
                If TH2Saq > 0 Then
                HS = TH2Saq / hydHS
                mt = fMeSSpeciation(2, 2) 'speciation for HS
                Else
                HS = 0
                End If
                hydAc = aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1 'Note gNNeut(iHACaq)=1
                AC = TAc / hydAc
                hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
                H2BO3 = TH3BO3 / hydH2BO3
                hydNH3 = aH * gNeut(iNH3) * gNNeut(iNH3) / (KNH4 * gCat(iNH4) * gNCat(iNH4)) + 1
                NH3 = TNH4 / hydNH3
                hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
                      aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
                H2SiO4 = TH4SiO4 / hydH2SiO4
                H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
                H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
                faH = Alk - (HCO3 + 2 * CO3 + HS + AC + NH3 + H2BO3 + H3SiO4 + 2 * H2SiO4 + OH - H)
                If faH > 0 Then pHLow = pH
                If faH < 0 Then pHHigh = pH
            Next k
            pHMeterReading_from_QC = pH - DpHj
    '        yH2Sstp = yH2S
    '        yCO2stp = yCO2
           If yH2S > 1 Then errmsg(3) = 3
            If Run_Seawater_Mixing = 0 Or Run_MixingTwoWells = 0 Then pHMeterReading_from_QC = pH - DpHj
        End If
        
        If UseH2Sgas = 1 Then 'Use PCO2 and Alk to calculate the pH value at STP---if Use PH2S, Simplified Input will skip this section
            yCO2 = Worksheets(mySheet).Cells(31, j + 2).Value / 100
            yH2S = Worksheets(mySheet).Cells(33, j + 2).Value / 100
            pHHigh = 14: pHLow = 0
            For k = 1 To 30  'This permits covergence of to pH to 8-significant figures; sometime needed if precipitation is only a small fraction of Alkalinity.
                pH = (pHHigh + pHLow) / 2
                aH = 10 ^ (-pH)
                H = aH / (gCat(iH) * gNCat(iH))
                OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
                CO2aq = KgwCO2 * Ppsia * yCO2 * gGas(iCO2g) / (gNeut(iCO2aq) * gNNeut(iCO2aq))
                HCO3 = (K1H2CO3 * aH2O) * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
                CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
                H2Saq = KgwH2S * Ppsia * yH2S * gGas(iH2Sg) / gNeut(iH2Saq) / gNNeut(iH2Saq)
                HS = K1H2S * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
                hydAc = aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1
                AC = TAc / hydAc
                hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
                H2BO3 = TH3BO3 / hydH2BO3
                hydNH3 = aH * gNeut(iNH3) * gNNeut(iNH3) / (KNH4 * gCat(iNH4) * gNCat(iNH4)) + 1
                NH3 = TNH4 / hydNH3
                hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
                      aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
                H2SiO4 = TH4SiO4 / hydH2SiO4
                H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
                H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
                faH = Alk - (HCO3 + 2 * CO3 + HS + AC + NH3 + H2BO3 + H3SiO4 + 2 * H2SiO4 + OH - H)
                If faH > 0 Then pHLow = pH
                If faH < 0 Then pHHigh = pH
            Next k
            pHMeterReading_from_QC = pH - DpHj
        End If

    If RunStat = 1 And CaseCount(1) = 1 Then 'for StatQC produced water
        Worksheets("Output data sheet").Cells(5, 4) = pHMeterReading_from_QC  'QC check given Alk and PCO2, the calculated pH for meter reading.
        
    ElseIf RunStat = 1 And CaseCount(1) = 9 Then 'for StatQC fresh water
        Worksheets("Output data sheet").Cells(17, 4) = pHMeterReading_from_QC  'QC check given Alk and PCO2, the calculated pH for meter reading.
    ElseIf RunH2SGUI = 1 Then
        Worksheets(mySheet).Cells(85, j + 2) = pHMeterReading_from_QC  'QC check given Alk and PCO2, the calculated pH for meter reading.
    Else
        If kk <= nob_Input Then
        Worksheets("Input").Cells(16, j + 15) = pHMeterReading_from_QC  'QC check given Alk and PCO2, the calculated pH for meter reading.
        End If
        If kk > nob_Input And kk <= nob_Input + nob_InputII Then
        Worksheets("Input II").Cells(85, j + 2) = pHMeterReading_from_QC  'QC check given Alk and PCO2, the calculated pH for meter reading.
        End If
    End If
Else 'correspond to useEOS<>0 most parameters in QC has been calculated at the end of ReadInDataD sub
If RunStat = 1 And CaseCount(1) = 1 Then 'for StatQC produced water
    Worksheets("Output data sheet").Cells(6, 4) = compositions(2, 2) * 100
    Worksheets("Output data sheet").Cells(5, 4) = pHMeterReading
ElseIf RunStat = 1 And CaseCount(1) = 9 Then 'for StatQC fresh water
    Worksheets("Output data sheet").Cells(18, 4) = compositions(2, 2) * 100
    Worksheets("Output data sheet").Cells(17, 4) = pHMeterReading
     ElseIf RunH2SGUI = 1 Then
     Worksheets(mySheet).Cells(83, j + 2) = compositions(3, 2) * 100
    If UseMolal = 0 Then
    Worksheets(mySheet).Cells(84, j + 2) = (H2Saq + HS + S) * (34080 * (rho25c - TDS / 1000000#))
    Else
    Worksheets(mySheet).Cells(84, j + 2) = (H2Saq + HS + S)
    End If
    Worksheets(mySheet).Cells(85, j + 2) = pHMeterReading
    Worksheets(mySheet).Cells(86, j + 2) = compositions(2, 2) * 100 'QC check for assuming that pH and Alk are correct, what would PCO2 be?
Else
    If kk <= nob_Input Then
    Worksheets("Input").Cells(14, j + 15) = compositions(3, 2) * 100
    If UseMolal = 0 Then
    Worksheets("Input").Cells(15, j + 15) = (H2Saq + HS + S) * (34080 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
    Else
    Worksheets("Input").Cells(15, j + 15) = TH2Saq
    End If
    Worksheets("Input").Cells(16, j + 15) = pHMeterReading
    Worksheets("Input").Cells(17, j + 15) = compositions(2, 2) * 100  'QC check for assuming that pH and Alk are correct, what would PCO2 be?
    End If
    If kk > nob_Input And kk <= nob_Input + nob_InputII Then
    Worksheets("Input II").Cells(83, j + 2) = compositions(3, 2) * 100
    If UseMolal = 0 Then
    Worksheets("Input II").Cells(84, j + 2) = (H2Saq + HS + S) * (34080 * (rho25CMix(i + nob_Input) - CalculatedTDSMix(i + nob_Input) / 1000000#))
    Else
    Worksheets("Input II").Cells(84, j + 2) = (H2Saq + HS + S)
    End If
    Worksheets("Input II").Cells(85, j + 2) = pHMeterReading
    Worksheets("Input II").Cells(86, j + 2) = compositions(2, 2) * 100 'QC check for assuming that pH and Alk are correct, what would PCO2 be?
    End If
End If
End If 'correspond to useEOS<>0

'3.  Calculate Alkalinity form reported pH and STP P-CO2.  Note that H2Saq will have already been calculated, just above.
    pHMeterReading = pHMeterStpMix(kk)
    yCO2 = yCO2Mix(kk)
    pH = pHMeterStpMix(kk) + DpHj
    aH = 10 ^ (-pH)
    H = aH / (gCat(iH) * gNCat(iH))
    OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
    If useEOS = 0 Then
    CO2aq = KgwCO2 * Ppsia * yCO2 * gGas(iCO2g) / (gNeut(iCO2aq) * gNNeut(iCO2aq))
    Else
    CO2aq = compositions(2, 4) / (0.01801528 * compositions(15, 4)) 'Unit Kg/ per mole of phase 3
    H2Saq = compositions(3, 4) / (0.01801528 * compositions(15, 4)) 'Unit Kg/ per mole of phase 3
    End If
    HCO3 = (K1H2CO3 * aH2O) * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
    CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
    HS = K1H2S * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
    hydAc = aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1
    AC = TAc / hydAc
    hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
    H2BO3 = TH3BO3 / hydH2BO3
    hydNH3 = aH * gNeut(iNH3) * gNNeut(iNH3) / (KNH4 * gCat(iNH4) * gNCat(iNH4)) + 1
    NH3 = TNH4 / hydNH3
    hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
          aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
    H2SiO4 = TH4SiO4 / hydH2SiO4
    H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
    H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
    Alk_from_QC = (HCO3 + 2 * CO3 + HS + AC + NH3 + H2BO3 + H3SiO4 + 2 * H2SiO4 + OH - H)
    NaQC = (-SumOfAnions - (SumOfCations - NaMix(kk)))

If RunStat = 1 And CaseCount(1) = 1 Then
    Worksheets("Output Data Sheet").Cells(7, 4) = Alk_from_QC * (61019 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
    Worksheets("Output Data Sheet").Cells(8, 4).Value = SumOfCations * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#) 'Convert output from equiv/kg-water to equiv/l-solution
    Worksheets("Output Data Sheet").Cells(9, 4).Value = SumOfAnions * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#) 'Convert output from equiv/kg-water to equiv/l-solution
    Worksheets("Output Data Sheet").Cells(10, 4).Value = rho25CMix(kk)
    Worksheets("Output Data Sheet").Cells(11, 4).Value = CalculatedTDSMix(kk)
    Worksheets("Output Data Sheet").Cells(12, 4).Value = NaQC * (22990 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
ElseIf RunStat = 1 And CaseCount(1) = 9 Then
    Worksheets("Output Data Sheet").Cells(19, 4) = Alk_from_QC * (61019 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
    Worksheets("Output Data Sheet").Cells(20, 4).Value = SumOfCations * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#) 'Convert output from equiv/kg-water to equiv/l-solution
    Worksheets("Output Data Sheet").Cells(21, 4).Value = SumOfAnions * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#) 'Convert output from equiv/kg-water to equiv/l-solution
    Worksheets("Output Data Sheet").Cells(22, 4).Value = rho25CMix(kk)
    Worksheets("Output Data Sheet").Cells(23, 4).Value = CalculatedTDSMix(kk)
    Worksheets("Output Data Sheet").Cells(24, 4).Value = NaQC * (22990 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
ElseIf RunH2SGUI = 1 Then
    If UseMolal = 0 Then
    Worksheets(mySheet).Cells(87, j + 2) = Alk_from_QC * (61019 * (rho25c - TDS / 1000000#))
    Worksheets(mySheet).Cells(88, j + 2).Value = SumOfCations * (rho25c - TDS / 1000000#) 'Convert output from equiv/kg-water to equiv/l-solution
    Worksheets(mySheet).Cells(89, j + 2).Value = SumOfAnions * (rho25c - TDS / 1000000#) 'Convert output from equiv/kg-water to equiv/l-solution
    Worksheets(mySheet).Cells(91, j + 2).Value = NaQC * (22990 * (rho25c) - TDS / 1000000#)
    Else
    Worksheets(mySheet).Cells(87, j + 2) = Alk_from_QC
    Worksheets(mySheet).Cells(88, j + 2).Value = SumOfCations
    Worksheets(mySheet).Cells(89, j + 2).Value = SumOfAnions
    Worksheets(mySheet).Cells(91, j + 2).Value = NaQC
    End If
    Worksheets(mySheet).Cells(90, j + 2).Value = TDS
Else
    If kk <= nob_Input Then
    If UseMolal = 0 Then
    Worksheets("Input").Cells(18, j + 15) = Alk_from_QC * (61019 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
    Worksheets("Input").Cells(19, j + 15).Value = SumOfCations * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#) 'Convert output from equiv/kg-water to equiv/l-solution
    Worksheets("Input").Cells(20, j + 15).Value = SumOfAnions * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#) 'Convert output from equiv/kg-water to equiv/l-solution
    Worksheets("Input").Cells(22, j + 15).Value = NaQC * (22990 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
    Else
    Worksheets("Input").Cells(18, j + 15) = Alk_from_QC
    Worksheets("Input").Cells(19, j + 15).Value = SumOfCations
    Worksheets("Input").Cells(20, j + 15).Value = SumOfAnions
    Worksheets("Input").Cells(22, j + 15).Value = NaQC
    End If
    Worksheets("Input").Cells(21, j + 15).Value = CalculatedTDSMix(kk)

    End If
    If kk > nob_Input And kk <= nob_Input + nob_InputII Then
    If UseMolal = 0 Then
    Worksheets("Input II").Cells(87, j + 2) = Alk_from_QC * (61019 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
    Worksheets("Input II").Cells(88, j + 2).Value = SumOfCations * (rho25CMix(i + nob_Input) - CalculatedTDSMix(i + nob_Input) / 1000000#) 'Convert output from equiv/kg-water to equiv/l-solution
    Worksheets("Input II").Cells(89, j + 2).Value = SumOfAnions * (rho25CMix(i + nob_Input) - CalculatedTDSMix(i + nob_Input) / 1000000#) 'Convert output from equiv/kg-water to equiv/l-solution
    Worksheets("Input II").Cells(91, j + 2).Value = NaQC * (22990 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
    Else
    Worksheets("Input II").Cells(87, j + 2) = Alk_from_QC
    Worksheets("Input II").Cells(88, j + 2).Value = SumOfCations
    Worksheets("Input II").Cells(89, j + 2).Value = SumOfAnions
    Worksheets("Input II").Cells(91, j + 2).Value = NaQC
    End If
    Worksheets("Input II").Cells(90, j + 2).Value = CalculatedTDSMix(i + nob_Input)
    End If
End If

End Sub

Sub InitializeOptionClearCellContent()
UseSR = 0: UseTPCalciteSheet = 0: Read_InputII = 0: NCount_II = 0: useEOS = 0
 LoopMixing = 0: UseMolal = 0: iTP = 0:  RunShellMultiflash = 0: H2Oevap = 0 'when this is flagged, stop all subsiquent calculation
Run_CalcConcFactor = 0:
If RunGoalSeek = 1 Then
RunGoalSeek = 1
Else
RunGoalSeek = 0
End If
If RunStatGoalSeek = 1 Then
RunStatGoalSeek = 1
Else
RunStatGoalSeek = 0
End If
If Run_MassTransfer = 1 Then
Run_MassTransfer = 1
Else
Run_MassTransfer = 0
End If

If Worksheets("Input").Range("I11").Value = "Saturation Ratio values" Then UseSR = 1
If RunH2SGUI <> 1 And RunSMT <> 1 And RunStat <> 1 Then
    If Worksheets("Calcite").Range("F3").Value = "mg/L" Then
    usePTB = 0
    Else
    usePTB = 1
    End If
End If
'If Use_ZnCl2Const = 1 Then
'Use_ZnCl2Const = 1
'Else
'Use_ZnCl2Const = 0
'End If
'Worksheets("Input").Range("C30:H30").Value = Empty
'Worksheets("Input II").Range("C30:CX30").Value = Empty
If RunSMT <> 1 Then
If RunH2SGUI <> 1 Then
Worksheets("input").Range("P14:T22").Value = Null
Worksheets("input II").Range("C83:Cx91").Value = Null
'Worksheets("Simplified Input").Range("M3:N11").Value = Null
Worksheets("input II").Range("C80:Cx80").Value = Null
Worksheets("input").Range("H10:H37").Value = Null
Worksheets("input").Range("H43:H49").Value = Null
'Worksheets("input II").Range("c56:cx56").Value = Null
Worksheets("input").Range("H62:H79").Value = Null
Worksheets("Well#1+Water").Range("B5:AC15").Value = Null  'Null out Mixing Two Brines sheet for other calculations.
Worksheets("Well#1+Water").Range("B40:AG50").Value = Null  'Null out Mixing Two Brines sheet for other calculations.
Worksheets("Mixing Two Wells").Range("B5:AC15").Value = Null  'Null out Mixing Two Brines sheet for other calculations.
Worksheets("Mixing Two Wells").Range("B40:AG50").Value = Null  'Null out Mixing Two Brines sheet for other calculations.
Worksheets("Calcite").Range("d16:g25").Value = Null 'Null out testing 10 cases calculations.
Worksheets("Calcite").Range("P20:P27").Value = Null 'Null out all warning
Worksheets("Barite").Range("c16:e25").Value = Null 'Null out testing 10 cases calculations.
Worksheets("Halite").Range("c16:e25").Value = Null 'Null testing 10 cases calculations.
Worksheets("Other SO4s").Range("C17:J26").Value = Null 'Null testing 10 cases calculations.
Worksheets("Sulfides,Fluorite,Carbonates").Range("C17:J26").Value = Null 'Null testing 10 cases calculations.

Worksheets("Use Mass Transfer").Range("A12:h21").Value = Null
'Dai 2020 deposition
'Worksheets("Deposition Prediction").Range("C7:M7").Value = Null
'Worksheets("Deposition Prediction").Range("C11:M11").Value = Null
Worksheets("Deposition Prediction").Range("C25:M34").Value = Null
Worksheets("Deposition Prediction").Range("C41:M50").Value = Null

Worksheets("Calcite").Range("q4:ag13").Value = Null 'Null act coeff and scale risk calculations.
Worksheets("barite").Range("q4:z13").Value = Null
Worksheets("Other SO4s").Range("q4:aa13").Value = Null
Worksheets("Silicates").Range("x2:z13").Value = Null ' Dai added 2020

End If
End If
For i = 1 To 14
InhSolLimit(i) = 0
'usepHmix(i) = Empty
Next i
For i = 1 To 20
errmsg(i) = 0
Next i
deltaT = 0: deltaP = 0: DpHj = 0:
For i = 1 To 15
feed_Composition(i) = 0
Next i
If RunSMT <> 1 Then
If RunH2SPartition <> 1 Then
For i = 1 To 17
Worksheets("Input").Cells(11 + i * 2, 9).Value = Null
Worksheets("Input").Cells(11 + i * 2, 10).Value = Null
Next i

For i = 1 To 7
Worksheets("Input").Cells(46 + i * 2, 9).Value = Null
Worksheets("Input").Cells(46 + i * 2, 10).Value = Null
Next i

'For i = 1 To 11
'Worksheets("Simplified Input").Cells(2 + i * 2, 8).Value = Null
'Worksheets("Simplified Input").Cells(2 + i * 2, 9).Value = Null
'Next i
'
'For i = 1 To 4
'Worksheets("Simplified Input").Cells(25 + i * 2, 8).Value = Null
'Worksheets("Simplified Input").Cells(25 + i * 2, 9).Value = Null
'Next i

Worksheets("Multiple Ppt").Unprotect ("eesi")
Worksheets("Multiple Ppt").Range("a4:P100").Value = Null
Worksheets("Multiple Ppt").Protect ("eesi")
End If
End If
End Sub

Sub LoopTPSI()

'    If UseTPCalciteSheet = 0 Then
'    TF = TBH - deltaT * (LoopTP - 1): TK = (TF - 32) * 5 / 9 + 273.15
'    Ppsia = PBH - deltaP * (LoopTP - 1): Patm = Ppsia / 14.696
'    ElseIf RunStatReservoirCalc = 0 And UseTPCalciteSheet = 1 Then
'    TF = Worksheets("Calcite").Cells(14 - LoopTP, 1):
'    Ppsia = Worksheets("Calcite").Cells(14 - LoopTP, 2):
'    If UseSI = 1 Then TF = Worksheets("Calcite").Cells(14 - LoopTP, 1) * 9 / 5 + 32
'    If UseSI = 1 Then Ppsia = Worksheets("Calcite").Cells(14 - LoopTP, 2) * 14.503774
'    TK = (TF - 32) * 5 / 9 + 273.15
'    Patm = Ppsia / 14.696
'    ElseIf RunStatReservoirCalc = 1 And UseTPCalciteSheet = 1 Then
'    TF = Worksheets("Halite Tool").Cells(24 - LoopTP, 12):
'    Ppsia = Worksheets("Halite Tool").Cells(24 - LoopTP, 13):
'    If UseSI = 1 Then TF = TF * 9 / 5 + 32
'    If UseSI = 1 Then Ppsia = Ppsia * 14.503774
'    TK = (TF - 32) * 5 / 9 + 273.15
'    Patm = Ppsia / 14.696
'End If
'    Pbar = Ppsia / 14.503774
'    Tc = (TF - 32) * 5 / 9
  'Returns HCO3, HS, aH, Ac, and a set of SI values for all solids at the present
  'T, P, and compositions.
  
''Output fugacity, PH2S, total moles of H2S for Chevron
'If useEOS <> 0 Then
'    If beta(1) > 0 Then 'when gas is present
'    If UseSI = 0 Then Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 24) = Ppsia * compositions(3, 2) * phi(3, 1)
'    If UseSI = 1 Then Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 24) = PBar * compositions(3, 2) * phi(3, 1)
'    ElseIf beta(2) > 0 Then 'when oil is present
'    If UseSI = 0 Then Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 24) = Ppsia * compositions(3, 3) * phi(3, 2)
'    If UseSI = 1 Then Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 24) = PBar * compositions(3, 3) * phi(3, 2)
'    End If
'Else
'If UseSI = 0 Then Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 24) = PH2S * gGas(iH2Sg)
'If UseSI = 1 Then Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 24) = PH2S * gGas(iH2Sg) / 14.50377
'End If
Call B5_CalculateSIvalues
pH_before_precipitation = pH  'This saves the pH value before any dissolution or precipitation takes place. Use in SqSoft

'' for in-house use
'If OutPutActCoefs = 1 Then
'If useEOS = 0 Then
'Worksheets("Calcite").Cells(14 - LoopTP, 34) = PCO2 / 14.696
'Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 25) = PH2S / 14.696
'If Mass_o > 0 Then Worksheets("Calcite").Cells(14 - LoopTP, 35) = PCO2 * gGas(iCO2g) * RatioOilBPoints * KgoCO2 / gL(iCO2o)
'If Mass_o > 0 Then Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 26) = PH2S * gGas(iH2Sg) * RatioOilBPoints * KgoH2S / gL(iH2So)
'Else
'Worksheets("calcite").Cells(14 - LoopTP, 34) = Ppsia * compositions(2, 2) / 14.696
'Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 25) = Ppsia * compositions(3, 2) / 14.696
'If mass_phase(2) > 0 Then Worksheets("Calcite").Cells(14 - LoopTP, 35) = compositions(2, 3) * total_moles * beta(2) / mass_phase(2)
'If mass_phase(2) > 0 Then Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 26) = compositions(3, 3) * total_moles * beta(2) / mass_phase(2)
'End If
'
'Worksheets("Calcite").Cells(14 - LoopTP, 36) = CO2aq
'Worksheets("Calcite").Cells(14 - LoopTP, 37) = HCO3
'Worksheets("Calcite").Cells(14 - LoopTP, 38) = CO3
'Worksheets("Calcite").Cells(14 - LoopTP, 39) = mc(iCa)
'Worksheets("Calcite").Cells(14 - LoopTP, 40) = HAcaq
'Worksheets("Calcite").Cells(14 - LoopTP, 41) = Ac
'
'Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 27) = H2Saq
'Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 28) = HS
'Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 29) = mc(iFe)
'End If

If H2Oevap <> 1 Then
    Call B6_InhibitorNeeded 'Calculate the amount of inhibitor needed at each point.
    Call B6_Dai_InhibitorNeeded ''Dai 2020, inhibition model update
End If
'If InhNoCal = 6 Then ConcInhCal = Null
'If InhNoCal = 7 Then ConcInhCal = Null
'If InhNoCal = 8 Then ConcInhCal = Null
'If InhNoCal = 9 Then ConcInhCal = Null
'If InhNoCal = 10 Then ConcInhCal = Null
'Calcite.  Calculate SI, delta_SI, and amount to precipitate, ppt, for Calcite.
If LoopTP = 1 Then
    SICalBh = SICal
    SIBarBH = SIBar
    SIGypBH = SIGyp
    SIHemiBH = SIHemi
    SIAnBH = SIAn
    SICelBH = SICel
    SIHalBH = SIHal
    SICaF2BH = SICaF2
    SISidBH = SISid
    SIFeSBH = SIFeS
    SIZnSBH = SIZnS
    SIZnSBH = SIZnS
    SIBaCO3BH = SIBaCO3
    SISrCO3BH = SISrCO3
    End If
    
'******The following values are used in SqueezeSoftPitzer only
If RunGoalSeek <> 1 Then
    If LoopTP = 1 Then
        TCO2BH = HCO3 + CO3 + CO2aq
        pHBH = pH_before_precipitation
        BHConcInhCal = ConcInhCal
        BHConcInhBar = ConcInhBar
    End If
    If LoopTP = 10 Then
    WHConcInhCal = ConcInhCal
    WHConcInhBar = ConcInhBar
    SICalWH = SICal
    SIBarWH = SIBar
    End If
Else
    If LoopTP = 1 Then
        TCO2BH = HCO3 + CO3 + CO2aq
        pHBH = pH_before_precipitation
        BHConcInhCal = ConcInhCal
        BHConcInhBar = ConcInhBar
    End If
    If LoopTP = 2 Then
    WHConcInhCal = ConcInhCal
    WHConcInhBar = ConcInhBar
    SICalWH = SICal
    SIBarWH = SIBar
    End If
End If
'************************ end Output value for SqueezeSoftPitzer
If RunGoalSeek <> 1 Then
        dSICal = SICal - SICalBh
        dSIBar = SIBar - SIBarBH
        dSIGyp = SIGyp - SIGypBH
        dSIHemi = SIHemi - SIHemiBH
        dSIAn = SIAn - SIAnBH
        dSICel = SICel - SICelBH
        dSIHal = SIHal - SIHalBH
        dSICaF2 = SICaF2 - SICaF2BH
        dSISid = SISid - SISidBH
        dSIFeS = SIFeS - SIFeSBH
    If RunSSP = 1 And H2Oevap <> 1 Then
        Call B7_ScaleRisk 'Only calculate risk when both Ba and SO4>0.01 mg/L in A1_ScaleSoftPitzer sub
        Call B7_Dai_ScaleRisk 'Dai 2020, inhibition model update, only on barite
    End If
End If

''For i = 1 To 3
''If InhNo = 6 Then SIRisk(InhNo, LoopTP, i, 2) = 0
''If InhNo = 7 Then SIRisk(InhNo, LoopTP, i, 2) = 0
''If InhNo = 8 Then SIRisk(InhNo, LoopTP, i, 2) = 0
''If InhNo = 9 Then SIRisk(InhNo, LoopTP, i, 2) = 0
''If InhNo = 10 Then SIRisk(InhNo, LoopTP, i, 2) = 0
''Next i
pptCal = 0: pptBar = 0: pptSid = 0: pptGyp = 0: pptHemi = 0: pptAn = 0: pptCel = 0: pptHal = 0:
pptFeS = 0: pptZnS = 0: pptZnCO3 = 0: pptPbS = 0: pptCaF2 = 0: pptMgOH2 = 0: pptCaOH2 = 0: pptFeSAm = 0: pptTrot = 0
pptAmSilica = 0: pptQuartz = 0: pptGreenalite = 0: pptDiopside = 0: pptChrysotile = 0:
pptFeCO3_NoMassTransfer = 0: pptFeCO3_MassTransfer = 0: pptCalcite_MassTransfer = 0:
pptCalcite_NoMassTransfer = 0: pptBarite_MassTransfer = 0: pptBarite_NoMassTransfer = 0: pptCelestite_MassTransfer = 0: pptCelestite_NoMassTransfer = 0
pptFeS_MassTransfer = 0: pptFeS_NoMassTransfer = 0:
End Sub
Sub LoopTPppt()
pptCal = 0: pptBar = 0: pptSid = 0: pptGyp = 0: pptHemi = 0: pptAn = 0: pptCel = 0: pptHal = 0:
pptFeS = 0: pptZnS = 0: pptZnCO3 = 0: pptPbS = 0: pptCaF2 = 0: pptMgOH2 = 0: pptCaOH2 = 0: pptFeSAm = 0: pptTrot = 0
pptAmSilica = 0: pptQuartz = 0: pptGreenalite = 0: pptDiopside = 0: pptChrysotile = 0:
pptFeCO3_NoMassTransfer = 0: pptFeCO3_MassTransfer = 0:
pptCalcite_MassTransfer = 0: pptCalcite_NoMassTransfer = 0:
pptBarite_MassTransfer = 0: pptBarite_NoMassTransfer = 0:
pptCelestite_MassTransfer = 0: pptCelestite_NoMassTransfer = 0
'Dai 2020 deposition
pptBarite_MassTransfer_V = 0: pptCalcite_MassTransfer_V = 0


pptFeS_MassTransfer = 0: pptFeS_NoMassTransfer = 0:
pHaftercalciteppt = pH_before_precipitation: pHafterMgOH2ppt = pH_before_precipitation:
pHafterCaOH2ppt = pH_before_precipitation: pHafterAmsilicappt = pH_before_precipitation:
pHafterQuartzppt = pH_before_precipitation: pHafterGreenaliteppt = pH_before_precipitation:
pHafterDiopsideppt = pH_before_precipitation: pHafterChrysotileppt = pH_before_precipitation
If LoopTP = 1 And Run_MassTransfer = 1 Then
mcMT(iCa) = mc(iCa): mcMT(iBa) = mc(iBa): maMT(iSO4) = ma(iSO4): AlkMT = Alk
End If

'If useEOS <> 0 Then
'nTCO2 = nTCO2_before_precipitation
'nTH2S = nTH2S_before_precipitation
'nTCH4 = total_moles * z_before_precipitation(1)
'RatioOilBPoints = fRatioOilBPoints
'If beta(1) > 0 Then 'gas phase
'gGas(iCH4g) = phi(1, 1)
'gGas(iCO2g) = phi(2, 1)
'gGas(iH2Sg) = phi(3, 1)
'Else
'gGas(iCH4g) = 1
'gGas(iCO2g) = 1
'gGas(iH2Sg) = 1
'End If
'If beta(2) > 0 Then
'gL(iCH4o) = phi(1, 2)
'gL(iCO2o) = phi(2, 2)
'gL(iH2So) = phi(3, 2)
'Else
'gL(iCH4o) = 1
'gL(iCO2o) = 1
'gL(iH2So) = 1
'End If
'End If
ppt = 0
If SIBar > 0 Then
    a = 1
    b = -(mc(iBa) + ma(iSO4))
    cc = mc(iBa) * ma(iSO4) - KspBarite / (gCat(iBa) * gAn(iSO4) * gNMean(iBaSO4) ^ 2)
    Call QuadraticRoots(a, b, cc, ppt, root2)
    mcEq(iBa) = mc(iBa) - ppt
    RaBaSO4ppt = mc(iRa) / (1 + ((mc(iBa) - ppt) * gCat(iBa) * GammaSolidRaBarite / (ppt * DRaBarite * gCat(iRa)))) 'norm
End If
    pptBarite_NoMassTransfer = ppt
If SIBar > 0 And Run_MassTransfer = 1 Then
mcKin(iBa) = (Exp(-km(iBaSO4) * SArea / QBrineFlow) * (mc(iBa) - mcEq(iBa)) + mcEq(iBa))
    pptBarite_MassTransfer = (mc(iBa) - mcKin(iBa))
    mcMT(iBa) = mcKin(iBa): maMT(iSO4) = ma(iSO4) - pptBarite_MassTransfer
    'Dai 2020 deposition
    pptBarite_MassTransfer_V = pptBarite_MassTransfer * 233390 * (rho25c - TDS * 0.000001) * QBrineFlow / 1000 * 3600 * 24 * 365 / 4480 / (pi * PipeID * PipeL) 'cm/yr 'assuming deposition layer is very thin...
End If


ppt = 0
If SIGyp > 0 Then
    a = 1
    b = -(mc(iCa) + ma(iSO4))
    cc = mc(iCa) * ma(iSO4) - KspGypsum / ((aH2O ^ 2) * gCat(iCa) * gAn(iSO4) * aNH2O ^ 2 * gNMean(iCaSO42H2O) ^ 2)
    Call QuadraticRoots(a, b, cc, ppt, root2)
End If
    pptGyp = ppt

ppt = 0
If SIHemi > 0 Then
    a = 1
    b = -(mc(iCa) + ma(iSO4))
    cc = mc(iCa) * ma(iSO4) - KspHemihydrate / ((aH2O ^ 0.5) * gCat(iCa) * gAn(iSO4) * aNH2O ^ 0.5 * gNMean(ihemiCaSO4) ^ 2)
    Call QuadraticRoots(a, b, cc, ppt, root2)
End If
pptHemi = ppt

ppt = 0
If SIAn > 0 Then
    a = 1
    b = -(mc(iCa) + ma(iSO4))
    cc = mc(iCa) * ma(iSO4) - KspAnhydrite / (gCat(iCa) * gAn(iSO4) * gNMean(iCaSO4) ^ 2)
Call QuadraticRoots(a, b, cc, ppt, root2)
RaCaSO4ppt = mc(iRa) / (1 + ((mc(iCa) - ppt) * gCat(iCa) * GammaSolidRaAnhydrite / (ppt * DRaAnhydrite * gCat(iRa))))
End If
pptAn = ppt
'If SIAn > 0 And Run_MassTransfer = 1 Then
'mcKin(iCa) = (Exp(-km(iCaSO4) * SArea / QBrineFlow) * (mc(iCa) - mcEq(iCa)) + mcEq(iCa))
'    pptAn_MassTransfer = (mc(iCa) - mcKin(iCa))
'End If

'Celestite.  Calculate SI and amount to precipitate, ppt, for celestite.

ppt = 0
If SICel > 0 Then
    a = 1
    b = -(mc(iSr) + ma(iSO4))
    cc = mc(iSr) * ma(iSO4) - KspCelestite / (gCat(iSr) * gAn(iSO4) * gNMean(iSrSO4) ^ 2)
Call QuadraticRoots(a, b, cc, ppt, root2)
mcEq(iSr) = mc(iSr) - ppt
RaSrSO4ppt = mc(iRa) / (1 + ((mc(iSr) - ppt) * gCat(iSr) * GammaSolidRaCelestite / (ppt * DRaCelestite * gCat(iRa))))
End If
pptCel = ppt
pptCelestite_NoMassTransfer = ppt
'If SICel > 0 And Run_MassTransfer = 1 Then
'mcKin(iSr) = (Exp(-km(iSrSO4) * SArea / QBrineFlow) * (mc(iSr) - mcEq(iSr)) + mcEq(iSr))
'    pptCelestite_MassTransfer = (mc(iSr) - mcKin(iSr))
'End If


'Amy May 5 2020 Check ******************************
ppt = 0
If SIHal > 0 Then
Dim TNa, TCl, TKTemp, PBarTemp, TCTemp, PatmTemp
TNa = mc(iNa): TCl = ma(iCl): TKTemp = TK: PBarTemp = PBar: TCTemp = TC: PatmTemp = Patm 'Preserve the original T, P, TNa, TCl
    a = 1
    b = -(mc(iNa) + ma(iCl))
    cc = mc(iNa) * ma(iCl) - KspHalite / (gCat(iNa) * gAn(iCl) * gNMean(iNaCl) ^ 2)
Call QuadraticRoots(a, b, cc, ppt, root2)
mc(iNa) = mc(iNa) - ppt: ma(iCl) = ma(iCl) - ppt

    'Iteration = 0
    While Abs(ppt) >= 0.001
      Call CalcIonicStrength
      Call C1_ThermodynamicEquilConsts
      Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
        a = 1
        b = -(mc(iNa) + ma(iCl))
        cc = mc(iNa) * ma(iCl) - KspHalite / (gCat(iNa) * gAn(iCl) * gNMean(iNaCl) ^ 2)
    Call QuadraticRoots(a, b, cc, ppt, root2)
    mc(iNa) = mc(iNa) - ppt: ma(iCl) = ma(iCl) - ppt
    'Iteration = 1 + Iteration
    Wend
    pptHal = TNa - mc(iNa)
    
    'Calculate TDS and Rho25C after ppt at STP for LoopTPWrite to calculate the mg/L precipitation
    TK = 298.15: TC = 25: PBar = 1.01325: Patm = 1
    Call CalcIonicStrength
    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
        Rho25cHalite = CalcRhoTP(TK, TC, PBar, Patm) 'Function subroutine
       TDSHalite = 0: CalculateTDSDen = 0 'Calculate TDS from density at 25 C
        For iden = 2 To NumCat
        CalculateTDSDen = CalculateTDSDen + 0.001 * mc(iden) * MWCat(iden)  '=Sum of Kg salt/Kg H2O
        Next iden
        For iden = 2 To NumAn
        CalculateTDSDen = CalculateTDSDen + 0.001 * ma(iden) * MWAn(iden)
        Next iden
        For iden = 2 To NumNeut
        CalculateTDSDen = CalculateTDSDen + 0.001 * mn(iden) * MWNeut(iden)
        Next iden
        TDSHalite = CalculateTDSDen / (1 + CalculateTDSDen) * rho25c * 1000000# 'TDS in unit of mg/L,  numerator=(Kgsalt/KgH2O), denometer=(1+Kgsalt/KgH2O)=(Kgsoln/KgH2O);density Kgsoln/Lsoln
    
    mc(iNa) = TNa 'return to original Na, Cl, T, P to original values for subsequent LoopTPSI, LoopTPppt calculation etc.
    ma(iCl) = TCl
    TK = TKTemp: TC = TCTemp: PBar = PBarTemp: Patm = PatmTemp: Ppsia = PBar * 14.503774
      Call CalcIonicStrength
      Call C1_ThermodynamicEquilConsts
      Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
Else
TDSHalite = TDS
Rho25cHalite = rho25c
End If


'Calcium fluoride.  For CaF2, fluorite, the amount to precipitate is determined by solving the corresponding cubic eqution.

ppt = 0
If SICaF2 > 0 Then
    coef1 = 1
    coef2 = -1 * (mc(iCa) + ma(intF))
    coef3 = (4 * mc(iCa) * ma(intF) + ma(intF) ^ 2) / 4
    coef4 = -1 * (mc(iCa) * ma(intF) ^ 2 - KspCaF2 / (gCat(iCa) * gAn(intF) ^ 2)) / 4
Call CubicRoots(coef1, coef2, coef3, coef4, root1, root2, root3)
ppt = root1
If root2 <> 0 And root2 < ppt Then ppt = root2
If root3 <> 0 And root3 < ppt Then ppt = root3
End If
pptCaF2 = ppt

'Calcite.  Calculates amount of calcite to precipitate to equilibrium, iff SI(calcite) > 0.
ppt = 0
If SICal > 0 Then
pH = pH_before_precipitation
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 5, 2, KspCalcite) '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 5, 2, KspCalcite) '(ppt_or_not, iMetals, iGas, Ksp)
'End If
        pptCalcite_NoMassTransfer = ppt
        mcEq(iCa) = mc(iCa) - ppt
End If
    pHaftercalciteppt = pH

If SICal > 0 And Run_MassTransfer = 1 Then
    mcKin(iCa) = (Exp(-km(iCaHCO32) * SArea / QBrineFlow) * (mc(iCa) - mcEq(iCa)) + mcEq(iCa))
    pptCalcite_MassTransfer = (mc(iCa) - mcKin(iCa))
    mcMT(iCa) = mcKin(iCa): AlkMT = Alk - 2 * pptCalcite_MassTransfer
    'Dai 2020 deposition
    pptCalcite_MassTransfer_V = pptCalcite_MassTransfer * 100091 * (rho25c - TDS * 0.000001) * QBrineFlow / 1000 * 3600 * 24 * 365 / 2710 / (pi * PipeID * PipeL) 'cm/yr 'assuming deposition layer is very thin...
End If

'Dai 2020 deposition
pptTotal_MassTransfer_V = pptBarite_MassTransfer_V + pptCalcite_MassTransfer_V  'cm/yr
If pptTotal_MassTransfer_V > pptMax_MassTransfer_V Then pptMax_MassTransfer_V = pptTotal_MassTransfer_V

'For siderite, FeCO3, the precipitation is calculated exactly as was done for CaCO3.

ppt = 0
If SISid > 0 Then
pH = pH_before_precipitation
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 8, 2, KspSiderite)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 2, KspSiderite) '(ppt_or_not, iMetals, iGas, Ksp)
'End If
    pptFeCO3_NoMassTransfer = ppt
    mcEq(iFe) = mc(iFe) - ppt
End If
    pHAfterFeCO3ppt = pH
'If SISid > 0 And Run_MassTransfer = 1 Then
'   mcKin(iFe) = (Exp(-km(iFeHCO32) * SArea / QBrineFlow) * (mc(iFe) - mcEq(iFe)) + mcEq(iFe))
'    pptFeCO3_MassTransfer = mc(iFe) - mcKin(iFe)
'End If
'Zinc carbonate.  ZnCO3, the precipitation is calculated exactly as was done for CaCO3.
ppt = 0
pH = pH_before_precipitation
If SIZnCO3 > 0 Then
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 9, 2, KspZnCO3) '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 9, 2, KspZnCO3) '(ppt_or_not, iMetals, iGas, Ksp)
'End If
pptZnCO3 = ppt
End If
'Amorphous Iron Sulfide.  For FeS ppt
ppt = 0
pH = pH_before_precipitation
If SIFeSAm > 0 Then
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 8, 3, KspFeSAm)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 3, KspFeSAm) '(ppt_or_not, iMetals, iGas, Ksp)
'End If

pptFeSAm = ppt
End If
'Mackinawite
ppt = 0
pH = pH_before_precipitation
If SIFeS > 0 Then
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 8, 3, KspFeS)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 3, KspFeS) '(ppt_or_not, iMetals, iGas, Ksp)
'End If

pptFeS_NoMassTransfer = ppt
End If
'If SIFeS > 0 And Run_MassTransfer = 1 Then
'
'        mcKin(iFe) = (Exp(-km(iFeHS2) * SArea / QBrineFlow) * (mc(iFe) - mcEq(iFe)) + mcEq(iFe))
'         pptFeS_MassTransfer = (mc(iFe) - mcKin(iFe))
'
'End If
'Troilite
ppt = 0
pH = pH_before_precipitation
If SITrot > 0 Then
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 8, 3, KspTrot)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 3, KspTrot) '(ppt_or_not, iMetals, iGas, Ksp)
'End If
pptTrot = ppt
End If
'Pyrrotite
ppt = 0
pH = pH_before_precipitation
If SIPyrr > 0 Then
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 8, 3, KspPyrr)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 3, KspPyrr) '(ppt_or_not, iMetals, iGas, Ksp)
'End If

pptPyrr = ppt
End If
'Zinc sulfide.
ppt = 0
pH = pH_before_precipitation
If SIZnS > 0 Then
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 9, 3, KspZnS)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 9, 3, KspZnS) '(ppt_or_not, iMetals, iGas, Ksp)
'End If
pptZnS = ppt
End If

'Lead sulfide.
ppt = 0
pH = pH_before_precipitation
If SIPbS > 0 Then
'If useEOS = 0 Then
  Call C4_SSPEquilCalcs(1, 10, 3, KspPbS)  '(ppt_or_not, iMetals, iGas, Ksp)
'  Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 10, 3, KspPbS) '(ppt_or_not, iMetals, iGas, Ksp)
'  End If
  pptPbS = ppt
End If

pH = pH_before_precipitation
ppt = 0
If SICaOH2 > 0 Then
'If useEOS = 0 Then
    Call C4_SSPEquilCalcs(1, 5, 8, KspCaOH2)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 5, 8, KspCaOH2) '(ppt_or_not, iMetals, iGas, Ksp)
'End If
pptCaOH2 = ppt
End If
pHafterCaOH2ppt = pH

ppt = 0
pH = pH_before_precipitation
If SIMgOH2 > 0 Then
'If useEOS = 0 Then
    Call C4_SSPEquilCalcs(1, 4, 9, KspMgOH2)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 4, 9, KspMgOH2) '(ppt_or_not, iMetals, iGas, Ksp)
'End If
pptMgOH2 = ppt
End If
pHafterMgOH2ppt = pH

'***************************************************************************
'For silicate SI
ppt = 0
pH = pH_before_precipitation
If SIAmSilica > 0 Then
'If useEOS = 0 Then
    Call C4_SSPEquilCalcs(1, 8, 10, KspAmSilica)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 10, KspAmSilica) '(ppt_or_not, iMetals, iGas, Ksp)
'End If
pptAmSilica = ppt
End If
pHafterAmsilicappt = pH

ppt = 0
pH = pH_before_precipitation
If SIQuartz > 0 Then
'If useEOS = 0 Then
    Call C4_SSPEquilCalcs(1, 8, 11, KspQuartz)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 11, KspQuartz) '(ppt_or_not, iMetals, iGas, Ksp)
'End If
pptQuartz = ppt
End If
pHafterQuartzppt = pH

ppt = 0
pH = pH_before_precipitation
If SIGreenalite > 0 Then
'If useEOS = 0 Then
    Call C4_SSPEquilCalcs(1, 8, 12, KspGreenalite)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 12, KspGreenalite) '(ppt_or_not, iMetals, iGas, Ksp)
'End If
pptGreenalite = ppt
End If
pHafterGreenaliteppt = pH

ppt = 0
pH = pH_before_precipitation
If SIDiopside > 0 Then
'If useEOS = 0 Then
    Call C4_SSPEquilCalcs(1, 8, 13, KspDiopside)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 13, KspDiopside) '(ppt_or_not, iMetals, iGas, Ksp)
'End If
pptDiopside = ppt
End If
pHafterDiopsideppt = pH

ppt = 0
pH = pH_before_precipitation
If SIChrysotile > 0 Then
'If useEOS = 0 Then
    Call C4_SSPEquilCalcs(1, 8, 14, KspChrysotile)  '(ppt_or_not, iMetals, iGas, Ksp)  note that gas = 9 is to signal no change in gas.
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 8, 14, KspChrysotile) '(ppt_or_not, iMetals, iGas, Ksp)
'End If
pptChrysotile = ppt
End If
pHafterChrysotileppt = pH


'BaCO3 and SrCO3 ppt
'
'ppt = 0
'If SIBaCO3 > 0 Then
'Call SSPEquilCalcs(1, 7, 2, KspBaCO3)  '(ppt_or_not, iMetals, iGas, Ksp)
'End If
'Worksheets("Barite").Cells(14 - LoopTP, 9) = ppt * 197349 * (rho25c - TDS * 0.000001) 'Amont of calcite to ppt to equilibrium.
pH = pH_before_precipitation
ppt = 0
If SISrCO3 > 0 Then
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 6, 2, KspSrCO3)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 6, 2, KspSrCO3) '(ppt_or_not, iMetals, iGas, Ksp)
'End If
End If
pptSrCO3 = ppt

pH = pH_before_precipitation
ppt = 0
If SIBaCO3 > 0 Then
'If useEOS = 0 Then
Call C4_SSPEquilCalcs(1, 6, 2, KspBaCO3)  '(ppt_or_not, iMetals, iGas, Ksp)
'Else
'Call C4_EOS_TCO2_SSPEquilCalcs(1, 6, 2, KspBaCO3) '(ppt_or_not, iMetals, iGas, Ksp)
'End If
End If
pptBaCO3 = ppt
'If MultiplePpt = 1 Then Call LoopTPMultiple
End Sub

Sub LoopTPVisHeatCap()
'***************************************************************************
' Calculate the viscosity at T, P, and Comp.
' From Millero, Physical Chemistry of Natural Waters, Wiley, page 302 and from
' Chen, Chan, Read, and Bromley, Desalination, Vol. 13, 37-51, 1973
    dens0 = 999.83952:    a1 = 16.945176:    a2 = -0.0079870401:    a3 = -0.000046170461:    a4 = 0.00000010556302
    a5 = -2.8054253E-10:    a6 = 0.01687985:    a7 = 0.043922:    a8 = -0.000076:    a9 = 0.000000126:    a10 = 0.00000000319
    dens1atm = (dens0 + a1 * TC + a2 * TC ^ 2 + a3 * TC ^ 3 + a4 * TC ^ 4 + a5 * TC ^ 5) / (1 + a6 * TC)
    dens = dens1atm + (a7 + a8 * TC + a9 * TC ^ 2 + a10 * TC ^ 3) * (Patm - 1)
    
    WtFrSalt = Ist / (Ist + 20)  'WtFrSalt = X in Chen, Chan, Read, and Bromley, Desalination, Vol. 13, 37-51, 1973
    SumM = 31.83 * WtFrSalt / (1 - WtFrSalt)
    
    a1 = 0.0046581:    a2 = 0.00014712:   a3 = -0.0000017413:    a4 = 0.0000000044668
    a5 = 0.0026539:    a6 = -0.000073598:    a7 = 0.0000009171:     a8 = -0.0000000027177
    Den0overDenIst = (1 - WtFrSalt) * (1 + 0.001 * dens1atm * SumM * ((a1 + a2 * TC + a3 * TC ^ 2 + a4 * TC ^ 3) + _
                   (a5 + a6 * TC + a7 * TC ^ 2 + a8 * TC ^ 3) * Ist ^ 0.5))
    DenIst = 0.001 * dens / Den0overDenIst
    ViscWatKinam0 = 10 ^ (-1.464 + 205.4 / (TK - 153#))  'Kinematic vicosity of pure water centiStokes
    If TC > 150 Then ViscWatKinam0 = 10 ^ (-1.416 + 175.2 / (TK - 177.2))
    
    a1 = 0.18788:    a2 = -0.0037532:   a3 = 0.0019142:    a4 = -0.007951
    a5 = -0.69447:    a6 = 0.013646:    a7 = -0.001413:      a8 = -0.0054073
    
    RelativeKinViscWater = 10 ^ ((a1 * Ist + a2 * Ist ^ 2 + a3 * Ist ^ 3 + a4 * Ist * TC) + _
                                 (a5 * Ist + a6 * Ist ^ 2 + a7 * Ist ^ 3 + a8 * Ist * TC) * Log10(ViscWatKinam0))
    ViscWatKinamIst = RelativeKinViscWater * ViscWatKinam0
    ViscWatIst = ViscWatKinamIst * DenIst * Exp(0.0000567 * Ppsia) 'dynamic viscosity in centipoise units.

'**********************************************************************************
'Heat capacity calculator.
'Calculation of heat capacity of a brine solution from Pitzer theory.  The effect of T is modeled with
'a sixth order polynomial that seems to be accurate to about +/- 1%.  The effect of pressure is
'modeled with a linear approximation between 1 atm and 400 atm, but an estimate of better than
'about +/- 1% seems reasonable over the range from 1 atm to about 1000 atm.  The use of salt as NaCl
'is probably good to about the same accuracy for heat capacity.  See Pitzer, Pelper, and Bussey, J Phys.
'Chem. Ref. Data, Vol. 13, pp 1-102, 1984.  Table A4 pp 32-37 for explicit listing of Cp01, Cp02, AJ, b0, b1,
'and CJ values at t(C) from 0 to 300 C and P = 1 to 1000 atm (bar);  these values can be explicitly put into
'Row 15 to be used.  This is recommended if one T,P combination is to be used extinsively.  Still, you
'can enter values for TDS, TF, and P(atm).
'The heat capacity is listed in units of J/(g C) and J/(ml C) at the bottom.  Note:  1 BTU = 1,055 J = 252 cal.
'Normally, enter data in A21, B21, and C21 and the calculation is automatic.
    RCp = 8.314
    Cp01 = (1.42910599E-12 * TK ^ 6 - 3.0405349E-09 * TK ^ 5 + 0.00000268432001 * TK ^ 4 - 0.00125862425 * TK ^ 3 + 0.330571467 * TK ^ 2 - 46.1155258 * TK + 2678.82979) * RCp
    Cp02 = (-4.75805453E-11 * TK ^ 6 + 0.00000010269399 * TK ^ 5 - 0.0000921125253 * TK ^ 4 + 0.043953835 * TK ^ 3 - 11.7702434 * TK ^ 2 + 1677.55304 * TK - 99455.8841) * RCp
    aj = (-7.62506036E-13 * TK ^ 6 + 1.70111051E-09 * TK ^ 5 - 0.00000156757109 * TK ^ 4 + 0.000765652877 * TK ^ 3 - 0.209217557 * TK ^ 2 + 30.360998 * TK - 1827.83946) * RCp
    b0Cp = (-6.43096664E-11 * TK ^ 6 + 0.00000013960701 * TK ^ 5 - 0.000125978879 * TK ^ 4 + 0.0604944374 * TK ^ 3 - 16.3067026 * TK ^ 2 + 2340.14685 * TK - 139737.502) * 0.000001
    b1Cp = (-1.723664970418E-10 * TK ^ 6 + 3.741076393426E-07 * TK ^ 5 - 3.375079792185E-04 * TK ^ 4 + 0.1620205208996 * TK ^ 3 - 43.65554038758 * TK ^ 2 + 6261.081592614 * TK - 373498.3550791) * 0.000001
    cj = (6.65778657E-12 * TK ^ 6 - 1.44552177E-08 * TK ^ 5 + 0.0000130444127 * TK ^ 4 - 0.00626293561 * TK ^ 3 + 1.68757513 * TK ^ 2 - 242.00911 * TK + 14433.8114) * 0.000001
    Cp01400 = (1.1151399759E-12 * TK ^ 6 - 2.3524142054E-09 * TK ^ 5 + 2.0567964964E-06 * TK ^ 4 - 0.00095381633879 * TK ^ 3 + 0.24738105724 * TK ^ 2 - 34.015476356 * TK + 1945.6172051) * RCp
    Cp02400 = (-3.2956183298E-11 * TK ^ 6 + 7.0838438096E-08 * TK ^ 5 - 0.000063240160287 * TK ^ 4 + 0.030014769748 * TK ^ 3 - 7.9888685643 * TK ^ 2 + 1130.8904696 * TK - 66540.444671) * RCp
    AJ400 = (-3.368047257E-12 * TK ^ 6 + 7.1124201481E-09 * TK ^ 5 - 6.2311623578E-06 * TK ^ 4 + 0.0028997187171 * TK ^ 3 - 0.75599605111 * TK ^ 2 + 104.72624175 * TK - 6022.1138681) * RCp
    b0400 = (-3.1301714299E-11 * TK ^ 6 + 6.792050067E-08 * TK ^ 5 - 0.000061270715171 * TK ^ 4 + 0.029417824308 * TK ^ 3 - 7.9306534931 * TK ^ 2 + 1138.6367071 * TK - 68057.583888) * 0.000001
    b1400 = (-1.7188829774E-10 * TK ^ 6 + 3.7305662383E-07 * TK ^ 5 - 0.00033655325035 * TK ^ 4 + 0.16156170942 * TK ^ 3 - 43.532509995 * TK ^ 2 + 6243.6263496 * TK - 372474.54806) * 0.000001
    CJ400 = (4.3505452423E-12 * TK ^ 6 - 9.431670242E-09 * TK ^ 5 + 8.5005436339E-06 * TK ^ 4 - 0.004077397537 * TK ^ 3 + 1.097972865 * TK ^ 2 - 157.41127409 * TK + 9388.9944053) * 0.000001
    Cp01PT = Cp01 - (Cp01 - Cp01400) * (Patm - 1) / (400 - 1)
    Cp02PT = Cp02 - (Cp02 - Cp02400) * (Patm - 1) / (400 - 1)
    AJPT = aj - (aj - AJ400) * (Patm - 1) / (400 - 1)
    b0PT = b0Cp - (b0Cp - b0400) * (Patm - 1) / (400 - 1)
    b1PT = b1Cp - (b1Cp - b1400) * (Patm - 1) / (400 - 1)
    CJPT = cj - (cj - CJ400) * (Patm - 1) / (400 - 1)
    bCp = 1.2
    neu = 2
    hISt = Log(1 + bCp * Ist ^ 0.5) / (2 * bCp)
    alphaCp = 2
    BJNaCl = b0PT + 2 * b1PT * (1 - (1 + alphaCp * Ist ^ 0.5) * Exp(-alphaCp * Ist ^ 0.5)) / (alphaCp ^ 2 * Ist)
    n1Water = 1000 / 18.0153
    zM = 1
    zX = -1
    
    CpPhi = Cp02PT + neu * Abs(zM * zX) * AJPT * hISt - 2 * 1 * 1 * RCp * TK ^ 2 * (Ist * BJNaCl + Ist ^ 2 * 1 * 1 * CJPT)
    Cp0 = Cp01PT * 55.508
    CpCp = n1Water * Cp01PT + Ist * CpPhi
    massCp = 1000 + Ist * 58.45
    SaltMass = Ist * 58.45
    VtotalCp = (1000 + SaltMass) / rho25c
    CpPerGram = CpCp / massCp
    CpPerMl = (CpCp / VtotalCp) * 0.239   'Heat capacity in units of cal/(ml*C)
    'For example, Millero (Phys. Chem. Nat. Waters, Wiley,2001) for sea water 35,000 mg/l TDS, 77 F and
    '1 atm lists Cp/g = 3.9962 and the above calculation yields Cp/g = 4.0085 J/(g C), or +/- 0.3%.

End Sub
Sub LoopTPWrite()

If RunStat = 1 Then
    If RunStatSICalcSSP = 1 Then
        Worksheets("Halite analysis").Cells(6 + StatTPnob - LoopTP, 2) = location
        Worksheets("Halite analysis").Cells(6 + StatTPnob - LoopTP, 3) = depth
    ElseIf RunStatSICalcSSP = 2 Then
        If RunStatGoalSeek = 1 Then
        Worksheets("Output data sheet").Cells(11 + StatTPnob - LoopTP, 16) = location
        Worksheets("Output data sheet").Cells(11 + StatTPnob - LoopTP, 17) = depth
        Else
        Worksheets("Halite analysis").Cells(6 + StatTPnob - LoopTP, 10) = location
        Worksheets("Halite analysis").Cells(6 + StatTPnob - LoopTP, 11) = depth
        End If
    ElseIf RunStatSICalcSSP = 3 Then
        Worksheets("Output data sheet").Cells(6 + StatTPnob - LoopTP, 8) = location
        Worksheets("Output data sheet").Cells(6 + StatTPnob - LoopTP, 9) = depth
    End If
End If
If RunGoalSeek <> 1 Then  'These output only done when GoalSeek is not run
    If UseSI = 0 Then
        Worksheets("Calcite").Cells(14 - LoopTP, 1) = TF
        Worksheets("Calcite").Cells(14 - LoopTP, 2) = Ppsia
        Worksheets("Barite").Cells(14 - LoopTP, 1) = TF           'Barite
        Worksheets("Barite").Cells(14 - LoopTP, 2) = Ppsia
        Worksheets("Other SO4s").Cells(14 - LoopTP, 1) = TF
        Worksheets("Other SO4s").Cells(14 - LoopTP, 2) = Ppsia
        Worksheets("Halite").Cells(14 - LoopTP, 1) = TF
        Worksheets("Halite").Cells(14 - LoopTP, 2) = Ppsia
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 1) = TF
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 2) = Ppsia
        Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 1) = TF
        Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 2) = Ppsia
        'Dai 2020 deposition
        If Run_MassTransfer = 1 Then
            Worksheets("Deposition Prediction").Cells(35 - LoopTP, 3) = (LoopTP - 1) * PipeL * 0.0328084 'ft
            Worksheets("Deposition Prediction").Cells(35 - LoopTP, 4) = TF
            Worksheets("Deposition Prediction").Cells(35 - LoopTP, 5) = Ppsia
            Worksheets("Deposition Prediction").Cells(51 - LoopTP, 3) = (LoopTP - 1) * PipeL * 0.0328084 'ft
            Worksheets("Deposition Prediction").Cells(51 - LoopTP, 4) = TF
            Worksheets("Deposition Prediction").Cells(51 - LoopTP, 5) = Ppsia
            'Dai 2020 deposition, output flow pattern, Renolds number, laminar sublayer regneration time
            Worksheets("Deposition Prediction").Cells(35 - LoopTP, 6) = Flow_Pattern
            Worksheets("Deposition Prediction").Cells(35 - LoopTP, 7) = Flow_Regime
            Worksheets("Deposition Prediction").Cells(35 - LoopTP, 8) = ReNO
            Worksheets("Deposition Prediction").Cells(35 - LoopTP, 9) = Hold_l
            Worksheets("Deposition Prediction").Cells(35 - LoopTP, 10) = Time_lsl_burst
            Worksheets("Deposition Prediction").Cells(35 - LoopTP, 11) = lgt_calcite_MT
            Worksheets("Deposition Prediction").Cells(35 - LoopTP, 12) = lgt_barite_MT
            'Worksheets("Deposition Prediction").Cells(35 - LoopTP, 16) = V_s_g
            'Worksheets("Deposition Prediction").Cells(35 - LoopTP, 17) = V_s_l
        End If
        If Run_MassTransfer_WhatIf = 1 Then
            Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP + (Iter_MT_WI - 1) * 32, 3) = (LoopTP - 1) * PipeL * 0.0328084 'ft
            Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP + (Iter_MT_WI - 1) * 32, 4) = TF
            Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP + (Iter_MT_WI - 1) * 32, 5) = Ppsia
            Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 3) = (LoopTP - 1) * PipeL * 0.0328084 'ft
            Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 4) = TF
            Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 5) = Ppsia
            'Dai 2020 deposition, output flow pattern, Renolds number, laminar sublayer regneration time
            Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP + (Iter_MT_WI - 1) * 32, 6) = Flow_Pattern
            Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP + (Iter_MT_WI - 1) * 32, 7) = Flow_Regime
            Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP + (Iter_MT_WI - 1) * 32, 8) = ReNO
            Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP + (Iter_MT_WI - 1) * 32, 9) = Hold_l
            Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP + (Iter_MT_WI - 1) * 32, 10) = Time_lsl_burst
            Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP + (Iter_MT_WI - 1) * 32, 11) = lgt_calcite_MT
            Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP + (Iter_MT_WI - 1) * 32, 12) = lgt_barite_MT
            'Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP, 16) = V_s_g
            'Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP, 17) = V_s_l
        End If
        
        Worksheets("Mg(OH)2,Ca(OH)2").Cells(14 - LoopTP, 1) = TF
        Worksheets("Mg(OH)2,Ca(OH)2").Cells(14 - LoopTP, 2) = Ppsia
        Worksheets("Silicates").Cells(14 - LoopTP, 1) = TF
        Worksheets("Silicates").Cells(14 - LoopTP, 2) = Ppsia
        If RunStat = 1 Then
            If RunStatSICalcSSP = 1 Then
            Worksheets("Halite analysis").Cells(6 + StatTPnob - LoopTP, 4) = TF
            Worksheets("Halite analysis").Cells(6 + StatTPnob - LoopTP, 5) = Ppsia
            ElseIf RunStatSICalcSSP = 2 Then
                If RunStatGoalSeek = 1 Then
                 Worksheets(myname).Cells(11 + StatTPnob - LoopTP, 18) = TF
                Worksheets(myname).Cells(11 + StatTPnob - LoopTP, 19) = Ppsia
                Else
                Worksheets("Halite analysis").Cells(6 + StatTPnob - LoopTP, 12) = TF
                Worksheets("Halite analysis").Cells(6 + StatTPnob - LoopTP, 13) = Ppsia
                End If
            ElseIf RunStatSICalcSSP = 3 Then
            Worksheets("Output data sheet").Cells(6 + StatTPnob - LoopTP, 10) = TF
            Worksheets("Output data sheet").Cells(6 + StatTPnob - LoopTP, 11) = Ppsia
            End If
        End If
    ElseIf UseSI = 1 Then
        Worksheets("Calcite").Cells(14 - LoopTP, 1) = (TF - 32) * 5 / 9
        Worksheets("Calcite").Cells(14 - LoopTP, 2) = Ppsia / 14.503774
        Worksheets("Barite").Cells(14 - LoopTP, 1) = (TF - 32) * 5 / 9
        Worksheets("Barite").Cells(14 - LoopTP, 2) = Ppsia / 14.503774
        Worksheets("Other SO4s").Cells(14 - LoopTP, 1) = (TF - 32) * 5 / 9
        Worksheets("Other SO4s").Cells(14 - LoopTP, 2) = Ppsia / 14.503774
        Worksheets("Halite").Cells(14 - LoopTP, 1) = (TF - 32) * 5 / 9
        Worksheets("Halite").Cells(14 - LoopTP, 2) = Ppsia / 14.503774
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 1) = (TF - 32) * 5 / 9
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 2) = Ppsia / 14.503774
        Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 1) = (TF - 32) * 5 / 9
        Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 2) = Ppsia / 14.503774
        
        'Dai 2020 deposition
        If Run_MassTransfer = 1 Then
            Worksheets("Deposition Prediction").Cells(35 - LoopTP, 3) = (LoopTP - 1) * PipeL / 100 'm
            Worksheets("Deposition Prediction").Cells(35 - LoopTP, 4) = (TF - 32) * 5 / 9
            Worksheets("Deposition Prediction").Cells(35 - LoopTP, 5) = Ppsia / 14.503774
            Worksheets("Deposition Prediction").Cells(51 - LoopTP, 3) = (LoopTP - 1) * PipeL / 100 'm
            Worksheets("Deposition Prediction").Cells(51 - LoopTP, 4) = (TF - 32) * 5 / 9
            Worksheets("Deposition Prediction").Cells(51 - LoopTP, 5) = Ppsia / 14.503774
            'Dai 2020 deposition, output flow pattern, Renolds number, laminar sublayer regneration time
            Worksheets("Deposition Prediction").Cells(35 - LoopTP, 6) = Flow_Pattern
            Worksheets("Deposition Prediction").Cells(35 - LoopTP, 7) = Flow_Regime
            Worksheets("Deposition Prediction").Cells(35 - LoopTP, 8) = ReNO
            Worksheets("Deposition Prediction").Cells(35 - LoopTP, 9) = Hold_l
            Worksheets("Deposition Prediction").Cells(35 - LoopTP, 10) = Time_lsl_burst
            'Worksheets("Deposition Prediction").Cells(35 - LoopTP, 16) = V_s_g
            'Worksheets("Deposition Prediction").Cells(35 - LoopTP, 17) = V_s_l
        End If
        
        If Run_MassTransfer_WhatIf = 1 Then
            'Dai 2020 deposition
            Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP + (Iter_MT_WI - 1) * 32, 3) = (LoopTP - 1) * PipeL / 100 'm
            Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP + (Iter_MT_WI - 1) * 32, 4) = (TF - 32) * 5 / 9
            Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP + (Iter_MT_WI - 1) * 32, 5) = Ppsia / 14.503774
            Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 3) = (LoopTP - 1) * PipeL / 100 'm
            Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 4) = (TF - 32) * 5 / 9
            Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 5) = Ppsia / 14.503774
            'Dai 2020 deposition, output flow pattern, Renolds number, laminar sublayer regneration time
            Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP + (Iter_MT_WI - 1) * 32, 6) = Flow_Pattern
            Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP + (Iter_MT_WI - 1) * 32, 7) = Flow_Regime
            Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP + (Iter_MT_WI - 1) * 32, 8) = ReNO
            Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP + (Iter_MT_WI - 1) * 32, 9) = Hold_l
            Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP + (Iter_MT_WI - 1) * 32, 10) = Time_lsl_burst
            'Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP, 16) = V_s_g
            'Worksheets("Deposition Prediction_WhatIf").Cells(35 - LoopTP, 17) = V_s_l
        End If
                
        Worksheets("Mg(OH)2,Ca(OH)2").Cells(14 - LoopTP, 1) = (TF - 32) * 5 / 9
        Worksheets("Mg(OH)2,Ca(OH)2").Cells(14 - LoopTP, 2) = Ppsia / 14.503774
        Worksheets("Silicates").Cells(14 - LoopTP, 1) = (TF - 32) * 5 / 9
        Worksheets("Silicates").Cells(14 - LoopTP, 2) = Ppsia / 14.503774
        If RunStat = 1 Then
            If RunStatSICalcSSP = 1 Then
                Worksheets("Halite analysis").Cells(6 + StatTPnob - LoopTP, 4) = (TF - 32) * 5 / 9
                Worksheets("Halite analysis").Cells(6 + StatTPnob - LoopTP, 5) = Ppsia / 14.503774
            ElseIf RunStatSICalcSSP = 2 Then
                If RunStatGoalSeek = 1 Then
                Worksheets(myname).Cells(11 + StatTPnob - LoopTP, 18) = (TF - 32) * 5 / 9
                Worksheets(myname).Cells(11 + StatTPnob - LoopTP, 19) = Ppsia / 14.503774
                Else
                Worksheets("Halite analysis").Cells(6 + StatTPnob - LoopTP, 12) = (TF - 32) * 5 / 9
                Worksheets("Halite analysis").Cells(6 + StatTPnob - LoopTP, 13) = Ppsia / 14.503774
                End If
            ElseIf RunStatSICalcSSP = 3 Then
                Worksheets("Output data sheet").Cells(6 + StatTPnob - LoopTP, 10) = (TF - 32) * 5 / 9
                Worksheets("Output data sheet").Cells(6 + StatTPnob - LoopTP, 11) = Ppsia / 14.503774
            End If
        End If
    End If
'check amy
    Worksheets("Calcite").Cells(14 - LoopTP, 3) = pH_before_precipitation - DpHj  'Output pH at T,P
    If InhNoCal = 5 Then ConcInhCal = Empty
    If InhNoCal = 7 Then ConcInhCal = Empty
    If InhNoCal = 8 Then ConcInhCal = Empty
    If InhNoCal = 9 Then ConcInhCal = Empty
    If InhNoCal = 10 Then ConcInhCal = Empty
    'If InhNoCal = 11 Then ConcInhCal = Empty
    If InhNoCal = 14 Then ConcInhCal = Empty
    If InhNoCal = 18 Then ConcInhCal = Empty
    If InhNoCal = 20 Then
        If InhNo1 = 5 Then ConcInhCal = Empty
        If InhNo1 = 7 Then ConcInhCal = Empty
        If InhNo1 = 9 Then ConcInhCal = Empty
        If InhNo1 = 8 Then ConcInhCal = Empty
        If InhNo1 = 10 Then ConcInhCal = Empty
        'If InhNo1 = 11 Then ConcInhCal = Empty
        If InhNo1 = 14 Then ConcInhCal = Empty
        If InhNo1 = 18 Then ConcInhCal = Empty
        If InhNo2 = 5 Then ConcInhCal = Empty
        If InhNo2 = 7 Then ConcInhCal = Empty
        If InhNo2 = 8 Then ConcInhCal = Empty
        If InhNo2 = 9 Then ConcInhCal = Empty
        If InhNo2 = 10 Then ConcInhCal = Empty
        If InhNo2 = 11 Then ConcInhCal = Empty
        If InhNo2 = 14 Then ConcInhCal = Empty
        If InhNo2 = 18 Then ConcInhCal = Empty
    End If
    Worksheets("Calcite").Cells(14 - LoopTP, 7) = ConcInhCal
    'Worksheets("Calcite").Cells(14 - LoopTP, 3) = pH_before_precipitation - DpHj  'Output pH at T,P
    Worksheets("Calcite").Cells(14 - LoopTP, 8) = pHaftercalciteppt - DpHj  'pH on pH meter after precipitation.
    Worksheets("Calcite").Cells(14 - LoopTP, 11) = Ist * (rho25c - TDS / 1000000#)
    Worksheets("Barite").Cells(14 - LoopTP, 6) = ConcInhBar
    Worksheets("Halite").Cells(14 - LoopTP, 6) = rhoTP
    Worksheets("Silicates").Cells(14 - LoopTP, 5) = pHafterAmsilicappt - DpHj
    Worksheets("Silicates").Cells(14 - LoopTP, 8) = pHafterQuartzppt - DpHj
    Worksheets("Silicates").Cells(14 - LoopTP, 17) = pHafterGreenaliteppt - DpHj
    Worksheets("Silicates").Cells(14 - LoopTP, 14) = pHafterDiopsideppt - DpHj
    Worksheets("Silicates").Cells(14 - LoopTP, 11) = pHafterChrysotileppt - DpHj
    Worksheets("Mg(OH)2,Ca(OH)2").Cells(14 - LoopTP, 3) = pH_before_precipitation - DpHj
    Worksheets("Mg(OH)2,Ca(OH)2").Cells(14 - LoopTP, 6) = pHafterMgOH2ppt - DpHj
    Worksheets("Mg(OH)2,Ca(OH)2").Cells(14 - LoopTP, 9) = pHafterCaOH2ppt - DpHj
 If usePTB = 0 Then
    Worksheets("Calcite").Cells(14 - LoopTP, 6) = pptCalcite_NoMassTransfer * 100091 * (rho25c - TDS * 0.000001) 'Amont of calcite to ppt to equilibrium.
    Worksheets("barite").Cells(14 - LoopTP, 5) = pptBarite_NoMassTransfer * 233390 * (rho25c - TDS / 1000000#)
    Worksheets("Other SO4s").Cells(14 - LoopTP, 4) = pptGyp * 172172 * (rho25c - TDS / 1000000#)
    Worksheets("Other SO4s").Cells(14 - LoopTP, 6) = pptHemi * 145148 * (rho25c - TDS / 1000000#)
    Worksheets("Other SO4s").Cells(14 - LoopTP, 8) = pptAn * 136140 * (rho25c - TDS / 1000000#)
    Worksheets("Other SO4s").Cells(14 - LoopTP, 10) = pptCel * 183680 * (rho25c - TDS / 1000000#)
    Worksheets("Halite").Cells(14 - LoopTP, 5) = pptHal * 58443 * (Rho25cHalite - TDSHalite / 1000000#)
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 4) = pptFeSAm * 87910 * (rho25c - TDS * 0.000001)
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 6) = pptFeS_NoMassTransfer * 87910 * (rho25c - TDS * 0.000001)
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 8) = pptTrot * 87910 * (rho25c - TDS * 0.000001)
    'Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 10) = pptPyrr * 87910 * (rho25c - TDS * 0.000001)
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 10) = pptZnS * 97440 * (rho25c - TDS * 0.000001)
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 12) = pptCaF2 * 78080 * (rho25c - TDS / 1000000#)
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 15) = pptFeCO3_NoMassTransfer * 115861 * (rho25c - TDS * 0.000001)
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 17) = pptZnCO3 * 125417 * (rho25c - TDS * 0.000001)
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 19) = pptPbS * 239265 * (rho25c - TDS * 0.000001)
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 21) = pptSrCO3 * 147639 * (rho25c - TDS * 0.000001)
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 23) = pptBaCO3 * 197349 * (rho25c - TDS * 0.000001)
    Worksheets("Silicates").Cells(14 - LoopTP, 4) = pptAmSilica * 60084 * (rho25c - TDS * 0.000001)
    Worksheets("Silicates").Cells(14 - LoopTP, 7) = pptQuartz * 60084 * (rho25c - TDS * 0.000001)
    Worksheets("Silicates").Cells(14 - LoopTP, 10) = pptChrysotile * 277110 * (rho25c - TDS * 0.000001) / 2  '/3 corrects for alkalinity issue.
    Worksheets("Silicates").Cells(14 - LoopTP, 13) = pptDiopside * 216550 * (rho25c - TDS * 0.000001) / 2   '/3 corrects for alkalinity issue.
    Worksheets("Silicates").Cells(14 - LoopTP, 16) = pptGreenalite * 371770 * (rho25c - TDS * 0.000001) / 3  '/3 corrects for alkalinity issue.
    Worksheets("Mg(OH)2,Ca(OH)2").Cells(14 - LoopTP, 5) = pptMgOH2 * 58321 * (rho25c - TDS * 0.000001)
    Worksheets("Mg(OH)2,Ca(OH)2").Cells(14 - LoopTP, 8) = pptCaOH2 * 74094 * (rho25c - TDS * 0.000001)
ElseIf usePTB = 1 Then
    Worksheets("Calcite").Cells(14 - LoopTP, 6) = pptCalcite_NoMassTransfer * 100091 * (rho25c - TDS * 0.000001) * 0.35051 'Amont of calcite to ppt to equilibrium.
    Worksheets("barite").Cells(14 - LoopTP, 5) = pptBarite_NoMassTransfer * 233390 * (rho25c - TDS / 1000000#) * 0.35051
    Worksheets("Other SO4s").Cells(14 - LoopTP, 4) = pptGyp * 172172 * (rho25c - TDS / 1000000#) * 0.35051
    Worksheets("Other SO4s").Cells(14 - LoopTP, 6) = pptHemi * 145148 * (rho25c - TDS / 1000000#) * 0.35051
    Worksheets("Other SO4s").Cells(14 - LoopTP, 8) = pptAn * 136140 * (rho25c - TDS / 1000000#) * 0.35051
    Worksheets("Other SO4s").Cells(14 - LoopTP, 10) = pptCel * 183680 * (rho25c - TDS / 1000000#) * 0.35051
    Worksheets("Halite").Cells(14 - LoopTP, 5) = pptHal * 58443 * (Rho25cHalite - TDSHalite / 1000000#) * 0.35051
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 4) = pptFeSAm * 87910 * (rho25c - TDS * 0.000001) * 0.35051
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 6) = pptFeS_NoMassTransfer * 87910 * (rho25c - TDS * 0.000001) * 0.35051
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 8) = pptTrot * 87910 * (rho25c - TDS * 0.000001) * 0.35051
    'Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 10) = pptPyrr * 87910 * (rho25c - TDS * 0.000001)
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 10) = pptZnS * 97440 * (rho25c - TDS * 0.000001) * 0.35051
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 12) = pptCaF2 * 78080 * (rho25c - TDS / 1000000#) * 0.35051
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 15) = pptFeCO3_NoMassTransfer * 115861 * (rho25c - TDS * 0.000001) * 0.35051
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 17) = pptZnCO3 * 125417 * (rho25c - TDS * 0.000001) * 0.35051
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 19) = pptPbS * 239265 * (rho25c - TDS * 0.000001) * 0.35051
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 21) = pptSrCO3 * 147639 * (rho25c - TDS * 0.000001) * 0.35051
    Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 23) = pptBaCO3 * 197349 * (rho25c - TDS * 0.000001) * 0.35051
    Worksheets("Silicates").Cells(14 - LoopTP, 4) = pptAmSilica * 60084 * (rho25c - TDS * 0.000001) * 0.35051
    Worksheets("Silicates").Cells(14 - LoopTP, 7) = pptQuartz * 60084 * (rho25c - TDS * 0.000001) * 0.35051
    Worksheets("Silicates").Cells(14 - LoopTP, 10) = pptChrysotile * 277110 * (rho25c - TDS * 0.000001) / 2 * 0.35051 '/3 corrects for alkalinity issue.
    Worksheets("Silicates").Cells(14 - LoopTP, 13) = pptDiopside * 216550 * (rho25c - TDS * 0.000001) / 2 * 0.35051  '/3 corrects for alkalinity issue.
    Worksheets("Silicates").Cells(14 - LoopTP, 16) = pptGreenalite * 371770 * (rho25c - TDS * 0.000001) / 3 * 0.35051 '/3 corrects for alkalinity issue.
    Worksheets("Mg(OH)2,Ca(OH)2").Cells(14 - LoopTP, 5) = pptMgOH2 * 58321 * (rho25c - TDS * 0.000001) * 0.35051
    Worksheets("Mg(OH)2,Ca(OH)2").Cells(14 - LoopTP, 8) = pptCaOH2 * 74094 * (rho25c - TDS * 0.000001) * 0.35051
    End If
    
    If RunStat = 1 Then
        If RunStatSICalcSSP = 1 Then
        Worksheets("Halite analysis").Cells(6 + StatTPnob - LoopTP, 7) = pptHal * 58443 * (Rho25cHalite - TDSHalite / 1000000#)
        Worksheets("Halite analysis").Cells(6 + StatTPnob - LoopTP, 8) = rhoTP
        ElseIf RunStatSICalcSSP = 2 Then
            If RunStatGoalSeek = 1 Then
            Worksheets(myname).Cells(11 + StatTPnob - LoopTP, 22) = rhoTP
            Worksheets(myname).Cells(11 + StatTPnob - LoopTP, 21) = pptHal * 58443 * (Rho25cHalite - TDSHalite / 1000000#)
            Else
            Worksheets("Halite analysis").Cells(6 + StatTPnob - LoopTP, 15) = pptHal * 58443 * (Rho25cHalite - TDSHalite / 1000000#)
            Worksheets("Halite analysis").Cells(6 + StatTPnob - LoopTP, 16) = rhoTP
            End If
        ElseIf RunStatSICalcSSP = 3 Then
        Worksheets("Output data sheet").Cells(6 + StatTPnob - LoopTP, 13) = pptHal * 58443 * (Rho25cHalite - TDSHalite / 1000000#)
        Worksheets("Output data sheet").Cells(6 + StatTPnob - LoopTP, 14) = rhoTP
        End If
    End If
    If useEOS = 0 Then
        If Ppsia > PBubblePt Then
          Worksheets("Calcite").Cells(14 - LoopTP, 9) = "Yes"
        Else
          Worksheets("Calcite").Cells(14 - LoopTP, 9) = "No"
        End If
    Else
        If QPBubblePt = 1 Then Worksheets("Calcite").Cells(14 - LoopTP, 9) = "Yes"
        If QPBubblePt = 0 Then Worksheets("Calcite").Cells(14 - LoopTP, 9) = "No"
    End If

    If usePTB = 0 Then Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 4) = pptCalcite_NoMassTransfer * 100091 * (rho25c - TDS * 0.000001)
    If usePTB = 1 Then Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 4) = pptCalcite_NoMassTransfer * 100091 * (rho25c - TDS * 0.000001) * 0.35051
    
    'Dai 2020 deposition
    If Run_MassTransfer = 1 Then
        If usePTB = 0 Then Worksheets("Deposition Prediction").Cells(51 - LoopTP, 7) = pptCalcite_NoMassTransfer * 100091 * (rho25c - TDS * 0.000001)
        If usePTB = 1 Then Worksheets("Deposition Prediction").Cells(51 - LoopTP, 7) = pptCalcite_NoMassTransfer * 100091 * (rho25c - TDS * 0.000001) * 0.35051
    End If
    
    If Run_MassTransfer_WhatIf = 1 Then
        If usePTB = 0 Then Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 7) = pptCalcite_NoMassTransfer * 100091 * (rho25c - TDS * 0.000001)
        If usePTB = 1 Then Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 7) = pptCalcite_NoMassTransfer * 100091 * (rho25c - TDS * 0.000001) * 0.35051
    End If
    
    
    'If SICal > 0 And Run_MassTransfer = 1 Then
    If Run_MassTransfer = 1 Then
        If usePTB = 0 Then Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 5) = pptCalcite_MassTransfer * 100091 * (rho25c - TDS * 0.000001)
        If usePTB = 1 Then Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 5) = pptCalcite_MassTransfer * 100091 * (rho25c - TDS * 0.000001) * 0.35051
        'If mcInit(iCa) > AlkInit Then Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 11) = mcMT(iCa) * 40080 * (rho25c - TDS * 0.000001)
        'If mcInit(iCa) < AlkInit Then Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 11) = AlkMT * 61019 * (rho25c - TDS * 0.000001)
        'Dai 2020 deposition
        If Run_MassTransfer = 1 Then
            If usePTB = 0 Then Worksheets("Deposition Prediction").Cells(51 - LoopTP, 8) = pptCalcite_MassTransfer * 100091 * (rho25c - TDS * 0.000001)
            If usePTB = 1 Then Worksheets("Deposition Prediction").Cells(51 - LoopTP, 8) = pptCalcite_MassTransfer * 100091 * (rho25c - TDS * 0.000001) * 0.35051
            If UseSI = 1 Then Worksheets("Deposition Prediction").Cells(51 - LoopTP, 9) = pptCalcite_MassTransfer_V 'cm/yr
            If UseSI = 0 Then Worksheets("Deposition Prediction").Cells(51 - LoopTP, 9) = pptCalcite_MassTransfer_V * 0.393701 'inch/yr
        End If
        
        If Run_MassTransfer_WhatIf = 1 Then
            'Dai 2020 deposition
            If usePTB = 0 Then Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 8) = pptCalcite_MassTransfer * 100091 * (rho25c - TDS * 0.000001)
            If usePTB = 1 Then Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 8) = pptCalcite_MassTransfer * 100091 * (rho25c - TDS * 0.000001) * 0.35051
            If UseSI = 1 Then Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 9) = pptCalcite_MassTransfer_V 'cm/yr
            If UseSI = 0 Then Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 9) = pptCalcite_MassTransfer_V * 0.393701 'inch/yr
        End If
    End If
    If usePTB = 0 Then Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 7) = pptBarite_NoMassTransfer * 233390 * (rho25c - TDS / 1000000#)
    If usePTB = 1 Then Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 7) = pptBarite_NoMassTransfer * 233390 * (rho25c - TDS / 1000000#) * 0.35051
    
    'Dai 2020 deposition
    If Run_MassTransfer = 1 Then
        If usePTB = 0 Then Worksheets("Deposition Prediction").Cells(51 - LoopTP, 11) = pptBarite_NoMassTransfer * 233390 * (rho25c - TDS * 0.000001)
        If usePTB = 1 Then Worksheets("Deposition Prediction").Cells(51 - LoopTP, 11) = pptBarite_NoMassTransfer * 233390 * (rho25c - TDS * 0.000001) * 0.35051
    End If
    
    If Run_MassTransfer_WhatIf = 1 Then
        If usePTB = 0 Then Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 11) = pptBarite_NoMassTransfer * 233390 * (rho25c - TDS * 0.000001)
        If usePTB = 1 Then Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 11) = pptBarite_NoMassTransfer * 233390 * (rho25c - TDS * 0.000001) * 0.35051
    End If
    
    'If SIBar > 0 And Run_MassTransfer = 1 Then
    If Run_MassTransfer = 1 Then
        If usePTB = 0 Then Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 8) = pptBarite_MassTransfer * 233390 * (rho25c - TDS * 0.000001)
        If usePTB = 1 Then Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 8) = pptBarite_MassTransfer * 233390 * (rho25c - TDS * 0.000001) * 0.35051
        'If mcInit(iBa) > maInit(iSO4) Then Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 12) = mcMT(iBa) * 137330 * (rho25c - TDS * 0.000001)
        'If mcInit(iBa) < maInit(iSO4) Then Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 12) = mcMT(iSO4) * 96064 * (rho25c - TDS * 0.000001)
        'Dai 2020 deposition
        If Run_MassTransfer = 1 Then
            If usePTB = 0 Then Worksheets("Deposition Prediction").Cells(51 - LoopTP, 12) = pptBarite_MassTransfer * 233390 * (rho25c - TDS * 0.000001) 'mg/L
            If usePTB = 1 Then Worksheets("Deposition Prediction").Cells(51 - LoopTP, 12) = pptBarite_MassTransfer * 233390 * (rho25c - TDS * 0.000001) * 0.35051
            If UseSI = 1 Then Worksheets("Deposition Prediction").Cells(51 - LoopTP, 13) = pptBarite_MassTransfer_V 'cm/yr
            If UseSI = 0 Then Worksheets("Deposition Prediction").Cells(51 - LoopTP, 13) = pptBarite_MassTransfer_V * 0.393701 'inch/yr
        End If
        
        'Dai 2020 deposition
        If Run_MassTransfer_WhatIf = 1 Then
            If usePTB = 0 Then Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 12) = pptBarite_MassTransfer * 233390 * (rho25c - TDS * 0.000001) 'mg/L
            If usePTB = 1 Then Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 12) = pptBarite_MassTransfer * 233390 * (rho25c - TDS * 0.000001) * 0.35051
            If UseSI = 1 Then Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 13) = pptBarite_MassTransfer_V 'cm/yr
            If UseSI = 0 Then Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 13) = pptBarite_MassTransfer_V * 0.393701 'inch/yr
        End If
        
    End If
    'If FlowType = 1 Then Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 9) = "L"
    'If FlowType = 2 Then Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 9) = "T"
    
    'Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 13) = pptFeCO3_NoMassTransfer * 115861 * (rho25c - TDS * 0.000001)
    'If SISid > 0 And Run_MassTransfer = 1 Then
    'Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 12) = km(iFeHCO32)
    'Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 14) = pptFeCO3_MassTransfer * 115861 * (rho25c - TDS * 0.000001)
    'End If
    'Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 17) = pptFeS_NoMassTransfer * 87910 * (rho25c - TDS * 0.000001)
    'If SIFeS > 0 And Run_MassTransfer = 1 Then
    'Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 16) = km(iFeHS2)
    'Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 18) = pptFeS_MassTransfer * 87910 * (rho25c - TDS * 0.000001)
    'End If
    'Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 21) = pptCelestite_NoMassTransfer * 147639 * (rho25c - TDS * 0.000001)
    'If SIFeS > 0 And Run_MassTransfer = 1 Then
    'Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 20) = km(iSrSO4)
    'Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 22) = pptCelestite_MassTransfer * 147639 * (rho25c - TDS * 0.000001)
    'End If
    'Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 25) = pptAn * 136140 * (rho25c - TDS * 0.000001)
    'If SIAn > 0 And Run_MassTransfer = 1 Then
    'Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 24) = km(iCaSO4)
    'Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 26) = pptAn_MassTransfer * 136140 * (rho25c - TDS * 0.000001)
    'End If

    If UseSR = 0 Then
        Worksheets("Calcite").Cells(14 - LoopTP, 4) = SICal
        Worksheets("Calcite").Cells(14 - LoopTP, 5) = dSICal
        Worksheets("Calcite").Cells(14 - LoopTP, 10) = SIDol
        Worksheets("Barite").Cells(14 - LoopTP, 3) = SIBar
        Worksheets("Barite").Cells(14 - LoopTP, 4) = dSIBar
        Worksheets("Other SO4s").Cells(14 - LoopTP, 3) = SIGyp
        Worksheets("Other SO4s").Cells(14 - LoopTP, 5) = SIHemi
        Worksheets("Other SO4s").Cells(14 - LoopTP, 7) = SIAn
        Worksheets("Other SO4s").Cells(14 - LoopTP, 9) = SICel
        Worksheets("Halite").Cells(14 - LoopTP, 3) = SIHal
        Worksheets("Halite").Cells(14 - LoopTP, 4) = dSIHal
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 3) = SIFeSAm
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 5) = SIFeS
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 7) = SITrot
        'Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 9) = SIPyrr
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 9) = SIZnS
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 11) = SICaF2
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 13) = SISid
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 14) = dSISid
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 16) = SIZnCO3
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 18) = SIPbS
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 20) = SISrCO3
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 22) = SIBaCO3
        Worksheets("Mg(OH)2,Ca(OH)2").Cells(14 - LoopTP, 7) = SICaOH2
        Worksheets("Mg(OH)2,Ca(OH)2").Cells(14 - LoopTP, 4) = SIMgOH2
        Worksheets("Silicates").Cells(14 - LoopTP, 3) = SIAmSilica
        Worksheets("Silicates").Cells(14 - LoopTP, 6) = SIQuartz
        Worksheets("Silicates").Cells(14 - LoopTP, 9) = SIChrysotile
        Worksheets("Silicates").Cells(14 - LoopTP, 12) = SIDiopside
        Worksheets("Silicates").Cells(14 - LoopTP, 15) = SIGreenalite
        Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 3) = SICal
        Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 6) = SIBar
        'Dai 2020 deposition
        If Run_MassTransfer = 1 Then
            Worksheets("Deposition Prediction").Cells(51 - LoopTP, 6) = SICal
            Worksheets("Deposition Prediction").Cells(51 - LoopTP, 10) = SIBar
        End If
        
        If Run_MassTransfer_WhatIf = 1 Then
            Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 6) = SICal
            Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 10) = SIBar
        End If
    
    '    Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 11) = SISid
    '    Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 15) = SIFeS
    '    Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 19) = SICel
    '    Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 23) = SIAn
        If RunStat = 1 Then
            If RunStatSICalcSSP = 1 Then
            Worksheets("Halite analysis").Cells(6 + StatTPnob - LoopTP, 6) = SIHal
            ElseIf RunStatSICalcSSP = 2 Then
                If RunStatGoalSeek = 1 Then
                Worksheets(myname).Cells(11 + StatTPnob - LoopTP, 20) = SIHal
                Else
                Worksheets("Halite analysis").Cells(6 + StatTPnob - LoopTP, 14) = SIHal
                End If
            ElseIf RunStatSICalcSSP = 3 Then
            Worksheets("Output data sheet").Cells(6 + StatTPnob - LoopTP, 12) = SIHal
            End If
        End If
    Else
        Worksheets("Calcite").Cells(14 - LoopTP, 4) = 10 ^ SICal
        Worksheets("Calcite").Cells(14 - LoopTP, 5) = 10 ^ dSICal
        Worksheets("Calcite").Cells(14 - LoopTP, 10) = 10 ^ SIDol
        Worksheets("Barite").Cells(14 - LoopTP, 3) = 10 ^ SIBar
        Worksheets("Barite").Cells(14 - LoopTP, 4) = 10 ^ (SIBar - SIBarBH)
        Worksheets("Other SO4s").Cells(14 - LoopTP, 3) = 10 ^ SIGyp
        Worksheets("Other SO4s").Cells(14 - LoopTP, 5) = 10 ^ SIHemi
        Worksheets("Other SO4s").Cells(14 - LoopTP, 7) = 10 ^ SIAn
        Worksheets("Other SO4s").Cells(14 - LoopTP, 9) = 10 ^ SICel
        Worksheets("Halite").Cells(14 - LoopTP, 3) = 10 ^ SIHal
        Worksheets("Halite").Cells(14 - LoopTP, 4) = 10 ^ dSIHal
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 3) = 10 ^ SIFeSAm
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 5) = 10 ^ SIFeS
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 7) = 10 ^ SITrot
        'Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 9) = 10 ^ SIPyrr
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 9) = 10 ^ SIZnS
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 11) = 10 ^ SICaF2
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 13) = 10 ^ SISid
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 14) = 10 ^ dSISid
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 16) = 10 ^ SIZnCO3
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 18) = 10 ^ SIPbS
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 20) = 10 ^ SISrCO3
        Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 22) = 10 ^ SIBaCO3
        Worksheets("Mg(OH)2,Ca(OH)2").Cells(14 - LoopTP, 7) = 10 ^ SICaOH2
        Worksheets("Mg(OH)2,Ca(OH)2").Cells(14 - LoopTP, 4) = 10 ^ SIMgOH2
        Worksheets("Silicates").Cells(14 - LoopTP, 3) = 10 ^ SIAmSilica
        Worksheets("Silicates").Cells(14 - LoopTP, 6) = 10 ^ SIQuartz
        Worksheets("Silicates").Cells(14 - LoopTP, 9) = 10 ^ SIChrysotile
        Worksheets("Silicates").Cells(14 - LoopTP, 12) = 10 ^ SIDiopside
        Worksheets("Silicates").Cells(14 - LoopTP, 15) = 10 ^ SIGreenalite
        Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 3) = 10 ^ SICal
        Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 6) = 10 ^ SIBar
    '    Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 11) = 10 ^ SISid
    '    Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 15) = 10 ^ SIFeS
    '    Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 19) = 10 ^ SICel
    '    Worksheets("Use Mass Transfer").Cells(22 - LoopTP, 23) = 10 ^ SIAn
        'Dai 2020 deposition
        If Run_MassTransfer = 1 Then
            Worksheets("Deposition Prediction").Cells(51 - LoopTP, 6) = 10 ^ SICal
            Worksheets("Deposition Prediction").Cells(51 - LoopTP, 10) = 10 ^ SIBar
        End If
        
        If Run_MassTransfer_WhatIf = 1 Then
            Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 6) = 10 ^ SICal
            Worksheets("Deposition Prediction_WhatIf").Cells(51 - LoopTP + (Iter_MT_WI - 1) * 32, 10) = 10 ^ SIBar
        End If
        
        If RunStat = 1 Then
            If RunStatSICalcSSP = 1 Then
            Worksheets("Halite analysis").Cells(6 + StatTPnob - LoopTP, 6) = 10 ^ SIHal
            ElseIf RunStatSICalcSSP = 2 Then
                If RunStatGoalSeek = 1 Then
                Worksheets(myname).Cells(11 + StatTPnob - LoopTP, 20) = 10 ^ SIHal
                Else
                Worksheets("Halite analysis").Cells(6 + StatTPnob - LoopTP, 14) = 10 ^ SIHal
                End If
            ElseIf RunStatSICalcSSP = 3 Then
            Worksheets("Output data sheet").Cells(6 + StatTPnob - LoopTP, 12) = 10 ^ SIHal
            End If
        End If
    End If
    If H2Oevap <> 1 Then
    If mc(iCa) > 0.0000001 And HCO3 > 0.0000001 Then
    Worksheets("Calcite").Cells(14 - LoopTP, 16) = Worksheets("Calcite").Cells(14 - LoopTP, 1)
    Worksheets("Calcite").Cells(14 - LoopTP, 17) = Worksheets("Calcite").Cells(14 - LoopTP, 2)
    Worksheets("Calcite").Cells(14 - LoopTP, 18) = Worksheets("Calcite").Cells(14 - LoopTP, 4)
    
    If InhNoCal = 5 Or InhNoCal = 7 Or InhNoCal = 8 Or InhNoCal = 9 Or InhNoCal = 10 Or InhNoCal = 14 Or InhNoCal = 18 Then   'Or InhNoCal = 11
    SIRisk(InhNoCal, LoopTP, 2, 2) = Empty
    SIRisk(InhNoCal, LoopTP, 3, 2) = Empty
    End If
    If InhNoCal = 20 Then
    If InhNo1 = 5 Or InhNo1 = 7 Or InhNo1 = 8 Or InhNo1 = 9 Or InhNo1 = 10 Or InhNo1 = 14 Or InhNo1 = 18 Or InhNo2 = 5 Or InhNo2 = 7 Or _
    InhNo2 = 8 Or InhNo2 = 9 Or InhNo2 = 10 Or InhNo2 = 14 Or InhNo2 = 18 Then 'Or InhNo1 = 11   Or InhNo2 = 11
    SIRisk(InhNoCal, LoopTP, 2, 2) = Empty
    SIRisk(InhNoCal, LoopTP, 3, 2) = Empty
    End If
    End If
  
    If UseSR = 0 Then
        Worksheets("Calcite").Cells(14 - LoopTP, 19) = SIRisk(InhNoCal, LoopTP, 1, 2)
        Worksheets("Calcite").Cells(14 - LoopTP, 20) = SIRisk(InhNoCal, LoopTP, 2, 2)
        Worksheets("Calcite").Cells(14 - LoopTP, 21) = SIRisk(InhNoCal, LoopTP, 3, 2)
              
     Else
        Worksheets("Calcite").Cells(14 - LoopTP, 19) = 10 ^ SIRisk(InhNoCal, LoopTP, 1, 2)
        Worksheets("Calcite").Cells(14 - LoopTP, 20) = 10 ^ SIRisk(InhNoCal, LoopTP, 2, 2)
        Worksheets("Calcite").Cells(14 - LoopTP, 21) = 10 ^ SIRisk(InhNoCal, LoopTP, 3, 2)
    End If
    End If

    If mc(iBa) > 0.0000001 And ma(iSO4) > 0.0000001 Then
    Worksheets("Barite").Cells(14 - LoopTP, 16) = Worksheets("Barite").Cells(14 - LoopTP, 1)
    Worksheets("Barite").Cells(14 - LoopTP, 17) = Worksheets("Barite").Cells(14 - LoopTP, 2)
    Worksheets("Barite").Cells(14 - LoopTP, 18) = Worksheets("Barite").Cells(14 - LoopTP, 3)
    If UseSR = 0 Then
    Worksheets("Barite").Cells(14 - LoopTP, 19) = SIRisk(InhNoBar, LoopTP, 1, 1)
    Worksheets("Barite").Cells(14 - LoopTP, 20) = SIRisk(InhNoBar, LoopTP, 2, 1)
    Worksheets("Barite").Cells(14 - LoopTP, 21) = SIRisk(InhNoBar, LoopTP, 3, 1)
    Else
    Worksheets("Barite").Cells(14 - LoopTP, 19) = 10 ^ SIRisk(InhNoBar, LoopTP, 1, 1)
    Worksheets("Barite").Cells(14 - LoopTP, 20) = 10 ^ SIRisk(InhNoBar, LoopTP, 2, 1)
    Worksheets("Barite").Cells(14 - LoopTP, 21) = 10 ^ SIRisk(InhNoBar, LoopTP, 3, 1)
    End If
    End If

    If mc(iCa) > 0.00001 And ma(iSO4) > 0.0001 Then
    If TK > 373.15 Then
        If UseSI = 0 Then
        Worksheets("Other SO4s").Cells(15 - LoopTP, 16) = TF
        Else
        Worksheets("Other SO4s").Cells(15 - LoopTP, 16) = (TF - 32) * 5 / 9
        End If
        Worksheets("Other SO4s").Cells(15 - LoopTP, 17) = Worksheets("Other SO4s").Cells(14 - LoopTP, 2)
        Worksheets("Other SO4s").Cells(15 - LoopTP, 18) = Worksheets("Other SO4s").Cells(14 - LoopTP, 7)
        If UseSR = 0 Then
        Worksheets("Other SO4s").Cells(15 - LoopTP, 19) = SIRisk(InhNoAn, LoopTP, 1, 3)
        Worksheets("Other SO4s").Cells(15 - LoopTP, 20) = SIRisk(InhNoAn, LoopTP, 2, 3)
        Worksheets("Other SO4s").Cells(15 - LoopTP, 21) = SIRisk(InhNoAn, LoopTP, 3, 3)
        Else
        Worksheets("Other SO4s").Cells(15 - LoopTP, 19) = 10 ^ SIRisk(InhNoAn, LoopTP, 1, 3)
        Worksheets("Other SO4s").Cells(15 - LoopTP, 20) = 10 ^ SIRisk(InhNoAn, LoopTP, 2, 3)
        Worksheets("Other SO4s").Cells(15 - LoopTP, 21) = 10 ^ SIRisk(InhNoAn, LoopTP, 3, 3)
        End If
    Else
        If UseSI = 0 Then
        Worksheets("Other SO4s").Cells(15 - LoopTP - 1, 16) = TF            'Skip a row at 100 C
        Else
        Worksheets("Other SO4s").Cells(15 - LoopTP - 1, 16) = (TF - 32) * 5 / 9
        End If
      Worksheets("Other SO4s").Cells(15 - LoopTP - 1, 17) = Worksheets("Other SO4s").Cells(14 - LoopTP, 2)
      Worksheets("Other SO4s").Cells(15 - LoopTP - 1, 18) = Worksheets("Other SO4s").Cells(14 - LoopTP, 3)
      Worksheets("Other SO4s").Cells(15 - LoopTP - 1, 19) = SIRisk(InhNoAn, LoopTP, 1, 3)
      Worksheets("Other SO4s").Cells(15 - LoopTP - 1, 20) = SIRisk(InhNoAn, LoopTP, 2, 3)
      Worksheets("Other SO4s").Cells(15 - LoopTP - 1, 21) = SIRisk(InhNoAn, LoopTP, 3, 3)
    End If
    End If
    
    'Dai 2020 update inhibition model for celestite
    If mc(iSr) > 0.0000001 And ma(iSO4) > 0.0000001 Then
        Worksheets("Other SO4s").Cells(26 - LoopTP, 16) = Worksheets("Other SO4s").Cells(14 - LoopTP, 1) 'T
        Worksheets("Other SO4s").Cells(26 - LoopTP, 17) = Worksheets("Other SO4s").Cells(14 - LoopTP, 2) 'P
        Worksheets("Other SO4s").Cells(26 - LoopTP, 18) = Worksheets("Other SO4s").Cells(14 - LoopTP, 9) 'SI_celestite
        If UseSR = 0 Then
            Worksheets("Other SO4s").Cells(26 - LoopTP, 19) = SIRisk(InhNoCel, LoopTP, 1, 4)
            Worksheets("Other SO4s").Cells(26 - LoopTP, 20) = SIRisk(InhNoCel, LoopTP, 2, 4)
            Worksheets("Other SO4s").Cells(26 - LoopTP, 21) = SIRisk(InhNoCel, LoopTP, 3, 4)
        Else
            Worksheets("Other SO4s").Cells(26 - LoopTP, 19) = 10 ^ SIRisk(InhNoCel, LoopTP, 1, 4)
            Worksheets("Other SO4s").Cells(26 - LoopTP, 20) = 10 ^ SIRisk(InhNoCel, LoopTP, 2, 4)
            Worksheets("Other SO4s").Cells(26 - LoopTP, 21) = 10 ^ SIRisk(InhNoCel, LoopTP, 3, 4)
        End If
    End If
    
    End If ' correspond to H2Oevap<>1
End If    'This end if corresponds to if RunGoalSeek<>1

If LoopTP = 1 Then
        If UseSR = 0 Then
    '    If RunSimpSSP = 0 Then
        Worksheets("Input").Cells(13, 9) = SICal:
        Worksheets("Input").Cells(15, 9) = SIBar
        Worksheets("Input").Cells(17, 9) = SIHal
        Worksheets("Input").Cells(19, 9) = SIGyp
        Worksheets("Input").Cells(21, 9) = SIHemi
        Worksheets("Input").Cells(23, 9) = SIAn
        Worksheets("Input").Cells(25, 9) = SICel
        Worksheets("Input").Cells(27, 9) = SIFeS
        Worksheets("Input").Cells(29, 9) = SIZnS
        Worksheets("Input").Cells(31, 9) = SICaF2
        Worksheets("Input").Cells(33, 9) = SISid
        Worksheets("Input").Cells(35, 9) = SIAmSilica
        Worksheets("Input").Cells(37, 9) = SIQuartz
        Worksheets("Input").Cells(39, 9) = SIChrysotile
        Worksheets("Input").Cells(41, 9) = SIDiopside
        Worksheets("Input").Cells(43, 9) = SIGreenalite
    '    ElseIf RunSimpSSP = 1 And mySheet = "Simplified Input" Then
    '    Worksheets("Simplified Input").Cells(4, 8) = SICal:
    '    Worksheets("Simplified Input").Cells(6, 8) = SIBar
    '    Worksheets("Simplified Input").Cells(8, 8) = SIHal
    '    Worksheets("Simplified Input").Cells(10, 8) = SIGyp
    '    Worksheets("Simplified Input").Cells(12, 8) = SIAn
    '    Worksheets("Simplified Input").Cells(14, 8) = SICel
    '    Worksheets("Simplified Input").Cells(16, 8) = SIFeS
    '    Worksheets("Simplified Input").Cells(18, 8) = SIZnS
    '    Worksheets("Simplified Input").Cells(20, 8) = SIPbS
    '    Worksheets("Simplified Input").Cells(22, 8) = SISid
    '    End If
        Else
    '    If RunSimpSSP = 0 Then
        Worksheets("Input").Cells(13, 9) = 10 ^ SICal
        Worksheets("Input").Cells(15, 9) = 10 ^ SIBar
        Worksheets("Input").Cells(17, 9) = 10 ^ SIHal
        Worksheets("Input").Cells(19, 9) = 10 ^ SIGyp
        Worksheets("Input").Cells(21, 9) = 10 ^ SIHemi
        Worksheets("Input").Cells(23, 9) = 10 ^ SIAn
        Worksheets("Input").Cells(25, 9) = 10 ^ SICel
        Worksheets("Input").Cells(27, 9) = 10 ^ SIFeS
        Worksheets("Input").Cells(29, 9) = 10 ^ SIZnS
        Worksheets("Input").Cells(31, 9) = 10 ^ SICaF2
        Worksheets("Input").Cells(33, 9) = 10 ^ SISid
        Worksheets("Input").Cells(35, 9) = 10 ^ SIAmSilica
        Worksheets("Input").Cells(37, 9) = 10 ^ SIQuartz
        Worksheets("Input").Cells(39, 9) = 10 ^ SIChrysotile
        Worksheets("Input").Cells(41, 9) = 10 ^ SIDiopside
        Worksheets("Input").Cells(43, 9) = 10 ^ SIGreenalite
    '    ElseIf RunSimpSSP = 1 And mySheet = "Simplified Input" Then
    '    Worksheets("Simplified Input").Cells(4, 8) = 10 ^ SICal:
    '    Worksheets("Simplified Input").Cells(6, 8) = 10 ^ SIBar
    '    Worksheets("Simplified Input").Cells(8, 8) = 10 ^ SIHal
    '    Worksheets("Simplified Input").Cells(10, 8) = 10 ^ SIGyp
    '    Worksheets("Simplified Input").Cells(12, 8) = 10 ^ SIAn
    '    Worksheets("Simplified Input").Cells(14, 8) = 10 ^ SICel
    '    Worksheets("Simplified Input").Cells(16, 8) = 10 ^ SIFeS
    '    Worksheets("Simplified Input").Cells(18, 8) = 10 ^ SIZnS
    '    Worksheets("Simplified Input").Cells(20, 8) = 10 ^ SIPbS
    '    Worksheets("Simplified Input").Cells(22, 8) = 10 ^ SISid
    '
    '    End If
        End If
    '    If RunSimpSSP = 0 Then
        Worksheets("Input").Cells(45, 9).Value = pH_before_precipitation - DpHj   'pH values
        Worksheets("Input").Cells(48, 9).Value = ConcInhCal 'Put inhibitor needed onto Input sheet.
        Worksheets("Input").Cells(50, 9).Value = ConcInhBar
        Worksheets("Input").Cells(52, 9) = ConcInhGyp
        Worksheets("Input").Cells(54, 9) = ConcInhAn
        Worksheets("Input").Cells(56, 9) = ConcInhCel 'Dai 2020 update inhibition model
        Worksheets("Input").Cells(58, 9) = ViscWatIst
        Worksheets("Input").Cells(60, 9) = CpPerMl
        Worksheets("Input").Cells(62, 9) = rhoTP
    '    ElseIf RunSimpSSP = 1 And mySheet = "Simplified Input" Then
    '    Worksheets("Simplified Input").Cells(24, 8).Value = pH_before_precipitation - DpHj   'pH values
    '    Worksheets("Simplified Input").Cells(27, 8).Value = ConcInhCal 'Put inhibitor needed onto Input sheet.
    '    Worksheets("Simplified Input").Cells(29, 8).Value = ConcInhBar
    '    Worksheets("Simplified Input").Cells(31, 8) = ConcInhAn
    '    Worksheets("Simplified Input").Cells(33, 8) = rhoTP
    '
    '    End If
End If
If RunGoalSeek <> 1 Then  'If RunGoalSeek =1 LoopTP only run through twice
     If LoopTP = 10 Then
        If UseSR = 0 Then
    '    If RunSimpSSP = 0 Then
        Worksheets("Input").Cells(13, 10) = SICal
        Worksheets("Input").Cells(15, 10) = SIBar
        Worksheets("Input").Cells(19, 10) = SIGyp
        Worksheets("Input").Cells(21, 10) = SIHemi
        Worksheets("Input").Cells(23, 10) = SIAn
        Worksheets("Input").Cells(25, 10) = SICel
        Worksheets("Input").Cells(17, 10) = SIHal
        Worksheets("Input").Cells(31, 10) = SICaF2
        Worksheets("Input").Cells(33, 10) = SISid
        Worksheets("Input").Cells(27, 10) = SIFeS
        Worksheets("Input").Cells(29, 10) = SIZnS
        Worksheets("Input").Cells(35, 10) = SIAmSilica
        Worksheets("Input").Cells(37, 10) = SIQuartz
        Worksheets("Input").Cells(39, 10) = SIChrysotile
        Worksheets("Input").Cells(41, 10) = SIDiopside
        Worksheets("Input").Cells(43, 10) = SIGreenalite
    '    ElseIf RunSimpSSP = 1 And mySheet = "Simplified Input" Then
    '    Worksheets("Simplified Input").Cells(4, 9) = SICal:
    '    Worksheets("Simplified Input").Cells(6, 9) = SIBar
    '    Worksheets("Simplified Input").Cells(8, 9) = SIHal
    '    Worksheets("Simplified Input").Cells(10, 9) = SIGyp
    '    Worksheets("Simplified Input").Cells(12, 9) = SIAn
    '    Worksheets("Simplified Input").Cells(14, 9) = SICel
    '    Worksheets("Simplified Input").Cells(16, 9) = SIFeS
    '    Worksheets("Simplified Input").Cells(18, 9) = SIZnS
    '    Worksheets("Simplified Input").Cells(20, 9) = SIPbS
    '    Worksheets("Simplified Input").Cells(22, 9) = SISid
    '
    '    End If
        Else
    '    If RunSimpSSP = 0 Then
        Worksheets("Input").Cells(13, 10) = 10 ^ SICal
        Worksheets("Input").Cells(15, 10) = 10 ^ SIBar
        Worksheets("Input").Cells(19, 10) = 10 ^ SIGyp
        Worksheets("Input").Cells(21, 10) = 10 ^ SIHemi
        Worksheets("Input").Cells(23, 10) = 10 ^ SIAn
        Worksheets("Input").Cells(25, 10) = 10 ^ SICel
        Worksheets("Input").Cells(17, 10) = 10 ^ SIHal
        Worksheets("Input").Cells(31, 10) = 10 ^ SICaF2
        Worksheets("Input").Cells(31, 10) = 10 ^ SICaF2
        Worksheets("Input").Cells(33, 10) = 10 ^ SISid
        Worksheets("Input").Cells(27, 10) = 10 ^ SIFeS
        Worksheets("Input").Cells(29, 10) = 10 ^ SIZnS
        Worksheets("Input").Cells(35, 10) = 10 ^ SIAmSilica
        Worksheets("Input").Cells(37, 10) = 10 ^ SIQuartz
        Worksheets("Input").Cells(39, 10) = 10 ^ SIChrysotile
        Worksheets("Input").Cells(41, 10) = 10 ^ SIDiopside
        Worksheets("Input").Cells(43, 10) = 10 ^ SIGreenalite
    '    ElseIf RunSimpSSP = 1 And mySheet = "Simplified Input" Then
    '    Worksheets("Simplified Input").Cells(4, 9) = 10 ^ SICal:
    '    Worksheets("Simplified Input").Cells(6, 9) = 10 ^ SIBar
    '    Worksheets("Simplified Input").Cells(8, 9) = 10 ^ SIHal
    '    Worksheets("Simplified Input").Cells(10, 9) = 10 ^ SIGyp
    '    Worksheets("Simplified Input").Cells(12, 9) = 10 ^ SIAn
    '    Worksheets("Simplified Input").Cells(14, 9) = 10 ^ SICel
    '    Worksheets("Simplified Input").Cells(16, 9) = 10 ^ SIFeS
    '    Worksheets("Simplified Input").Cells(18, 9) = 10 ^ SIZnS
    '    Worksheets("Simplified Input").Cells(20, 9) = 10 ^ SIPbS
    '    Worksheets("Simplified Input").Cells(22, 9) = 10 ^ SISid
    '    End If
        End If
    '    If RunSimpSSP = 0 Then
        Worksheets("Input").Cells(45, 10).Value = pH_before_precipitation - DpHj
        Worksheets("Input").Cells(48, 10).Value = ConcInhCal
        Worksheets("Input").Cells(50, 10).Value = ConcInhBar
        Worksheets("Input").Cells(52, 10) = ConcInhGyp
        Worksheets("Input").Cells(54, 10) = ConcInhAn
        Worksheets("Input").Cells(56, 10) = ConcInhCel 'Dai 2020 update inhibition model
        Worksheets("Input").Cells(58, 10) = ViscWatIst
        Worksheets("Input").Cells(60, 10) = CpPerMl
        Worksheets("Input").Cells(62, 10) = rhoTP
    '    ElseIf RunSimpSSP = 1 And mySheet = "Simplified Input" Then
    '    Worksheets("Simplified Input").Cells(24, 9).Value = pH_before_precipitation - DpHj   'pH values
    '    Worksheets("Simplified Input").Cells(27, 9).Value = ConcInhCal 'Put inhibitor needed onto Input sheet.
    '    Worksheets("Simplified Input").Cells(29, 9).Value = ConcInhBar
    '    Worksheets("Simplified Input").Cells(31, 9).Value = ConcInhAn
    '    Worksheets("Simplified Input").Cells(33, 9).Value = rhoTP
    '
    '    End If
    End If
Else   'Correspond to RunGoalseek=1
     If LoopTP = 2 Then
        If UseSR = 0 Then
    '    If RunSimpSSP = 0 Then
        Worksheets("Input").Cells(13, 10) = SICal
        Worksheets("Input").Cells(15, 10) = SIBar
        Worksheets("Input").Cells(19, 10) = SIGyp
        Worksheets("Input").Cells(21, 10) = SIHemi
        Worksheets("Input").Cells(23, 10) = SIAn
        Worksheets("Input").Cells(25, 10) = SICel
        Worksheets("Input").Cells(17, 10) = SIHal
        Worksheets("Input").Cells(31, 10) = SICaF2
        Worksheets("Input").Cells(33, 10) = SISid
        Worksheets("Input").Cells(27, 10) = SIFeS
        Worksheets("Input").Cells(29, 10) = SIZnS
        Worksheets("Input").Cells(35, 10) = SIAmSilica
        Worksheets("Input").Cells(37, 10) = SIQuartz
        Worksheets("Input").Cells(39, 10) = SIChrysotile
        Worksheets("Input").Cells(41, 10) = SIDiopside
        Worksheets("Input").Cells(43, 10) = SIGreenalite
    '    ElseIf RunSimpSSP = 1 And mySheet = "Simplified Input" Then
    '    Worksheets("Simplified Input").Cells(4, 9) = SICal:
    '    Worksheets("Simplified Input").Cells(6, 9) = SIBar
    '    Worksheets("Simplified Input").Cells(8, 9) = SIHal
    '    Worksheets("Simplified Input").Cells(10, 9) = SIGyp
    '    Worksheets("Simplified Input").Cells(12, 9) = SIAn
    '    Worksheets("Simplified Input").Cells(14, 9) = SICel
    '    Worksheets("Simplified Input").Cells(16, 9) = SIFeS
    '    Worksheets("Simplified Input").Cells(18, 9) = SIZnS
    '    Worksheets("Simplified Input").Cells(20, 9) = SIPbS
    '    Worksheets("Simplified Input").Cells(22, 9) = SISid
    '
    '    End If
        Else
    '    If RunSimpSSP = 0 Then
        Worksheets("Input").Cells(13, 10) = 10 ^ SICal
        Worksheets("Input").Cells(15, 10) = 10 ^ SIBar
        Worksheets("Input").Cells(19, 10) = 10 ^ SIGyp
        Worksheets("Input").Cells(21, 10) = 10 ^ SIHemi
        Worksheets("Input").Cells(23, 10) = 10 ^ SIAn
        Worksheets("Input").Cells(25, 10) = 10 ^ SICel
        Worksheets("Input").Cells(17, 10) = 10 ^ SIHal
        Worksheets("Input").Cells(31, 10) = 10 ^ SICaF2
        Worksheets("Input").Cells(31, 10) = 10 ^ SICaF2
        Worksheets("Input").Cells(33, 10) = 10 ^ SISid
        Worksheets("Input").Cells(27, 10) = 10 ^ SIFeS
        Worksheets("Input").Cells(29, 10) = 10 ^ SIZnS
        Worksheets("Input").Cells(35, 10) = 10 ^ SIAmSilica
        Worksheets("Input").Cells(37, 10) = 10 ^ SIQuartz
        Worksheets("Input").Cells(39, 10) = 10 ^ SIChrysotile
        Worksheets("Input").Cells(41, 10) = 10 ^ SIDiopside
        Worksheets("Input").Cells(43, 10) = 10 ^ SIGreenalite
    '    ElseIf RunSimpSSP = 1 And mySheet = "Simplified Input" Then
    '    Worksheets("Simplified Input").Cells(4, 9) = 10 ^ SICal:
    '    Worksheets("Simplified Input").Cells(6, 9) = 10 ^ SIBar
    '    Worksheets("Simplified Input").Cells(8, 9) = 10 ^ SIHal
    '    Worksheets("Simplified Input").Cells(10, 9) = 10 ^ SIGyp
    '    Worksheets("Simplified Input").Cells(12, 9) = 10 ^ SIAn
    '    Worksheets("Simplified Input").Cells(14, 9) = 10 ^ SICel
    '    Worksheets("Simplified Input").Cells(16, 9) = 10 ^ SIFeS
    '    Worksheets("Simplified Input").Cells(18, 9) = 10 ^ SIZnS
    '    Worksheets("Simplified Input").Cells(20, 9) = 10 ^ SIPbS
    '    Worksheets("Simplified Input").Cells(22, 9) = 10 ^ SISid
    '    End If
        End If
    '    If RunSimpSSP = 0 Then
        Worksheets("Input").Cells(45, 10).Value = pH_before_precipitation - DpHj
        Worksheets("Input").Cells(48, 10).Value = ConcInhCal
        Worksheets("Input").Cells(50, 10).Value = ConcInhBar
        Worksheets("Input").Cells(52, 10) = ConcInhGyp
        Worksheets("Input").Cells(54, 10) = ConcInhAn
        Worksheets("Input").Cells(56, 10) = ConcInhCel 'Dai 2020 update inhibition model
        Worksheets("Input").Cells(58, 10) = ViscWatIst
        Worksheets("Input").Cells(60, 10) = CpPerMl
        Worksheets("Input").Cells(62, 10) = rhoTP

    End If
End If 'Correspond to if RunGoalSeek>1
If RunGoalSeek <> 1 Then
    Worksheets("calcite").Range("T3") = "SI(Inh=" & MaxInh / 2 & "mg/L)"
    Worksheets("Calcite").Range("u3") = "SI (Inh=" & MaxInh & "mg/L)"
    Worksheets("Barite").Range("T3") = "SI (Inh=" & MaxInh / 2 & "mg/L)"
    Worksheets("Barite").Range("u3") = "SI (Inh=" & MaxInh & "mg/L)"
    Worksheets("Other SO4s").Range("t3") = "SI (Inh=" & MaxInh / 2 & "mg/L)"
    Worksheets("Other SO4s").Range("u3") = "SI (Inh=" & MaxInh & "mg/L)"
    'Dai 2020 update celestite model
    Worksheets("Other SO4s").Range("t15") = "SI (Inh=" & MaxInh / 2 & "mg/L)"
    Worksheets("Other SO4s").Range("u15") = "SI (Inh=" & MaxInh & "mg/L)"
    ' output well name and MeOH data to each sheet
        nob1 = nob
        If nob > 2 Then nob1 = 2 'Only output 2 well names
        For i = 1 To nob1
          Worksheets("Calcite").Cells(1, i + 1) = WellNameMix(i)
          Worksheets("Barite").Cells(1, i + 1) = WellNameMix(i)
          Worksheets("Halite").Cells(1, i + 1) = WellNameMix(i)
          Worksheets("Other SO4s").Cells(1, i + 1) = WellNameMix(i)
          Worksheets("Sulfides,Fluorite,Carbonates").Cells(1, i + 1) = WellNameMix(i)
          Worksheets("Silicates").Cells(1, i + 1) = WellNameMix(i)
          Worksheets("Mg(OH)2,Ca(OH)2").Cells(1, i + 1) = WellNameMix(i)
        Next i
        If UseSI = 0 Then
        Worksheets("Calcite").Cells(1, 15) = mass_MeOH / 0.7914 / 159  '159 L per barrel (oil) is accurate to 5 sig. figures, 158.987 L = 1 Barrel (oil)
        Worksheets("Calcite").Cells(1, 12) = mass_MEG / 1.1135 / 159
        Worksheets("Barite").Cells(2, 13) = mass_MeOH / 0.7914 / 159
        Worksheets("Barite").Cells(3, 13) = mass_MEG / 1.1135 / 159
        Worksheets("Halite").Cells(2, 13) = mass_MeOH / 0.7914 / 159
        Worksheets("Halite").Cells(3, 13) = mass_MEG / 1.1135 / 159
        Worksheets("Other SO4s").Cells(2, 14) = mass_MeOH / 0.7914 / 159
        Worksheets("Other SO4s").Cells(3, 14) = mass_MEG / 1.1135 / 159
        Else
        Worksheets("Calcite").Cells(1, 15) = mass_MeOH / 0.7914 / 159 * 0.159
        Worksheets("Calcite").Cells(1, 10) = mass_MEG / 1.1135 / 159 * 0.159
        Worksheets("Barite").Cells(2, 13) = mass_MeOH / 0.7914 / 159 * 0.159
        Worksheets("Barite").Cells(3, 13) = mass_MEG / 1.1135 / 159 * 0.159
        Worksheets("Halite").Cells(2, 13) = mass_MeOH / 0.7914 / 159 * 0.159
        Worksheets("Halite").Cells(3, 13) = mass_MEG / 1.1135 / 159 * 0.159
        Worksheets("Other SO4s").Cells(2, 14) = mass_MeOH / 0.7914 / 159 * 0.159
        Worksheets("Other SO4s").Cells(3, 14) = mass_MEG / 1.1135 / 159 * 0.159
        End If
          
    '*************************************************
    If OutPutActCoefs = 1 Then
      Worksheets("Calcite").Cells(14 - LoopTP, 24) = TF
      Worksheets("Calcite").Cells(14 - LoopTP, 25) = Ppsia
      If UseSI = 1 Then Worksheets("Calcite").Cells(14 - LoopTP, 24) = (TF - 32) * 5 / 9
      If UseSI = 1 Then Worksheets("Calcite").Cells(14 - LoopTP, 25) = Ppsia / 14.503774
      Worksheets("Calcite").Cells(14 - LoopTP, 26) = aH2O
      Worksheets("Calcite").Cells(14 - LoopTP, 27) = gCat(iH)
      Worksheets("Calcite").Cells(14 - LoopTP, 28) = gAn(iOH)
      Worksheets("Calcite").Cells(14 - LoopTP, 29) = gCat(iCa)
      Worksheets("Calcite").Cells(14 - LoopTP, 30) = gCat(iMg)
      Worksheets("Calcite").Cells(14 - LoopTP, 31) = gAn(iHCO3)
      Worksheets("Calcite").Cells(14 - LoopTP, 32) = gAn(iCO3)
      Worksheets("Calcite").Cells(14 - LoopTP, 33) = gAn(iAc)
    '  ' Output equilibrium constant for in-house
    '   Worksheets("Calcite").Cells(14 - LoopTP, 42) = gNeut(iHAcaq)
    '   Worksheets("Calcite").Cells(14 - LoopTP, 43) = gNeut(iCO2aq)
    '   Worksheets("Calcite").Cells(14 - LoopTP, 44) = gGas(iCO2g)
    '   Worksheets("Calcite").Cells(14 - LoopTP, 45) = -Log10(KgwCO2 * 14.696)
    '   Worksheets("Calcite").Cells(14 - LoopTP, 46) = -Log10(K1H2CO3)
    '   Worksheets("Calcite").Cells(14 - LoopTP, 47) = -Log10(K2HCO3)
    '   Worksheets("Calcite").Cells(14 - LoopTP, 48) = -Log10(KspCalcite)
    '   Worksheets("Calcite").Cells(14 - LoopTP, 49) = -Log10(KHAc)
    '   Worksheets("Calcite").Cells(14 - LoopTP, 50) = -Log10(KH2O)
    '   Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 30) = gNeut(iH2Saq)
    '   Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 31) = gGas(iH2Sg)
    '   Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 32) = -Log10(KgwH2S * 14.696)
    '   Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 33) = -Log10(K1H2S)
    '   Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 34) = -Log10(KspSiderite)
    '   Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 35) = -Log10(KspFeS)
    '
      Worksheets("Barite").Cells(14 - LoopTP, 23) = TF
      Worksheets("Barite").Cells(14 - LoopTP, 24) = Ppsia
      If UseSI = 1 Then Worksheets("Barite").Cells(14 - LoopTP, 23) = (TF - 32) * 5 / 9
      If UseSI = 1 Then Worksheets("Barite").Cells(14 - LoopTP, 24) = Ppsia / 14.503774
      Worksheets("Barite").Cells(14 - LoopTP, 25) = gCat(iBa)
      Worksheets("Barite").Cells(14 - LoopTP, 26) = gAn(iSO4)
      Worksheets("Other SO4s").Cells(14 - LoopTP, 24) = TF
      Worksheets("Other SO4s").Cells(14 - LoopTP, 25) = Ppsia
      If UseSI = 1 Then Worksheets("Other SO4s").Cells(14 - LoopTP, 24) = (TF - 32) * 5 / 9
      If UseSI = 1 Then Worksheets("Other SO4s").Cells(14 - LoopTP, 25) = Ppsia / 14.503774
      Worksheets("Other SO4s").Cells(14 - LoopTP, 26) = gCat(iSr)
      Worksheets("Other SO4s").Cells(14 - LoopTP, 27) = gAn(iSO4)
      Worksheets("Halite").Cells(14 - LoopTP, 15) = TF
      Worksheets("Halite").Cells(14 - LoopTP, 16) = Ppsia
      If UseSI = 1 Then Worksheets("Halite").Cells(14 - LoopTP, 15) = (TF - 32) * 5 / 9
      If UseSI = 1 Then Worksheets("Halite").Cells(14 - LoopTP, 16) = Ppsia / 14.503774
      Worksheets("Halite").Cells(14 - LoopTP, 17) = gCat(iNa)
      Worksheets("Halite").Cells(14 - LoopTP, 18) = gAn(iCl)
      Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 26) = TF
      Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 27) = Ppsia
      If UseSI = 1 Then Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 26) = (TF - 32) * 5 / 9
      If UseSI = 1 Then Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 27) = Ppsia / 14.503774
      Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 28) = gCat(iFe)
      Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 29) = gCat(iZn)
      Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 30) = gAn(intF)
      Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 31) = gAn(iHS)
      Worksheets("Sulfides,Fluorite,Carbonates").Cells(14 - LoopTP, 32) = gCat(iPb) 'Dai 2020 added
      
      Worksheets("Silicates").Cells(14 - LoopTP, 24) = TF 'Dai 2020 added
      Worksheets("Silicates").Cells(14 - LoopTP, 25) = Ppsia
      If UseSI = 1 Then Worksheets("Silicates").Cells(14 - LoopTP, 24) = (TF - 32) * 5 / 9
      If UseSI = 1 Then Worksheets("Silicates").Cells(14 - LoopTP, 25) = Ppsia / 14.503774
      Worksheets("Silicates").Cells(14 - LoopTP, 26) = gNeut(iH4SiO4aq)
      
    End If
End If 'Correspond to if RunGoalSeek<>1
End Sub
'Sub loopTPNORMWrite()
'If UseSI = 1 Then Worksheets("NORM").Cells(14 - LoopTP, 1) = (TF - 32) * 5 / 9
'If UseSI = 1 Then Worksheets("NORM").Cells(14 - LoopTP, 2) = Ppsia / 14.503774
'Worksheets("NORM").Cells(14 - LoopTP, 5) = ConcInhBar
'    If UseSR = 0 Then
'Worksheets("NORM").Cells(14 - LoopTP, 3) = SIBar
'Worksheets("NORM").Cells(14 - LoopTP, 9) = SIAn
'    Else
'     Worksheets("NORM").Cells(14 - LoopTP, 3) = 10 ^ SIBar
'Worksheets("NORM").Cells(14 - LoopTP, 9) = 10 ^ SIAn
'End If
'Worksheets("NORM").Cells(14 - LoopTP, 4) = pptBarite_NoMassTransfer * 233390 * (rho25c - TDS / 1000000#)
'Worksheets("NORM").Cells(14 - LoopTP, 6) = RaBaSO4ppt * 226 * 1000000000000# * (rho25c - TDS / 1000000#)
'Worksheets("NORM").Cells(14 - LoopTP, 7) = (mc(iRa) - RaBaSO4ppt) * 226 * 1000000000000# * (rho25c - TDS / 1000000#)
'Worksheets("NORM").Cells(14 - LoopTP, 8) = VW * 159 * Worksheets("NORM").Cells(14 - LoopTP, 6)
'Worksheets("NORM").Cells(14 - LoopTP, 10) = pptAn * 136140 * (rho25c - TDS / 1000000#)
'Worksheets("NORM").Cells(14 - LoopTP, 11) = RaCaSO4ppt * 226 * 1000000000000# * (rho25c - TDS / 1000000#)
'Worksheets("NORM").Cells(14 - LoopTP, 12) = (mc(iRa) - RaCaSO4ppt) * 226 * 1000000000000# * (rho25c - TDS / 1000000#)
'Worksheets("NORM").Cells(14 - LoopTP, 13) = VW * 159 * Worksheets("NORM").Cells(14 - LoopTP, 11)
'Worksheets("NORM").Cells(14 - LoopTP, 15) = pptCel * 183680 * (rho25c - TDS / 1000000#)
'Worksheets("NORM").Cells(14 - LoopTP, 16) = RaSrSO4ppt * 226 * 1000000000000# * (rho25c - TDS / 1000000#)
'Worksheets("NORM").Cells(14 - LoopTP, 17) = (mc(iRa) - RaSrSO4ppt) * 226 * 1000000000000# * (rho25c - TDS / 1000000#)
'Worksheets("NORM").Cells(14 - LoopTP, 18) = VW * 159 * Worksheets("NORM").Cells(14 - LoopTP, 16)
'If LoopTP = 1 Then
'        If UseSR = 0 Then
'        Worksheets("Input").Cells(13, 9) = SICal:
'        Worksheets("Input").Cells(15, 9) = SIBar
'        Worksheets("Input").Cells(17, 9) = SIHal
'        Worksheets("Input").Cells(19, 9) = SIGyp
'        Worksheets("Input").Cells(21, 9) = SIHemi
'        Worksheets("Input").Cells(23, 9) = SIAn
'        Worksheets("Input").Cells(25, 9) = SICel
'        Worksheets("Input").Cells(27, 9) = SIFeS
'        Worksheets("Input").Cells(29, 9) = SIZnS
'        Worksheets("Input").Cells(31, 9) = SICaF2
'        Worksheets("Input").Cells(33, 9) = SISid
'        Worksheets("Input").Cells(35, 9) = SIAmSilica
'        Worksheets("Input").Cells(37, 9) = SIQuartz
'        Worksheets("Input").Cells(39, 9) = SIChrysotile
'        Worksheets("Input").Cells(41, 9) = SIDiopside
'        Worksheets("Input").Cells(43, 9) = SIGreenalite
'        Else
'        Worksheets("Input").Cells(13, 9) = 10 ^ SICal
'        Worksheets("Input").Cells(15, 9) = 10 ^ SIBar
'        Worksheets("Input").Cells(17, 9) = 10 ^ SIHal
'        Worksheets("Input").Cells(19, 9) = 10 ^ SIGyp
'        Worksheets("Input").Cells(21, 9) = 10 ^ SIHemi
'        Worksheets("Input").Cells(23, 9) = 10 ^ SIAn
'        Worksheets("Input").Cells(25, 9) = 10 ^ SICel
'        Worksheets("Input").Cells(27, 9) = 10 ^ SIFeS
'        Worksheets("Input").Cells(29, 9) = 10 ^ SIZnS
'        Worksheets("Input").Cells(31, 9) = 10 ^ SICaF2
'        Worksheets("Input").Cells(33, 9) = 10 ^ SISid
'        Worksheets("Input").Cells(35, 9) = 10 ^ SIAmSilica
'        Worksheets("Input").Cells(37, 9) = 10 ^ SIQuartz
'        Worksheets("Input").Cells(39, 9) = 10 ^ SIChrysotile
'        Worksheets("Input").Cells(41, 9) = 10 ^ SIDiopside
'        Worksheets("Input").Cells(43, 9) = 10 ^ SIGreenalite
'        End If
'        Worksheets("Input").Cells(45, 9).Value = pH_before_precipitation - DpHj   'pH values
'        Worksheets("Input").Cells(48, 9).Value = ConcInhCal 'Put inhibitor needed onto Input sheet.
'        Worksheets("Input").Cells(50, 9).Value = ConcInhBar
'        Worksheets("Input").Cells(52, 9) = ConcInhGyp
'        Worksheets("Input").Cells(54, 9) = ConcInhAn
'        Worksheets("Input").Cells(56, 9) = ViscWatIst
'        Worksheets("Input").Cells(58, 9) = CpPerMl
'        Worksheets("Input").Cells(60, 9) = rhoTP
'End If
'     If LoopTP = 10 Then
'        If UseSR = 0 Then
'        Worksheets("Input").Cells(13, 10) = SICal
'        Worksheets("Input").Cells(15, 10) = SIBar
'        Worksheets("Input").Cells(19, 10) = SIGyp
'        Worksheets("Input").Cells(21, 10) = SIHemi
'        Worksheets("Input").Cells(23, 10) = SIAn
'        Worksheets("Input").Cells(25, 10) = SICel
'        Worksheets("Input").Cells(17, 10) = SIHal
'        Worksheets("Input").Cells(31, 10) = SICaF2
'        Worksheets("Input").Cells(33, 10) = SISid
'        Worksheets("Input").Cells(27, 10) = SIFeS
'        Worksheets("Input").Cells(29, 10) = SIZnS
'        Worksheets("Input").Cells(35, 10) = SIAmSilica
'        Worksheets("Input").Cells(37, 10) = SIQuartz
'        Worksheets("Input").Cells(39, 10) = SIChrysotile
'        Worksheets("Input").Cells(41, 10) = SIDiopside
'        Worksheets("Input").Cells(43, 10) = SIGreenalite
'        Else
'        Worksheets("Input").Cells(13, 10) = 10 ^ SICal
'        Worksheets("Input").Cells(15, 10) = 10 ^ SIBar
'        Worksheets("Input").Cells(19, 10) = 10 ^ SIGyp
'        Worksheets("Input").Cells(21, 10) = 10 ^ SIHemi
'        Worksheets("Input").Cells(23, 10) = 10 ^ SIAn
'        Worksheets("Input").Cells(25, 10) = 10 ^ SICel
'        Worksheets("Input").Cells(17, 10) = 10 ^ SIHal
'        Worksheets("Input").Cells(31, 10) = 10 ^ SICaF2
'        Worksheets("Input").Cells(31, 10) = 10 ^ SICaF2
'        Worksheets("Input").Cells(33, 10) = 10 ^ SISid
'        Worksheets("Input").Cells(27, 10) = 10 ^ SIFeS
'        Worksheets("Input").Cells(29, 10) = 10 ^ SIZnS
'        Worksheets("Input").Cells(35, 10) = 10 ^ SIAmSilica
'        Worksheets("Input").Cells(37, 10) = 10 ^ SIQuartz
'        Worksheets("Input").Cells(39, 10) = 10 ^ SIChrysotile
'        Worksheets("Input").Cells(41, 10) = 10 ^ SIDiopside
'        Worksheets("Input").Cells(43, 10) = 10 ^ SIGreenalite
'        End If
'        Worksheets("Input").Cells(45, 10).Value = pH_before_precipitation - DpHj
'        Worksheets("Input").Cells(48, 10).Value = ConcInhCal
'        Worksheets("Input").Cells(50, 10).Value = ConcInhBar
'        Worksheets("Input").Cells(52, 10) = ConcInhGyp
'        Worksheets("Input").Cells(54, 10) = ConcInhAn
'        Worksheets("Input").Cells(56, 10) = ViscWatIst
'        Worksheets("Input").Cells(58, 10) = CpPerMl
'        Worksheets("Input").Cells(60, 10) = rhoTP
'    End If
'End Sub
Sub LoopTPWrite1000Cases()
If LoopTP = 1 Then
    Worksheets("Input_1000_Cases").Cells(81, LoopTP1000Cases + 2).Value = pH_before_precipitation - DpHj 'pH values
    Worksheets("Input_1000_Cases").Cells(82, LoopTP1000Cases + 2) = SICal
    Worksheets("Input_1000_Cases").Cells(84, LoopTP1000Cases + 2) = SIBar
    Worksheets("Input_1000_Cases").Cells(86, LoopTP1000Cases + 2) = SIHal
    Worksheets("Input_1000_Cases").Cells(88, LoopTP1000Cases + 2) = SIGyp
    Worksheets("Input_1000_Cases").Cells(90, LoopTP1000Cases + 2) = SIHemi
    Worksheets("Input_1000_Cases").Cells(92, LoopTP1000Cases + 2) = SIAn
    Worksheets("Input_1000_Cases").Cells(94, LoopTP1000Cases + 2) = SICel
    Worksheets("Input_1000_Cases").Cells(96, LoopTP1000Cases + 2) = SIFeSAm
    Worksheets("Input_1000_Cases").Cells(98, LoopTP1000Cases + 2) = SIFeS
    Worksheets("Input_1000_Cases").Cells(100, LoopTP1000Cases + 2) = SITrot
    Worksheets("Input_1000_Cases").Cells(102, LoopTP1000Cases + 2) = SIZnS
    Worksheets("Input_1000_Cases").Cells(104, LoopTP1000Cases + 2) = SIPbS
    Worksheets("Input_1000_Cases").Cells(106, LoopTP1000Cases + 2) = SISid
'    'Xin 12/1/2020 FeS check
'    Worksheets("Input_1000_Cases").Cells(136, LoopTP1000Cases + 2) = gCat(iFe)
'
'
'    'Dai 2020 for gypsum
'    Worksheets("Input_1000_Cases").Cells(141, LoopTP1000Cases + 2) = gCat(iCa)
'    Worksheets("Input_1000_Cases").Cells(142, LoopTP1000Cases + 2) = gAn(iSO4)
'    Worksheets("Input_1000_Cases").Cells(143, LoopTP1000Cases + 2) = (gCat(iCa) * gAn(iSO4)) ^ 0.5
    
    If usePTB = 0 Then
    Worksheets("Input_1000_Cases").Cells(83, LoopTP1000Cases + 2) = pptCalcite_NoMassTransfer * 100091 * (rho25c - TDS * 0.000001) 'Amont of calcite to ppt to equilibrium.
    Worksheets("Input_1000_Cases").Cells(85, LoopTP1000Cases + 2) = pptBarite_NoMassTransfer * 233390 * (rho25c - TDS / 1000000#)
    Worksheets("Input_1000_Cases").Cells(87, LoopTP1000Cases + 2) = pptHal * 58443 * (Rho25cHalite - TDSHalite / 1000000#)
    Worksheets("Input_1000_Cases").Cells(89, LoopTP1000Cases + 2) = pptGyp * 172172 * (rho25c - TDS / 1000000#)
    Worksheets("Input_1000_Cases").Cells(91, LoopTP1000Cases + 2) = pptHemi * 145148 * (rho25c - TDS / 1000000#)
    Worksheets("Input_1000_Cases").Cells(93, LoopTP1000Cases + 2) = pptAn * 136140 * (rho25c - TDS / 1000000#)
    Worksheets("Input_1000_Cases").Cells(95, LoopTP1000Cases + 2) = pptCel * 183680 * (rho25c - TDS / 1000000#)
    Worksheets("Input_1000_Cases").Cells(97, LoopTP1000Cases + 2) = pptFeSAm * 87910 * (rho25c - TDS * 0.000001)
    Worksheets("Input_1000_Cases").Cells(99, LoopTP1000Cases + 2) = pptFeS_NoMassTransfer * 87910 * (rho25c - TDS * 0.000001)
    Worksheets("Input_1000_Cases").Cells(101, LoopTP1000Cases + 2) = pptTrot * 87910 * (rho25c - TDS * 0.000001)
    Worksheets("Input_1000_Cases").Cells(103, LoopTP1000Cases + 2) = pptZnS * 97440 * (rho25c - TDS * 0.000001)
    Worksheets("Input_1000_Cases").Cells(105, LoopTP1000Cases + 2) = pptPbS * 239265 * (rho25c - TDS / 1000000#)
    Worksheets("Input_1000_Cases").Cells(107, LoopTP1000Cases + 2) = pptFeCO3_NoMassTransfer * 115861 * (rho25c - TDS * 0.000001)
    ElseIf usePTB = 1 Then
    Worksheets("Input_1000_Cases").Cells(83, LoopTP1000Cases + 2) = pptCalcite_NoMassTransfer * 100091 * (rho25c - TDS * 0.000001) * 0.35051 'Amont of calcite to ppt to equilibrium.
    Worksheets("Input_1000_Cases").Cells(85, LoopTP1000Cases + 2) = pptBarite_NoMassTransfer * 233390 * (rho25c - TDS / 1000000#) * 0.35051
    Worksheets("Input_1000_Cases").Cells(87, LoopTP1000Cases + 2) = pptHal * 58443 * (Rho25cHalite - TDSHalite / 1000000#) * 0.35051
    Worksheets("Input_1000_Cases").Cells(89, LoopTP1000Cases + 2) = pptGyp * 172172 * (rho25c - TDS / 1000000#) * 0.35051
    Worksheets("Input_1000_Cases").Cells(91, LoopTP1000Cases + 2) = pptHemi * 145148 * (rho25c - TDS / 1000000#) * 0.35051
    Worksheets("Input_1000_Cases").Cells(93, LoopTP1000Cases + 2) = pptAn * 136140 * (rho25c - TDS / 1000000#) * 0.35051
    Worksheets("Input_1000_Cases").Cells(95, LoopTP1000Cases + 2) = pptCel * 183680 * (rho25c - TDS / 1000000#) * 0.35051
    Worksheets("Input_1000_Cases").Cells(97, LoopTP1000Cases + 2) = pptFeSAm * 87910 * (rho25c - TDS * 0.000001) * 0.35051
    Worksheets("Input_1000_Cases").Cells(99, LoopTP1000Cases + 2) = pptFeS_NoMassTransfer * 87910 * (rho25c - TDS * 0.000001) * 0.35051
    Worksheets("Input_1000_Cases").Cells(101, LoopTP1000Cases + 2) = pptTrot * 87910 * (rho25c - TDS * 0.000001) * 0.35051
    Worksheets("Input_1000_Cases").Cells(103, LoopTP1000Cases + 2) = pptZnS * 97440 * (rho25c - TDS * 0.000001) * 0.35051
    Worksheets("Input_1000_Cases").Cells(105, LoopTP1000Cases + 2) = pptPbS * 239265 * (rho25c - TDS / 1000000#) * 0.35051
    Worksheets("Input_1000_Cases").Cells(107, LoopTP1000Cases + 2) = pptFeCO3_NoMassTransfer * 115861 * (rho25c - TDS * 0.000001) * 0.35051
    End If
    
ElseIf LoopTP = 2 Then
    Worksheets("Input_1000_Cases").Cells(81 + 28, LoopTP1000Cases + 2).Value = pH_before_precipitation - DpHj 'pH values
    Worksheets("Input_1000_Cases").Cells(82 + 28, LoopTP1000Cases + 2) = SICal
    Worksheets("Input_1000_Cases").Cells(84 + 28, LoopTP1000Cases + 2) = SIBar
    Worksheets("Input_1000_Cases").Cells(86 + 28, LoopTP1000Cases + 2) = SIHal
    Worksheets("Input_1000_Cases").Cells(88 + 28, LoopTP1000Cases + 2) = SIGyp
    Worksheets("Input_1000_Cases").Cells(90 + 28, LoopTP1000Cases + 2) = SIHemi
    Worksheets("Input_1000_Cases").Cells(92 + 28, LoopTP1000Cases + 2) = SIAn
    Worksheets("Input_1000_Cases").Cells(94 + 28, LoopTP1000Cases + 2) = SICel
    Worksheets("Input_1000_Cases").Cells(96 + 28, LoopTP1000Cases + 2) = SIFeSAm
    Worksheets("Input_1000_Cases").Cells(98 + 28, LoopTP1000Cases + 2) = SIFeS
    Worksheets("Input_1000_Cases").Cells(100 + 28, LoopTP1000Cases + 2) = SITrot
    Worksheets("Input_1000_Cases").Cells(102 + 28, LoopTP1000Cases + 2) = SIZnS
    Worksheets("Input_1000_Cases").Cells(104 + 28, LoopTP1000Cases + 2) = SIPbS
    Worksheets("Input_1000_Cases").Cells(106 + 28, LoopTP1000Cases + 2) = SISid
' 'Xin 12/1/2020 FeS check
'    Worksheets("Input_1000_Cases").Cells(137, LoopTP1000Cases + 2) = gCat(iFe)
    If usePTB = 0 Then
    Worksheets("Input_1000_Cases").Cells(83 + 28, LoopTP1000Cases + 2) = pptCalcite_NoMassTransfer * 100091 * (rho25c - TDS * 0.000001) 'Amont of calcite to ppt to equilibrium.
    Worksheets("Input_1000_Cases").Cells(85 + 28, LoopTP1000Cases + 2) = pptBarite_NoMassTransfer * 233390 * (rho25c - TDS / 1000000#)
    Worksheets("Input_1000_Cases").Cells(87 + 28, LoopTP1000Cases + 2) = pptHal * 58443 * (Rho25cHalite - TDSHalite / 1000000#)
    Worksheets("Input_1000_Cases").Cells(89 + 28, LoopTP1000Cases + 2) = pptGyp * 172172 * (rho25c - TDS / 1000000#)
    Worksheets("Input_1000_Cases").Cells(91 + 28, LoopTP1000Cases + 2) = pptHemi * 145148 * (rho25c - TDS / 1000000#)
    Worksheets("Input_1000_Cases").Cells(93 + 28, LoopTP1000Cases + 2) = pptAn * 136140 * (rho25c - TDS / 1000000#)
    Worksheets("Input_1000_Cases").Cells(95 + 28, LoopTP1000Cases + 2) = pptCel * 183680 * (rho25c - TDS / 1000000#)
    Worksheets("Input_1000_Cases").Cells(97 + 28, LoopTP1000Cases + 2) = pptFeSAm * 87910 * (rho25c - TDS * 0.000001)
    Worksheets("Input_1000_Cases").Cells(99 + 28, LoopTP1000Cases + 2) = pptFeS_NoMassTransfer * 87910 * (rho25c - TDS * 0.000001)
    Worksheets("Input_1000_Cases").Cells(101 + 28, LoopTP1000Cases + 2) = pptTrot * 87910 * (rho25c - TDS * 0.000001)
    Worksheets("Input_1000_Cases").Cells(103 + 28, LoopTP1000Cases + 2) = pptZnS * 97440 * (rho25c - TDS * 0.000001)
    Worksheets("Input_1000_Cases").Cells(105 + 28, LoopTP1000Cases + 2) = pptPbS * 239265 * (rho25c - TDS / 1000000#)
    Worksheets("Input_1000_Cases").Cells(107 + 28, LoopTP1000Cases + 2) = pptFeCO3_NoMassTransfer * 115861 * (rho25c - TDS * 0.000001)
    ElseIf usePTB = 1 Then
    Worksheets("Input_1000_Cases").Cells(83 + 28, LoopTP1000Cases + 2) = pptCalcite_NoMassTransfer * 100091 * (rho25c - TDS * 0.000001) * 0.35051 'Amont of calcite to ppt to equilibrium.
    Worksheets("Input_1000_Cases").Cells(85 + 28, LoopTP1000Cases + 2) = pptBarite_NoMassTransfer * 233390 * (rho25c - TDS / 1000000#) * 0.35051
    Worksheets("Input_1000_Cases").Cells(87 + 28, LoopTP1000Cases + 2) = pptHal * 58443 * (Rho25cHalite - TDSHalite / 1000000#) * 0.35051
    Worksheets("Input_1000_Cases").Cells(89 + 28, LoopTP1000Cases + 2) = pptGyp * 172172 * (rho25c - TDS / 1000000#) * 0.35051
    Worksheets("Input_1000_Cases").Cells(91 + 28, LoopTP1000Cases + 2) = pptHemi * 145148 * (rho25c - TDS / 1000000#) * 0.35051
    Worksheets("Input_1000_Cases").Cells(93 + 28, LoopTP1000Cases + 2) = pptAn * 136140 * (rho25c - TDS / 1000000#) * 0.35051
    Worksheets("Input_1000_Cases").Cells(95 + 28, LoopTP1000Cases + 2) = pptCel * 183680 * (rho25c - TDS / 1000000#) * 0.35051
    Worksheets("Input_1000_Cases").Cells(97 + 28, LoopTP1000Cases + 2) = pptFeSAm * 87910 * (rho25c - TDS * 0.000001) * 0.35051
    Worksheets("Input_1000_Cases").Cells(99 + 28, LoopTP1000Cases + 2) = pptFeS_NoMassTransfer * 87910 * (rho25c - TDS * 0.000001) * 0.35051
    Worksheets("Input_1000_Cases").Cells(101 + 28, LoopTP1000Cases + 2) = pptTrot * 87910 * (rho25c - TDS * 0.000001) * 0.35051
    Worksheets("Input_1000_Cases").Cells(103 + 28, LoopTP1000Cases + 2) = pptZnS * 97440 * (rho25c - TDS * 0.000001) * 0.35051
    Worksheets("Input_1000_Cases").Cells(105 + 28, LoopTP1000Cases + 2) = pptPbS * 239265 * (rho25c - TDS / 1000000#) * 0.35051
    Worksheets("Input_1000_Cases").Cells(107 + 28, LoopTP1000Cases + 2) = pptFeCO3_NoMassTransfer * 115861 * (rho25c - TDS * 0.000001) * 0.35051
    End If
End If
'    Worksheets("Input_1000_Cases").Cells(118, LoopTP + 2) = SumOfCations_M
'    Worksheets("Input_1000_Cases").Cells(119, LoopTP + 2) = SumOfAnions_M
'    Worksheets("Input_1000_Cases").Cells(120, LoopTP + 2) = yCO2_from_QC * 100
'    Worksheets("Input_1000_Cases").Cells(121, LoopTP + 2) = pHMeterReading_from_QC
'    Worksheets("Input_1000_Cases").Cells(122, LoopTP + 2) = Alk_from_QC
'Worksheets("Input_1000_Cases").Cells(114, LoopTP + 2) = gCat(iFe)
'Worksheets("Input_1000_Cases").Cells(115, LoopTP + 2) = HS
'Worksheets("Input_1000_Cases").Cells(116, LoopTP + 2) = gAn(iHS)
'Worksheets("Input_1000_Cases").Cells(117, LoopTP + 2) = H2Saq
'Worksheets("Input_1000_Cases").Cells(118, LoopTP + 2) = gNeut(iH2Saq)
'Worksheets("Input_1000_Cases").Cells(119, LoopTP + 2) = KPFeClSO4
'Worksheets("Input_1000_Cases").Cells(120, LoopTP + 2) = Log10(KspFeS)
'Worksheets("Input_1000_Cases").Cells(121, LoopTP + 2) = Log10(K1H2S)
'Worksheets("Input_1000_Cases").Cells(122, LoopTP + 2) = gHS
'Worksheets("Input_1000_Cases").Cells(123, LoopTP + 2) = gFe
End Sub
Sub CountNOB()

nob = 0: Ncount = 0: NCount_II = 0: nob_Input = 0: nob_InputII = 0: Run1000Cases = 0:
'If RunSimpSSP = 1 Then
'    If Worksheets(mySheet).Range("A2") = 3 Then
'    nob = 2
'    Else
'    nob = 1
'    End If
'    nob_InputII = 0
'    If Worksheets(mySheet).Cells(2, 1) = 1 Then CaseCount(1) = 1
'    If Worksheets(mySheet).Cells(2, 1) = 2 Then CaseCount(1) = 2
'    If Worksheets(mySheet).Cells(2, 1) = 3 Then
'    CaseCount(1) = 1: CaseCount(2) = 2
'    End If
'    If RunGoalSeek = 1 Then
'    nob = 2: CaseCount(1) = 1: CaseCount(2) = 2
'    End If
'ElseIf RunStatReservoirCalc = 1 Then
If RunStatReservoirCalc = 1 Then
    nob = 2: CaseCount(1) = 1: CaseCount(2) = 9

ElseIf RunStatGoalSeek = 1 Then
   nob = 2
    If Worksheets("Halite module").Range("H18").Value = "Use produced water composition" Then
     CaseCount(1) = 1: CaseCount(2) = 9:
     Worksheets("Output data sheet").Range("Q8") = "Produced water"
    End If
     If Worksheets("Halite module").Range("H18").Value = "Use calculated reservoir water composition" Then
    CaseCount(1) = 5: CaseCount(2) = 9:
    Worksheets("Output data sheet").Range("Q8") = "Calculated reservoir water"
    End If
ElseIf RunStatSICalcSSP = 1 Then 'For halite analysis one water
    If Worksheets("Halite module").Range("G33").Value = "Use produced water composition" Then
    nob = 1: CaseCount(1) = 1
    Worksheets("Halite analysis").Range("C3") = "Produced water"
    Worksheets("Halite analysis").Range("b18") = "Figure 1. Plots of halite SI and pressure versus temperature based on calculated reservoir water composition."
    End If
    If Worksheets("Halite module").Range("G33").Value = "Use calculated reservoir water composition" Then
    nob = 1: CaseCount(1) = 5
    Worksheets("Halite analysis").Range("c3") = "Calculated reservoir water"
    Worksheets("Halite analysis").Range("b18") = "Figure 1. Plots of halite SI and pressure versus temperature based on calculated reservoir water composition."

    End If
    If Worksheets("Halite module").Range("G33").Value = "Use fresh water composition" Then
    nob = 1: CaseCount(1) = 9
    Worksheets("Halite analysis").Range("c3") = "Fresh water"
    Worksheets("Halite analysis").Range("b18") = "Figure 1. Plots of halite SI and pressure versus temperature based on calculated reservoir water composition."

    End If
ElseIf RunStatSICalcSSP = 2 Then ' for halite analysis two water mix
    nob = 2: CaseCount(2) = 9
    If Worksheets("Halite module").Range("I33").Value = "Use produced water composition" Then
    CaseCount(1) = 1
    Worksheets("Halite analysis").Range("K3") = "Produced water and fresh water"
    Worksheets("Halite analysis").Range("J18") = "Figure 2. Plots of halite SI/SR and pressure versus temperature based on mixing produced water with fresh water."

    End If
    If Worksheets("Halite module").Range("I33").Value = "Use calculated reservoir water composition" Then
    CaseCount(1) = 5
    Worksheets("Halite analysis").Range("K3") = "Calculated reservoir water and fresh water"
    Worksheets("Halite analysis").Range("J18") = "Plots of halite SI/SR and pressure versus temperature based on mixing produced water with fresh water."
    End If
ElseIf RunStatSICalcSSP = 3 Then  'this is for calculation halite SI for the output data sheet
    If Worksheets("Halite module").Range("H18").Value = "Use produced water composition" Then
    nob = 1: CaseCount(1) = 1
    Worksheets("Output data sheet").Range("J3") = "Produced water"
    End If
    If Worksheets("Halite module").Range("H18").Value = "Use calculated reservoir water composition" Then
    nob = 1: CaseCount(1) = 5
     Worksheets("Output data sheet").Range("J3") = "Calculated reservoir water"
    End If
    
'    If Worksheets("Halite module").Range("G33").Value = "Use fresh water compostion" Then
'    CaseCount(1) = 9
'    End If
ElseIf RunStatMix = 1 Then  ' for halite analysis mixing at different fractions
    nob = 2: CaseCount(2) = 9
    If Worksheets("Halite module").Range("I33").Value = "Use produced water composition" Then
    CaseCount(1) = 1
    Worksheets("Halite analysis").Range("T3") = "Produced water and fresh water"
    Worksheets("Halite analysis").Range("R18") = "Figure 3. Plot of halite SI/SR versus mixing ratio at bottom and surface T and P based on mixing produced water with fresh water."
    End If
    If Worksheets("Halite module").Range("I33").Value = "Use calculated reservoir water composition" Then
    CaseCount(1) = 5
    Worksheets("Halite analysis").Range("T3") = "Calculated reservoir water and fresh water"
    Worksheets("Halite analysis").Range("R18") = "Figure 3. Plot of halite SI/SR versus mixing ratio at bottom and surface T and P based on mixing calculated reservoir water with fresh water."
    End If
'ElseIf RunH2SGUI = 1 Then
'For i = 1 To 5   'Read the check boxes at the top of the Input sheet to determine which wells to use.
'      If Worksheets(mySheet).Cells(3, 2 + i).Value = True Then
'        nob = nob + 1
'        CaseCount(i - Ncount) = i
'      Else
'        Ncount = Ncount + 1
'      End If
'    Next i
'    nob_Input = nob
Else
    For i = 1 To 5   'Read the check boxes at the top of the Input sheet to determine which wells to use.
      If Worksheets("Input").Cells(3, 2 + i).Value = True Then
        nob = nob + 1
        CaseCount(i - Ncount) = i
      Else
        Ncount = Ncount + 1
      End If
    Next i
    nob_Input = nob
    For i = 1 To 100   'Read the check boxes at the top of the Input sheet to determine which wells to use.
      If Worksheets("Input II").Cells(3, 2 + i).Value = True Then
        nob = nob + 1
        CaseCount_II(i - NCount_II) = i
      Else
        NCount_II = NCount_II + 1
      End If
      nob_InputII = nob - nob_Input
    Next i
    If nob_InputII > 0 Then Read_InputII = 1
    If nob = 0 Then
    MsgBox ("No box on Row 3 of the Input sheet is selected. Please check the box(es) on the Input sheets first. Calculation stopped.")
    End
    End If
End If
If Run_Seawater_Mixing = 1 Then
CaseCount(1) = 1: CaseCount(2) = 2: nob = 2
End If
If RunMultiMix = 1 Or RunMultiMixSlb = 1 Then
Ncount = 0: nob = 0
For i = 1 To 5   'Read the check boxes at the top of the Input sheet to determine which wells to use.
If Worksheets("Input").Cells(3, 2 + i).Value = True Then
    nob = nob + 1
    CaseCount(i - Ncount) = i
Else
    Ncount = Ncount + 1
End If
Next i
nob_InputII = 0
nob_Input = nob
If nob = 0 Then
MsgBox ("You must select Brines from the Input Sheet to run. Please check the boxes on Row 3 of the Input sheet and try again")
End
End If
End If

End Sub
'Main purpose of this sub is to read in Input sheet and initial T, P
Sub ReadInputPartA(kk)
If Run10TestCases = 1 And Loop10 > 1 Then GoTo 100
If Run_Seawater_Mixing = 1 And LoopMixing > 1 Then GoTo 100
If Run_MixingTwoWells = 1 And LoopMixing > 1 Then GoTo 100
If RunMultiMix = 1 And LoopResChem > 1 Then GoTo 100
If Worksheets(mySheet).Cells(35, 2).Value = "(kSm^3/D)" Then UseSI = 1

If Worksheets(mySheet).Cells(10, 2).Value = "(m)" Then UseMolal = 1  'Molality is used for input
    SampleDateMix(kk) = Worksheets(mySheet).Cells(5, j + 2)
    WellNameMix(kk) = Worksheets(mySheet).Cells(7, j + 2)
    NaMix(kk) = Worksheets(mySheet).Cells(10, j + 2).Value  'Values are either molality or mg/L
    KMix(kk) = Worksheets(mySheet).Cells(11, j + 2).Value
    MgMix(kk) = Worksheets(mySheet).Cells(12, j + 2).Value
    CaMix(kk) = Worksheets(mySheet).Cells(13, j + 2).Value
    SrMix(kk) = Worksheets(mySheet).Cells(14, j + 2).Value
    BaMix(kk) = Worksheets(mySheet).Cells(15, j + 2).Value
    'FeMix(kk) = Worksheets(mySheet).Cells(16, j + 2).Value
    FeMix(kk) = Worksheets(mySheet).Cells(16, j + 2).Value
    ZnMix(kk) = Worksheets(mySheet).Cells(17, j + 2).Value
    PbMix(kk) = Worksheets(mySheet).Cells(18, j + 2).Value
    ClMix(kk) = Worksheets(mySheet).Cells(19, j + 2).Value
    SO4Mix(kk) = Worksheets(mySheet).Cells(20, j + 2).Value
    FMix(kk) = Worksheets(mySheet).Cells(21, j + 2).Value
    BrMix(kk) = Worksheets(mySheet).Cells(22, j + 2).Value
    TH4SiO4Mix(kk) = Worksheets(mySheet).Cells(23, j + 2).Value
    HCO3AlkMix(kk) = Worksheets(mySheet).Cells(24, j + 2).Value
    CO3AlkMix(kk) = Worksheets(mySheet).Cells(25, j + 2).Value
    TAcMix(kk) = Worksheets(mySheet).Cells(26, j + 2).Value
    TNH4Mix(kk) = Worksheets(mySheet).Cells(27, j + 2).Value
    TH3BO3Mix(kk) = Worksheets(mySheet).Cells(28, j + 2).Value
    yCO2Mix(kk) = Worksheets(mySheet).Cells(31, j + 2).Value / 100
    UseH2SgasMix(kk) = Worksheets(mySheet).Cells(32, j + 2).Value
    If UseH2SgasMix(kk) = 1 Then
    yH2SMix(kk) = Worksheets(mySheet).Cells(33, j + 2).Value / 100
    TH2SaqMix(kk) = 0
    Else
    TH2SaqMix(kk) = Worksheets(mySheet).Cells(33, j + 2).Value
    yH2SMix(kk) = 0
    End If
    pHMeterStpMix(kk) = Worksheets(mySheet).Cells(34, j + 2).Value   'Store values of pH on the input sheet that will not be changed.
    HAlkMix(kk) = Worksheets(mySheet).Cells(47, j + 2).Value
    OHAlkMix(kk) = Worksheets(mySheet).Cells(48, j + 2).Value
    ConcFactor(kk) = Worksheets(mySheet).Cells(49, j + 2).Value
    usepHmix(kk) = Worksheets(mySheet).Cells(51, j + 2).Value
    If usepHmix(kk) = Empty Then usepHmix(kk) = 0
    UseTPpHMix(kk) = Worksheets(mySheet).Cells(53, j + 2).Value
    UseTPVolMix(kk) = Worksheets(mySheet).Cells(54, j + 2).Value
    If nob_Input + nob_InputII = 1 Then
    UseTPCalciteSheet = Worksheets(mySheet).Cells(52, j + 2).Value
    useEOSmix(kk) = Worksheets(mySheet).Cells(55, j + 2).Value
    Else
    UseTPCalciteSheet = Worksheets(MySheetMix).Cells(52, 8).Value
'    UseTPpHMix(kk) = Worksheets(MySheetMix).Cells(53, 8).Value
'    UseTPVolMix(kk) = Worksheets(MySheetMix).Cells(54, 8).Value
    useEOSmix(kk) = Worksheets(MySheetMix).Cells(55, 8).Value ' UseEOSMix for mixed solution IS set on Column H
    End If
    If UseTPCalciteSheet = "" Then UseTPCalciteSheet = 0
    If UseTPpHMix(kk) = "" Then UseTPpHMix(kk) = 0
    If UseTPVolMix(kk) = "" Then UseTPVolMix(kk) = 0
    If useEOSmix(kk) = "" Then useEOSmix(kk) = 0

    TofpH(kk) = Worksheets(mySheet).Cells(58, j + 2).Value
    PofpH(kk) = Worksheets(mySheet).Cells(59, j + 2).Value
    TofVol(kk) = Worksheets(mySheet).Cells(60, j + 2).Value
    PofVol(kk) = Worksheets(mySheet).Cells(61, j + 2).Value
    If RunNORM = 1 Then
    RaMix(kk) = Worksheets(mySheet).Cells(62, j + 2).Value / 1000000000000#
    Else
    RaMix(kk) = 0
    End If

    'GasDensityMix(kk) = Worksheets(mySheet).Cells(62, j + 2).Value
    'OilDensityMix(kk) = Worksheets(mySheet).Cells(63, j + 2).Value
    'WaterDensityMix(kk) = Worksheets(mySheet).Cells(64, j + 2).Value
    useTPVol = UseTPVolMix(kk)
    SumofZMix(kk) = 0
    For iNG = 1 To 14
    zMix(kk, iNG) = Worksheets(mySheet).Cells(65 + iNG, j + 2) / 100:
    SumofZMix(kk) = SumofZMix(kk) + zMix(kk, iNG)
    Next iNG
    If SumofZMix(kk) > 0 Then
    For iNG = 1 To 14
    zMix(kk, iNG) = zMix(kk, iNG) / SumofZMix(kk)
    Next iNG
    End If
    zMix(kk, 15) = 0#
    If RunH2SGUI <> 1 Then MultiplePpt = Worksheets("Input").Range("S11").Value
If RunWhatIf = 1 Then
    If CaseCountWI(Loop1WI) = 1 Then NaMix(kk) = NaWI(Loop1WI, Loop2WI)
    If CaseCountWI(Loop1WI) = 4 Then CaMix(kk) = CaWI(Loop1WI, Loop2WI)
    If CaseCountWI(Loop1WI) = 5 Then SrMix(kk) = SrWI(Loop1WI, Loop2WI)
    If CaseCountWI(Loop1WI) = 6 Then BaMix(kk) = BaWI(Loop1WI, Loop2WI)
    If CaseCountWI(Loop1WI) = 10 Then ClMix(kk) = ClWI(Loop1WI, Loop2WI)
    If CaseCountWI(Loop1WI) = 11 Then SO4Mix(kk) = SO4WI(Loop1WI, Loop2WI)
    If CaseCountWI(Loop1WI) = 15 Then HCO3AlkMix(kk) = HCO3AlkWI(Loop1WI, Loop2WI)
    If CaseCountWI(Loop1WI) = 16 Then CO3AlkMix(kk) = CO3AlkWI(Loop1WI, Loop2WI)
    If CaseCountWI(Loop1WI) = 17 Then TAcMix(kk) = TACWI(Loop1WI, Loop2WI)
    If CaseCountWI(Loop1WI) = 19 Then
    usepHmix(kk) = 0
    yCO2Mix(kk) = YCO2WI(Loop1WI, Loop2WI) / 100
    End If
    If CaseCountWI(Loop1WI) = 20 Then
    yH2SMix(kk) = YH2SWI(Loop1WI, Loop2WI) / 100
    UseH2SgasMix(kk) = 1
    End If
    If CaseCountWI(Loop1WI) = 21 Then
    TH2SaqMix(kk) = TH2SaqWI(Loop1WI, Loop2WI)
    UseH2SgasMix(kk) = 0
    End If
    
    If CaseCountWI(Loop1WI) = 22 Then
    usepHmix(kk) = 1
    pHMeterStpMix(kk) = pHMeterSTPWI(Loop1WI, Loop2WI)
    End If

    If CaseCountWI(Loop1WI) = 32 Then ConcFactor(kk) = ConcFactorWI(Loop1WI, Loop2WI)

End If

If TDSMix(kk) = 0 Or TDSMix(kk) = "" Then  'If the TDS is not measured, then use values in the column to calculate TDS.
If UseMolal = 0 Then
    For iTDS = 1 To 19
        TDSMix(kk) = TDSMix(kk) + Worksheets(mySheet).Cells(9 + iTDS, j + 2).Value
        Next iTDS
    Else
        For iTDS = 1 To 19
        TDSMix(kk) = TDSMix(kk) + Worksheets(mySheet).Cells(9 + iTDS, j + 2).Value * 53459 / 2 'Use corelation of NaCl molal to TDS, initial guess for molality input
        Next iTDS
    End If
End If
If rho_Mix(kk) = 0 Or rho_Mix(kk) = "" Then rho_Mix(kk) = 0.9991 + 0.0000006398 * TDSMix(kk)
If ConcFactor(kk) = 0 Or ConcFactor(kk) = " " Or ConcFactor(kk) < 0 Then ConcFactor(kk) = 1 ' If the cell is leave empty assume a concentration factor=1
If ConcFactor(kk) <> 1 Then    'If the cell value is not equal to 1 then assume a concentration factor of that value
    Run_CalcConcFactor = 1
    VwMix(kk) = VwMix(kk) / ConcFactor(kk)
End If
If UseMolal = 0 Then 'Flag that the Input is as mg/L
    NaMix(kk) = NaMix(kk) / (22990 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk) 'Convert mg/L to molality
    KMix(kk) = KMix(kk) / (39098 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
    MgMix(kk) = MgMix(kk) / (24305 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
    CaMix(kk) = CaMix(kk) / (40080 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
    SrMix(kk) = SrMix(kk) / (87620 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
    BaMix(kk) = BaMix(kk) / (137330 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
    'FeMix(kk) = FeMix(kk) / (55847 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
    FeMix(kk) = FeMix(kk) / (55847 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
    ZnMix(kk) = ZnMix(kk) / (65380 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
    PbMix(kk) = PbMix(kk) / (207200 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk) 'Pb added
    ClMix(kk) = ClMix(kk) / (35450 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
    SO4Mix(kk) = SO4Mix(kk) / (96064 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
    FMix(kk) = FMix(kk) / (18998 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
    BrMix(kk) = BrMix(kk) / (79904 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk) 'Br added
    TH4SiO4Mix(kk) = TH4SiO4Mix(kk) / (28085 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk) 'Input silica as SiO2.
    HCO3AlkMix(kk) = HCO3AlkMix(kk) / (61019 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
    CO3AlkMix(kk) = CO3AlkMix(kk) / (60019 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
    TAcMix(kk) = TAcMix(kk) / (59046 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
    TNH4Mix(kk) = TNH4Mix(kk) / (17031 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
    TH3BO3Mix(kk) = TH3BO3Mix(kk) / (10811 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
    If UseH2SgasMix(kk) = 0 Then TH2SaqMix(kk) = TH2SaqMix(kk) / (34080 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk) 'Used to calculate yH2Sstp
    HAlkMix(kk) = HAlkMix(kk) / (0.9991 - 0.0000003612 * TDSMix(kk)) 'convert N to m
    OHAlkMix(kk) = OHAlkMix(kk) / (0.9991 - 0.0000003612 * TDSMix(kk))
    RaMix(kk) = RaMix(kk) / (226 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
ElseIf UseMolal = 1 Then
    NaMix(kk) = NaMix(kk) * ConcFactor(kk)  'Convert mg/L to molality
    KMix(kk) = KMix(kk) * ConcFactor(kk)
    MgMix(kk) = MgMix(kk) * ConcFactor(kk)
    CaMix(kk) = CaMix(kk) * ConcFactor(kk)
    SrMix(kk) = SrMix(kk) * ConcFactor(kk)
    BaMix(kk) = BaMix(kk) * ConcFactor(kk)
    FeMix(kk) = FeMix(kk) * ConcFactor(kk)
    ZnMix(kk) = ZnMix(kk) * ConcFactor(kk)
    PbMix(kk) = PbMix(kk) * ConcFactor(kk) 'Pb added
    ClMix(kk) = ClMix(kk) * ConcFactor(kk)
    SO4Mix(kk) = SO4Mix(kk) * ConcFactor(kk)
    FMix(kk) = FMix(kk) * ConcFactor(kk)
    BrMix(kk) = BrMix(kk) * ConcFactor(kk) 'Br added
    TH4SiO4Mix(kk) = TH4SiO4Mix(kk) * ConcFactor(kk)  'Input silica as SiO2.
    HCO3AlkMix(kk) = HCO3AlkMix(kk) * ConcFactor(kk)
    CO3AlkMix(kk) = CO3AlkMix(kk) * ConcFactor(kk)
    TAcMix(kk) = TAcMix(kk) * ConcFactor(kk)
    TNH4Mix(kk) = TNH4Mix(kk) * ConcFactor(kk)
    TH3BO3Mix(kk) = TH3BO3Mix(kk) * ConcFactor(kk)
    If UseH2SgasMix(kk) = 0 Then TH2SaqMix(kk) = TH2SaqMix(kk) * ConcFactor(kk) 'Used to calculate yH2Sstp
'    HAlkMix(kk) = HAlkMix(kk) / (0.9991 - 0.0000003612 * TDSMix(kk)) 'convert N to m
'    OHAlkMix(kk) = OHAlkMix(kk) / (0.9991 - 0.0000003612 * TDSMix(kk))
    RaMix(kk) = RaMix(kk) * ConcFactor(kk)
End If
    AlkMix(kk) = HCO3AlkMix(kk) + 2 * CO3AlkMix(kk) - HAlkMix(kk) + OHAlkMix(kk)
    TCO2Mix(kk) = HCO3AlkMix(kk) + CO3AlkMix(kk)
If UseTPCalciteSheet <> 1 Then UseTPCalciteSheet = 0

If Run_Seawater_Mixing = 1 And j = 2 Then ' assume fresh water at equilibrium with atmospheric CO2 only
    yCO2Mix(kk) = 10 ^ -3.5
    yH2SMix(kk) = 0
    TH2SaqMix(kk) = 0
    UseH2SgasMix(kk) = 0
End If
If UseTPpHMix(kk) = 1 Then
If TofpH(kk) = "" And UseSI = 0 Then TofpH(kk) = 77
If PofpH(kk) = "" And UseSI = 0 Then PofpH(kk) = 14.696
If TofpH(kk) = "" And UseSI = 1 Then TofpH(kk) = 25
If PofpH(kk) = "" And UseSI = 1 Then PofpH(kk) = 1
Else
If UseSI = 0 Then
TofpH(kk) = 77: PofpH(kk) = 14.696              'set to 77 F and 14.696 psia as default for pH calculation
Else
TofpH(kk) = 25: PofpH(kk) = 1
End If
End If

If UseTPVolMix(kk) = 1 Then
If TofVol(kk) = "" And UseSI = 0 Then TofVol(kk) = 77 'set default to 77 F
If PofVol(kk) = "" And UseSI = 0 Then PofVol(kk) = 14.696 'set default to 1atm
If TofVol(kk) = "" And UseSI = 1 Then TofVol(kk) = 25
If PofVol(kk) = "" And UseSI = 1 Then PofVol(kk) = 1.013254
Else
If UseSI = 0 Then
TofVol(kk) = 77: PofVol(kk) = 14.696
Else                                                   'set to 77 F and 14.696 psia as default for EOS calculation
TofVol(kk) = 25: PofVol(kk) = 1.013254
End If
End If
yCH4Mix(kk) = 1 - (yCO2Mix(kk) + yH2SMix(kk)) 'assume dry gas as default
If yCH4Mix(kk) < 0 Then yCH4Mix(kk) = 0

If UseH2SgasMix(kk) <> 0 And UseH2SgasMix(kk) <> 1 Then
    MsgBox ("Row 32 is expecting a value of 1 or 0, please enter a vlue of 1 or 0 and rerun")
    End
End If

If yCO2Mix(kk) > 1 Then
    errmsg(1) = 1
    yCO2Mix(kk) = 1
End If
If yCO2Mix(kk) < 0 Then
    errmsg(2) = 2
    yCO2Mix(kk) = 0: yCO2 = 0: CO2aq = 0: HCO3 = 0: CO3 = 0
End If
If yH2SMix(kk) > 1 Then
    errmsg(3) = 3
    yH2SMix(kk) = 1: yH2S = 1: TH2SaqMix(kk) = 0 'This will cause the program to use yH2Sstp as the calculation for TH2Saq instead of the input sheet value.
End If
If yH2SMix(kk) < 0 Then
    errmsg(4) = 4
    yH2SMix(kk) = 0: yH2S = 0:  HS = 0: H2Saq = 0: TH2SaqMix(kk) = 0
End If
100 End Sub
    
 '******** The statements to condition Vw, Vo, Vg for mixing and Multimix, initial guess for Multiflash
 ' All Vw, Vo, Vg, are actual volume for mixing (fresh water, mixing two wells), multiChem, RunWhatIf etc.
 'oil, water and gas density are at T, P or STP
 'Convert all units to Ppsia, PBar, TF, TK, m^3 gas, bbl oil, bbl water,gas density Kg/m^3, oil and water density g/cm^3
Sub ReadInputPartB(kk)
    VgTPMix(kk) = Worksheets(mySheet).Cells(35, j + 2).Value      '1000 ft/d or m^3/d
    VoMix(kk) = Worksheets(mySheet).Cells(36, j + 2).Value
    VwMix(kk) = Worksheets(mySheet).Cells(37, j + 2).Value
    oilAPIgravMix(kk) = Worksheets(mySheet).Cells(43, j + 2).Value   'If no, or 0, the read in the API grav and sp grav and use these to calc. the Pbpt.
    gasSpGravMix(kk) = Worksheets(mySheet).Cells(44, j + 2).Value
    VMeOHMix(kk) = Worksheets(mySheet).Cells(45, j + 2).Value 'Barrels of MeOH added per day to well.
    VMEGMix(kk) = Worksheets(mySheet).Cells(46, j + 2).Value 'Barrels of MEG added per day to well
If RunWhatIf = 1 Then
    If CaseCountWI(Loop1WI) = 25 Then VgTPMix(kk) = VgTPWI(Loop1WI, Loop2WI)
    If CaseCountWI(Loop1WI) = 26 Then VoMix(kk) = VoWI(Loop1WI, Loop2WI)
    If CaseCountWI(Loop1WI) = 27 Then VwMix(kk) = VwWI(Loop1WI, Loop2WI)
End If
If Run_Seawater_Mixing = 1 And LoopMixing = 1 And kk = 1 Then
    VwSW1 = VwMix(1): VgSW1 = VgTPMix(1): VoSW1 = VoMix(1): VMeOHSW1 = VMeOHMix(1): VMEGSW1 = VMEGMix(1)
End If

If Run10TestCases = 1 Then
    usepHmix(kk) = 0
    yCO2Mix(kk) = Worksheets("Calcite").Cells(15 + Loop10, 3) / 100
End If

If RunMultiMix = 1 Then
    VgTPMix(kk) = Worksheets("MultiMix").Cells(2 + LoopResChem, 14 + j).Value
    VoMix(kk) = Worksheets("MultiMix").Cells(2 + LoopResChem, 9 + j).Value
    VwMix(kk) = Worksheets("MultiMix").Cells(2 + LoopResChem, 4 + j).Value
End If
'For Jesse Slb
If RunMultiMixSlb = 1 Then
    VgTPMix(kk) = Worksheets("MultiMix_Slb").Cells(2 + LoopResChem, 14 + j).Value
    VoMix(kk) = Worksheets("MultiMix_Slb").Cells(2 + LoopResChem, 9 + j).Value
    VwMix(kk) = Worksheets("MultiMix_Slb").Cells(2 + LoopResChem, 4 + j).Value
End If
If Run_MixingTwoWells = 1 Then
    VgTPMix(kk) = VgTPMix(kk) * MixFrac(kk)
    VoMix(kk) = VoMix(kk) * MixFrac(kk)
    VwMix(kk) = VwMix(kk) * MixFrac(kk)
    VMeOHMix(kk) = VMeOHMix(kk) * MixFrac(kk)
    VMEGMix(kk) = VMEGMix(kk) * MixFrac(kk)
End If
If Run_Seawater_Mixing = 1 Then
    VwMix(kk) = VwSW1 * MixFrac(kk):
    If kk = 1 Then
    VoMix(kk) = VoSW1 * MixFrac(kk)
    VgTPMix(kk) = VgSW1 * MixFrac(kk)
    VMeOHMix(kk) = VMeOHSW1 * MixFrac(kk):
    VMEGMix(kk) = VMEGSW1 * MixFrac(kk):
    Else
    VoMix(kk) = 0: VgTPMix(kk) = 0: VMeOHMix(kk) = 0: VMEGMix(kk) = 0
    End If
End If
If UseSI = 0 Then
    VgTPMix(kk) = VgTPMix(kk) * 28.31685 'convert 1000 ft^3 to be m^3
    Else
    VgTPMix(kk) = VgTPMix(kk) * 1000 'convert 1000 m3 to m3
End If
If UseSI = 1 Then
    VoMix(kk) = VoMix(kk) / 0.159 'Convert m3 to barrels
    VwMix(kk) = VwMix(kk) / 0.159 'Convert m3 to barrels
    VMeOHMix(kk) = VMeOHMix(kk) / 0.159
    VMEGMix(kk) = VMEGMix(kk) / 0.159
    TofVol(kk) = TofVol(kk) * 9 / 5 + 32 ' Convert Input TC unit to TF unit
    PofVol(kk) = PofVol(kk) * 14.503774 ' Convert Input P (Bar) unit to Ppsia unit
    TofpH(kk) = TofpH(kk) * 9 / 5 + 32 ' Convert Input TC unit to TF unit
    PofpH(kk) = PofpH(kk) * 14.503774 ' Convert Input P (Bar) unit to Ppsia unit
End If
   
TpH = TofpH(kk): PpH = PofpH(kk): TVol = TofVol(kk): Pvol = PofVol(kk)
If oilAPIgravMix(kk) = 0 Or oilAPIgravMix(kk) = "" Then oilAPIgravMix(kk) = 30
If gasSpGravMix(kk) = 0 Or gasSpGravMix(kk) = "" Then gasSpGravMix(kk) = 0.6
If UseTPVolMix(kk) = 0 Then
    mt = fTPFunc(0) ' STP Condition
'    WaterDensityMix(kk) = rho_Mix(kk)
    GasDensityMix(kk) = gasSpGravMix(kk) * (Patm * 28.97 / (0.08206 * TK)) 'unit as Kg/m^3
    OilDensityMix(kk) = (141.5 / (oilAPIgravMix(kk) + 131.5)) * (fH2ODensity(TK, PBar) / 1000) 'conver density from API gravity
Else 'UseTPVolMix(kk) = 1
    mt = fTPFunc(1) ' At T, P of volume data
    GasDensityMix(kk) = gasSpGravMix(kk) * (Patm * 28.97 / (0.08206 * TK)) 'unit as Kg/m^3
    OilDensityMix(kk) = (141.5 / (oilAPIgravMix(kk) + 131.5)) * (fH2ODensity(TK, PBar) / 1000) 'conver density from API gravity
End If

If VgTPMix(kk) = 0 Then VgTPMix(kk) = 1 / 1000000# 'If volume of gas is equal to zero, then add one mL of gas.
If VoMix(kk) = 0 Then VoMix(kk) = 1 / 159 / 1000 'If no oil is reported, add one ml of oil per day, to avoid singularities.
If VwMix(kk) = 0 Then VwMix(kk) = 1 / 159 / 1000  'If no water is reported, add one ml of water per day, to avoid singularities.
If VMeOHMix(kk) > 0 And VMEGMix(kk) > 0 Then
    MsgBox ("MeOH and MEG can not both be > 0.  Please check the Input Sheet and try it again.")
    End
End If
mass_MeOH_mix(kk) = 159 * VMeOHMix(kk) * 0.7914 ' Kg of methanol
mass_MEG_mix(kk) = 159 * VMEGMix(kk) * 1.1098 ' Kg of MEG
QBrineFlow = VwMix(kk) * 159 * 1000 / 86400 'unit cm3/sec  Parameters for mass transfer
SArea = pi * PipeID * PipeL 'Calculate Surface Area contacted by Brine, cm2
radiusC(iCa) = 4.12 'Define Hydrated Cationic Radii, Angstroms
radiusC(iFe) = 4.28
radiusC(iBa) = 4.04
radiusC(iSr) = 4.12
radiusA(iHCO3) = 3.04
radiusA(iHS) = 2.07

 'PHENOMENOLOGICAL THEORY OF ION SOLVATION. EFFECTIVE RADII OF HYDRATED IONS, BY
'E. R. NIGHTINGALE, JR., J. Phys. Chem., 1959, 63 (9), pp 1381-1387
'Back-calculated from tabulated Diffusion Coef for S, HS, and HCO3 from Diffusion of ions in sea water
'and in deep-sea sediments, by Li Yuan-Hui, Sandra Gregory, Geochemical et Cosmochimica Acta,
'Volume 38, Issue 5, May 1974, Pages 703-714,
'http://www.soest.hawaii.edu/oceanography/faculty/yhli/1974a.pdf,
'using McLaughlin factor of 4 instead of 4.71, based on better agreement with tabulated Diffusion Coefs at
'25癈 for CO3 and SO4. IF THIS FACTOR IS CHANGED, RECALCULATE THESE THREE RADII ON
'THE NEW BASIS.

radiusA(iCO3) = 3.94           'Define Hydrated Anionic Radii, Angstroms
radiusA(iSO4) = 3.79
100  End Sub
'******Calculate molality, TDS, density, YCO2, YH2S. This sub only need to run once if the brine composition does not change, which is not true for "WhatIf".
'Note that if useEOS=1 then set pH 7 to calculate density and TDS and molality of ions.
'mc(iH)=1E-7: ma(iOH)=1e-7, mc(iHCO3)=TAlk (m), ma(iAC)=tAC, speciation are skipped.

Sub ReadInputPartC(kk)
mt = fTPFunc(0) 'Densitym TDS, and m calculated at STP condition
If UseTPpHMix(kk) = 1 Then mt = fTPFunc(2)
If Run10TestCases = 1 And Loop10 > 1 Then GoTo 100
If Run_Seawater_Mixing = 1 And LoopMixing > 1 Then GoTo 100
If Run_MixingTwoWells = 1 And LoopMixing > 1 Then GoTo 100
If RunMultiMix = 1 And LoopResChem > 1 Then GoTo 100
If RunStatMix = 1 And LoopMixing > 1 Then GoTo 100
HCO3stpMix(kk) = AlkMix(kk): ACstpMix(kk) = TAcMix(kk): HstpMix(kk) = 0.000001: OHstpMix(kk) = 0.0000001: CO3stpMix(kk) = 0: _
HSstpMix(kk) = 0: NH4STPMix(kk) = TNH4Mix(kk): H2BO3stpMix(kk) = 0: TDS = 0: yH2S = 0: yCO2 = 0
Iteration2 = 0
mc(iH) = HstpMix(kk): mc(iNa) = NaMix(kk): mc(iK) = KMix(kk): mc(iMg) = MgMix(kk): mc(iCa) = CaMix(kk): TCa = mc(iCa)
mc(iSr) = SrMix(kk): mc(iBa) = BaMix(kk): mc(iFe) = FeMix(kk): mc(iZn) = ZnMix(kk): mc(iPb) = PbMix(kk): mc(iRa) = RaMix(kk)
ma(iOH) = OHstpMix(kk): ma(iCl) = ClMix(kk): ma(iAc) = ACstpMix(kk): mc(iNH4) = NH4STPMix(kk): ma(iH2BO3) = H2BO3stpMix(kk)
ma(iHCO3) = HCO3stpMix(kk): ma(iCO3) = CO3stpMix(kk)
ma(iH3SiO4) = 0: ma(iH2SiO4) = 0
ma(iSO4) = SO4Mix(kk): ma(iHS) = HSstpMix(kk): ma(intF) = FMix(kk): ma(iBr) = BrMix(kk)
Alk = AlkMix(kk): TAc = TAcMix(kk): TH2Saq = TH2SaqMix(kk): TH4SiO4 = TH4SiO4Mix(kk): TH3BO3 = TH3BO3Mix(kk): TNH4 = TNH4Mix(kk)
TFe = FeMix(kk): TPb = PbMix(kk): TZn = ZnMix(kk)
mn(iNH3) = 0: mn(iH3BO3) = TH3BO3:
mn(iH4SiO4aq) = TH4SiO4:
use_pH = usepHmix(kk): UseH2Sgas = UseH2SgasMix(kk):
If use_pH = 3 Then
TCO2 = TCO2Mix(kk):
Else
TCO2 = 0
End If
yCO2 = yCO2Mix(kk): yH2S = yH2SMix(kk): 'yCH4 = 1 - yCO2 - yH2S 'assume dry gas
'    If yCH4 < 0 Then yCH4 = 0  '?????????????????????????????????????????????????????????????
    
    If useEOSmix(kk) = 1 And yCO2 = 0 And SumofZMix(kk) > 0 Then yCO2 = zMix(kk, 2) 'if UseEOS=1 then set YCO2 and YH2S to reservoir condition to calculate density and TDS only if the reservoir fluid comp is given
    If useEOSmix(kk) = 1 And yH2S = 0 And SumofZMix(kk) > 0 Then yH2S = zMix(kk, 3)
'    Call C1_ThermodynamicEquilConsts  'Only function of T,P, does not recalculate in D1_CalcDensity
'    Call PengRobinson3
Call D1_CalcDensity(kk) 'Calculate TDS, density and fix molality based on the predicted density and TDS
CalculatedTDSMix(kk) = TDS
HstpMix(kk) = mc(iH): NaMix(kk) = mc(iNa): KMix(kk) = mc(iK): MgMix(kk) = mc(iMg): CaMix(kk) = mc(iCa): TCa = mc(iCa)
SrMix(kk) = mc(iSr): BaMix(kk) = mc(iBa): FeMix(kk) = TFe: ZnMix(kk) = mc(iZn): PbMix(kk) = mc(iPb): RaMix(kk) = mc(iRa)
OHstpMix(kk) = ma(iOH): ClMix(kk) = ma(iCl): ACstpMix(kk) = ma(iAc): NH4STPMix(kk) = mc(iNH4): H2BO3stpMix(kk) = ma(iH2BO3):
HCO3stpMix(kk) = ma(iHCO3):  CO3stpMix(kk) = ma(iCO3)
SO4Mix(kk) = ma(iSO4): HSstpMix(kk) = ma(iHS): FMix(kk) = ma(intF): BrMix(kk) = ma(iBr):
rho25CMix(kk) = rho25c
H3SiO4Mix(kk) = ma(iH3SiO4): H2SiO4Mix(kk) = ma(iH2SiO4):
NH3Mix(kk) = mn(iNH3): H4SiO4Mix(kk) = mn(iH4SiO4aq): H3BO3Mix(kk) = mn(iH3BO3)
CO2aqMix(kk) = mn(iCO2aq): H2SaqMix(kk) = mn(iH2Saq): HACaqMix(kk) = mn(iHAcaq)
AlkMix(kk) = Alk: TAcMix(kk) = TAc: TH2SaqMix(kk) = TH2Saq: TH4SiO4Mix(kk) = TH4SiO4: TNH4Mix(kk) = TNH4:  TH3BO3Mix(kk) = TH3BO3
yCO2Mix(kk) = yCO2: yH2SMix(kk) = yH2S: yCH4Mix(kk) = 1 - yCO2 - yH2S ' Set YCO2 and YH2S to the calculated value if pH option is used.
If UseTPVolMix(kk) = 0 Then WaterDensityMix(kk) = rho25c
If UseMolal = 1 Then
       TDS = 0: CalculateTDSDen = 0 'Calculate TDS from density
        For iden = 2 To NumCat
            CalculateTDSDen = CalculateTDSDen + 0.001 * mc(iden) * MWCat(iden)  '=Sum of g salt/Kg H2O
        Next iden
        For iden = 2 To NumAn
            CalculateTDSDen = CalculateTDSDen + 0.001 * ma(iden) * MWAn(iden)
        Next iden
        For iden = 2 To NumNeut
            CalculateTDSDen = CalculateTDSDen + 0.001 * mn(iden) * MWNeut(iden)
        Next iden
            TDS = CalculateTDSDen / (1 + CalculateTDSDen) * rho25c * 1000000# 'TDS in unit of mg/L,  numerator=(Kgsalt/KgH2O), denometer=(1+Kgsalt/KgH2O)=(Kgsoln/KgH2O);density Kgsoln/Lsoln
        CalculatedTDSMix(kk) = TDS
  End If
100 End Sub
'*****Calculate mass_w, nTCO2, nTH2S, total moles, oil density, gas density
Sub ReadInputPartD(kk, j)
'The values of useEOS, zMix, nTCO2, YCO2, YH2O are reassigned in this sub
'shiCO2aq = worksheets(mysheet).Cells(27, j + 2).Value
'GORMeas = Null:
Dim usedryHC As Integer
'mf_ParametersWereRead = False
For iNG = 1 To 15
zOutput(iNG) = 0
z(iNG) = 0
zMix(kk, iNG) = 0
Next iNG
For iNG = 1 To 2
density(iNG) = 0
Next iNG

If RunStat = 0 Then
    If Run10TestCases = 1 Or Run_MassTransfer = 1 Or Run_Seawater_Mixing = 1 Or Run_MixingTwoWells = 1 Or RunWhatIf = 1 Or RunMultiMix = 1 Then 'set flash off for sub A2-A4 and A6-A8
        If nob_Input + nob_InputII = 1 Then
        Worksheets(mySheet).Cells(55, j + 2).Value = 0
        Else
        Worksheets(MySheetMix).Cells(55, 8).Value = Empty
    End If
End If

    If nob_Input + nob_InputII = 1 Then
        useEOSmix(kk) = Worksheets(mySheet).Cells(55, j + 2).Value
        Else
        useEOSmix(kk) = Worksheets(MySheetMix).Cells(55, 8).Value 'UseEOSMix  values for mixed solution IS set on Column H
    End If
    usedryHC = Worksheets(mySheet).Cells(56, j + 2).Value
    If RunShellMultiflash = 1 Then useEOSmix(kk) = 0
    If useEOSmix(kk) = "" Then useEOSmix(kk) = 0
    If RunMultiMix = 1 Then useEOSmix(kk) = 0

    'Note, since ZMix (kk,i) is reassigned below, the values are re-read from Input sheet at the beginning of this Sub.
    For iNG = 1 To 14
        zMix(kk, iNG) = Worksheets(mySheet).Cells(65 + iNG, j + 2) / 100:
    Next iNG
        zMix(kk, 15) = 0#
End If
    SumofZMix(kk) = 0
    For iNG = 1 To 14
    If zMix(kk, iNG) < 0.0000001 Then zMix(kk, iNG) = 0
    SumofZMix(kk) = SumofZMix(kk) + zMix(kk, iNG)       'count total mole fraction of hydrocarbon+CO2+H2S
    Next iNG
    If SumofZMix(kk) > 0 Then
    For iNG = 1 To 14   'Normalized z(1) to z(14)
    zMix(kk, iNG) = zMix(kk, iNG) / SumofZMix(kk)
    Next iNG
    End If

'Assign local variables for this sub
    mc(iH) = HstpMix(kk): mc(iNa) = NaMix(kk): mc(iK) = KMix(kk): mc(iMg) = MgMix(kk): mc(iCa) = CaMix(kk): TCa = mc(iCa)
    mc(iSr) = SrMix(kk): mc(iBa) = BaMix(kk):  mc(iFe) = FeMix(kk): mc(iZn) = ZnMix(kk): mc(iPb) = PbMix(kk): mc(iRa) = RaMix(kk)
    ma(iOH) = OHstpMix(kk): ma(iCl) = ClMix(kk): ma(iAc) = ACstpMix(kk): mc(iNH4) = NH4STPMix(kk): ma(iH2BO3) = H2BO3stpMix(kk)
    ma(iHCO3) = HCO3stpMix(kk): ma(iCO3) = CO3stpMix(kk)
    ma(iSO4) = SO4Mix(kk): ma(iHS) = HSstpMix(kk): ma(intF) = FMix(kk): ma(iBr) = BrMix(kk)
    Alk = AlkMix(kk): TAc = TAcMix(kk): TNH4 = TNH4Mix(kk): TH3BO3 = TH3BO3Mix(kk): TH2Saq = TH2SaqMix(kk): TCO2 = TCO2Mix(kk)
    VW = VwMix(kk): VgTP = VgTPMix(kk): VO = VoMix(kk): VMeOH = VMeOHMix(kk): VMEG = VMEGMix(kk): mass_MeOH = mass_MeOH_mix(kk): mass_MEG = mass_MEG_mix(kk):
    yCO2 = yCO2Mix(kk): yH2S = yH2SMix(kk): yCH4 = yCH4Mix(kk)   'Local variable values; in this loop only.
    useEOS = useEOSmix(kk):  use_pH = usepHmix(kk): UseH2Sgas = UseH2SgasMix(kk):
TFe = mc(iFe)
For iNG = 1 To 14
    z(iNG) = zMix(kk, iNG)
    If useEOS = 3 Or useEOS = 0 Then z(iNG) = 0
Next iNG
'    If UseSI = 1 Then GORMeas = (VgTP) / (VO * 159 / 1000)  'm3 gas/m3 oil
'    If UseSI = 0 Then GORMeas = (VgTP / 28.31685) / VO  'MCF gas/B oilGORMeas = VgTP / VO
    SGG = gasSpGravMix(kk): API = oilAPIgravMix(kk)
If API > 20 And API < 80 Then mw_oil = 6084 / (API - 5.9) 'Calculate average MW of oil based on Cragoe, C.S.1929 Thermodynamic properties of petroleum products. Miscellaneous pub No. 97, Bureau of Standards, US Dept.Commerce
If API <= 20 Then mw_oil = 6084 / (20 - 5.9)
If API >= 80 Then mw_oil = 6084 / (80 - 5.9)
'Calculate mass of water, oil, moles of water, oil and gas based on the fluid temperature and pressure**********************************************

If UseTPVolMix(kk) = 1 Then mt = fTPFunc(1)  'check T, P for mass_W, mass_O, mol_g calculation
If UseTPVolMix(kk) = 0 Then mt = fTPFunc(0)
    Call CalcIonicStrength
    pH = pHMeterStpMix(kk) + DpHj
    RatioOilBPoints = fRatioOilBPoints
    Call C1_ThermodynamicEquilConsts
    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm) ' Calculate act coeff in the presence of hydrate inhibitor at STP
    Call PengRobinson3
'***Note that if useEOSmix(kk)<>0 then this pH calculation step is omitted. In other word, the pH and speciation is not run if useEOS<>0 here. The speciation was done in ReadInputPartC
    Call C5_CalcpHPCO2PH2SSTP
'******Reassign CO2aq, HCO3, CO3, H2Saq, HS and recalculate ionic strength
    mt = fmn
    Call CalcIonicStrength
    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
    Call C5_CalcpHPCO2PH2SSTP
       
  If UseTPVolMix(kk) = 1 Then WaterDensityMix(kk) = CalcRhoTP(TK, TC, PBar, Patm) 'Use calculated water density at temperation TVol and PVol
    
    mass_o_Mix(kk) = 159 * VoMix(kk) * OilDensityMix(kk) ' These were used for calc nTCO2 and nTH2S in useEOS=0 and useEOS=3. The values were recalculated in useEOS=1 or 2
    mass_w_Mix(kk) = 159 * VwMix(kk) * WaterDensityMix(kk)  'convert to Kg salt water
    mass_w_Mix(kk) = mass_w_Mix(kk) * (1 - CalculatedTDSMix(kk) / rho25CMix(kk) * 0.000001)
    Mass_o = mass_o_Mix(kk): mass_w = mass_w_Mix(kk)
    mt = fTotalCO2H2Smoles 'Calculate the total moles of each gas component (whether in the gas or in oil or water)
    'note that VgTP is in unit of m^3  829 is converted from He's coeff of 78740 when Vg is in unit of MMCF.
    yCO2Mix(kk) = yCO2: yCH4Mix(kk) = yCH4: yH2SMix(kk) = yH2S
    nTCO2Mix(kk) = nTCO2: nTCH4Mix(kk) = nTCH4: nTH2SMix(kk) = nTH2S
    YH2O = PsatH2O(TK) / PBar
    mol_w_Orig = 1000 * mass_w / 18.01528  ' moles of water per day
    If usedryHC = 1 Then
    mol_W = mol_w_Orig
    Else
    mol_W = 1000 * mass_w / 18.01528 + PsatH2O(TK) * VgTP * 1000 / Znew / RBar / TK 'include H2O in the gas phase, only used as initial guess in useEOS>0
    End If
'*****Step 1 Hydrocarbon reconciliation
If useEOS <> 0 Then
    If useEOS = 3 Then
        mol_o = 1000 * Mass_o / mw_oil ' moles of oil per day
        mol_g = VgTP * PBar * 1000 / (Znew * RBar * TK) ' moles of gas per day
        mol_HC = mol_o + mol_g
        If VoMix(kk) = 1 / 159 / 1000 And VgTP = 0.000001 Then 'when gas and oil are both zero and mixing the water
        If nob = 1 Then
        errmsg(14) = 14
        useEOS = 0
        GoTo 3003
        Else
        z_before_precipitation(2) = nTCO2Mix(kk) / mol_W
        z_before_precipitation(3) = nTH2SMix(kk) / mol_W
        z_before_precipitation(15) = 1 - z_before_precipitation(2) - z_before_precipitation(3)
        Total_molesMix(kk) = mol_W
        nTCO2MixEOS(kk) = nTCO2
        nTH2SMixEOS(kk) = nTH2S
        mt = fTPFunc(0)
        If usepHmix(kk) = 1 Then pH = pHMeterStpMix(kk) + DpHj
        Call CalcIonicStrength
        RatioOilBPoints = fRatioOilBPoints
        Call C1_ThermodynamicEquilConsts
        Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm) ' Calculate act coeff in the presence of hydrate inhibitor at STP
        Call PengRobinson3
    '***Note that if useEOSmix(kk)<>0 then this pH calculation step is omitted. In other word, the pH and speciation is not run if useEOS<>0 here. The speciation was done in ReadInputPartC
        Call C5_CalcpHPCO2PH2SSTP
    '******Reassign CO2aq, HCO3, CO3, H2Saq, HS and recalculate ionic strength
        mt = fmn
        Call CalcIonicStrength
        Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
        Call C5_CalcpHPCO2PH2SSTP
        pHMeterReading = pH - DpHj
        GoTo 3003
        End If
        End If
    End If
    If useEOS = 1 Or useEOS = 2 Then
    If SumofZMix(kk) = 0 Then       'Only if hydrocarbon composition is given, run HC reconciliation
        If Run_Seawater_Mixing = 1 Or Run_MixingTwoWells = 1 Then
            GoTo 3002
            Else
                If nob = 1 Then
                errmsg(14) = 14
                useEOS = 0
                GoTo 3003
                Else
                    If mol_W > 0 Then
                    z_before_precipitation(2) = nTCO2Mix(kk) / mol_W
                    z_before_precipitation(3) = nTH2SMix(kk) / mol_W
                    z_before_precipitation(15) = 1 - z_before_precipitation(2) - z_before_precipitation(3)
                    Total_molesMix(kk) = mol_W
                    nTCO2MixEOS(kk) = nTCO2
                    nTH2SMixEOS(kk) = nTH2S
                    GoTo 3003
                    Else
                    errmsg(14) = 14
                    useEOS = 0
                    GoTo 3003
                    End If
                End If
            End If
    Else
        total_moles = 1
                Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
        If beta(1) > 0 And beta(2) > 0 Then 'Two phases
            If VoMix(kk) > 1 / 159 / 1000 Then 'key to oil if vo is greater than 0
            mass_o_Mix(kk) = 159 * VoMix(kk) * density(2) 'Kg
            mol_o = mass_o_Mix(kk) * 1000 / MW_Phase(2)
            mol_g = mol_o / beta(2) * beta(1)
            ElseIf VgTP > 0.000001 Then    'only allow if Vg is greater than 0 and Vo=0
            mol_g = VgTP * PBar * 1000 / (Compr(1) * RBar * TK)
            mol_o = mol_g / beta(1) * beta(2)
            Else 'when no oil and gas volume is given, only allow calculation for mixing
                If Run_Seawater_Mixing = 1 Or Run_MixingTwoWells = 1 Then
                GoTo 3002
                Else
                    If nob = 1 Then
                    mol_g = 0
                    mol_o = 0
                    errmsg(16) = 16
                    useEOS = 0
                    GoTo 3003
                    Else
                        If mol_W > 0 Then
                        z_before_precipitation(2) = nTCO2Mix(kk) / mol_W
                        z_before_precipitation(3) = nTH2SMix(kk) / mol_W
                        z_before_precipitation(15) = 1 - z_before_precipitation(2) - z_before_precipitation(3)
                        Total_molesMix(kk) = mol_W
                        nTCO2MixEOS(kk) = nTCO2
                        nTH2SMixEOS(kk) = nTH2S
                        GoTo 3003
                        Else
                        errmsg(16) = 16
                        useEOS = 0
                        GoTo 3003
                        End If
                    End If
                End If
            End If
        End If
        If beta(1) > 0 And beta(2) = 0 Then 'Only gas phase present
            If VoMix(kk) > 1 / 159 / 1000 Then ' key to oil if vol of oil is present
            If (z(8) + z(9) + z(10) + z(11) + z(12) + z(13)) > 0 Then 'key to oil only if HC greater than C4 are present
                mass_o_Mix(kk) = 159 * VoMix(kk) * density(1) 'Kg
                mol_o = mass_o_Mix(kk) * 1000 / MW_Phase(1)
                mol_g = 0
            Else
                mol_g = VgTP * PBar * 1000 / (Compr(1) * RBar * TK) 'key to gas if no HC greater than C4 present
                mol_o = 0
            End If

            ElseIf VgTP > 0.000001 Then 'key to gas if vol of oil=0
                mol_g = VgTP * PBar * 1000 / (Compr(1) * RBar * TK)
                mol_o = 0
            Else 'if neither oil or gas vol is given
                If Run_Seawater_Mixing = 1 Or Run_MixingTwoWells = 1 Then
                GoTo 3002
                Else
                    If nob = 1 Then
                    mol_g = 0
                    mol_o = 0
                    errmsg(16) = 16
                    useEOS = 0
                    GoTo 3003
                    Else
                        If mol_W > 0 Then
                        z_before_precipitation(2) = nTCO2Mix(kk) / mol_W
                        z_before_precipitation(3) = nTH2SMix(kk) / mol_W
                        z_before_precipitation(15) = 1 - z_before_precipitation(2) - z_before_precipitation(3)
                        Total_molesMix(kk) = mol_W
                        nTCO2MixEOS(kk) = nTCO2
                        nTH2SMixEOS(kk) = nTH2S
                        GoTo 3003
                        Else
                        errmsg(16) = 16
                        useEOS = 0
                        GoTo 3003
                        End If
                    End If
                End If
            End If
         End If
         If beta(1) = 0 And beta(2) > 0 Then
            If VoMix(kk) > 1 / 159 / 1000 Then ' key to oil if vol of oil is present
                mass_o_Mix(kk) = 159 * VoMix(kk) * density(2) 'Kg
                mol_o = mass_o_Mix(kk) * 1000 / MW_Phase(2)
                mol_g = 0
            ElseIf VgTP > 0.000001 Then 'key to gas if vol of oil=0
                mol_g = VgTP * PBar * 1000 / (Compr(2) * RBar * TK)
                mol_o = 0
            Else 'if neither oil or gas vol is given
                If Run_Seawater_Mixing = 1 Or Run_MixingTwoWells = 1 Then
                GoTo 3002
                Else
                    If nob = 1 Then

                    errmsg(16) = 16
                    useEOS = 0
                    GoTo 3003
                    Else
                        If mol_W > 0 Then
                        z_before_precipitation(2) = nTCO2Mix(kk) / mol_W
                        z_before_precipitation(3) = nTH2SMix(kk) / mol_W
                        z_before_precipitation(15) = 1 - z_before_precipitation(2) - z_before_precipitation(3)
                        Total_molesMix(kk) = mol_W
                        nTCO2MixEOS(kk) = nTCO2
                        nTH2SMixEOS(kk) = nTH2S
                        GoTo 3003
                        Else
                        errmsg(16) = 16
                        useEOS = 0
                        GoTo 3003
                        End If
                    End If
                End If
            End If
          End If
         mol_HC = mol_o + mol_g
        If useEOS = 1 Then
        nTCO2EOS = z(2) * mol_HC
        nTH2sEOS = z(3) * mol_HC
        nTCO2 = nTCO2EOS
        nTH2S = nTH2sEOS
        End If
        If useEOS = 2 Then
        nTCO2EOS = nTCO2: nTH2sEOS = nTH2S
        zHC = z(1) ' To readjust nTCO2EOS and nTH2SEOS by factoring out the total moles of(HCO3, CO3, and HS) at STP condition
        For iNG = 4 To 14
        zHC = zHC + z(iNG) 'mole fraction of z(hydrocarbon-CO2-H2s) per total
        Next iNG
        mol_HC = mol_HC * zHC + nTCO2EOS + nTH2sEOS  'modify total moles of HC if useEOS=2 nTCO2EOS count the moles of CO2 in gas, oil, and CO2aq (exclude HCO3 and CO3)
            z(1) = z(1) * mol_HC
            z(2) = nTCO2EOS
            z(3) = nTH2sEOS
            For iNG = 4 To 14
            z(iNG) = z(iNG) * mol_HC
            Next iNG
            For iNG = 1 To 14
            z(iNG) = z(iNG) / mol_HC
            Next iNG
        End If
    End If 'end SumofZ>0
End If 'end UseEOS=1 or 2
'*****End hydrocarbon reconciliation
'*****H2O reconciliation
If VW = 1 / 159 / 1000 Then               'if water volume=0, skip Flash
    If Run_Seawater_Mixing = 1 Or Run_MixingTwoWells = 1 Then
    GoTo 3002
    Else
    errmsg(14) = 14
    useEOS = 0
    GoTo 3003
    End
    End If
End If
'*****UseEOS options 1 or 2
'**********Flash calculation is only allow if real G/O/W volumes are given, exception is for mixing two wells and seawater
If useEOS = 1 Or useEOS = 2 Then
            'first calculate the reservoir composition using pure water vapor in the gas phase
    If usedryHC = 0 Then 'Wet hydrocarbon case, total water = input water+water in HC
        mol_W = mol_W
        mol_w3 = 0
        While mol_w3 <= 0 'to make sure enough water is added to begin the iteration
            mol_W = mol_W * 1.1
            Call true_composition(TK, PBar, mol_HC, mol_W, aH2O, Array(gNeut(iCO2aq), gNeut(iH2Saq)), nTCO2EOS, nTH2sEOS, useEOS, z, feed_Composition, total_moles)
            If feed_Composition(1) < 0.0000001 Then feed_Composition(1) = 0
            Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, feed_Composition, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
            If compositions(15, 4) > 0.5 Then
            mol_w3 = total_moles * beta(3) * compositions(15, 4) 'H2O moles in aqueous phase
            Else
            mol_w3 = 0
            End If
        Wend
        If mol_w3 > 0 Then
            If compositions(15, 4) > 0.5 Then
                While ((mol_w3 - mol_w_Orig) / mol_w_Orig) ^ 2 > 0.0001
                mol_W = mol_W - mol_w3 + mol_w_Orig
                total_moles = mol_HC + mol_W
                Call true_composition(TK, PBar, mol_HC, mol_W, aH2O, Array(gNeut(iCO2aq), gNeut(iH2Saq)), nTCO2EOS, nTH2sEOS, useEOS, z, feed_Composition, total_moles)
                Call MultiPhaseFlash(False, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, feed_Composition, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
                mol_w3 = total_moles * beta(3) * compositions(15, 4)
                Wend
            Else
                errmsg(14) = 14
                useEOS = 0
                GoTo 3003
            End If
        Else
                errmsg(14) = 14
                useEOS = 0
                GoTo 3003
        End If
    ElseIf usedryHC = 1 Then 'dry hydrocarbon, only water from Input
        mol_W = mol_W
        Call true_composition(TK, PBar, mol_HC, mol_W, aH2O, Array(gNeut(iCO2aq), gNeut(iH2Saq)), nTCO2EOS, nTH2sEOS, useEOS, z, feed_Composition, total_moles)
        If feed_Composition(1) < 0.0000001 Then feed_Composition(1) = 0
        Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, feed_Composition, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
    End If
            nTCO2MixEOS(kk) = total_moles * zOutput(2)
            nTH2SMixEOS(kk) = total_moles * zOutput(3)
            mass_w = total_moles * beta(3) * compositions(15, 4) * 0.01801528 'mass_w is only the aqueous phase H2O
            Total_molesMix(kk) = total_moles
            mass_w_Mix(kk) = mass_w
   If No_Phases = 3 Then '  Output oil and gas density from flash calculation if useEOS=1 or useEOS=2
        GasDensityMix(kk) = density(1) * 1000
        OilDensityMix(kk) = density(2)
    End If

    If No_Phases = 2 Then 'Only g/o, G/W or O/W phases exist
    If beta(3) = 0 Then
        MsgBox ("Aqueous phase does not existed in this case. Increase water volume and run again. Program abort.") 'Aqueous phase does not exist
        End
    Else
        If density(1) > 0 And density(1) < 0.3 Then 'phase 1 is gas
            GasDensityMix(kk) = density(1) * 1000
        ElseIf density(1) > 0 And density(1) > 0.3 Then
            OilDensityMix(kk) = density(1) 'phase 1 is oil
        ElseIf density(2) > 0 And density(2) < 0.3 Then 'Phase 2 is gas
        GasDensityMix(kk) = density(2) * 1000
        ElseIf density(2) > 0 And density(2) > 0.3 Then
            OilDensityMix(kk) = density(2)
        End If
    End If
    End If
    If No_Phases = 1 Then
    If density(1) > 0 And compositions(15, 2) < 0.8 Then 'hydrocarbon phase
     MsgBox ("Aqueous phase does not existed in this case. Increase water volume and run again. Program abort.")
            End
    ElseIf density(2) > 0 And compositions(15, 3) < 0.8 Then
    MsgBox ("Aqueous phase does not existed in this case. Increase water volume and run again. Program abort.")
            End
    ElseIf density(3) > 0 And compositions(15, 4) < 0.8 Then
    MsgBox ("Aqueous phase does not existed in this case. Increase water volume and run again. Program abort.")
            End
    End If
    End If
End If 'Corresponds to useEOS=1 or 2
'***********
If useEOS = 3 Then
'only run useEOS when gas and oil vol are given; The first iteration covers both usedryHC=0 or 1
       Call pseudo_composition(API, SGG, VgTP, mol_o, mol_W, TK, PBar, aH2O, Array(gNeut(iCO2aq), gNeut(iH2Saq)), nTCO2, nTH2S, yCO2, yH2S, YH2O, total_moles, feed_Composition, mol_HC)
            If feed_Composition(1) < 0.0000001 Then feed_Composition(1) = 0
            SumofZ = feed_Composition(1)
            For iNG = 2 To 14
            If feed_Composition(iNG) < 0.0000001 Then feed_Composition(iNG) = 0
            SumofZ = SumofZ + feed_Composition(iNG)
            Next iNG
            If SumofZ < 0.000001 Then
                errmsg(14) = 14
                useEOS = 0
            End If
        Call MultiPhaseFlash(False, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, feed_Composition, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
    If usedryHC = 0 Then
        mol_w3 = total_moles * beta(3) * compositions(15, 4)
        While mol_w3 <= 0 'to make sure enough water is added to begin the iteration
            mol_W = mol_W * 1.1
            Call pseudo_composition(API, SGG, VgTP, mol_o, mol_W, TK, PBar, aH2O, Array(gNeut(iCO2aq), gNeut(iH2Saq)), nTCO2, nTH2S, yCO2, yH2S, YH2O, total_moles, feed_Composition, mol_HC)
            Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, feed_Composition, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
                If compositions(15, 4) > 0.5 Then
                mol_w3 = total_moles * beta(3) * compositions(15, 4) 'H2O moles in aqueous phase
                Else
                mol_w3 = 0
                End If
                Wend
        If mol_w3 > 0 Then
            While ((mol_w3 - mol_w_Orig) / mol_w_Orig) ^ 2 > 0.0001
            mol_W = mol_W - mol_w3 + mol_w_Orig
            total_moles = total_moles - mol_w3 + mol_w_Orig
            For iNG = 1 To 14   'recalculate z(i) into reservoir composition to use true_composition sub
            z(iNG) = zOutput(iNG) / (1 - zOutput(15))
            Next iNG
            Call pseudo_composition(API, SGG, VgTP, mol_o, mol_W, TK, PBar, aH2O, Array(gNeut(iCO2aq), gNeut(iH2Saq)), nTCO2, nTH2S, yCO2, yH2S, YH2O, total_moles, feed_Composition, mol_HC)
            Call MultiPhaseFlash(False, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, feed_Composition, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
            mol_w3 = total_moles * beta(3) * compositions(15, 4)
            Wend
        End If
        nTCO2MixEOS(kk) = total_moles * zOutput(2)
        nTH2SMixEOS(kk) = total_moles * zOutput(3)
        mass_w = total_moles * beta(3) * compositions(15, 4) * 0.01801528 'mass_w is only the aqueous phase H2O
        Total_molesMix(kk) = total_moles
        mass_w_Mix(kk) = mass_w
    Else
        Total_molesMix(kk) = total_moles
    End If
End If 'Correspond to useEOS=3
'***** Run speciation and pH calculation for useEOS>0
nTCO2_before_precipitation = nTCO2EOS
nTH2S_before_precipitation = nTH2sEOS
Total_moles_before_precipitation = total_moles
For iz = 1 To 15
z_before_precipitation(iz) = zOutput(iz)
zMix(kk, iz) = zOutput(iz)
Next iz
If usedryHC = 1 Then  'If dry hydrocarbon is assumed, recalculate the true aqueous concentrations at T, P
For c = 1 To NumCat
mc(c) = mc(c) * mol_w_Orig * 0.01801528 / mass_w
Next c
For a = 1 To NumAn
   ma(a) = ma(a) * mol_w_Orig * 0.01801528 / mass_w
Next a
For n = 1 To NumNeut
   mn(n) = mn(n) * mol_w_Orig * 0.01801528 / mass_w
Next n
Alk = Alk * mol_w_Orig * 0.01801528 / mass_w:
TAc = TAc * mol_w_Orig * 0.01801528 / mass_w:
TNH4 = TNH4 * mol_w_Orig * 0.01801528 / mass_w
TH3BO3 = TH3BO3 * mol_w_Orig * 0.01801528 / mass_w
TH2Saq = TH2Saq * mol_w_Orig * 0.01801528 / mass_w
TH4SiO4 = TH4SiO4 * mol_w_Orig * 0.01801528 / mass_w

HstpMix(kk) = mc(iH): NaMix(kk) = mc(iNa): KMix(kk) = mc(iK): MgMix(kk) = mc(iMg): CaMix(kk) = mc(iCa): TCa = mc(iCa)
SrMix(kk) = mc(iSr): BaMix(kk) = mc(iBa):  ZnMix(kk) = mc(iZn): PbMix(kk) = mc(iPb): RaMix(kk) = mc(iRa)
OHstpMix(kk) = ma(iOH): ClMix(kk) = ma(iCl): ACstpMix(kk) = ma(iAc): NH4STPMix(kk) = mc(iNH4): H2BO3stpMix(kk) = ma(iH2BO3):
HCO3stpMix(kk) = ma(iHCO3):  CO3stpMix(kk) = ma(iCO3)
SO4Mix(kk) = ma(iSO4): HSstpMix(kk) = ma(iHS): FMix(kk) = ma(intF): BrMix(kk) = ma(iBr):
rho25CMix(kk) = rho25c
H3SiO4Mix(kk) = ma(iH3SiO4): H2SiO4Mix(kk) = ma(iH2SiO4):
NH3Mix(kk) = mn(iNH3): H4SiO4Mix(kk) = mn(iH4SiO4aq): H3BO3Mix(kk) = mn(iH3BO3)
CO2aqMix(kk) = mn(iCO2aq): H2SaqMix(kk) = mn(iH2Saq): HACaqMix(kk) = mn(iHAcaq)
AlkMix(kk) = Alk: TAcMix(kk) = TAc: TH2SaqMix(kk) = TH2Saq: TH4SiO4Mix(kk) = TH4SiO4: TNH4Mix(kk) = TNH4:  TH3BO3Mix(kk) = TH3BO3
End If
'**** flash and convert to STP condition
' Call C4_EOS_TCO2_SSPEquilCalcs(0, 2, 2, KspCalcite) 'calculate Separator or STP pH if useEOS>0
''*********
'mt = fmn  'Assign neutral species and HCO3, CO3, HS and recalculate ionic strength, Pitzer Coeff and pH
'Call CalcIonicStrength
'Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
'Call C4_EOS_TCO2_SSPEquilCalcs(0, 5, 2, KspCalcite) '(ppt_or_not, iMetals, iGas, Ksp)

mt = fTPFunc(0)
    Call C4_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
    mt = fmn        'CO2aq, HCO3, CO3, H2Saq, HS
    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
    Call C4_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)

pHMeterReading = pH - DpHj 'at separator T&P or STP
rhoTP = CalcRhoTP(TK, TC, PBar, Patm) 'at separator T&P or STP
For c = 1 To NumCat
   molc(c, kk) = mc(c) * mass_w
Next c
For a = 1 To NumAn
   mola(a, kk) = ma(a) * mass_w
Next a
For n = 1 To NumNeut
   moln(n, kk) = mn(n) * mass_w
Next n
molAlk(kk) = Alk * mass_w: molTAC(kk) = TAc * mass_w: molTNH4(kk) = TNH4 * mass_w: molTH3BO3(kk) = TH3BO3 * mass_w:
molTH2Saq(kk) = TH2Saq * mass_w: molTH4SiO4(kk) = TH4SiO4 * mass_w
End If      'Correspond to if UseEOS<>0

3002 If Run_Seawater_Mixing = 1 Or Run_MixingTwoWells = 1 Then
    If Run_Seawater_Mixing = 1 Then
        If LoopMixing = 1 And kk = 1 Then 'when Fr of brine#1=0
        For iNG = 1 To 15
        z_before_precipitation(iNG) = 0
        Next iNG
        Total_molesMix(kk) = 0
        nTCO2MixEOS(kk) = 0
        nTH2SMixEOS(kk) = 0
        mass_w_Mix(kk) = 0
        useEOS = 0
        GoTo 3003
        End If
        If LoopMixing = 11 And kk = 2 Then 'when Fr of seawater=0
        For iNG = 1 To 15
        z_before_precipitation(iNG) = 0
        Next iNG
        Total_molesMix(kk) = 0
        nTCO2MixEOS(kk) = 0
        nTH2SMixEOS(kk) = 0
        mass_w_Mix(kk) = 0
        GoTo 3003
        End If
        If kk = 2 Then 'Set EOS parameter for seawater
        Total_molesMix(kk) = mol_W
        z_before_precipitation(2) = nTCO2Mix(kk) / Total_molesMix(kk)
        z_before_precipitation(3) = nTH2SMix(kk) / Total_molesMix(kk)
        z_before_precipitation(15) = 1 - z_before_precipitation(2) - z_before_precipitation(3)
        GoTo 3003
        End If
    End If
    If Run_MixingTwoWells = 1 Then
        If LoopMixing = 1 And kk = 1 Then 'when Fr Brine#1 =0
        For iNG = 1 To 15
        z_before_precipitation(iNG) = 0
        Next iNG
        Total_molesMix(kk) = 0
        nTCO2MixEOS(kk) = 0
        nTH2SMixEOS(kk) = 0
        mass_w_Mix(kk) = 0
        GoTo 3003
        End If
        If LoopMixing = 11 And kk = 2 Then 'When Fr brine#2 =0
        For iNG = 1 To 15
        z_before_precipitation(iNG) = 0
        Next iNG
        Total_molesMix(kk) = 0
        nTCO2MixEOS(kk) = 0
        nTH2SMixEOS(kk) = 0
        mass_w_Mix(kk) = 0
        GoTo 3003
        End If
        If VgTP = 0.000001 And VO = 1 / 159 / 1000 And VW > 1 / 159 / 1000 Then 'when only water present for either brine 1 or 2
        Total_molesMix(kk) = mol_W
        z_before_precipitation(2) = nTCO2Mix(kk) / Total_molesMix(kk)
        z_before_precipitation(3) = nTH2SMix(kk) / Total_molesMix(kk)
        z_before_precipitation(15) = 1 - z_before_precipitation(1) - z_before_precipitation(2)
        GoTo 3003
        End If
        If VW = 1 / 159 / 1000 Then 'When water volume is not given for either Brine#1 or Brine#2
        useEOS = 0
        GoTo 3003
        End If
    End If
End If
    
3003    For iNG = 1 To 15
        zMix(kk, iNG) = z_before_precipitation(iNG)
        Next iNG
'***** QC calculation
If RunStat = 1 Then
    If RunQualityControlChecks = 1 Then
        Worksheets(mySheet).Activate
       Call QualityControlCalculations(kk, j)
    End If
Else
    If RunQualityControlChecks = 1 And kk <= nob_Input Then 'only run QC if requested from Input Sheet.
       'Worksheets(mySheet).Activate
       Call QualityControlCalculations(kk, j)
       If kk = nob Then GoTo 123   'Last Brine QC has been printed to Input Sheet; exit calculations.
    End If
    If RunQualityControlChecks_II = 1 And kk > nob_Input Then 'only run QC if requested from InputII Sheet.
'       Worksheets(mySheet).Activate
       Call QualityControlCalculations(kk, j)
        If kk = nob_Input + nob_InputII Then
        End
        End If
    End If
End If
'*****End of QC calculation
'***** Print pH, PCO2, PH2S, TH2Saq to the input sheet
'If RunShellMultiflash <> 1 Then
    If use_pH = 0 And useEOS = 0 Then        'Then, yCO2stp must be specified.  Need to calculate the pH and yH2Sstp.
        If Run_Seawater_Mixing = 0 And Run_MixingTwoWells = 0 And RunMultiMix = 0 And Run10TestCases = 0 And RunWhatIf = 0 And RunStat = 0 Then
            If Run_CalcConcFactor = 1 Then
            Worksheets(MySheetMix).Cells(34, 8) = pHMeterReading
            Else
            Worksheets(mySheet).Cells(34, j + 2) = pHMeterReading
            End If
        End If
    End If
    If use_pH = 1 And useEOS = 0 Then                            'Use the pH measured at STP.
        If RunWhatIf <> 1 And RunStat = 0 Then Worksheets(mySheet).Cells(31, j + 2) = yCO2 * 100
    End If
    If use_pH = 2 And useEOS = 0 Then                            'Use the pH measured at STP.
        If RunWhatIf <> 1 And RunStat = 0 Then Worksheets(mySheet).Cells(24, j + 2) = Alk * (61019 * (rho25c - TDS / 1000000#))
        AlkMix(kk) = Alk
    End If
     If use_pH = 3 And useEOS = 0 Then         'use TCO2 to calculate pH
        If Run_Seawater_Mixing = 0 And Run_MixingTwoWells = 0 And RunMultiMix = 0 And Run10TestCases = 0 And RunWhatIf = 0 And RunStat = 0 Then
            pHMeterReading = pH - DpHj
            If Run_CalcConcFactor = 1 Then
            Worksheets(MySheetMix).Cells(34, 8) = pHMeterReading
            Else
            Worksheets(mySheet).Cells(34, j + 2) = pHMeterReading
            End If
        End If
        If RunWhatIf <> 1 Then Worksheets(mySheet).Cells(31, j + 2) = yCO2 * 100
    End If
    If useEOS <> 0 Then
        If Run_Seawater_Mixing = 0 And Run_MixingTwoWells = 0 And RunMultiMix = 0 And Run10TestCases = 0 And RunWhatIf = 0 And RunStat = 0 Then
            If Run_CalcConcFactor = 1 Then
            Worksheets(MySheetMix).Cells(34, 8) = pHMeterReading
            Else
            Worksheets(mySheet).Cells(34, j + 2) = pHMeterReading
            End If
        End If
    End If
    If UseMolal = 1 Then Worksheets(mySheet).Cells(29, j + 2) = CalculatedTDSMix(kk)
    If mass_MeOH > 0 Then xMeOH = (mass_MeOH / 32) / (mass_MeOH / 32 + mass_w / 18) '?????????????????????????????
    If mass_MEG > 0 Then xMEG = (mass_MEG / 62.07) / (mass_MEG / 62.07 + mass_w / 18)
    If mass_MeOH > 0 Then IStCosolvent = Ist * mass_w / (mass_w + mass_MeOH)
    If mass_MEG > 0 Then IStCosolvent = Ist * mass_w / (mass_w + mass_MEG)
'End If
'If RunShellMultiflash = 1 Then
'    total_moles = mol_g + mol_o + mol_W
'    useEOS = 1
'    For iNG = 1 To 15
'    zMix(kk, iNG) = Worksheets("Shell Multiflash").Cells(2 + iNG, 3)
'    Next iNG
'    SumofZMix(kk) = 0
'    For iNG = 1 To 15
'    If zMix(kk, iNG) < 0.0000001 Then zMix(kk, iNG) = 0
'    SumofZMix(kk) = SumofZMix(kk) + zMix(kk, iNG)       'count total mole fraction of hydrocarbon+CO2+H2S
'    Next iNG
'    If SumofZMix(kk) > 0 Then
'    For iNG = 1 To 15   'Normalized z(1) to z(14)
'    zMix(kk, iNG) = zMix(kk, iNG) / SumofZMix(kk)
'    Next iNG
'    End If
'  nTCO2MixEOS(kk) = zMix(kk, 2) * total_moles
'  nTH2SMixEOS(kk) = zMix(kk, 3) * total_moles
'  Total_molesMix(kk) = total_moles
'End If
123 End Sub
'******************************************************************************************
Sub QuadraticRoots(coef1, coef2, coef3, root1, root2)
'Quadratic of form:  coef1*x^2 + coef2*x + coef3 = 0.  High precision for both roots from Press and Flanery, "Numerical Recipes." book.
'      qroot = -0.5 * (coef2 - (coef2 ^ 2 - 4 * coef1 * coef3) ^ 0.5)  'Set the sign of coef2 to -1 in all cases.  Excel sets Sgn(coef2 = 0) = 0, which causes an error.
'      root1 = coef3 / qroot
''      qroot = -0.5 * (coef2 + (coef2 ^ 2 - 4 * coef1 * coef3) ^ 0.5)
''      root2 = coef3 / qroot
      qroot = -0.5 * (coef2 - (coef2 ^ 2 - 4 * coef1 * coef3) ^ 0.5)  'Set the sign of coef2 to -1 in all cases.  Excel sets Sgn(coef2 = 0) = 0, which causes an error.
      root1 = coef3 / qroot
      root2 = qroot / coef1
End Sub



'******************************************************************************************
Sub CubicRoots(coef1, coef2, coef3, coef4, root1, root2, root3)
  root1 = 0
  root2 = 0
  root3 = 0
  QCubic = (coef2 ^ 2 - 3 * coef3) / 9
  Rcubic = (2 * coef2 ^ 3 - 9 * coef2 * coef3 + 27 * coef4) / 54
  If Rcubic ^ 2 - QCubic ^ 3 > 0 Then 'If this is true there is only one positive root given by:
    root1 = -Sgn(Rcubic) * (((Rcubic ^ 2 - QCubic ^ 3) ^ 0.5 + Abs(Rcubic)) ^ (1 / 3) + QCubic / ((Rcubic ^ 2 - QCubic ^ 3) ^ 0.5 + Abs(Rcubic)) ^ (1 / 3)) - coef2 / 3
  Else
    Xcubic = Rcubic / (QCubic ^ 3) ^ 0.5
    'The cubic equation in Press and Flannery et al Numerical Recipes page 146 calls for arccos(x), but VBA only has arctan as Atn and therefore the following identity is used:
    'arccos(x) = atn(-x/(-x*x+1)^0.5) + 2*atn(1) where  1.5707963267949 = 2atn(1) = Pi/2 where Pi = Pi = 3.14159265358979
    Theta = Atn(-1 * Xcubic / (-1 * Xcubic * Xcubic + 1) ^ 0.5) + pi / 2
    root1 = -2 * (QCubic ^ 0.5) * Cos(Theta / 3) - coef2 / 3
    root2 = -2 * (QCubic ^ 0.5) * Cos((Theta + 2 * pi) / 3) - coef2 / 3
    root3 = -2 * (QCubic ^ 0.5) * Cos((Theta + 4 * pi) / 3) - coef2 / 3
  End If
End Sub
'********************************************************************************************
'2.  This subroutine is called by subroutines D and E, above.
Sub CalcCp()
Cp_w = (0.972 - 0.0293 * Ist - 0.000053 * TC * Ist) * 1000 * 8.314 / 1.987 ' Unit is joules/Kg/C
Cp_CH4 = (0.52 + 0.0008 * TC) * 1000 * 8.314 / 1.987
Cp_Co2 = (0.21 + 0.00012 * TC) * 1000 * 8.314 / 1.987
Cp_O = (0.437 + 0.0009 * TC) * 1000 * 8.314 / 1.987
Cp_MeOH = (0.573 + 0.00115 * TC) * 1000 * 8.314 / 1.987
Cp_MEG = 0.561 * 1000 * 8.314 / 1.987  'Cp assumed independent of Temp. needs to be checked for second order corrections.
End Sub
'********************************************************************************************
'This function subroutine is used to evaluate the Pitzer Parameters, as was done by Kaasa, 1998.
Function fPP(TK, p0, p1, p2, p3, p4, p5)
   Tr = 298.15
   fPP = p0 + p1 * (TK - Tr) + p2 * (TK ^ 2 - Tr ^ 2) + p3 * (1 / TK - 1 / Tr) + p4 * Log(TK / Tr) + p5 * (1 / TK ^ 2 - 1 / Tr ^ 2)
End Function
'This function subroutine evaluates Pitzer coefficients according to the formula from Shiliang He.
Function fHe(TK, r0, r1, r2, r3, r4)
   fHe = r0 + r1 * TK + r2 * TK ^ 2 + r3 / TK + r4 * Log(TK)
End Function

''Function fbarite(TK, Patm, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14, z15, z16, z17, z18, z19, z20)
''   fbarite = z1 + z2 / TK + z3 * TK + z4 * Log(TK) + z5 * TK ^ 2 + (z6 + z7 / TK + z8 * TK + z9 * Log(TK) + z10 * TK ^ 2) * Patm + (z11 + z12 / TK + z13 * TK + z14 * Log(TK) + z15 * TK ^ 2) * Patm ^ 2 + (z16 + z17 / TK + z18 * TK + z19 * Log(TK) + z20 * TK ^ 2) * Patm ^ 3
''End Function
'Function fbarite(TK, Patm, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14, z15)
'fbarite = z1 + z2 / TK + z3 * TK + z4 * Log(TK) + z5 * TK ^ 2 + (z6 + z7 / TK + z8 * TK + z9 * Log(TK) + z10 * TK ^ 2) * Patm + (z11 + z12 / TK + z13 * TK + z14 * Log(TK) + z15 * TK ^ 2) * Patm ^ 2
'End Function

'This function subroutine evaluates Pitzer coefficients with 15 parameters and with weightings, similar with fbarite
Function fP15_Dai(TK, Patm, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14, z15)
   fP15_Dai = z1 + 100 * z2 / TK + 0.001 * z3 * TK + 0.1 * z4 * Log(TK) + 0.000001 * z5 * TK ^ 2 + (z6 + 100 * z7 / TK + 0.001 * z8 * TK + 0.1 * z9 * Log(TK) + 0.000001 * z10 * TK ^ 2) * Patm * 0.001 + (z11 + 100 * z12 / TK + 0.001 * z13 * TK + 0.1 * z14 * Log(TK) + 0.000001 * z15 * TK ^ 2) * Patm ^ 2 * 0.000001
End Function
Function fHolmes(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17)
    fHolmes = q1 + 1 / 2 * q2 * TK + 1 / 6 * q3 * TK ^ 2 + 1 / 12 * q4 * TK ^ 3 + 1 / 6 * q5 * TK ^ 2 * (Log(TK) - 5 / 6) + q6 * (TK / 2 + 3 * 227 ^ 2 / 2 / TK + 227 * (TK - 227) / TK * Log(TK - 227)) + q7 * (2 * (647 - TK) / TK + 1) * Log(647 - TK) + PBar * (q8 + q9 / TK + q10 * TK + q11 * TK ^ 2 + q12 / (TK - 227) + q13 / (647 - TK)) + PBar ^ 2 * (q14 + q15 / TK + q16 * TK + q17 * TK ^ 2)
End Function
Function fDuan1(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8)
fDuan1 = q1 + q2 * (TK) + q3 / (TK) + q4 / ((TK) - 210) + q5 / (647 - (TK)) + q6 * ((TK) - 443) ^ 3 / 3 + q7 * (PBar - 1) + q8 * (PBar - 1) ^ 2 / 2
End Function
Function fDuan2(TK, PBar, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11)
fDuan2 = q1 + q2 * (TK) + q3 / (TK) + q4 * (TK) ^ 2 + q5 / (630 - (TK)) + q6 * PBar + q7 * PBar * Log(TK) + q8 * PBar / (TK) + q9 / (630 - (TK)) + q10 * PBar ^ 2 / (630 - (TK)) ^ 2 + q11 * (TK) * Log(PBar)

End Function

Function fPZ6(TK, z1, z2, z3, z4, z5, z6)
fPZ6 = z1 + z2 * 100# / TK + z3 * 0.01 * TK + z4 * 0.0001 * TK ^ 2 + z5 * 10# / (TK - 227) + z6 * Log(TK)
End Function
'===========
Function fPZ18(TK, Patm, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14, z15, z16, z17, z18)
fPZ18 = fPZ6(TK, z1, z2, z3, z4, z5, z6) + 0.001 * (Patm * 1.013254) * fPZ6(TK, z7, z8, z9, z10, z11, z12) + 0.000001 * (Patm * 1.013254) ^ 2 * fPZ6(TK, z13, z14, z15, z16, z17, z18)
End Function
Function fPZ_DL_6(TK, Patm, z1, z2, z3, z4, z5, z6) 'from Duan and Li 2008
fPZ_DL_6 = z1 + z2 * TK + z3 / (TK - 210) + z4 / (Patm * 1.013254 + 100) + z5 * TK * Log(Patm * 1.013254) + z6 * TK * Patm * 1.013254 * Log(Patm * 1.013254)
End Function
'===========
Function fgammaN()
'amy
If xMeOH > 0 Then
  gNNeut(iCO2aq) = 10 ^ ((-6.029 + 1444.9 / TK) * xMeOH - 1.17 * xMeOH ^ 2)  'needs to be checked for second order corrections.
  'Model to proportionate the mean act. coef. is that divalent act. coef. is about mono. valent ^ 4 and mean value is (+*-^2)
  'dSIMeOH = mean act. coef. of Ca(HCO3)2
  'dSIMeOHcal = ((392.0466 - 18862.7895 / TK - 57.1346 * Log(TK) - 0.0000062931 * TDS) * xMeOH + (-1.7827 + 108.907 / TK) * xMeOH ^ 2)
  'dSIMeOHcal = (123.0189 - 5203.6678 / TK - 17.907 * Log(TK) - 9.3178 * ISt / (1 + ISt ^ 0.5)) * xMeOH + (-13.5662 + 2681.0258 / TK) * xMeOH ^ 2
  dSIMeOHcal = (108.0317 - 4898.9661 / TK - 15.0753 * Log(TK) - 0.8632 * Ist / (1 + Ist ^ 0.5)) * xMeOH - 2.3459 * xMeOH ^ 2

  gNAn(iHCO3) = ((10 ^ dSIMeOHcal)) ^ (1 / 6)
  gNCat(iCa) = (10 ^ dSIMeOHcal) ^ (2 / 3)
  gNAn(iCO3) = gNCat(iCa)
  gNAn(iAc) = 10 ^ ((2.8478 - 0.2753 * Ist) * xMeOH)
  gNNeut(iHAcaq) = 1
  gNNeut(iH2Saq) = gNNeut(iCO2aq)
  gNAn(iHS) = gNAn(iHCO3)
  dSIMeOHBar = (112.1 - 2094.5 / TK - 16.47 * Log(TK)) * xMeOH + (8.437 - 5721.4 / TK) * xMeOH ^ 2
  gNMean(iBaSO4) = (10 ^ dSIMeOHBar) ^ 0.5
  'gNMean(iCaSO42H2O) = 10 ^ ((4.706 - 0.423 * ISt) * xMeOH - 4.153 * xMeOH ^ 2)
  gNMean(iCaSO42H2O) = 10 ^ ((-5.6666 + 30.0535 / (1 + Ist ^ 0.5)) * xMeOH - (47.31 / (1 + Ist ^ 0.5) ^ 2) * xMeOH ^ 2) ^ 0.5
  gNMean(iSrSO4) = 10 ^ ((4.963 - 0.206 * Ist) * xMeOH - 4.017 * xMeOH ^ 2)
  dSIMeOHHal = (-107.31 + 6661.08 / TK + 15.3994 * Log(TK)) * xMeOH + (2.6705 - 1392.3 / TK) * xMeOH ^ 2
  gNMean(iNaCl) = (10 ^ dSIMeOHHal) ^ 0.5
  aNH2O = 1 - 0.5403 * xMeOH - 0.4339 * xMeOH ^ 2
  gNCat(iH) = 10 ^ ((-1.0667 - 0.304 * Ist) * xMeOH)
  gNAn(iOH) = gNCat(iH)
End If
If xMEG > 0 Then
' gNNeut(iCO2aq) = 10 ^ ((-6.029 + 1444.9 / TK) * xMEG - 1.17 * xMEG ^ 2) 'set to solubility of CO2 in MeOH, needs to be checked
 gNNeut(iCO2aq) = 10 ^ ((-2.954 + 691.6 / TK - 0.382 * Ist / (1 + Ist ^ 0.5)) * xMEG - (151.9 / TK) * xMEG ^ 2 - 0.67 * xMEG ^ 4)
  'dSIMEGcal = (345.255 - 20594.18 / TK - 48.5485 * Log(TK) - 0.0000049788 * TDS) * xMEG + (-19.122 + 4939.6 / TK) * xMEG ^ 2
  dSIMEGcal = (180.9605 - 9190.3924 / TK - 25.7158 * Log(TK) - 1.7492 * Ist / (1 + Ist ^ 0.5) ^ 0.5) * xMEG + (-5.4646 + 3.8981 * Ist / (1 + Ist ^ 0.5)) * xMEG ^ 2
  
  gNAn(iHCO3) = (10 ^ dSIMEGcal) ^ (1 / 6)
  gNCat(iCa) = (10 ^ dSIMEGcal) ^ (2 / 3) 'These secondary approximations only affect the pH calculation to determine the partitioning from the gas.
  gNAn(iCO3) = gNCat(iCa)
  gNAn(iAc) = 10 ^ ((1.9008 - 0.2753 * Ist) * xMEG)
  gNNeut(iHAcaq) = 1
  gNNeut(iH2Saq) = gNNeut(iCO2aq)
  gNAn(iHS) = gNAn(iHCO3)
  dSIMEGBar = (172.18 - 8125.4 / TK - 24.527 * Log(TK)) * xMEG - 5.8668 * xMEG ^ 2
  gNMean(iBaSO4) = (10 ^ dSIMEGBar) ^ 0.5
  gNMean(iCaSO42H2O) = (10 ^ ((10.5486 - 1767.92 / TK - 3.4044 * Ist / (1 + Ist ^ 0.5) ^ 0.5 + 1.1963 * Ist / (1 + Ist ^ 0.5)) * xMEG + (-5.2799 + 6.5046 * Ist / (1 + Ist ^ 0.5)) * xMEG ^ 2)) ^ 0.5 'This is an approximation, that may be slightly off due to ion size effects.
  gNMean(iCaSO4) = (10 ^ ((7.585 - 1277.76 / TK + 3.1211 * Ist / (1 + Ist ^ 0.5) ^ 2) * xMEG + (-3.543 - 1.6694 * Ist / (1 + Ist ^ 0.5)) * xMEG ^ 2)) ^ 0.5
  gNMean(ihemiCaSO4) = gNMean(iCaSO4)
  gNMean(iSrSO4) = gNMean(iBaSO4)         'This is an approximation.
'  dSIMEGHal = (-2.446 + 1020.19 / TK) * xMEG + (6.211 - 3073.1 / TK) * xMEG ^ 2
  dSIMEGHal = (-1.8742 + 911.0668 / TK) * xMEG + (5.3434 - 2939.27 / TK) * xMEG ^ 2
  gNMean(iNaCl) = (10 ^ dSIMEGHal) ^ 0.5
  aNH2O = 1 - 1.32 * xMEG + 0.33 * xMEG ^ 2
  gNCat(iH) = 10 ^ ((0.1806 - 0.2456 * Ist) * xMEG + 1.6212 * xMEG ^ 2.3622)
  gNAn(iOH) = gNCat(iH)
End If
End Function
'********************************************************************************************
'This function subroutine provides a general purpose method to calculate log10 in VBA.
Function Log10(number)
    If number > 0 Then
      Log10 = Log(number) / Log(10)
    Else
      Log10 = Null
    End If
End Function
'Function fH2Odensity()  'unit Kg/m3 of pure water density from Pitzer
'dens0 = 999.83952:    a1 = 16.945176:    a2 = -0.0079870401:    a3 = -0.000046170461:    a4 = 0.00000010556302
'    a5 = -2.8054253E-10:    a6 = 0.01687985:    a7 = 0.043922:    a8 = -0.000076:    a9 = 0.000000126:    a10 = 0.00000000319
'     dens1atm = (dens0 + a1 * Tc + a2 * Tc ^ 2 + a3 * Tc ^ 3 + a4 * Tc ^ 4 + a5 * Tc ^ 5) / (1 + a6 * Tc)
'  fH2Odensity = dens1atm + (a7 + a8 * Tc + a9 * Tc ^ 2 + a10 * Tc ^ 3) * (Patm - 1)
'
'End Function

Function fH2ODensity(TK, PBar)
'
' density of water or steam
' densW in kg/m^3
' temperature in K
' pressure in bar
'
'    If TK >= 273.15 And TK <= 623.15 And PBar >= PsatH2O(TK) And PBar <= 1000# Then
'  region 1, This is what we need, though only to 1000 bars (comments below)
 tau = 1386# / TK
    piDen = 0.1 * PBar / 16.53
    gammapireg1 = 0
    For igammapireg = 1 To 34
        gammapireg1 = gammapireg1 - nreg1(igammapireg) * ireg1(igammapireg) * (7.1 - piDen) ^ (ireg1(igammapireg) - 1) * (tau - 1.222) ^ jreg1(igammapireg)
    Next igammapireg
    volreg1 = rgas_water * TK * piDen * gammapireg1 / (PBar * 100000#)
        fH2ODensity = 1 / volreg1
'    ElseIf (TK >= 273.15 And TK <= 623.15 And PBar > 0 And PBar <= PsatH2O(TK)) Or (TK >= 623.15 And TK <= 863.15 And PBar > 0 And PBar <= pBound(TK)) Or (TK >= 863.15 And TK <= 1073.15 And PBar > 0 And PBar <= 1000#) Then
''  region 2
'       densW = 1 / volreg2(TK, PBar)
'    ElseIf TK >= 623.15 And TK <= tBound(PBar) And PBar >= pBound(TK) And PBar <= 1000# Then
''  region 3
'        densW = densreg3(TK, PBar)
'    Else
'  outside range
'        densW = -1#
'   End If
'
End Function
Function fTPFunc(iTP)
If iTP = 0 Then
Ppsia = 14.696: Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774: TF = 77: TC = (TF - 32) * 5 / 9: TK = TC + 273.15
End If
If iTP = 1 Then
Ppsia = Pvol: Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774: TF = TVol: TC = (TF - 32) * 5 / 9: TK = TC + 273.15
End If
If iTP = 2 Then
Ppsia = PpH: Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774: TF = TpH: TC = (TF - 32) * 5 / 9: TK = TC + 273.15
End If
If iTP = 3 Then 'for API
Ppsia = 14.696: Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774: TF = 60: TC = (TF - 32) * 5 / 9: TK = TC + 273.15
End If
fTPFunc = Null
End Function
Function fRatioOilBPoints()
    If API >= 30 Then                                        'Beggs and Vasquez correlations from Pet. Handbook.
        fRatioOilBPoints = ((SGG / 0.6) * Exp(23.93 * (API - 30) / (TF + 460))) ^ (1 / 1.187)
    Else
        fRatioOilBPoints = ((SGG / 0.6) * Exp(25.724 * (API - 30) / (TF + 460))) ^ (1 / 1.0937)
    End If
End Function
Function fTotalCO2H2Smoles()
    nTCO2 = Patm * 14.696 * yCO2 * (829 * VgTP / (Znew * TK) + gGas(iCO2g) * _
    (KgwCO2 * mass_w / gNeut(iCO2aq) / gNNeut(iCO2aq) + RatioOilBPoints * KgoCO2 * Mass_o / gL(iCO2o))) + _
    (HCO3 + CO3) * mass_w  'nTCO2 is equal to CO2 in gas plus CO2 in oil plus CO2 in water and HCO3 and CO3 in the water. 829= (1/(R*14.696) and R=atm m^3/(K*mol)
'    nTCO2EOS = patm * 14.696 * yCO2 * (829 * VgTP / (Znew * TK) + gGas(iCO2g) * _
'    (KgwCO2 * mass_w / gNeut(iCO2aq) / gNNeut(iCO2aq) + RatioOilBPoints * KgoCO2 * Mass_o / gL(iCO2o)))  'nTCO2 is equal to CO2 in gas plus CO2 in oil plus CO2 in water in the water. 829= (1/(R*14.696) and R=atm m^3/(K*mol), do not include HCO3 and CO3
    nTCO2EOS = nTCO2
    nTCH4 = Patm * 14.696 * yCH4 * (829# * VgTP / (Znew * TK) + gGas(iCH4g) * _
    (KgwCH4 * mass_w / gNeut(iCH4aq) + RatioOilBPoints * KgoCH4 * Mass_o / gL(iCH4g)))
    nTH2S = Patm * 14.696 * yH2S * (829# * VgTP / (Znew * TK) + gGas(iH2Sg) * _
    (KgwH2S * mass_w / gNeut(iH2Saq) / gNNeut(iH2Saq) + RatioOilBPoints * KgoH2S * Mass_o / gL(iH2So))) + _
    HS * (1 + KstFeSaq * mc(iFe) * HS * gAn(iHS) * gNAn(iHS) * gCat(iFe) * gNCat(iFe) / (gNeut(iFeSaq) * gNNeut(iFeSaq) * aH)) * mass_w

'    nTH2SEOS = patm * 14.696 * yH2S * (829# * VgTP / (Znew * TK) + gGas(iH2Sg) * _
'    (KgwH2S * mass_w / gNeut(iH2Saq) / gNNeut(iH2Saq) + RatioOilBPoints * KgoH2S * Mass_o / gL(iH2So))) 'Include H2S in gas, oil, and water, do not include HS
    nTH2sEOS = nTH2S
    fTotalCO2H2Smoles = Null
End Function
Function fmn()
mn(1) = 0: mn(2) = CO2aq: mn(3) = H2Saq: mn(4) = HAcaq: mn(5) = H4SiO4: mn(6) = NH3: mn(7) = 0:
mn(8) = KstFeSaq * mc(iFe) * HS * gAn(iHS) * gNAn(iHS) * gCat(iFe) * gNCat(iFe) / (gNeut(iFeSaq) * gNNeut(iFeSaq) * aH)
ma(1) = OH: ma(3) = AC: ma(4) = HCO3: ma(5) = CO3: ma(7) = HS: ma(10) = H2BO3: ma(11) = H3SiO4: ma(12) = H2SiO4
mc(1) = H
End Function

    
Sub MassTransferCoefficients()

'Calculate Diffusion Coefficient for each Cation, cm2/s
'Solve for D (cm2/sec) using Boltzmann k =1.3806488 ?10-23 m2 kg s-2 K-1 and
'assuming McLaughlin 4.71 for cations in water instead of Stokes-Einstein 6, then mult
'by 10,000 to convert to cm2/s; 1 Angstrom = 10^-10 meters
'Stokes-Einstein, as modified by E. McLaughlin, VISCOSITY AND SELF-DIFFUSION IN
'LIQUIDIFF(IS), Trans. Faraday Soc., 1959,55, 28-38
' D = kT/4.71r



'Dai 2020 deposition
'*********calculate flow regime, Re, etc.***********

PipeID_m = PipeID / 100  'convert cm to m
PipeL_m = PipeL / 100  'convert cm to m

'According to Guo et al. Petroleum Production Engineering. A computer-assisted approach
VgTP_MT = WorksheetFunction.max(0.000001, VgTP_MT)
V_s_g = VgTP_MT / 86400 / (pi * (PipeID_m / 2) ^ 2)   'superfacial gas linear velocity, m/s
V_s_l = (VO_MT + VW_MT) / 86400 / (pi * (PipeID_m / 2) ^ 2)   'superfacial liquid linear velocity, m/s
V_s_m = V_s_g + V_s_l 'superfacial total mixture linear velocity, m/s

P_reduced_g = Ppsia / (708.75 - 57.7 * SGG) ' reduced pressure for gas
T_reduced_g = (TF + 460) / (169 + 314 * SGG) 'reduced temperature for gas

Dim a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16 As Double
a1 = -2.462: a2 = 2.97: a3 = -0.2862: a4 = 0.008054: a5 = 2.808: a6 = -3.498: a7 = 0.3603: a8 = -0.01044: a9 = -0.7933: a10 = 1.396: a11 = -0.1491: a12 = 0.00441: a13 = 0.08393: a14 = -0.1864: a15 = 0.02033: a16 = -0.0006095
Ratio_gas_visc = a1 + a2 * P_reduced_g + a3 * P_reduced_g ^ 2 + a4 * P_reduced_g ^ 3 + T_reduced_g * (a5 + a6 * P_reduced_g + a7 * P_reduced_g ^ 2 + a8 * P_reduced_g ^ 3) + T_reduced_g ^ 2 * (a9 + a10 * P_reduced_g + a11 * P_reduced_g ^ 2 + a12 * P_reduced_g ^ 3) + T_reduced_g ^ 3 * (a13 + a14 * P_reduced_g + a15 * P_reduced_g ^ 2 + a16 * P_reduced_g ^ 3)
Visc_g = ((1.709 / 100000 - 2.062 / 1000000 * SGG) * TF + 8.188 / 1000 - 6.15 / 1000 * Log10(SGG)) / T_reduced_g * Exp(Ratio_gas_visc)

SGO = 141.5 / (131.5 + API)        'specific gravity of oil
SGL = (VO_MT * SGO + VW_MT * rhoTP * 1000 / dens) / (VO_MT + VW_MT) 'specific gravity of liquids

rho_gas_MT = SGG * (Patm * 28.97 / (0.08206 * TK))
rho_liquid_MT = SGL * dens

'surface tension between liquid and gas
surf_tension_og = (39 - 0.2571 * API - (TF - 68) * 1.5 / 32) / 1000 ' oil/gas surface tension ,N/m, 1 dynes/cm = 1e-3 N/m ' eq 19 in https://petrowiki.org/Interfacial_tension#:~:text=Interfacial%20or%20surface%20tension%20exists%20when%20two%20phases%20are%20present.&text=The%20surface%20tension%20between%20gas,the%20composition%20of%20each%20phase.
surf_tension_wg = -0.11538 * (1 - TK / 647.096) ^ 2.471 + 0.2151 * (1 - TK / 647.096) ^ 1.233 'N/m, Mulero et al. 2012
surf_tension_lg = (VO_MT * surf_tension_og + VW_MT * surf_tension_wg) / (VO_MT + VW_MT) 'an estimated surface tension value, N/m, use measured value if available


N_v_l = V_s_l * (rho_liquid_MT / surf_tension_lg / 9.8) ^ 0.25 'liquid velocity number, eq 4.30- eq 4.33 in Guo et al., and in zhou thesis, eq 2-5. Be careful with unit conversions.
N_v_g = V_s_g * (rho_liquid_MT / surf_tension_lg / 9.8) ^ 0.25 'gas velocity number
N_dia = PipeID_m * (rho_liquid_MT * 9.8 / surf_tension_lg) ^ 0.5  ' pipe diameter number
N_visc_l = ViscWatIst / 1000 * (9.8 / surf_tension_lg ^ 3 / rho_liquid_MT) ^ (0.25) 'liquid viscosity number, 1 centipoise  = 1e-3 Pa s

X_1 = Log10(N_visc_l + 3)
CN_l = 10 ^ (-2.69851 + 0.15841 * X_1 - 0.551 * X_1 ^ 2 + 0.54785 * X_1 ^ 3 - 0.12195 * X_1 ^ 4) ' eq 4.35
X_2 = N_v_l * CN_l / (N_v_g ^ 0.575 * N_dia) * (PBar / 1.01325) ^ 0.1 'eq 4.38
X_3 = N_v_g * N_visc_l ^ 0.38 / N_dia ^ 2.14
a1 = (X_3 - 0.012) / Abs(X_3 - 0.012)
X_3 = (1 - a1) / 2 * 0.012 + (1 + a1) / 2 * X_3 'modified based on Guo et al.'s excel

fai_MT = 0.91163 - 4.82176 * X_3 + 1232.25 * X_3 ^ 2 - 22253.6 * X_3 ^ 3 + 116174.3 * X_3 ^ 4

X_3 = N_v_g * N_visc_l ^ 0.38 / N_dia ^ 2.14
fai_MT = 0.91163 - 4.82176 * X_3 + 1232.25 * X_3 ^ 2 - 22253.6 * X_3 ^ 3 + 116174.3 * X_3 ^ 4
If X_3 <= 0.01 Then fai_MT = 1

'Hold_l = fai_MT * (-0.10307 + 0.61777 * (Log10(X_2) + 6) - 0.63295 * (Log10(X_2) + 6) ^ 2 + 0.29598 * (Log10(X_2) + 6) ^ 3 - 0.0401 * (Log10(X_2) + 6) ^ 4) 'liquid hold up, eq. 4.37, defined as volume ratio occupied by liquid
'
'If VgTP_MT < (VO_MT + VW_MT) * 0.018 Then 'In case gas volume is too small, liquid hold up calculations will be errors, minimum gas is set as 0.1 scf/bbl liquids, if not, assume Hold_l = 1 (all fluids, no gas)
'    Hold_l = 1
'ElseIf Hold_l < 0.01 Or VgTP_MT > (VO_MT + VW_MT) * 1000 Then  'In case gas volume is too large, liquid hold up calculations will be negative, use Griffith correlation, eq 4.47 in Guo et al.
'    Hold_l = 1 - 0.5 * (1 + V_s_m / 0.8 - ((1 + V_s_m / 0.8) ^ 2 - 4 * V_s_g / 0.8) ^ 0.5)
'ElseIf Hold_l > 1 Or Hold_l < 0 Then ' in case Guo's equation blow up
'    Hold_l = V_s_l / V_s_m
'End If


Hold_l = fai_MT * (-0.10307 + 0.61777 * (Log10(X_2) + 6) - 0.63295 * (Log10(X_2) + 6) ^ 2 + 0.29598 * (Log10(X_2) + 6) ^ 3 - 0.0401 * (Log10(X_2) + 6) ^ 4) 'liquid hold up, eq. 4.37, defined as volume ratio occupied by liquid

If VgTP_MT < (VO_MT + VW_MT) * 0.018 Then 'In case gas volume is too small, liquid hold up calculations will be errors, minimum gas is set as 0.1 scf/bbl liquids, if not, assume Hold_l = 1 (all fluids, no gas)
    Hold_l = 1
ElseIf Hold_l < 0.01 Or VgTP_MT > (VO_MT + VW_MT) * 1000 Or Hold_l >= 1 Then 'In case gas volume is too large, liquid hold up calculations will be negative, use Griffith correlation, eq 4.47 in Guo et al.
    Hold_l = 1 - 0.5 * (1 + V_s_m / 0.8 - ((1 + V_s_m / 0.8) ^ 2 - 4 * V_s_g / 0.8) ^ 0.5)
ElseIf Hold_l < 0 Then ' in case Guo's equation blow up
    Hold_l = V_s_l / V_s_m
End If


''https://wiki.pengtools.com/index.php?title=Hagedorn_and_Brown_correlation#:~:text=Hagedorn%20and%20Brown%20is%20an,oil%20wells%20in%20the%20PQplot.
'If X_3 <= 0.025 Then
'    fai_MT = 27170 * X_3 ^ 3 - 317.52 * X_3 ^ 2 + 0.5472 * X_3 + 0.9999
'ElseIf X_3 <= 0.055 Then
'    fai_MT = -533.33 * X_3 ^ 2 + 58.524 * X_3 + 0.1171
'Else
'    fai_MT = 2.5714 * X_3 + 1.5962
'End If
'Hold_l = fai_MT * ((0.0047 + 1123.32 * X_2 + 729489.64 * X_2 ^ 2) / (1 + 1097.1566 * X_2 + 722153.97 * X_2 ^ 2)) ^ 0.5

'************************flow pattern determination using Hasan & Kabir 1984
If V_s_g > 3.1 * (9.8 * surf_tension_lg * (rho_liquid_MT - rho_gas_MT) / rho_gas_MT ^ 2) ^ 0.25 Then   'eq 13 in Hasan & Kabir 1984
    Flow_Pattern = "Annular"
    Eff_D = (1 - (1 - Hold_l) ^ 0.5) * PipeID_m    'Effective flow characteristic length, basically the part occupied by fluids in annular flow, assuming gas is in the central part
    Eff_V = V_s_l / Hold_l 'Effective flow linear velocity, m/s
    
ElseIf V_s_g > 0.429 * V_s_l + 0.546 * (9.8 * surf_tension_lg * (rho_liquid_MT - rho_gas_MT) / rho_liquid_MT ^ 2) ^ 0.25 Then 'eq 4 in Hasan & Kabir 1984
    Flow_Pattern = "SlugChurn"
    Eff_D = PipeID_m    'Effective flow characteristic length, same as tubing ID, assuming enlongated large bubbles do not affect liquid flow
    Eff_V = V_s_l / Hold_l   'Effective flow linear velocity, m/s   ??????????????????????????????
Else
    Flow_Pattern = "Bubbly"
    Eff_D = PipeID_m    'Effective flow characteristic length, same as tubing ID
    Eff_V = (VO_MT + VW_MT + VgTP_MT) / 86400 / (pi * (Eff_D / 2) ^ 2)   'Effective flow linear velocity, m/s
End If



'*********calculate diffusion coefficients************

Dim dens0MT, dens9atm, densMT, WtFrSaltMT, SumMMT, Den0overDenIstMT, DenIstMT, ViscWatKinam0MT, RelativeKinViscWaterMT, ViscWatKinamIstMT, ViscWatIstMT 'Alex 2019

DiffC(iCa) = (10000) / (radiusC(iCa) * 0.0000000001) / 3.14 / (ViscWatIst / 1000) * (TK) / 4.71 * 1.3806488E-23
DiffC(iFe) = (10000) / (radiusC(iFe) * 0.0000000001) / 3.14 / (ViscWatIst / 1000) * (TK) / 4.71 * 1.3806488E-23
'DiffC(iFeIII)=(10000)/( FeIIIR *0.0000000001)/3.14/( ViscWatIst /1000)*(TK)/4.71*1.3806488E-23
DiffC(iBa) = (10000) / (radiusC(iBa) * 0.0000000001) / 3.14 / (ViscWatIst / 1000) * (TK) / 4.71 * 1.3806488E-23
DiffC(iSr) = (10000) / (radiusC(iSr) * 0.0000000001) / 3.14 / (ViscWatIst / 1000) * (TK) / 4.71 * 1.3806488E-23

'Calculate Diffusion Coefficient for each Anion, cm2/s
'Solve for D (cm2/sec) using Boltzmann k =1.3806488 ?10-23 m2 kg s-2 K-1 and
'assuming McLaughlin factor of 4 for anions in water instead of Stokes-Einstein 6, then mult 'by 10,000 to convert to cm2/s; 1 Angstrom = 10^-10 meters
'Chose factor of 4 instead of 4.71 for anions because of improved agreement with tabulated values at 25癈 for CO3, SO4.
'Stokes-Einstein, as modified by E. McLaughlin, VISCOSITY AND SELF-DIFFUSION IN
'LIQUIDIFF(IS), Trans. Faraday Soc., 1959,55, 28-38
' D = kT/4r

DiffA(iCO3) = (10000) / (radiusA(iCO3) * 0.0000000001) / 3.14 / (ViscWatIst / 1000) * (TK) / 4 * 1.3806488E-23
DiffA(iSO4) = (10000) / (radiusA(iSO4) * 0.0000000001) / 3.14 / (ViscWatIst / 1000) * (TK) / 4 * 1.3806488E-23
DiffA(iHCO3) = (10000) / (radiusA(iHCO3) * 0.0000000001) / 3.14 / (ViscWatIst / 1000) * (TK) / 4 * 1.3806488E-23
DiffA(iHS) = (10000) / (radiusA(iHS) * 0.0000000001) / 3.14 / (ViscWatIst / 1000) * (TK) / 4 * 1.3806488E-23


'Calculate Mutual Diffusion Coefficient for each type of scale.
'See Cussler, DIFFUSION - MASS TRANSFER IN FLUID SYSTEMS, THIRD EDITION, Chapter 6
'http://ajutarut.files.wordpress.com/2013/09/diffusion-mass-transfer-in-fluid-systems.pdf

Diff(iCaHCO32) = 3 / (1 / DiffC(iCa) + 2 / DiffA(iHCO3))
'Diff(iCaCO3)= 2 / (1/DiffC(iCa)  +   1/DIFF(ICO3))
Diff(iFeHCO32) = 3 / (1 / DiffC(iFe) + 2 / DiffA(iHCO3))
'Diff(iFeCO3)= 2 / (1/DiffC(iFe)  +   1/DIFF(ICO3))
Diff(iFeHS2) = 3 / (1 / DiffC(iFe) + 2 / DiffA(iHS))
'Diff(iFeS)= 2 / (1/DiffC(iFe)  +   1/DIFF(IS))
Diff(iBaSO4) = 2 / (1 / DiffC(iBa) + 1 / DiffA(iSO4))
Diff(iSrSO4) = 2 / (1 / DiffC(iSr) + 1 / DiffA(iSO4))
Diff(iCaSO4) = 2 / (1 / DiffC(iCa) + 1 / DiffA(iSO4))

'************************flow dimensionless paramters*************
ReNO = rhoTP * 1000 * Eff_V * Eff_D / (ViscWatIst / 1000) 'Renold's number
f_Churchill = ((8 / ReNO) ^ 12 + ((2.457 * Log(1 / ((7 / ReNO) ^ 0.9 + 0.27 * PipeRough / 1000 / Eff_D))) ^ 16 + (37530 / ReNO) ^ 16) ^ (-3 / 2)) ^ (1 / 12) * 8 'friction coeffient, based on Churchill (1977)
If ReNO < 7 Then f_Churchill = 64 / ReNO
'f_Gnie = (0.79 * Log(ReNO) - 1.64) ^ (-2) 'friction coeffient, based on Gnielinski, which is identical to Churchill friction coefficient at turbulent conditions. Used here for consistency

'barite
ScNO = ViscWatIst / 1000 / (rhoTP * 1000) / (Diff(iBaSO4) / 10000) ' Schmidt number times Diffusion coefficient, so basically in the following part
LengthEntry = LoopTP * PipeL_m  'length to the entry point of the tubing
GzNO = ReNO * ScNO * (Eff_D / LengthEntry) 'Graetz number

ShNO_La = 3.66 + 0.0668 * GzNO / (1 + 0.04 * GzNO ^ (2 / 3)) 'laminar, covering both entry region and fully developed region ( pipeL_m is very large that Gz is close to 0), Hausen

If ReNO < 2300 Then
    Flow_Regime = "Laminar"
    ShNO = ShNO_La 'laminar, covering both entry region and fully developed region ( pipeL_m is very large that Gz is close to 0), Hausen
ElseIf ReNO < 3100 Then
    Flow_Regime = "Transitional"
    ShNO_lc = 3.66 + 0.0668 * (GzNO / ReNO * 2100) / (1 + 0.04 * (GzNO / ReNO * 2100) ^ (2 / 3)) 'critical laminar sherwood number at ReNO of 2100
    ShNO = (ShNO_La ^ 10 + (Exp((2200 - ReNO) / 365) / ShNO_lc ^ 2 + (4.8 + 0.079 * ReNO * (f_Churchill / 8) ^ 0.5 * ScNO / (1 + ScNO ^ 0.8) ^ (5 / 6)) ^ -2) ^ -5) ^ (1 / 10) 'Churchill (1977), Eq 19
Else
    Flow_Regime = "Turbulent"
    ShNO = (f_Churchill / 8) * (ReNO - 1000) * ScNO / (1 + 12.7 * (f_Churchill / 8) ^ 0.5 * (ScNO ^ (2 / 3) - 1)) 'Gnielinski, used when ReNO > 3100, using f from Churchill though to include surface roughness impacts
End If

km(iBaSO4) = ShNO * (Diff(iBaSO4) / 10000) / Eff_D * 100 'mass transfer coefficient, unit cm/s

'calcite
ScNO = ViscWatIst / 1000 / (rhoTP * 1000) / (Diff(iCaHCO32) / 10000) ' Schmidt number times Diffusion coefficient, so basically in the following part
LengthEntry = LoopTP * PipeL_m  'length to the entry point of the tubing
GzNO = ReNO * ScNO * (Eff_D / LengthEntry) 'Graetz number

ShNO_La = 3.66 + 0.0668 * GzNO / (1 + 0.04 * GzNO ^ (2 / 3)) 'laminar, covering both entry region and fully developed region ( pipeL_m is very large that Gz is close to 0), Hausen

If ReNO < 2300 Then
    ShNO = ShNO_La 'laminar, covering both entry region and fully developed region ( pipeL_m is very large that Gz is close to 0), Hausen
ElseIf ReNO < 3100 Then
    ShNO_lc = 3.66 + 0.0668 * (GzNO / ReNO * 2100) / (1 + 0.04 * (GzNO / ReNO * 2100) ^ (2 / 3)) 'critical laminar sherwood number at ReNO of 2100
    ShNO = (ShNO_La ^ 10 + (Exp((2200 - ReNO) / 365) / ShNO_lc ^ 2 + (4.8 + 0.079 * ReNO * (f_Churchill / 8) ^ 0.5 * ScNO / (1 + ScNO ^ 0.8) ^ (5 / 6)) ^ -2) ^ -5) ^ (1 / 10) 'Churchill (1977), Eq 19
Else
    ShNO = (f_Churchill / 8) * (ReNO - 1000) * ScNO / (1 + 12.7 * (f_Churchill / 8) ^ 0.5 * (ScNO ^ (2 / 3) - 1)) 'Gnielinski, used when ReNO > 3100, using f from Churchill though to include surface roughness impacts
End If

km(iCaHCO32) = ShNO * (Diff(iCaHCO32) / 10000) / Eff_D * 100 'mass transfer coefficient, unit cm/s


'*********************consider the sublayer stability in turbulent conditions, Blackwelder and Haritonidis (1983)
lgt_barite_MT = 1000
If SIBar > 0.001 Then lgt_barite_MT = WorksheetFunction.Min(lgt_barite(SIBar, TK, i_Inhibitor_MT, c_Inhibitor_MT), 1000)

lgt_calcite_MT = 1000
If SICal > 0.001 Then
    lgt_calcite_MT = WorksheetFunction.Min(flogT0Cal(SICal) + 10 ^ fbInhCal(i_Inhibitor_MT, SICal) * c_Inhibitor_MT, 1000)
    If i_Inhibitor_MT = 5 Or i_Inhibitor_MT = 7 Or i_Inhibitor_MT = 8 Or i_Inhibitor_MT = 9 Or i_Inhibitor_MT = 10 Or i_Inhibitor_MT = 14 Or i_Inhibitor_MT = 18 Then 'Or i_Inhibitor_MT = 11
        lgt_calcite_MT = WorksheetFunction.Min(flogT0Cal(SICal), 1000)
        If LoopTP = 1 And Iter_MT_WI = 1 Then MsgBox ("SSP does not include inhibitor impacts on calcite batch crystallization induction time for 5-EDTMP, 7-HEBMP, 8-PhnAA, 9-PAPEMP, 10-PBTC, 14-PASP, and 18-AA/AMPS. Click OK to continue deposition prediction.")
    End If
End If
Time_lsl_burst = Null 'initialize it
If ReNO > 2300 Then
    n_power = 0.8391 * Log(ReNO) - 2.5488 'n-power law for turbulent fluid, power law cannot be directly used to calculate shear since it will be infinity, however, can be used to calculate shear at laminar sublayer
    thick_lsl = (11.6 ^ 2 * ViscWatIst / 1000 / (rhoTP * 1000) * (Eff_D / 2) ^ (1 / n) / Eff_V * n) ^ (n / (n + 1)) 'visicous sublayer is assumed to be 11.6*(miu/dens)/u_* (where u_* = (tao/rou)^0.5, and tao is the shear that is a function of laminar sublayer thickness, as shown below)
    shear_lsl = Eff_V / (Eff_D / 2) ^ (1 / n) / n * thick_lsl ^ (1 / n - 1) * ViscWatIst / 1000 'shear at laminar sublayer
    Time_lsl_burst = 300 * ViscWatIst / 1000 / shear_lsl   ' laminar sublayer regeneration/burst time, it ranges from 50 - 300
    If Use_lsl_stability = 1 Then 'if use laminar sublayer stability check
        If SIBar > 0 Then
            'If flogT0Bar(SIBar) + 10 ^ fbInhBar(i_Inhibitor_MT, SIBar) * c_Inhibitor_MT > Log10(Time_lsl_burst) Then km(iBaSO4) = 0 'if laminar sublayer stability (regeneration) time is shorter than the induciton time, the first layer of solids will not form, though nucleation time instead of induction time should be used
            If lgt_barite_MT > Log10(Time_lsl_burst) Then km(iBaSO4) = 0  'updated with new model, if laminar sublayer stability (regeneration) time is shorter than the induciton time, the first layer of solids will not form, though nucleation time instead of induction time should be used
        End If
        If SICal > 0 Then
            If lgt_calcite_MT > Log10(Time_lsl_burst) Then km(iCaHCO32) = 0
        End If
    End If
End If
    


'*********************inhibitor impacts**********************
Dim MW_Inh(20) As Double
'value initialization
'molecular weight
MW_Inh(1) = 299: MW_Inh(2) = 685: MW_Inh(3) = 573: MW_Inh(4) = 492: MW_Inh(5) = 436: MW_Inh(6) = 206:
MW_Inh(7) = 249: MW_Inh(8) = 270: MW_Inh(9) = 600: MW_Inh(10) = 270: MW_Inh(11) = 389: MW_Inh(12) = 3800:
MW_Inh(13) = 116: MW_Inh(14) = 114: MW_Inh(15) = 205.5: MW_Inh(16) = 2897: MW_Inh(17) = 107: MW_Inh(18) = 279

'**********Inhibitor impacts on barite deposition**********************************
Dim i_Inhibitor_MT_original, c_Inhibitor_MT_original

i_Inhibitor_MT_original = i_Inhibitor_MT 'save the original inhibitor ID
c_Inhibitor_MT_original = c_Inhibitor_MT

'DTPMP
Keq_inhibitor_dep_barite(3) = Exp(-902.2 + 47533.3 / TK + 131.02 * Log(TK))
Theta0_inhibitor_dep_barite(3) = 0
'PPCA
Keq_inhibitor_dep_barite(12) = Exp(-637.7 + 32441.7 / TK + 93.01 * Log(TK))
Theta0_inhibitor_dep_barite(12) = 0.00204 * Exp(1784 / TK)
'SPCA
Keq_inhibitor_dep_barite(16) = Exp(-347.1 + 15692.3 / TK + 51.66 * Log(TK))
Theta0_inhibitor_dep_barite(16) = 0.001021 * Exp(1792 / TK)

If i_Inhibitor_MT = 1 Or i_Inhibitor_MT = 2 Or i_Inhibitor_MT = 3 Or i_Inhibitor_MT = 4 Or i_Inhibitor_MT = 5 Or i_Inhibitor_MT = 6 Or i_Inhibitor_MT = 7 Or i_Inhibitor_MT = 8 Or i_Inhibitor_MT = 9 Or i_Inhibitor_MT = 10 Or i_Inhibitor_MT = 11 Then
    c_Inhibitor_MT = c_Inhibitor_MT / MW_Inh(i_Inhibitor_MT) * MW_Inh(3)
    i_Inhibitor_MT = 3 'all phosphonates use DTPMP
ElseIf i_Inhibitor_MT = 12 Or i_Inhibitor_MT = 13 Or i_Inhibitor_MT = 14 Or i_Inhibitor_MT = 15 Then
    c_Inhibitor_MT = c_Inhibitor_MT / MW_Inh(i_Inhibitor_MT) * MW_Inh(12)
    i_Inhibitor_MT = 12 'all carboxylates use PPCA
Else
    c_Inhibitor_MT = c_Inhibitor_MT / MW_Inh(i_Inhibitor_MT) * MW_Inh(16)
    i_Inhibitor_MT = 16 'all sulfonates use SPCA
End If

'impacts on deposition rate, only on barite now
km(iBaSO4) = km(iBaSO4) * (1 - Keq_inhibitor_dep_barite(i_Inhibitor_MT) * c_Inhibitor_MT / (1 + Keq_inhibitor_dep_barite(i_Inhibitor_MT) * c_Inhibitor_MT) * (1 - Theta0_inhibitor_dep_barite(i_Inhibitor_MT)))


'**********Inhibitor impacts on calcite deposition**********************************
i_Inhibitor_MT = i_Inhibitor_MT_original 'load original inhibitor ID
c_Inhibitor_MT = c_Inhibitor_MT_original

'DTPMP
Keq_inhibitor_dep_calcite(3) = Exp(-4127 / TK + 14.923)
Theta0_inhibitor_dep_calcite(3) = 0
''PPCA
'Keq_inhibitor_dep_calcite(12) = Exp(-637.7 + 32441.7 / TK + 93.01 * Log(TK))
'Theta0_inhibitor_dep_calcite(12) = 0.00204 * Exp(1784 / TK)
''SPCA
'Keq_inhibitor_dep_calcite(16) = Exp(-347.1 + 15692.3 / TK + 51.66 * Log(TK))
'Theta0_inhibitor_dep_calcite(16) = 0.001021 * Exp(1792 / TK)

'If i_Inhibitor_MT = 1 Or i_Inhibitor_MT = 2 Or i_Inhibitor_MT = 3 Or i_Inhibitor_MT = 4 Or i_Inhibitor_MT = 5 Or i_Inhibitor_MT = 6 Or i_Inhibitor_MT = 7 Or i_Inhibitor_MT = 8 Or i_Inhibitor_MT = 9 Or i_Inhibitor_MT = 10 Or i_Inhibitor_MT = 11 Then
'    c_Inhibitor_MT = c_Inhibitor_MT / MW_Inh(i_Inhibitor_MT) * MW_Inh(3)
'    i_Inhibitor_MT = 3 'all phosphonates use DTPMP
'ElseIf i_Inhibitor_MT = 12 Or i_Inhibitor_MT = 13 Or i_Inhibitor_MT = 14 Or i_Inhibitor_MT = 15 Then
'    c_Inhibitor_MT = c_Inhibitor_MT / MW_Inh(i_Inhibitor_MT) * MW_Inh(12)
'    i_Inhibitor_MT = 12 'all carboxylates use PPCA
'Else
'    c_Inhibitor_MT = c_Inhibitor_MT / MW_Inh(i_Inhibitor_MT) * MW_Inh(16)
'    i_Inhibitor_MT = 16 'all sulfonates use SPCA
'End If
If i_Inhibitor_MT <> 3 Then
    c_Inhibitor_MT = c_Inhibitor_MT / MW_Inh(i_Inhibitor_MT) * MW_Inh(3)
    i_Inhibitor_MT = 3 'all inhibitors use DTPMP for now
End If

'impacts on deposition rate, only on calcite now
km(iCaHCO32) = km(iCaHCO32) * (1 - Keq_inhibitor_dep_calcite(i_Inhibitor_MT) * c_Inhibitor_MT / (1 + Keq_inhibitor_dep_calcite(i_Inhibitor_MT) * c_Inhibitor_MT) * (1 - Theta0_inhibitor_dep_calcite(i_Inhibitor_MT)))

i_Inhibitor_MT = i_Inhibitor_MT_original 'load original inhibitor ID
c_Inhibitor_MT = c_Inhibitor_MT_original


'impacts on lgt is included above in sublayer burst time


''calculate the effective diameter and linear flow rate for water via annular flow model
'
'eff_diameter = PipeID * ((1 + ((VgTP_MT + VO_MT) / (VgTP_MT + VO_MT + VW_MT)) ^ 0.5) ^ (2 / 5) * (1 - ((VgTP_MT + VO_MT) / (VgTP_MT + VO_MT + VW_MT)) ^ 0.5) ^ (3 / 5)) 'unit cm
'Velocity_W = QBrineFlow / (pi * eff_diameter ^ 2 / 4)      'unit cm/sec
'
''Calculate Laminar Mass Transfer Coefficient, km (cm/s), for each type of scale.
''The Sherwood number, Sh, is the mass transfer analog for the Nusselt number, Nu, for
''heat transfer. Km is derived from Sieder-Tate correlation for the Nusselt number for
''laminar flow heat transfer, using the Schmidt No. mass transfer analog to the Prandtl
''number for heat transfer, assuming uniform viscosity throughout
''km laminar =  1.86  Re^1/3 Sc^1/3  (d/L)^1/3 D/d = 2.016 (D)^2/3 (Q)^1/3 / L^1/3 / d
'
'
''kmL(iCaHCO32) = 1.86 * (Velocity_W / PipeL / eff_diameter) ^ (1 / 3) * (Diff(iCaHCO32)) ^ (2 / 3)
'''kmL(iBaSO4) = 1.86 * (Velocity_W / PipeL / eff_diameter) ^ (1 / 3) * (Diff(iCaHCO32)) ^ (2 / 3)
''
''Alex 2019 Experimental kmL(iBaSO4)
''***************************************************************************
'' Calculate the viscosity at T, P, and Comp.
'' From Millero, Physical Chemistry of Natural Waters, Wiley, page 302 and from
'' Chen, Chan, Read, and Bromley, Desalination, Vol. 13, 37-51, 1973
'    dens0MT = 999.83952:    a1 = 16.945176:    a2 = -0.0079870401:    a3 = -0.000046170461:    a4 = 0.00000010556302
'    a5 = -2.8054253E-10:    a6 = 0.01687985:    a7 = 0.043922:    a8 = -0.000076:    a9 = 0.000000126:    a10 = 0.00000000319
'    dens9atm = (dens0 + a1 * TC + a2 * TC ^ 2 + a3 * TC ^ 3 + a4 * TC ^ 4 + a5 * TC ^ 5) / (1 + a6 * TC)
'    densMT = dens9atm + (a7 + a8 * TC + a9 * TC ^ 2 + a10 * TC ^ 3) * (9.26 - 1) 'Patm = 9.26
'
'    WtFrSaltMT = 1.0035 / (1.0035 + 20)  'WtFrSalt = X in Chen, Chan, Read, and Bromley, Desalination, Vol. 13, 37-51, 1973 'Ist = 1.0035
'    SumMMT = 31.83 * WtFrSaltMT / (1 - WtFrSaltMT)
'
'    a1 = 0.0046581:    a2 = 0.00014712:   a3 = -0.0000017413:    a4 = 0.0000000044668
'    a5 = 0.0026539:    a6 = -0.000073598:    a7 = 0.0000009171:     a8 = -0.0000000027177
'    Den0overDenIstMT = (1 - WtFrSaltMT) * (1 + 0.001 * dens9atm * SumMMT * ((a1 + a2 * TC + a3 * TC ^ 2 + a4 * TC ^ 3) + _
'                   (a5 + a6 * TC + a7 * TC ^ 2 + a8 * TC ^ 3) * 0.98246 ^ 0.5))
'    DenIstMT = 0.001 * densMT / Den0overDenIstMT
'    ViscWatKinam0MT = 10 ^ (-1.464 + 205.4 / (TK - 153#))  'Kinematic vicosity of pure water centiStokes
'    If TC > 150 Then ViscWatKinam0MT = 10 ^ (-1.416 + 175.2 / (TK - 177.2))
'
'    a1 = 0.18788:    a2 = -0.0037532:   a3 = 0.0019142:    a4 = -0.007951
'   a5 = -0.69447:    a6 = 0.013646:    a7 = -0.001413:      a8 = -0.0054073
'
'    RelativeKinViscWaterMT = 10 ^ ((a1 * 1.0035 + a2 * 1.0035 ^ 2 + a3 * 1.0035 ^ 3 + a4 * 1.0035 * TC) + _
'                                 (a5 * 1.0035 + a6 * 1.0035 ^ 2 + a7 * 1.0035 ^ 3 + a8 * 1.0035 * TC) * Log10(ViscWatKinam0))
'    ViscWatKinamIstMT = RelativeKinViscWaterMT * ViscWatKinam0MT
'    ViscWatIstMT = ViscWatKinamIstMT * DenIstMT * Exp(0.0000567 * 136.11) 'dynamic viscosity in centipoise units. Psia = 136.11
'
''**********************************************************************************
'
'kmL(iBaSO4) = 1.45410571622982E-02 * Exp(-12154.4903890922 / 8.314 / TK) * (ViscWatIstMT / ViscWatIst) ^ (2 / 3) * (0.5334 * 92.7 / 0.29834) ^ (1 / 3) / (eff_diameter * PipeL * 9 / Velocity_W) ^ (1 / 3) 'Alex 2019
'
' 'Calculate Turbulent Mass Transfer Coefficient, km (cm/s), for each type of scale.
''calculated using the mass transport analog of the Sieder & Tate heat transfer 'correlation equation, assuming uniform viscosity throughout
''Convert density and viscosity to g-cm units to ensure proper cancellation within the
''7/15 power. Boltzmann units no longer relevant. Divide cP by 100 to get Poise or g/cm-s.
''km turbulent = 0.023 Re^0.8 Sc^1/3  D/d
''km turbulent = 0.023 x 44/5   x    Q4/5  7/15     x D4/5         d4/5 7/15D1/3       d
''       =  0.023 x 44/5   x    Q4/5  7/15 D2/3 4/5                         d9/5 7/15
''Perry's Handbook: the Linton-Sherwood correlation for the mass transfer coefficient
''calculation (Sh=0.023Re^0.8Sc^1/3) has working ranges 2,000<Re<35,000, so
''additional testing may be needed at really high Reynold's Nos., since flow may
''overtake precipitation and physically encourage dissolution.
'
'kmT(iCaHCO32) = 0.023 * (DenIst / (ViscWatIst / 100)) ^ (7 / 15) * Velocity_W ^ (4 / 5) * (Diff(iCaHCO32)) ^ (2 / 3) / (eff_diameter ^ (1 / 5))
'
'kmT(iBaSO4) = 0.023 * (DenIst / (ViscWatIst / 100)) ^ (7 / 15) * Velocity_W ^ (4 / 5) * (Diff(iBaSO4)) ^ (2 / 3) / (eff_diameter ^ (1 / 5))
''Calculate Flow Parameters
''Pipe length-diameter ratio
'LoverD = PipeL / PipeID
''Reynold's No.
'ReNO = 4 * DenIst * QBrineFlow / (ViscWatIst / 100) / pi / eff_diameter
''Is flow Laminar or Turbulent?
''Derived by setting laminar and turbulent km equations equal to each other to determine
''cross-over behavior. Allow User override.
'If FlowType = 0 Then    'SSP select flow type
'If LoverD < 528878 * ReNO ^ (-7 / 5) Then
'FlowType = 1
'Else
'FlowType = 2
'End If
'End If
'If FlowType = 1 Then 'Laminar flow
'km(iCaHCO32) = kmL(iCaHCO32):
': km(iBaSO4) = kmL(iBaSO4)
'End If
'If FlowType = 2 Then 'Turbulent flow
'km(iCaHCO32) = kmT(iCaHCO32): km(iBaSO4) = kmT(iBaSO4)
'End If

'Calculate Fe2+ mg/L from Corrosion of Pipe
'mm/y = 87.6 x mgWeightloss / (g/cm3Dens*cm2Area*hrsTime)
'http://www.corrosionist.com/corrosion_rate_conversion.htm
'convert mils/yr to mm/yr, then to mg/hr, then to mg/sec, then to mg/L.

'FeCorr= CorrRate *(0.001*25.4) / 87.6 * PipeMetalDens * SArea/3600/ QBrineFlow*1000

End Sub
    
Sub OutputActivityCoefficients()
    'Clear output worksheets in the range of activity coefficients, might be outputed.
    'for In-house
            Worksheets("Calcite").Range("x1:ax13").Value = ""
            Worksheets("Barite").Range("w1:z13").Value = ""
            Worksheets("Halite").Range("O1:R13").Value = ""
            Worksheets("Other SO4s").Range("x1:aa13").Value = ""
            Worksheets("Sulfides,Fluorite,Carbonates").Range("z1:ap13").Value = ""
    If OutPutActCoefs = 1 Then    'If act. coefs. are to be outputted, then set up headings of the columns.
            Worksheets("Calcite").Range("x2") = "Activity coefficients"
            Worksheets("Calcite").Range("z3") = "aH2O"
            Worksheets("Calcite").Range("aa3") = "gH"
            Worksheets("Calcite").Range("ab3") = "gOH"
            Worksheets("Calcite").Range("ac3") = "gCa"
            Worksheets("Calcite").Range("ad3") = "gMg"
            Worksheets("Calcite").Range("ae3") = "gHCO3"
            Worksheets("Calcite").Range("af3") = "gCO3"
            Worksheets("Calcite").Range("ag3") = "gAc"
'    'for in-house
'    Worksheets("Calcite").Range("ah3") = "PCO2(atm)"
'    Worksheets("Calcite").Range("ai3") = "CO2 oil(mol/Kgoil)"
'    Worksheets("Calcite").Range("aj3") = "H2CO3(m)"
'    Worksheets("Calcite").Range("ak3") = "HCO3(m)"
'    Worksheets("Calcite").Range("al3") = "CO3(m)"
'    Worksheets("Calcite").Range("am3") = "Ca(m)"
'    Worksheets("Calcite").Range("an3") = "HAC(m)"
'    Worksheets("Calcite").Range("ao3") = "AC(m)"
'
'
'    Worksheets("Calcite").Range("ap3") = "g(HAC)"
'    Worksheets("Calcite").Range("aq3") = "g(CO2aq)"
'    Worksheets("Calcite").Range("ar3") = "g(CO2g)"
'    Worksheets("Calcite").Range("as3") = "pKH(CO2,m/atm)"
'    Worksheets("Calcite").Range("at3") = "pK1(H2CO3)"
'    Worksheets("Calcite").Range("au3") = "pK2(HCO3)"
'    Worksheets("Calcite").Range("av3") = "pKspCaCO3"
'    Worksheets("Calcite").Range("aw3") = "pKHAC"
'    Worksheets("Calcite").Range("ax3") = "pKw"
'
'    Worksheets("Sulfides,Fluorite,Carbonates").Range("af3") = "PH2S (atm)"
'    Worksheets("Sulfides,Fluorite,Carbonates").Range("ag3") = "H2Soil(mol/Kg oil)"
'    Worksheets("Sulfides,Fluorite,Carbonates").Range("ah3") = "H2Saq(m)"
'    Worksheets("Sulfides,Fluorite,Carbonates").Range("ai3") = "HS(m)"
'    Worksheets("Sulfides,Fluorite,Carbonates").Range("aj3") = "Fe(m)"
'    Worksheets("Sulfides,Fluorite,Carbonates").Range("ak3") = "g(H2Saq)"
'    Worksheets("Sulfides,Fluorite,Carbonates").Range("al3") = "g(H2Sg)"
'    Worksheets("Sulfides,Fluorite,Carbonates").Range("am3") = "pKH(H2S,m/atm)"
'    Worksheets("Sulfides,Fluorite,Carbonates").Range("an3") = "pK1(H2S)"
'    Worksheets("Sulfides,Fluorite,Carbonates").Range("ao3") = "pKsp(FeCO3)"
'    Worksheets("Sulfides,Fluorite,Carbonates").Range("ap3") = "pKsp(FeS)"
            
            Worksheets("Barite").Range("w2") = "Activity coefficients"

            Worksheets("Barite").Range("y3") = "gBa"
            Worksheets("Barite").Range("z3") = "gSO4"
            
            Worksheets("Halite").Range("O2") = "Activity coefficients"
            
            Worksheets("Halite").Range("Q3") = "gNa"
            Worksheets("Halite").Range("R3") = "gCl"
            
            Worksheets("Other SO4s").Range("x2") = "Activity coefficients"
           
            Worksheets("Other SO4s").Range("z3") = "gSr"
            Worksheets("Other SO4s").Range("aa3") = "gSO4"

            Worksheets("Sulfides,Fluorite,Carbonates").Range("z2") = "Activity coefficients"
            
            Worksheets("Sulfides,Fluorite,Carbonates").Range("ab3") = "gFe"
            Worksheets("Sulfides,Fluorite,Carbonates").Range("ac3") = "gZn"
            Worksheets("Sulfides,Fluorite,Carbonates").Range("ad3") = "gF"
            Worksheets("Sulfides,Fluorite,Carbonates").Range("ae3") = "gHS"
            Worksheets("Sulfides,Fluorite,Carbonates").Range("af3") = "gPb"

            Worksheets("Silicates").Range("x2") = "Activity coefficients" 'Dai added 2020
            Worksheets("Silicates").Range("z3") = "gSilicates" 'Dai added 2020

If UseSI = 0 Then
            Worksheets("Calcite").Range("x3") = "T(癋)"
            Worksheets("Calcite").Range("y3") = "P(psia)"
            Worksheets("Barite").Range("w3") = "T(癋)"
            Worksheets("Barite").Range("x3") = "P(psia)"
            Worksheets("Halite").Range("O3") = "T(癋)"
            Worksheets("Halite").Range("P3") = "P(psia)"
            Worksheets("Other SO4s").Range("x3") = "T(癋)"
            Worksheets("Other SO4s").Range("y3") = "P(psia)"
            Worksheets("Sulfides,Fluorite,Carbonates").Range("z3") = "T(癋)"
            Worksheets("Sulfides,Fluorite,Carbonates").Range("aa3") = "P(psia)"
            Worksheets("Silicates").Range("x3") = "T(癋)" 'Dai added 2020
            Worksheets("Silicates").Range("y3") = "P(psia)" 'Dai added 2020
Else
            Worksheets("Calcite").Range("Q3") = "T(癈)"
            Worksheets("Calcite").Range("R3") = "P(Bar)"
            Worksheets("Barite").Range("O3") = "T(癈)"
            Worksheets("Barite").Range("P3") = "P(Bar)"
            Worksheets("Halite").Range("O3") = "T(癈)"
            Worksheets("Halite").Range("P3") = "P(Bar)"
            Worksheets("Other SO4s").Range("x3") = "T(癈)"
            Worksheets("Other SO4s").Range("y3") = "P(Bar)"
            Worksheets("Sulfides,Fluorite,Carbonates").Range("z3") = "T(癈)"
            Worksheets("Sulfides,Fluorite,Carbonates").Range("aa3") = "P(Bar)"
            Worksheets("Silicates").Range("x3") = "T(癈)" 'Dai added 2020
            Worksheets("Silicates").Range("y3") = "P(Bar)" 'Dai added 2020
End If
    End If

End Sub

'***********************************************************************************
Sub UseEnglishUnits()
 Application.ScreenUpdating = False
mySheet = ActiveSheet.Name
If mySheet = "Halite Module" Then RunStat = 1
'If mySheet = "Simplified Input" Then RunSimpSSP = 1
 If RunStat <> 1 Then
  UseSI = 0
  Worksheets("Input").Range("A35") = "Gas/day(thousand cf/day)"
  Worksheets("Input").Range("B35") = "(Mcf/D)"
  Worksheets("Input").Range("B36") = "(B/D)"
  Worksheets("Input").Range("B37") = "(B/D)"
  Worksheets("Input").Range("B39") = "(癋)"
  Worksheets("Input").Range("B40") = "(癋)"
  Worksheets("Input").Range("B41") = "(psia)"
  Worksheets("Input").Range("B42") = "(psia)"
  Worksheets("Input").Range("B45") = "(B/D)"
  Worksheets("Input").Range("B46") = "(B/D)"
  Worksheets("Input").Range("B58") = "(癋)"
  Worksheets("Input").Range("B59") = "(psia)"
  Worksheets("Input").Range("B60") = "(癋)"
  Worksheets("Input").Range("B61") = "(psia)"
  
  Worksheets("Input II").Range("A35") = "Gas/day(thousand cf/day)"
  Worksheets("Input II").Range("B35") = "(Mcf/D)"
  Worksheets("Input II").Range("B36") = "(B/D)"
  Worksheets("Input II").Range("B37") = "(B/D)"
  Worksheets("Input II").Range("B39") = "(癋)"
  Worksheets("Input II").Range("B40") = "(癋)"
  Worksheets("Input II").Range("B41") = "(psia)"
  Worksheets("Input II").Range("B42") = "(psia)"
  Worksheets("Input II").Range("B45") = "(B/D)"
  Worksheets("Input II").Range("B46") = "(B/D)"
  Worksheets("Input II").Range("B58") = "(癋)"
  Worksheets("Input II").Range("B59") = "(psia)"
  Worksheets("Input II").Range("B60") = "(癋)"
  Worksheets("Input II").Range("B61") = "(psia)"
  
  
  Worksheets("Input_1000_Cases").Range("A35") = "Gas/day(thousand cf/day)"
  Worksheets("Input_1000_Cases").Range("B35") = "(Mcf/D)"
  Worksheets("Input_1000_Cases").Range("B36") = "(B/D)"
  Worksheets("Input_1000_Cases").Range("B37") = "(B/D)"
  Worksheets("Input_1000_Cases").Range("B39") = "(癋)"
  Worksheets("Input_1000_Cases").Range("B40") = "(癋)"
  Worksheets("Input_1000_Cases").Range("B41") = "(psia)"
  Worksheets("Input_1000_Cases").Range("B42") = "(psia)"
  Worksheets("Input_1000_Cases").Range("B45") = "(B/D)"
  Worksheets("Input_1000_Cases").Range("B46") = "(B/D)"
  Worksheets("Input_1000_Cases").Range("B58") = "(癋)"
  Worksheets("Input_1000_Cases").Range("B59") = "(psia)"
  Worksheets("Input_1000_Cases").Range("B60") = "(癋)"
  Worksheets("Input_1000_Cases").Range("B61") = "(psia)"
  
  Worksheets("Multiphase flash").Range("M5") = "T(F)"
  Worksheets("Multiphase flash").Range("M6") = "P(psia)"
  'Worksheets("Multiphase flash").Range("C25") = "Bubble Point (psia)"
' If RunSimpSSP = 1 Then
'  Worksheets("Simplified Input").Range("F14") = "(癋)"
'  Worksheets("Simplified Input").Range("F16") = "(psia)"
'  Worksheets("Simplified Input").Range("F15") = "(癋)"
'  Worksheets("Simplified Input").Range("F17") = "(psia)"
'  Worksheets("Simplified Input").Range("E37") = "Gas/day(thousand cf/day)"
'  Worksheets("Simplified Input").Range("F37") = "(MCF/D)"
'  Worksheets("Simplified Input").Range("F38") = "(B/D)"
'  Worksheets("Simplified Input").Range("F39") = "(B/D)"
'  Worksheets("Simplified Input").Range("F40") = "(B/D)"
'End If
End If
 If RunStat = 1 Then
  Worksheets("Input data sheet").Range("q4") = "T (癋)"
  Worksheets("Input data sheet").Range("r4") = "P (psia)"
  Worksheets("Input data sheet").Range("q9") = "T (癋)"
  Worksheets("Input data sheet").Range("r9") = "P (psia)"
  Worksheets("Input data sheet").Range("t3") = "Gas/day(thousand cf/day)"
  Worksheets("Input data sheet").Range("v3") = "(MCF/D)"
  Worksheets("Input data sheet").Range("v4") = "(B/D)"
  Worksheets("Input data sheet").Range("v5") = "(B/D)"
  Worksheets("Input data sheet").Range("v6") = "(B/D)"
  Worksheets("Input data sheet").Range("H32") = "(B/D)"
  Worksheets("Input data sheet").Range("p4") = "Depth (ft)"
  Worksheets("Input data sheet").Range("p9") = "Depth (ft)"
  
  Worksheets("Output data sheet").Range("I5") = "(ft)"
  Worksheets("Output data sheet").Range("J5") = "(癋)"
  Worksheets("Output data sheet").Range("K5") = "(psia)"
  Worksheets("Output data sheet").Range("S4") = "(B/D)"
  Worksheets("Output data sheet").Range("S5") = "(B/D)"
  Worksheets("Output data sheet").Range("Q10") = "(ft)"
  Worksheets("Output data sheet").Range("R10") = "(癋)"
  Worksheets("Output data sheet").Range("S10") = "(psia)"
  
  Worksheets("Halite analysis").Range("c5") = "(ft)"
  Worksheets("Halite analysis").Range("d5") = "(癋)"
  Worksheets("Halite analysis").Range("e5") = "(psia)"
  Worksheets("Halite analysis").Range("k5") = "(ft)"
  Worksheets("Halite analysis").Range("L5") = "(癋)"
  Worksheets("Halite analysis").Range("M5") = "(psia)"
End If
If RunStat = 1 Then 'Skip the change of Shell sheets unit for Halite tool only
GoTo 15
Else
  Worksheets("H2S partition").Range("B3") = "(癋)"
  Worksheets("H2S partition").Range("C3") = "(psia)"
  Worksheets("H2S partition").Range("N3") = "(psia)"
  Worksheets("H2S partition").Range("AB3") = "(psia)"
  Worksheets("H2S partition").Range("O3") = "(psia)"
  Worksheets("Shell speciation").Range("A3") = "(癋)"
  Worksheets("Shell speciation").Range("B3") = "(psia)"
  Worksheets("Shell speciation").Range("A23") = "(癋)"
  Worksheets("Shell speciation").Range("B23") = "(psia)"
  Worksheets("Shell speciation").Range("A43") = "(癋)"
  Worksheets("Shell speciation").Range("B43") = "(psia)"
  Worksheets("Shell Multiflash").Range("A1") = "T(癋)"
  Worksheets("Shell Multiflash").Range("C1") = "P(psia)"
  Worksheets("Shell Multiflash").Range("D23") = "(psia)"
  Worksheets("Shell Multiflash").Range("H2") = "(psia)"
  Worksheets("Shell Multiflash").Range("C1") = "P(psia)"
  Worksheets("FlashSheet").Range("V6") = "T(癋)"
  Worksheets("FlashSheet").Range("W6") = "P(psia)"
  Worksheets("CO2, H2S Fugacity").Range("A3") = "T(癋)"
  Worksheets("CO2, H2S Fugacity").Range("B3") = "P(psia)"
  Worksheets("CO2, H2S Fugacity").Range("D3") = "P(psia)"
  Worksheets("CO2, H2S Fugacity").Range("E3") = "P(psia)"
  Worksheets("CO2, H2S Fugacity").Range("I3") = "P(psia)"
  Worksheets("CO2, H2S Fugacity").Range("J3") = "P(psia)"
  Worksheets("CO2, H2S Fugacity").Range("K3") = "P(psia)"
  
  End If
15  Worksheets("Calcite").Range("A3") = "癋"
  Worksheets("Calcite").Range("B3") = "psia"
  Worksheets("Calcite").Range("A15") = "癋"
  Worksheets("Calcite").Range("B15") = "psia"
  
  Worksheets("Barite").Range("A3") = "癋"
  Worksheets("Barite").Range("B3") = "psia"
  Worksheets("Barite").Range("A15") = "癋"
  Worksheets("Barite").Range("B15") = "psia"
  
  Worksheets("Other SO4s").Range("A3") = "癋"
  Worksheets("Other SO4s").Range("B3") = "psia"
   Worksheets("Other SO4s").Range("A16") = "癋"
  Worksheets("Other SO4s").Range("B16") = "psia"
  
  Worksheets("Halite").Range("A3") = "癋"
  Worksheets("Halite").Range("B3") = "psia"
  Worksheets("Halite").Range("A15") = "癋"
  Worksheets("Halite").Range("B15") = "psia"
  
  Worksheets("Sulfides,Fluorite,Carbonates").Range("A3") = "癋"
  Worksheets("Sulfides,Fluorite,Carbonates").Range("B3") = "psia"
  Worksheets("Sulfides,Fluorite,Carbonates").Range("A16") = "癋"
  Worksheets("Sulfides,Fluorite,Carbonates").Range("B16") = "psia"
  Worksheets("Silicates").Range("A3") = "癋"
  Worksheets("Silicates").Range("B3") = "psia"
  Worksheets("Mg(OH)2,Ca(OH)2").Range("A3") = "癋"
  Worksheets("Mg(OH)2,Ca(OH)2").Range("B3") = "psia"
  Worksheets("Use Mass Transfer").Range("A11") = "癋"
  Worksheets("Use Mass Transfer").Range("B11") = "psia"
  Worksheets("Use Mass Transfer").Range("g4") = "Tubing/Pipe Internal Diameter (inch)"
  Worksheets("Use Mass Transfer").Range("g5") = "Tubing/Pipe Length or travel distance to sample at time t (ft)"
  
  'Dai 2020 deposition
  Worksheets("Deposition Prediction").Cells(6, 3) = "inch"
  Worksheets("Deposition Prediction").Cells(6, 4) = "ft"
  Worksheets("Deposition Prediction").Cells(6, 6) = "癋"
  Worksheets("Deposition Prediction").Cells(6, 7) = "psia"
  Worksheets("Deposition Prediction").Cells(6, 8) = "癋"
  Worksheets("Deposition Prediction").Cells(6, 9) = "psia"
  Worksheets("Deposition Prediction").Cells(6, 10) = "MSCF/D"
  Worksheets("Deposition Prediction").Cells(6, 11) = "B/D"
  Worksheets("Deposition Prediction").Cells(6, 12) = "B/D"
  Worksheets("Deposition Prediction").Cells(10, 11) = "inch/yr"
  Worksheets("Deposition Prediction").Cells(24, 4) = "癋"
  Worksheets("Deposition Prediction").Cells(40, 4) = "癋"
  Worksheets("Deposition Prediction").Cells(24, 5) = "psia"
  Worksheets("Deposition Prediction").Cells(40, 5) = "psia"
  Worksheets("Deposition Prediction").Cells(24, 3) = "ft"
  Worksheets("Deposition Prediction").Cells(40, 3) = "ft"
  Worksheets("Deposition Prediction").Cells(40, 9) = "inch/yr"
  Worksheets("Deposition Prediction").Cells(40, 13) = "inch/yr"
  Worksheets("Deposition Prediction").Cells(37, 13) = "inch/yr"
  
  If Iter_MT_WI = 0 Then Iter_MT_WI = 1
  Worksheets("Deposition Prediction_WhatIf").Cells(6, 3) = "inch"
  Worksheets("Deposition Prediction_WhatIf").Cells(6, 4) = "ft"
  Worksheets("Deposition Prediction_WhatIf").Cells(6, 6) = "癋"
  Worksheets("Deposition Prediction_WhatIf").Cells(6, 7) = "psia"
  Worksheets("Deposition Prediction_WhatIf").Cells(6, 8) = "癋"
  Worksheets("Deposition Prediction_WhatIf").Cells(6, 9) = "psia"
  Worksheets("Deposition Prediction_WhatIf").Cells(6, 10) = "MSCF/D"
  Worksheets("Deposition Prediction_WhatIf").Cells(6, 11) = "B/D"
  Worksheets("Deposition Prediction_WhatIf").Cells(6, 12) = "B/D"
  'Worksheets("Deposition Prediction_WhatIf").Cells(10, 6) = "inch/yr"
  Worksheets("Deposition Prediction_WhatIf").Cells(24 + (Iter_MT_WI - 1) * 32, 4) = "癋"
  Worksheets("Deposition Prediction_WhatIf").Cells(40 + (Iter_MT_WI - 1) * 32, 4) = "癋"
  Worksheets("Deposition Prediction_WhatIf").Cells(24 + (Iter_MT_WI - 1) * 32, 5) = "psia"
  Worksheets("Deposition Prediction_WhatIf").Cells(40 + (Iter_MT_WI - 1) * 32, 5) = "psia"
  Worksheets("Deposition Prediction_WhatIf").Cells(24 + (Iter_MT_WI - 1) * 32, 3) = "ft"
  Worksheets("Deposition Prediction_WhatIf").Cells(40 + (Iter_MT_WI - 1) * 32, 3) = "ft"
  Worksheets("Deposition Prediction_WhatIf").Cells(40 + (Iter_MT_WI - 1) * 32, 9) = "inch/yr"
  Worksheets("Deposition Prediction_WhatIf").Cells(40 + (Iter_MT_WI - 1) * 32, 13) = "inch/yr"
  Worksheets("Deposition Prediction_WhatIf").Cells(37 + (Iter_MT_WI - 1) * 32, 13) = "inch/yr"
  
  
  'Dai 2020 Corrosion
  Worksheets("Corrosion").Cells(6, 3) = "inch"
  Worksheets("Corrosion").Cells(6, 4) = "ft"
  Worksheets("Corrosion").Cells(6, 6) = "癋"
  Worksheets("Corrosion").Cells(6, 7) = "psia"
  Worksheets("Corrosion").Cells(6, 8) = "癋"
  Worksheets("Corrosion").Cells(6, 9) = "psia"
  Worksheets("Corrosion").Cells(6, 10) = "MSCF/D"
  Worksheets("Corrosion").Cells(6, 11) = "B/D"
  Worksheets("Corrosion").Cells(6, 12) = "B/D"
  Worksheets("Corrosion").Cells(10, 3) = "inch"
  Worksheets("Corrosion").Cells(10, 4) = "ft/s"
  Worksheets("Corrosion").Cells(10, 6) = "癋"
  Worksheets("Corrosion").Cells(10, 7) = "psia"
  Worksheets("Corrosion").Cells(10, 8) = "癋"
  Worksheets("Corrosion").Cells(10, 9) = "psia"
  Worksheets("Corrosion").Cells(10, 10) = "MSCF/D"
  Worksheets("Corrosion").Cells(10, 11) = "B/D"
  Worksheets("Corrosion").Cells(10, 12) = "B/D"
  Worksheets("Corrosion").Cells(24, 4) = "癋"
'  Worksheets("Corrosion").Cells(40, 4) = "癈"
  Worksheets("Corrosion").Cells(24, 5) = "psia"
'  Worksheets("Corrosion").Cells(40, 5) = "bar"
  Worksheets("Corrosion").Cells(24, 3) = "ft"
'  Worksheets("Corrosion").Cells(40, 3) = "m"
'  Worksheets("Corrosion").Cells(40, 9) = "cm/yr"
'  Worksheets("Corrosion").Cells(40, 13) = "cm/yr"
'  Worksheets("Corrosion").Cells(37, 13) = "cm/yr"
  Worksheets("Corrosion").Cells(24, 6) = "mil/yr"
  Worksheets("Corrosion").Cells(24, 7) = "mil/yr"
  Worksheets("Corrosion").Cells(24, 8) = "mil/yr"
  Worksheets("Corrosion").Cells(24, 9) = "mil/yr"
  Worksheets("Corrosion").Cells(24, 10) = "mil/yr"
  Worksheets("Corrosion").Cells(24, 11) = "mil/yr"
  Worksheets("Corrosion").Cells(24, 14) = "mil/yr"
  Worksheets("Corrosion").Cells(40, 6) = "mil/yr"
  Worksheets("Corrosion").Cells(40, 7) = "mil/yr"
  Worksheets("Corrosion").Cells(40, 8) = "mil/yr"
  Worksheets("Corrosion").Cells(40, 9) = "mil/yr"
  Worksheets("Corrosion").Cells(40, 10) = "mil/yr"
  Worksheets("Corrosion").Cells(40, 11) = "mil/yr"
  Worksheets("Corrosion").Cells(40, 12) = "mil/yr"
  Worksheets("Corrosion").Cells(40, 13) = "mil/yr"
  Worksheets("Corrosion").Cells(40, 14) = "mil/yr"
  
  Worksheets("What If").Range("c34") = "(Mcf/D)"
  Worksheets("What If").Range("c35") = "(B/D)"
  Worksheets("What If").Range("c36") = "(B/D)"
  Worksheets("What If").Range("C38") = "癋"
  Worksheets("What If").Range("C40") = "psia"

     ' Worksheets("Calcite").Select
      
   Worksheets("Calcite").Unprotect ("eesi")
    
    Worksheets("Calcite").ChartObjects("Chart 1").Activate
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    Selection.Characters.Text = "pressure (psia)"
    Selection.AutoScaleFont = False
    ActiveSheet.ChartObjects("Chart 2").Activate
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    Selection.Caption = "Temp (F)"
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlValue, xlSecondary).AxisTitle.Select
    Selection.Caption = "Pressure (psia)"
    ActiveSheet.Protect ("eesi")
    
    Worksheets("Barite").Unprotect ("eesi")
    Worksheets("Barite").ChartObjects("Chart 1").Activate
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    Selection.Characters.Text = "Pressure (psia)"
    Selection.AutoScaleFont = False
    ActiveSheet.ChartObjects("Chart 2").Activate
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    Selection.Caption = "Temp (F)"
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlValue, xlSecondary).AxisTitle.Select
    Selection.Caption = "Pressure (psia)"
    ActiveSheet.Protect ("eesi")
    
    Worksheets("Other SO4s").Unprotect ("eesi")
     Worksheets("Other SO4s").ChartObjects("Chart 1").Activate
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    Selection.Characters.Text = "Pressure (psia)"
    Selection.AutoScaleFont = False
    ActiveSheet.ChartObjects("Chart 2").Activate
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    Selection.Characters.Text = "Pressure (psia)"
    Selection.AutoScaleFont = False
    ActiveSheet.ChartObjects("Chart 3").Activate
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    Selection.Caption = "Temp (F)"
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlValue, xlSecondary).AxisTitle.Select
    Selection.Caption = "Pressure (psia)"
    ActiveSheet.Protect ("eesi")
    If RunStat = 0 Then
    Worksheets("Halite").Unprotect ("eesi")
    Worksheets("Halite").ChartObjects("Chart 1").Activate
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    Selection.Characters.Text = "Pressure (psia)"
    ActiveSheet.Protect ("eesi")
    End If
    Application.ScreenUpdating = True
    'ActiveSheet.Protect ("eesi")
    Worksheets(mySheet).Select
    Worksheets(mySheet).Range("A2").Select
End Sub
Sub UseSIUnits()
 Application.ScreenUpdating = False
mySheet = ActiveSheet.Name
If mySheet = "Halite Module" Then RunStat = 1
'If mySheet = "Simplified Input" Then RunSimpSSP = 1
  UseSI = 1
  If RunStat <> 1 Then
  Worksheets("Input").Range("A35") = "Gas/day(thousand m^3/day)"
  Worksheets("Input").Range("B35") = "(kSm^3/D)"
  Worksheets("Input").Range("B36") = "(Sm^3/D)"
  Worksheets("Input").Range("B37") = "(Sm^3/D)"
  Worksheets("Input").Range("B39") = "(癈)"
  Worksheets("Input").Range("B40") = "(癈)"
  Worksheets("Input").Range("B41") = "(bar)"
  Worksheets("Input").Range("B42") = "(bar)"
  Worksheets("Input").Range("B45") = "(Sm^3/D)"
  Worksheets("Input").Range("B46") = "(Sm^3/D)"
  Worksheets("Input").Range("B58") = "(癈)"
  Worksheets("Input").Range("B59") = "(bar)"
  Worksheets("Input").Range("B60") = "(癈)"
  Worksheets("Input").Range("B61") = "(bar)"
  Worksheets("Input II").Range("A35") = "Gas/day(thousand m^3/day)"
  Worksheets("Input II").Range("B35") = "(kSm^3/D)"
  Worksheets("Input II").Range("B36") = "(Sm^3/D)"
  Worksheets("Input II").Range("B37") = "(Sm^3/D)"
  Worksheets("Input II").Range("B39") = "(癈)"
  Worksheets("Input II").Range("B40") = "(癈)"
  Worksheets("Input II").Range("B41") = "(bar)"
  Worksheets("Input II").Range("B42") = "(bar)"
  Worksheets("Input II").Range("B45") = "(Sm^3/D)"
  Worksheets("Input II").Range("B46") = "(Sm^3/D)"
  Worksheets("Input II").Range("B58") = "(癈)"
  Worksheets("Input II").Range("B59") = "(bar)"
  Worksheets("Input II").Range("B60") = "(癈)"
  Worksheets("Input II").Range("B61") = "(bar)"
  
  
  Worksheets("Input_1000_Cases").Range("A35") = "Gas/day(thousand m^3/day)"
  Worksheets("Input_1000_Cases").Range("B35") = "(kSm^3/D)"
  Worksheets("Input_1000_Cases").Range("B36") = "(Sm^3/D)"
  Worksheets("Input_1000_Cases").Range("B37") = "(Sm^3/D)"
  Worksheets("Input_1000_Cases").Range("B39") = "(癈)"
  Worksheets("Input_1000_Cases").Range("B40") = "(癈)"
  Worksheets("Input_1000_Cases").Range("B41") = "(bar)"
  Worksheets("Input_1000_Cases").Range("B42") = "(bar)"
  Worksheets("Input_1000_Cases").Range("B45") = "(Sm^3/D)"
  Worksheets("Input_1000_Cases").Range("B46") = "(Sm^3/D)"
  Worksheets("Input_1000_Cases").Range("B58") = "(癈)"
  Worksheets("Input_1000_Cases").Range("B59") = "(bar)"
  Worksheets("Input_1000_Cases").Range("B60") = "(癈)"
  Worksheets("Input_1000_Cases").Range("B61") = "(bar)"
  Worksheets("Multiphase flash").Range("M5") = "T(C)"
  Worksheets("Multiphase flash").Range("M6") = "P(bar)"
  'Worksheets("Multiphase flash").Range("C25") = "Bubble Point (bar)"
'If RunSimpSSP = 1 Then
'  Worksheets("Simplified Input").Range("F14") = "(癈)"
'  Worksheets("Simplified Input").Range("F16") = "(bar)"
'  Worksheets("Simplified Input").Range("F15") = "(癈)"
'  Worksheets("Simplified Input").Range("F17") = "(bar)"
'  Worksheets("Simplified Input").Range("E37") = "Gas/day(thousand m^3/day)"
'  Worksheets("Simplified Input").Range("F37") = "(Mm^3/D)"
'  Worksheets("Simplified Input").Range("F38") = "(m^3/D)"
'  Worksheets("Simplified Input").Range("F39") = "(m^3/D)"
'  Worksheets("Simplified Input").Range("F40") = "(m^3/D)"
End If
  
If RunStat = 1 Then
  Worksheets("Input data sheet").Range("q4") = "T (癈)"
  Worksheets("Input data sheet").Range("r4") = "P (bar)"
  Worksheets("Input data sheet").Range("q9") = "T (癈)"
  Worksheets("Input data sheet").Range("r9") = "P (bar)"
  Worksheets("Input data sheet").Range("t3") = "Gas/day(thousand m^3/day)"
  Worksheets("Input data sheet").Range("v3") = "(kSm^3/D)"
  Worksheets("Input data sheet").Range("v4") = "(Sm^3/D)"
  Worksheets("Input data sheet").Range("v5") = "(Sm^3/D)"
  Worksheets("Input data sheet").Range("v6") = "(Sm^3/D)"
  Worksheets("Input data sheet").Range("p4") = "Depth (m)"
  Worksheets("Input data sheet").Range("p9") = "Depth (m)"
  Worksheets("Input data sheet").Range("H32") = "(Sm^3/D)"
  Worksheets("Output data sheet").Range("I5") = "(m)"
  Worksheets("Output data sheet").Range("J5") = "(癈)"
  Worksheets("Output data sheet").Range("K5") = "(bar)"
  Worksheets("Output data sheet").Range("S4") = "(Sm^3/D)"
  Worksheets("Output data sheet").Range("S5") = "(Sm^3/D)"
  Worksheets("Output data sheet").Range("Q10") = "(m)"
  Worksheets("Output data sheet").Range("R10") = "(癈)"
  Worksheets("Output data sheet").Range("S10") = "(bar)"
  
  Worksheets("Halite analysis").Range("c5") = "(m)"
  Worksheets("Halite analysis").Range("d5") = "(癈)"
  Worksheets("Halite analysis").Range("e5") = "(bar)"
  Worksheets("Halite analysis").Range("k5") = "(m)"
  Worksheets("Halite analysis").Range("L5") = "(癈)"
  Worksheets("Halite analysis").Range("M5") = "(bar)"
End If
If RunStat = 1 Then 'Skip the change of Shell sheets unit for Halite tool only
  GoTo 15
Else
  Worksheets("H2S partition").Range("B3") = "(癈)"
  Worksheets("H2S partition").Range("C3") = "(bar)"
  Worksheets("H2S partition").Range("N3") = "(bar)"
  Worksheets("H2S partition").Range("AB3") = "(bar)"
  Worksheets("H2S partition").Range("O3") = "(bar)"
  Worksheets("Shell speciation").Range("A3") = "(癈)"
  Worksheets("Shell speciation").Range("B3") = "(bar)"
  Worksheets("Shell speciation").Range("A23") = "(癈)"
  Worksheets("Shell speciation").Range("B23") = "(bar)"
  Worksheets("Shell speciation").Range("A43") = "(癈)"
  Worksheets("Shell speciation").Range("B43") = "(bar)"
  Worksheets("Shell Multiflash").Range("A1") = "T(C)"
  Worksheets("Shell Multiflash").Range("C1") = "P(bar)"
  Worksheets("Shell Multiflash").Range("D23") = "(bar)"
  Worksheets("Shell Multiflash").Range("H2") = "(bar)"
  Worksheets("FlashSheet").Range("V6") = "T(癈)"
  Worksheets("FlashSheet").Range("W6") = "P(bar)"
  Worksheets("CO2, H2S Fugacity").Range("A3") = "T(癈)"
  Worksheets("CO2, H2S Fugacity").Range("B3") = "P(bar)"
  Worksheets("CO2, H2S Fugacity").Range("D3") = "P(bar)"
  Worksheets("CO2, H2S Fugacity").Range("E3") = "P(bar)"
  Worksheets("CO2, H2S Fugacity").Range("i3") = "P(bar)"
  Worksheets("CO2, H2S Fugacity").Range("J3") = "P(bar)"
  Worksheets("CO2, H2S Fugacity").Range("K3") = "P(bar)"
End If
15  Worksheets("Calcite").Range("A3") = "癈"
  Worksheets("Calcite").Range("B3") = "bar"
  Worksheets("Calcite").Range("A15") = "癈"
  Worksheets("Calcite").Range("B15") = "bar"
  
  Worksheets("Barite").Range("A3") = "癈"
  Worksheets("Barite").Range("B3") = "bar"
  Worksheets("Barite").Range("A15") = "癈"
  Worksheets("Barite").Range("B15") = "bar"
  Worksheets("Other SO4s").Range("A3") = "癈"
  Worksheets("Other SO4s").Range("B3") = "bar"
  Worksheets("Other SO4s").Range("A16") = "癈"
  Worksheets("Other SO4s").Range("B16") = "bar"
  Worksheets("Halite").Range("A3") = "癈"
  Worksheets("Halite").Range("B3") = "bar"
  Worksheets("Halite").Range("A15") = "癈"
  Worksheets("Halite").Range("B15") = "bar"
  Worksheets("Sulfides,Fluorite,Carbonates").Range("A3") = "癈"
  Worksheets("Sulfides,Fluorite,Carbonates").Range("B3") = "bar"
  Worksheets("Sulfides,Fluorite,Carbonates").Range("A16") = "癈"
  Worksheets("Sulfides,Fluorite,Carbonates").Range("B16") = "bar"
  Worksheets("Silicates").Range("A3") = "癈"
  Worksheets("Silicates").Range("B3") = "bar"
    Worksheets("Mg(OH)2,Ca(OH)2").Range("A3") = "癈"
  Worksheets("Mg(OH)2,Ca(OH)2").Range("B3") = "bar"
  Worksheets("Use Mass Transfer").Range("A11") = "癈"
  Worksheets("Use Mass Transfer").Range("B11") = "bar"
  Worksheets("Use Mass Transfer").Range("g4") = "Tubing/Pipe Internal Diameter (cm)"
  Worksheets("Use Mass Transfer").Range("g5") = "Tubing/Pipe Length or travel distance to sample at time t (m)"
  
  'Dai 2020 deposition
  Worksheets("Deposition Prediction").Cells(6, 3) = "cm"
  Worksheets("Deposition Prediction").Cells(6, 4) = "m"
  Worksheets("Deposition Prediction").Cells(6, 6) = "癈"
  Worksheets("Deposition Prediction").Cells(6, 7) = "bar"
  Worksheets("Deposition Prediction").Cells(6, 8) = "癈"
  Worksheets("Deposition Prediction").Cells(6, 9) = "bar"
  Worksheets("Deposition Prediction").Cells(6, 10) = "kSm^3/D"
  Worksheets("Deposition Prediction").Cells(6, 11) = "Sm^3/D"
  Worksheets("Deposition Prediction").Cells(6, 12) = "Sm^3/D"
  Worksheets("Deposition Prediction").Cells(10, 11) = "cm/yr"
  Worksheets("Deposition Prediction").Cells(24, 4) = "癈"
  Worksheets("Deposition Prediction").Cells(40, 4) = "癈"
  Worksheets("Deposition Prediction").Cells(24, 5) = "bar"
  Worksheets("Deposition Prediction").Cells(40, 5) = "bar"
  Worksheets("Deposition Prediction").Cells(24, 3) = "m"
  Worksheets("Deposition Prediction").Cells(40, 3) = "m"
  Worksheets("Deposition Prediction").Cells(40, 9) = "cm/yr"
  Worksheets("Deposition Prediction").Cells(40, 13) = "cm/yr"
  Worksheets("Deposition Prediction").Cells(37, 13) = "cm/yr"
  
  If Iter_MT_WI = 0 Then Iter_MT_WI = 1
  Worksheets("Deposition Prediction_WhatIf").Cells(6, 3) = "cm"
  Worksheets("Deposition Prediction_WhatIf").Cells(6, 4) = "m"
  Worksheets("Deposition Prediction_WhatIf").Cells(6, 6) = "癈"
  Worksheets("Deposition Prediction_WhatIf").Cells(6, 7) = "bar"
  Worksheets("Deposition Prediction_WhatIf").Cells(6, 8) = "癈"
  Worksheets("Deposition Prediction_WhatIf").Cells(6, 9) = "bar"
  Worksheets("Deposition Prediction_WhatIf").Cells(6, 10) = "kSm^3/D"
  Worksheets("Deposition Prediction_WhatIf").Cells(6, 11) = "Sm^3/D"
  Worksheets("Deposition Prediction_WhatIf").Cells(6, 12) = "Sm^3/D"
  'Worksheets("Deposition Prediction_WhatIf").Cells(10, 6) = "cm/yr"
  Worksheets("Deposition Prediction_WhatIf").Cells(24 + (Iter_MT_WI - 1) * 32, 4) = "癈"
  Worksheets("Deposition Prediction_WhatIf").Cells(40 + (Iter_MT_WI - 1) * 32, 4) = "癈"
  Worksheets("Deposition Prediction_WhatIf").Cells(24 + (Iter_MT_WI - 1) * 32, 5) = "bar"
  Worksheets("Deposition Prediction_WhatIf").Cells(40 + (Iter_MT_WI - 1) * 32, 5) = "bar"
  Worksheets("Deposition Prediction_WhatIf").Cells(24 + (Iter_MT_WI - 1) * 32, 3) = "m"
  Worksheets("Deposition Prediction_WhatIf").Cells(40 + (Iter_MT_WI - 1) * 32, 3) = "m"
  Worksheets("Deposition Prediction_WhatIf").Cells(40 + (Iter_MT_WI - 1) * 32, 9) = "cm/yr"
  Worksheets("Deposition Prediction_WhatIf").Cells(40 + (Iter_MT_WI - 1) * 32, 13) = "cm/yr"
  Worksheets("Deposition Prediction_WhatIf").Cells(37 + (Iter_MT_WI - 1) * 32, 13) = "cm/yr"
  
  
  
  'Dai 2020 corrosion
  Worksheets("Corrosion").Cells(6, 3) = "cm"
  Worksheets("Corrosion").Cells(6, 4) = "m"
  Worksheets("Corrosion").Cells(6, 6) = "癈"
  Worksheets("Corrosion").Cells(6, 7) = "bar"
  Worksheets("Corrosion").Cells(6, 8) = "癈"
  Worksheets("Corrosion").Cells(6, 9) = "bar"
  Worksheets("Corrosion").Cells(6, 10) = "kSm^3/D"
  Worksheets("Corrosion").Cells(6, 11) = "Sm^3/D"
  Worksheets("Corrosion").Cells(6, 12) = "Sm^3/D"
  Worksheets("Corrosion").Cells(10, 3) = "cm"
  Worksheets("Corrosion").Cells(10, 4) = "m/s"
  Worksheets("Corrosion").Cells(10, 6) = "癈"
  Worksheets("Corrosion").Cells(10, 7) = "bar"
  Worksheets("Corrosion").Cells(10, 8) = "癈"
  Worksheets("Corrosion").Cells(10, 9) = "bar"
  Worksheets("Corrosion").Cells(10, 10) = "kSm^3/D"
  Worksheets("Corrosion").Cells(10, 11) = "Sm^3/D"
  Worksheets("Corrosion").Cells(10, 12) = "Sm^3/D"
  Worksheets("Corrosion").Cells(24, 4) = "癈"
'  Worksheets("Corrosion").Cells(40, 4) = "癈"
  Worksheets("Corrosion").Cells(24, 5) = "bar"
'  Worksheets("Corrosion").Cells(40, 5) = "bar"
  Worksheets("Corrosion").Cells(24, 3) = "m"
'  Worksheets("Corrosion").Cells(40, 3) = "m"
'  Worksheets("Corrosion").Cells(40, 9) = "cm/yr"
'  Worksheets("Corrosion").Cells(40, 13) = "cm/yr"
'  Worksheets("Corrosion").Cells(37, 13) = "cm/yr"
  Worksheets("Corrosion").Cells(24, 6) = "mm/yr"
  Worksheets("Corrosion").Cells(24, 7) = "mm/yr"
  Worksheets("Corrosion").Cells(24, 8) = "mm/yr"
  Worksheets("Corrosion").Cells(24, 9) = "mm/yr"
  Worksheets("Corrosion").Cells(24, 10) = "mm/yr"
  Worksheets("Corrosion").Cells(24, 11) = "mm/yr"
  Worksheets("Corrosion").Cells(24, 14) = "mm/yr"
  Worksheets("Corrosion").Cells(40, 6) = "mm/yr"
  Worksheets("Corrosion").Cells(40, 7) = "mm/yr"
  Worksheets("Corrosion").Cells(40, 8) = "mm/yr"
  Worksheets("Corrosion").Cells(40, 9) = "mm/yr"
  Worksheets("Corrosion").Cells(40, 10) = "mm/yr"
  Worksheets("Corrosion").Cells(40, 11) = "mm/yr"
  Worksheets("Corrosion").Cells(40, 12) = "mm/yr"
  Worksheets("Corrosion").Cells(40, 13) = "mm/yr"
  Worksheets("Corrosion").Cells(40, 14) = "mm/yr"
  
  Worksheets("What If").Range("c34") = "(kSm^3/D)"
  Worksheets("What If").Range("c35") = "(Sm^3/D)"
  Worksheets("What If").Range("c36") = "(Sm^3/D)"
  Worksheets("What If").Range("C38") = "癈"
  Worksheets("What If").Range("C40") = "bar"
    Worksheets("Calcite").Unprotect ("eesi")
    Worksheets("Calcite").ChartObjects("Chart 1").Activate
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    Selection.Characters.Text = "pressure (bar)"
    Selection.AutoScaleFont = False
    ActiveSheet.ChartObjects("Chart 2").Activate
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    Selection.Caption = "Temp (C)"
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlValue, xlSecondary).AxisTitle.Select
    Selection.Caption = "Pressure (Bar)"
    ActiveSheet.Protect ("eesi")
    Worksheets("Barite").Unprotect ("eesi")
    Worksheets("Barite").ChartObjects("Chart 1").Activate
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    Selection.Characters.Text = "Pressure (bar)"
    Selection.AutoScaleFont = False
    ActiveSheet.ChartObjects("Chart 2").Activate
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    Selection.Caption = "Temp (C)"
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlValue, xlSecondary).AxisTitle.Select
    Selection.Caption = "Pressure (Bar)"
    ActiveSheet.Protect ("eesi")
    
    Worksheets("Other SO4s").Unprotect ("eesi")
    Worksheets("Other SO4s").ChartObjects("Chart 1").Activate
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    Selection.Characters.Text = "Pressure (Bar)"
    Selection.AutoScaleFont = False
    ActiveSheet.ChartObjects("Chart 2").Activate
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    Selection.Characters.Text = "Pressure (Bar)"
    Selection.AutoScaleFont = False
    ActiveSheet.ChartObjects("Chart 3").Activate
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    Selection.Caption = "Temp (C)"
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlValue, xlSecondary).AxisTitle.Select
    Selection.Caption = "Pressure (Bar)"
    ActiveSheet.Protect ("eesi")
       
        If RunStat = 0 Then
    Worksheets("Halite").Unprotect ("eesi")
    Worksheets("Halite").ChartObjects("Chart 1").Activate
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    Selection.Characters.Text = "Pressure (bar)"
    ActiveSheet.Protect ("eesi")
    End If
    Application.ScreenUpdating = True
    Worksheets(mySheet).Select
 Worksheets(mySheet).Range("A2").Select

End Sub
Sub OutputSRValues()
mySheet = ActiveSheet.Name
If mySheet = "Halite Module" Then RunStat = 1
'If mySheet = "Simplified Input" Then RunSimpSSP = 1
  UseSR = 1
  Worksheets("Input").Range("I11").Value = "Saturation Ratio values"
  'If RunSimpSSP = 1 Then Worksheets("Simplified Input").Range("H2").Value = "Saturation Ratio values"
  If RunStat = 1 Then
  Worksheets("Output data sheet").Range("L5").Value = "SR"
  Worksheets("Output data sheet").Range("T10").Value = "SR"
  Worksheets("Halite analysis").Range("F5").Value = "SR"
  Worksheets("Halite analysis").Range("N5").Value = "SR"
  Worksheets("Halite analysis").Range("U4").Value = "Halite-SR"
  End If
'  Worksheets("Calcite").Range("q3") = "SR(MIC=0)"
'  Worksheets("Calcite").Range("r3") = "SR(MIC=5)"
'  Worksheets("Calcite").Range("s3") = "SR(MIC=20)"
'  Worksheets("Barite").Range("q3") = "SR(MIC=0)"
'  Worksheets("Barite").Range("r3") = "SR(MIC=5)"
'  Worksheets("Barite").Range("s3") = "SR(MIC=20)"
'
'  Worksheets("OtherSO4s").Range("q3") = "SR(MIC=0)"
'  Worksheets("OtherSO4s").Range("r3") = "SR(MIC=5)"
'  Worksheets("OtherSO4s").Range("s3") = "SR(MIC=20)"
  
  Worksheets("Calcite").Range("D3").Value = "SR"
  Worksheets("Calcite").Range("E3").Value = "Norm SR"
  Worksheets("Calcite").Range("J3").Value = "SR"
  Worksheets("Calcite").Range("E15").Value = "SR"
  Worksheets("Calcite").Range("F15").Value = "Norm SR"

  Worksheets("Barite").Range("C3").Value = "SR"
  Worksheets("Barite").Range("D3").Value = "Norm SR"
  Worksheets("Barite").Range("C15").Value = "SR"
  Worksheets("Barite").Range("D15").Value = "Norm SR"
'  For i = 1 To 10
'  Worksheets("Calcite").Cells(14 + i, 7).Value = "SR="
'  Worksheets("Calcite").Cells(14 + i, 9).Value = "Norm SR="
'  Worksheets("barite").Cells(14 + i, 5).Value = "SR="
'  Worksheets("Barite").Cells(14 + i, 7).Value = "Norm SR=s"
'  Worksheets("Halite").Cells(14 + i, 5).Value = "SR="
'  Next i

  Worksheets("other SO4s").Range("C3").Value = "SR"
  Worksheets("other SO4s").Range("E3").Value = "SR"
  Worksheets("other SO4s").Range("G3").Value = "SR"
  Worksheets("other SO4s").Range("I3").Value = "SR"
  Worksheets("other SO4s").Range("C16").Value = "SR"
  Worksheets("other SO4s").Range("E16").Value = "SR"
  Worksheets("other SO4s").Range("G16").Value = "SR"
  Worksheets("other SO4s").Range("I16").Value = "SR"
  If RunStat <> 1 Then
  Worksheets("Halite").Range("C3").Value = "SR"
  Worksheets("Halite").Range("D3").Value = "Norm SR"
  Worksheets("Halite").Range("C15").Value = "SR"
  Worksheets("Halite").Range("D15").Value = "Norm SR"
  End If
    Worksheets("Sulfides,Fluorite,Carbonates").Range("C3").Value = "SR"
    Worksheets("Sulfides,Fluorite,Carbonates").Range("E3").Value = "SR"
    Worksheets("Sulfides,Fluorite,Carbonates").Range("G3").Value = "SR"
    Worksheets("Sulfides,Fluorite,Carbonates").Range("I3").Value = "SR"
    Worksheets("Sulfides,Fluorite,Carbonates").Range("k3").Value = "SR"
    Worksheets("Sulfides,Fluorite,Carbonates").Range("m3").Value = "SR"
    Worksheets("Sulfides,Fluorite,Carbonates").Range("n3").Value = "Norm SR"
    Worksheets("Sulfides,Fluorite,Carbonates").Range("p3").Value = "SR"
    Worksheets("Sulfides,Fluorite,Carbonates").Range("r3").Value = "SR"
    Worksheets("Sulfides,Fluorite,Carbonates").Range("T3").Value = "SR"
    Worksheets("Sulfides,Fluorite,Carbonates").Range("V3").Value = "SR"
    Worksheets("Sulfides,Fluorite,Carbonates").Range("C16").Value = "SR"
    Worksheets("Sulfides,Fluorite,Carbonates").Range("E16").Value = "SR"
    Worksheets("Sulfides,Fluorite,Carbonates").Range("G16").Value = "SR"
    Worksheets("Sulfides,Fluorite,Carbonates").Range("I16").Value = "SR"
  
  Worksheets("Silicates").Range("C3").Value = "SR"
  Worksheets("Silicates").Range("f3").Value = "SR"
  Worksheets("Silicates").Range("i3").Value = "SR"
  Worksheets("Silicates").Range("l3").Value = "SR"
  Worksheets("Silicates").Range("o3").Value = "SR"
  Worksheets("Mg(OH)2,Ca(OH)2").Range("d3").Value = "SR"
  Worksheets("Mg(OH)2,Ca(OH)2").Range("g3").Value = "SR"
  'Worksheets("Use Mass Transfer").Range("a3").Value = "Critical SR"
  Worksheets("Well#1+Water").Range("B3").Value = "Calcite - SR"
  Worksheets("Well#1+Water").Range("D3").Value = "Barite - SR"
  Worksheets("Well#1+Water").Range("F3").Value = "Halite - SR"
  Worksheets("Well#1+Water").Range("N3").Value = "Gypsum - SR"
  Worksheets("Well#1+Water").Range("P3").Value = "hemihydrate- SR"
  Worksheets("Well#1+Water").Range("R3").Value = "Anhydrite - SR"
  Worksheets("Well#1+Water").Range("T3").Value = "Celestite - SR"
  
  Worksheets("Well#1+Water").Range("B38").Value = "SiO2am - SR"
  Worksheets("Well#1+Water").Range("D38").Value = "SiO2cr - SR"
  Worksheets("Well#1+Water").Range("F38").Value = "Mg-Silicate - SR"
  Worksheets("Well#1+Water").Range("h38").Value = "Ca/Mg-Silicate - SR"
  Worksheets("Well#1+Water").Range("j38").Value = "Fe-Silicate- SR"
  
  
  Worksheets("Mixing Two Wells").Range("B3").Value = "Calcite - SR"
  Worksheets("Mixing Two Wells").Range("D3").Value = "Barite - SR"
  Worksheets("Mixing Two Wells").Range("F3").Value = "Halite - SR"
  Worksheets("Mixing Two Wells").Range("N3").Value = "Gypsum - SR"
  Worksheets("Mixing Two Wells").Range("P3").Value = "hemihydrate- SR"
  Worksheets("Mixing Two Wells").Range("R3").Value = "Anhydrite - SR"
  Worksheets("Mixing Two Wells").Range("T3").Value = "Celestite - SR"
  Worksheets("MultiMix").Range("X2").Value = "SR, Calcite before precip."
  Worksheets("MultiMix").Range("AC2").Value = "SR, Barite before precip."
'  Worksheets("Use Mass Transfer").Range("A3").Value = "Critical SR"
  Worksheets("Use Mass Transfer").Range("C10").Value = "SR"
  Worksheets("Use Mass Transfer").Range("f10").Value = "SR"

  'Dai 2020 deposition
  Worksheets("Deposition Prediction").Unprotect ("eesi")
  Worksheets("Deposition Prediction_WhatIf").Unprotect ("eesi")
  Worksheets("Deposition Prediction").Range("F39").Value = "SR"
  Worksheets("Deposition Prediction").Range("J39").Value = "SR"
  
  If Iter_MT_WI = 0 Then Iter_MT_WI = 1
  Worksheets("Deposition Prediction_WhatIf").Cells(39 + (Iter_MT_WI - 1) * 32, 6).Value = "SR"
  Worksheets("Deposition Prediction_WhatIf").Cells(39 + (Iter_MT_WI - 1) * 32, 10).Value = "SR"
  Worksheets("Deposition Prediction").Protect ("eesi")
  Worksheets("Deposition Prediction_WhatIf").Protect ("eesi")
'  Worksheets("Use Mass Transfer").Range("k10").Value = "SR"
'  Worksheets("Use Mass Transfer").Range("o10").Value = "SR"
'  Worksheets("Use Mass Transfer").Range("S10").Value = "SR"
    Worksheets("Input_1000_Cases").Range("A82").Value = "Calcite SR"
    Worksheets("Input_1000_Cases").Range("A84").Value = "Barite SR"
    Worksheets("Input_1000_Cases").Range("A86").Value = "Halite SR"
    Worksheets("Input_1000_Cases").Range("A88").Value = "Gypsum SR"
    Worksheets("Input_1000_Cases").Range("A90").Value = "Hemihydrate SR"
    Worksheets("Input_1000_Cases").Range("A92").Value = "Anhydrite SR"
    Worksheets("Input_1000_Cases").Range("A94").Value = "Celestite SR"
    Worksheets("Input_1000_Cases").Range("A96").Value = "Amorphous FeS SR"
    Worksheets("Input_1000_Cases").Range("A98").Value = "Mackinawite SR"
    Worksheets("Input_1000_Cases").Range("A100").Value = "Troilite/Pyrrhotite SR"
    Worksheets("Input_1000_Cases").Range("A102").Value = "ZnS SR"
    Worksheets("Input_1000_Cases").Range("A104").Value = "CaF SR"
    Worksheets("Input_1000_Cases").Range("A106").Value = "FeCO3 SR"

   Worksheets("Calcite").Unprotect ("eesi")
    'ActiveSheet.Unprotect
    Worksheets("Calcite").ChartObjects("Chart 1").Activate
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlValue).AxisTitle.Select
    Selection.Characters.Text = "SR or Norm SR"
    Selection.AutoScaleFont = False
    ActiveSheet.ChartObjects("Chart 2").Activate
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlValue).AxisTitle.Select
    Selection.Characters.Text = "Calcite SR"
     Selection.AutoScaleFont = False
    ActiveSheet.Protect ("eesi")
    
    Worksheets("Barite").Unprotect ("eesi")
    Worksheets("Barite").ChartObjects("Chart 1").Activate
    ActiveChart.Axes(xlValue).AxisTitle.Select
    Selection.Characters.Text = "SR or Norm SR"
    Selection.AutoScaleFont = False
    ActiveSheet.ChartObjects("Chart 2").Activate
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlValue).AxisTitle.Select
    Selection.Characters.Text = "Barite SR"
     Selection.AutoScaleFont = False
    ActiveSheet.Protect ("eesi")
    
    Worksheets("Other SO4s").Unprotect ("eesi")
    Worksheets("Other SO4s").ChartObjects("Chart 1").Activate
    ActiveChart.Axes(xlValue).AxisTitle.Select
    Selection.Characters.Text = "SrSO4 SR"
    Selection.AutoScaleFont = False
    ActiveSheet.ChartObjects("Chart 2").Activate
    ActiveChart.Axes(xlValue).AxisTitle.Select
    Selection.Characters.Text = "CaSO4s SR"
    Selection.AutoScaleFont = False
    ActiveSheet.ChartObjects("Chart 3").Activate
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlValue).AxisTitle.Select
    Selection.Characters.Text = "CaSO4s SR"
     Selection.AutoScaleFont = False
    ActiveSheet.Protect ("eesi")
If RunStat = 0 Then
    Worksheets("Halite").Unprotect ("eesi")
    Worksheets("Halite").ChartObjects("Chart 1").Activate
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlValue).AxisTitle.Select
    Selection.Characters.Text = "SR or Norm SR"
    ActiveSheet.Protect ("eesi")
End If
    Worksheets(mySheet).Select
    Worksheets(mySheet).Range("A2").Select
End Sub

Sub OutputSIValues()
mySheet = ActiveSheet.Name
If mySheet = "Halite Module" Then RunStat = 1
'If mySheet = "Simplified Input" Then RunSimpSSP = 1
  UseSR = 0
  Worksheets("Input").Range("I11").Value = "Saturation Index values"
  'If RunSimpSSP = 1 Then Worksheets("Simplified Input").Range("H2").Value = "Saturation Index values"
  If RunStat = 1 Then
  Worksheets("Output data sheet").Range("L5").Value = "SI"
  Worksheets("Output data sheet").Range("T10").Value = "SI"
  Worksheets("Halite analysis").Range("F5").Value = "SI"
  Worksheets("Halite analysis").Range("N5").Value = "SI"
  Worksheets("Halite analysis").Range("U4").Value = "Halite-SI"
  End If
'  Worksheets("ScaleRiskPlots").Range("L3") = "SI"
'  Worksheets("ScaleRiskPlots").Range("M3") = "SI"
'  Worksheets("ScaleRiskPlots").Range("o3") = "SI(MIC=0)"
'  Worksheets("ScaleRiskPlots").Range("p3") = "SI(MIC=5)"
'  Worksheets("ScaleRiskPlots").Range("q3") = "SI(MIC=20)"
'  Worksheets("ScaleRiskPlots").Range("r3") = "SI(MIC=0)"
'  Worksheets("ScaleRiskPlots").Range("s3") = "SI(MIC=5)"
'  Worksheets("ScaleRiskPlots").Range("t3") = "SI(MIC=20)"
  Worksheets("Calcite").Range("D3").Value = "SI"
  Worksheets("Calcite").Range("E3").Value = "Delta SI"
  Worksheets("Calcite").Range("J3").Value = "SI"
  Worksheets("Calcite").Range("E15").Value = "SI"
  Worksheets("Calcite").Range("F15").Value = "Delta SI"
  
'  Worksheets("Calcite").Range("t3") = "SI(MIC=0)"
' Worksheets("Calcite").Range("u3") = "SI(MIC=5)"
' Worksheets("Calcite").Range("s3") = "SI(MIC=20)"

  Worksheets("Barite").Range("C3").Value = "SI"
  Worksheets("Barite").Range("D3").Value = "Delta SI"
  Worksheets("Barite").Range("C15").Value = "SI"
  Worksheets("Barite").Range("D15").Value = "Delta SI"
'  Worksheets("Barite").Range("q3") = "SI(MIC=0)"
'  Worksheets("Barite").Range("r3") = "SI(MIC=5)"
'  Worksheets("Barite").Range("s3") = "SI(MIC=20)"
  
'  For i = 1 To 10
'  Worksheets("Calcite").Cells(14 + i, 7).Value = "SI="
'  Worksheets("Calcite").Cells(14 + i, 9).Value = "Delta SI="
'  Worksheets("barite").Cells(14 + i, 5).Value = "SI="
'  Worksheets("Barite").Cells(14 + i, 7).Value = "Delta SI="
'  Worksheets("Halite").Cells(14 + i, 5).Value = "SI="
'  Next i

  Worksheets("other SO4s").Range("C3").Value = "SI"
  Worksheets("other SO4s").Range("E3").Value = "SI"
  Worksheets("other SO4s").Range("G3").Value = "SI"
  Worksheets("other SO4s").Range("I3").Value = "SI"
  Worksheets("other SO4s").Range("C16").Value = "SI"
  Worksheets("other SO4s").Range("E16").Value = "SI"
  Worksheets("other SO4s").Range("G16").Value = "SI"
  Worksheets("other SO4s").Range("I16").Value = "SI"
  
'  Worksheets("Other So4s").Range("q3") = "SI(MIC=0)"
'  Worksheets("Other SO4s").Range("r3") = "SI(MIC=5)"
'  Worksheets("Other SO4s").Range("s3") = "SI(MIC=20)"
'
If RunStat <> 1 Then
  Worksheets("Halite").Range("C3").Value = "SI"
  Worksheets("Halite").Range("D3").Value = "Delta SI"
    Worksheets("Halite").Range("C15").Value = "SI"
  Worksheets("Halite").Range("D15").Value = "Delta SI"
  End If
  Worksheets("Sulfides,Fluorite,Carbonates").Range("C3").Value = "SI"
  Worksheets("Sulfides,Fluorite,Carbonates").Range("E3").Value = "SI"
  Worksheets("Sulfides,Fluorite,Carbonates").Range("G3").Value = "SI"
  Worksheets("Sulfides,Fluorite,Carbonates").Range("I3").Value = "SI"
  Worksheets("Sulfides,Fluorite,Carbonates").Range("k3").Value = "SI"
  Worksheets("Sulfides,Fluorite,Carbonates").Range("m3").Value = "SI"
  Worksheets("Sulfides,Fluorite,Carbonates").Range("n3").Value = "Delta SI"
  Worksheets("Sulfides,Fluorite,Carbonates").Range("P3").Value = "SI"
  Worksheets("Sulfides,Fluorite,Carbonates").Range("r3").Value = "SI"
  Worksheets("Sulfides,Fluorite,Carbonates").Range("t3").Value = "SI"
  Worksheets("Sulfides,Fluorite,Carbonates").Range("v3").Value = "SI"
  Worksheets("Sulfides,Fluorite,Carbonates").Range("C16").Value = "SI"
  Worksheets("Sulfides,Fluorite,Carbonates").Range("E16").Value = "SI"
  Worksheets("Sulfides,Fluorite,Carbonates").Range("G16").Value = "SI"
  Worksheets("Sulfides,Fluorite,Carbonates").Range("I16").Value = "SI"
 
 
  Worksheets("Silicates").Range("C3").Value = "SI"
  Worksheets("Silicates").Range("f3").Value = "SI"
  Worksheets("Silicates").Range("i3").Value = "SI"
  Worksheets("Silicates").Range("l3").Value = "SI"
  Worksheets("Silicates").Range("o3").Value = "SI"
  Worksheets("Mg(OH)2,Ca(OH)2").Range("d3").Value = "SI"
  Worksheets("Mg(OH)2,Ca(OH)2").Range("g3").Value = "SI"
  'Worksheets("Use Mass Transfer").Range("a3").Value = "Critical SI"
  Worksheets("Well#1+Water").Range("B3").Value = "Calcite - SI"
  Worksheets("Well#1+Water").Range("D3").Value = "Barite - SI"
  Worksheets("Well#1+Water").Range("F3").Value = "Halite - SI"
  Worksheets("Well#1+Water").Range("N3").Value = "Gypsum - SI"
  Worksheets("Well#1+Water").Range("P3").Value = "hemihydrate- SI"
  Worksheets("Well#1+Water").Range("R3").Value = "Anhydrite - SI"
  Worksheets("Well#1+Water").Range("T3").Value = "Celestite - SI"
   Worksheets("Well#1+Water").Range("B38").Value = "SiO2am - SI"
  Worksheets("Well#1+Water").Range("D38").Value = "SiO2cr - SI"
  Worksheets("Well#1+Water").Range("F38").Value = "Mg-Silicate - SI"
  Worksheets("Well#1+Water").Range("h38").Value = "Ca/Mg-Silicate - SI"
  Worksheets("Well#1+Water").Range("j38").Value = "Fe-Silicate- SI"
  Worksheets("Mixing Two Wells").Range("B3").Value = "Calcite - SI"
  Worksheets("Mixing Two Wells").Range("D3").Value = "Barite - SI"
  Worksheets("Mixing Two Wells").Range("F3").Value = "Halite - SI"
  Worksheets("Mixing Two Wells").Range("N3").Value = "Gypsum - SI"
  Worksheets("Mixing Two Wells").Range("P3").Value = "hemihydrate- SI"
  Worksheets("Mixing Two Wells").Range("R3").Value = "Anhydrite - SI"
  Worksheets("Mixing Two Wells").Range("T3").Value = "Celestite - SI"
  
  Worksheets("MultiMix").Range("X2").Value = "SI, Calcite before precip."
  Worksheets("MultiMix").Range("AC2").Value = "SI, Barite before precip."
'  Worksheets("Use Mass Transfer").Range("A3").Value = "Critical SI"
'  Worksheets("Use Mass Transfer").Range("C5").Value = "SI"
'  Worksheets("Use Mass Transfer").Range("f5").Value = "SI"
'  Worksheets("Use Mass Transfer").Range("i5").Value = "SI"
'  Worksheets("Use Mass Transfer").Range("l5").Value = "SI"
  Worksheets("Use Mass Transfer").Range("C10").Value = "SI"
  Worksheets("Use Mass Transfer").Range("f10").Value = "SI"
  
  'Dai 2020 deposition
  Worksheets("Deposition Prediction").Unprotect ("eesi")
  Worksheets("Deposition Prediction_WhatIf").Unprotect ("eesi")
  Worksheets("Deposition Prediction").Range("F39").Value = "SI"
  Worksheets("Deposition Prediction").Range("J39").Value = "SI"
  
  If Iter_MT_WI = 0 Then Iter_MT_WI = 1
  Worksheets("Deposition Prediction_WhatIf").Cells(39 + (Iter_MT_WI - 1) * 32, 6).Value = "SI"
  Worksheets("Deposition Prediction_WhatIf").Cells(39 + (Iter_MT_WI - 1) * 32, 10).Value = "SI"
  Worksheets("Deposition Prediction").Protect ("eesi")
  Worksheets("Deposition Prediction_WhatIf").Protect ("eesi")
'  Worksheets("Use Mass Transfer").Range("k10").Value = "SI"
'  Worksheets("Use Mass Transfer").Range("o10").Value = "SI"
'  Worksheets("Use Mass Transfer").Range("S10").Value = "SI"


    Worksheets("Input_1000_Cases").Range("A82").Value = "Calcite SI"
    Worksheets("Input_1000_Cases").Range("A84").Value = "Barite SI"
    Worksheets("Input_1000_Cases").Range("A86").Value = "Halite SI"
    Worksheets("Input_1000_Cases").Range("A88").Value = "Gypsum SI"
    Worksheets("Input_1000_Cases").Range("A90").Value = "Hemihydrate SI"
    Worksheets("Input_1000_Cases").Range("A92").Value = "Anhydrite SI"
    Worksheets("Input_1000_Cases").Range("A94").Value = "Celestite SI"
    Worksheets("Input_1000_Cases").Range("A96").Value = "Amorphous FeS SI"
    Worksheets("Input_1000_Cases").Range("A98").Value = "Mackinawite SI"
    Worksheets("Input_1000_Cases").Range("A100").Value = "Troilite/Pyrrhotite SI"
    Worksheets("Input_1000_Cases").Range("A102").Value = "ZnS SI"
    Worksheets("Input_1000_Cases").Range("A104").Value = "CaF SI"
    Worksheets("Input_1000_Cases").Range("A106").Value = "FeCO3 SI"

    
     Worksheets("Calcite").Unprotect ("eesi")
    Worksheets("Calcite").ChartObjects("Chart 1").Activate
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlValue).AxisTitle.Select
    Selection.Characters.Text = "SI or Delta SI"
    Selection.AutoScaleFont = False
    ActiveSheet.ChartObjects("Chart 2").Activate
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlValue).AxisTitle.Select
    Selection.Characters.Text = "Calcite SI"
     Selection.AutoScaleFont = False
    ActiveSheet.Protect ("eesi")
    
    Worksheets("Barite").Unprotect ("eesi")
    Worksheets("Barite").ChartObjects("Chart 1").Activate
    ActiveChart.Axes(xlValue).AxisTitle.Select
    Selection.Characters.Text = "SI or Delta SI"
    Selection.AutoScaleFont = False
    ActiveSheet.ChartObjects("Chart 2").Activate
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlValue).AxisTitle.Select
    Selection.Characters.Text = "Barite SI"
     Selection.AutoScaleFont = False
    ActiveSheet.Protect ("eesi")
    
    Worksheets("Other SO4s").Unprotect ("eesi")
    Worksheets("Other SO4s").ChartObjects("Chart 1").Activate
    ActiveChart.Axes(xlValue).AxisTitle.Select
    Selection.Characters.Text = "SrSO4 SI"
    Selection.AutoScaleFont = False
    Worksheets("Other SO4s").ChartObjects("Chart 2").Activate
    ActiveChart.Axes(xlValue).AxisTitle.Select
    Selection.Characters.Text = "CaSO4s SI"
    Selection.AutoScaleFont = False
    ActiveSheet.ChartObjects("Chart 3").Activate
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlValue).AxisTitle.Select
    Selection.Characters.Text = "CaSO4s SI"
     Selection.AutoScaleFont = False
    ActiveSheet.Protect ("eesi")
    If RunStat = 0 Then
    Worksheets("Halite").Unprotect ("eesi")
     Worksheets("Halite").ChartObjects("Chart 1").Activate
    ActiveChart.ChartArea.Select
    ActiveChart.Axes(xlValue).AxisTitle.Select
    Selection.Characters.Text = "SI or Delta SI"
    End If
    ActiveSheet.Protect ("eesi")
    Worksheets(mySheet).Select
    Worksheets(mySheet).Range("A2").Select
End Sub
Sub UseMolarity()
mySheet = ActiveSheet.Name

For i = 1 To 13
  Worksheets("Input").Cells(9 + i, 2) = "(mg/L)"
  Worksheets("Input II").Cells(9 + i, 2) = "(mg/L)"
  Worksheets("Input_1000_Cases").Cells(9 + i, 2) = "(mg/L)"
  Worksheets("What If").Cells(9 + i, 3) = "(mg/L)"
Next i
Worksheets("Input").Range("B23") = "(mg/L as Si)"
Worksheets("Input").Range("B24") = "(mg/L as HCO3)"
Worksheets("Input").Range("B25") = "(mg/L as CO3)"
Worksheets("Input").Range("B26") = "(mg/L as Acetate)"
Worksheets("Input").Range("B27") = "(mg/L as NH3)"
Worksheets("Input").Range("B28") = "(mg/L as B)"
Worksheets("Input").Range("B33") = "((%H2S; mg/L H2S)"
Worksheets("Input").Range("B47") = "(N)"
Worksheets("Input").Range("B48") = "(N)"
Worksheets("Input").Range("O15") = "(mg/L as H2S)"
Worksheets("Input").Range("O18") = "(mg/L as HCO3)"
Worksheets("Input").Range("O22") = "(mg/L)"

Worksheets("Input II").Range("B23") = "(mg/L as Si)"
Worksheets("Input II").Range("B24") = "(mg/L as HCO3)"
Worksheets("Input II").Range("B25") = "(mg/L as CO3)"
Worksheets("Input II").Range("B26") = "(mg/L as Acetate)"
Worksheets("Input II").Range("B27") = "(mg/L as NH3)"
Worksheets("Input II").Range("B28") = "(mg/L as B)"
Worksheets("Input II").Range("B33") = "((%H2S; mg/L H2S)"
Worksheets("Input II").Range("B47") = "(N)"
Worksheets("Input II").Range("B48") = "(N)"
Worksheets("Input II").Range("b84") = "(mg/L as H2S)"
Worksheets("Input II").Range("b87") = "(mg/L as HCO3)"
Worksheets("Input II").Range("b91") = "(mg/L)"

Worksheets("Input_1000_Cases").Range("B23") = "(mg/L as Si)"
Worksheets("Input_1000_Cases").Range("B24") = "(mg/L as HCO3)"
Worksheets("Input_1000_Cases").Range("B25") = "(mg/L as CO3)"
Worksheets("Input_1000_Cases").Range("B26") = "(mg/L as Acetate)"
Worksheets("Input_1000_Cases").Range("B27") = "(mg/L as NH3)"
Worksheets("Input_1000_Cases").Range("B28") = "(mg/L as B)"
Worksheets("Input_1000_Cases").Range("B33") = "((%H2S; mg/L H2S)"
'Worksheets("Input_1000_Cases").Range("B47") = "(N)"
'Worksheets("Input_1000_Cases").Range("B48") = "(N)"
Worksheets("What if").Range("c23") = "(mg/L as Si)"
Worksheets("What if").Range("c24") = "(mg/L as HCO3)"
Worksheets("What if").Range("c25") = "(mg/L as CO3)"
Worksheets("What if").Range("c26") = "(mg/L as Acetate)"
Worksheets("What if").Range("c27") = "(mg/L as NH3)"
Worksheets("What if").Range("c28") = "(mg/L as B)"
Worksheets(mySheet).Select
 Worksheets(mySheet).Range("A2").Select
End Sub

Sub UseMolality()
mySheet = ActiveSheet.Name
For i = 1 To 13
  Worksheets("Input").Cells(9 + i, 2) = "(m)"
  Worksheets("Input II").Cells(9 + i, 2) = "(m)"
  Worksheets("Input_1000_Cases").Cells(9 + i, 2) = "(m)"
  Worksheets("What If").Cells(9 + i, 3) = "(m)"
Next i
Worksheets("Input").Range("B23") = "(m as Si)"
Worksheets("Input").Range("B24") = "(m as HCO3)"
Worksheets("Input").Range("B25") = "(m as CO3)"
Worksheets("Input").Range("B26") = "(m as Acetate)"
Worksheets("Input").Range("B27") = "(m as NH3)"
Worksheets("Input").Range("B28") = "(m as B)"
Worksheets("Input").Range("B33") = "((%H2S; m H2S)"
Worksheets("Input").Range("B47") = "(m)"
Worksheets("Input").Range("B48") = "(m)"
Worksheets("Input").Range("O15") = "m"
Worksheets("Input").Range("O18") = "m"
Worksheets("Input").Range("O22") = "m"

Worksheets("Input II").Range("B23") = "(m as Si)"
Worksheets("Input II").Range("B24") = "(m as HCO3)"
Worksheets("Input II").Range("B25") = "(m as CO3)"
Worksheets("Input II").Range("B26") = "(m as Acetate)"
Worksheets("Input II").Range("B27") = "(m as NH3)"
Worksheets("Input II").Range("B28") = "(m as B)"
Worksheets("Input II").Range("B33") = "((%H2S; m H2S)"
Worksheets("Input II").Range("B47") = "(m)"
Worksheets("Input II").Range("B48") = "(m)"

Worksheets("Input II").Range("b84") = "m"
Worksheets("Input II").Range("b87") = "m"
Worksheets("Input II").Range("b91") = "m"


Worksheets("Input_1000_Cases").Range("B23") = "(m as Si)"
Worksheets("Input_1000_Cases").Range("B24") = "(m as HCO3)"
Worksheets("Input_1000_Cases").Range("B25") = "(m as CO3)"
Worksheets("Input_1000_Cases").Range("B26") = "(m as Acetate)"
Worksheets("Input_1000_Cases").Range("B27") = "(m as NH3)"
Worksheets("Input_1000_Cases").Range("B28") = "(m as B)"
Worksheets("Input_1000_Cases").Range("B33") = "((%H2S; m H2S)"
'Worksheets("Input_1000_Cases").Range("B47") = "(m)"
'Worksheets("Input_1000_Cases").Range("B48") = "(m)"
Worksheets("What if").Range("c23") = "(m as Si)"
Worksheets("What if").Range("c24") = "(m as HCO3)"
Worksheets("What if").Range("c25") = "(m as CO3)"
Worksheets("What if").Range("c26") = "(m as Acetate)"
Worksheets("What if").Range("c27") = "(m as NH3)"
Worksheets("What if").Range("c28") = "(m as B)"
 Worksheets(mySheet).Select
 Worksheets(mySheet).Range("A2").Select
End Sub
'Sub OutputPptKgperm3()
'mySheet = ActiveSheet.Name
'Worksheets("Input_1000_Cases").Unprotect ("eesi")
'Worksheets("Input_1000_Cases").Range("A83") = "Calcite ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A85") = "Barite ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A87") = "Halite ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A89") = "Gypsum ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A91") = "Hemihydrate ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A93") = "Anhydrite ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A95") = "Celestite ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A97") = "FeSam ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A99") = "Mackinawite ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A101") = "Troilite ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A103") = "ZnS ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A105") = "PbS ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A107") = "FeCO3 ppt (Kg/m3)"
'
'Worksheets("Input_1000_Cases").Range("A111") = "Calcite ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A113") = "Barite ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A115") = "Halite ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A117") = "Gypsum ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A119") = "Hemihydrate ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A121") = "Anhydrite ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A123") = "Celestite ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A125") = "FeSam ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A127") = "Mackinawite ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A129") = "Troilite ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A131") = "ZnS ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A133") = "PbS ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Range("A135") = "FeCO3 ppt (Kg/m3)"
'Worksheets("Input_1000_Cases").Protect ("eesi")
'
'Worksheets("Well#1+Water").Unprotect ("eesi")
'Worksheets("Well#1+Water").Range("H3") = "Calcite (Kg/m3)"
'Worksheets("Well#1+Water").Range("J3") = "Barite (Kg/m3)"
'Worksheets("Well#1+Water").Range("L3") = "Halite (Kg/m3)"
'Worksheets("Well#1+Water").Range("V3") = "Gypsum (Kg/m3)"
'Worksheets("Well#1+Water").Range("X3") = "Hemihydrate (Kg/m3)"
'Worksheets("Well#1+Water").Range("z3") = "Anhydrite (Kg/m3)"
'Worksheets("Well#1+Water").Range("ab3") = "Celestite (Kg/m3)"
'
'Worksheets("Well#1+Water").Range("L38") = "SiO2am (Kg/m3)"
'Worksheets("Well#1+Water").Range("N38") = "SiO2cr (Kg/m3)"
'Worksheets("Well#1+Water").Range("P38") = "Mg-Silicate (Kg/m3)"
'Worksheets("Well#1+Water").Range("R38") = "Ca/Mg-Silicate (Kg/m3)"
'Worksheets("Well#1+Water").Range("T38") = "Fe-Silicate (Kg/m3)"
'Worksheets("Well#1+Water").Range("AB38") = "Amor.FeS (Kg/m3)"
'Worksheets("Well#1+Water").Range("AD38") = "Mackinawite (Kg/m3)"
'Worksheets("Well#1+Water").Range("AF38") = "Troilite (Kg/m3)"
'Worksheets("Well#1+Water").Protect ("eesi")
'Worksheets("Mixing Two Wells").Unprotect ("eesi")
'Worksheets("Mixing Two Wells").Range("H3") = "Calcite (Kg/m3)"
'Worksheets("Mixing Two Wells").Range("J3") = "Barite (Kg/m3)"
'Worksheets("Mixing Two Wells").Range("L3") = "Halite (Kg/m3)"
'Worksheets("Mixing Two Wells").Range("V3") = "Gypsum (Kg/m3)"
'Worksheets("Mixing Two Wells").Range("X3") = "Hemihydrate (Kg/m3)"
'Worksheets("Mixing Two Wells").Range("z3") = "Anhydrite (Kg/m3)"
'Worksheets("Mixing Two Wells").Range("ab3") = "Celestite (Kg/m3)"
'Worksheets("Mixing Two Wells").Protect ("eesi")
'
'Worksheets("Calcite").Range("F3") = "Kg/m3"
'Worksheets("Calcite").Range("G15") = "Kg/m3"
'Worksheets("Barite").Range("E3") = "Kg/m3"
'Worksheets("Barite").Range("E15") = "Kg/m3"
'Worksheets("Other SO4s").Range("D3") = "Kg/m3"
'Worksheets("Other SO4s").Range("F3") = "Kg/m3"
'Worksheets("Other SO4s").Range("H3") = "Kg/m3"
'Worksheets("Other SO4s").Range("J3") = "Kg/m3"
'Worksheets("Other SO4s").Range("D16") = "Kg/m3"
'Worksheets("Other SO4s").Range("F16") = "Kg/m3"
'Worksheets("Other SO4s").Range("H16") = "Kg/m3"
'Worksheets("Other SO4s").Range("J16") = "Kg/m3"
'Worksheets("Halite").Range("E3") = "Kg/m3"
'Worksheets("Halite").Range("E15") = "Kg/m3"
'Worksheets("Sulfides,Fluorite,Carbonates").Range("D3") = "Kg/m3"
'Worksheets("Sulfides,Fluorite,Carbonates").Range("F3") = "Kg/m3"
'Worksheets("Sulfides,Fluorite,Carbonates").Range("H3") = "Kg/m3"
'Worksheets("Sulfides,Fluorite,Carbonates").Range("J3") = "Kg/m3"
'Worksheets("Sulfides,Fluorite,Carbonates").Range("L3") = "Kg/m3"
'Worksheets("Sulfides,Fluorite,Carbonates").Range("O3") = "Kg/m3"
'Worksheets("Sulfides,Fluorite,Carbonates").Range("Q3") = "Kg/m3"
'Worksheets("Sulfides,Fluorite,Carbonates").Range("S3") = "Kg/m3"
'Worksheets("Sulfides,Fluorite,Carbonates").Range("U3") = "Kg/m3"
'Worksheets("Sulfides,Fluorite,Carbonates").Range("W3") = "Kg/m3"
'Worksheets("Sulfides,Fluorite,Carbonates").Range("D16") = "Kg/m3"
'Worksheets("Sulfides,Fluorite,Carbonates").Range("F16") = "Kg/m3"
'Worksheets("Sulfides,Fluorite,Carbonates").Range("H16") = "Kg/m3"
'Worksheets("Sulfides,Fluorite,Carbonates").Range("J16") = "Kg/m3"
'Worksheets("Silicates").Range("D3") = "Kg/m3 ppt"
'Worksheets("Silicates").Range("G3") = "Kg/m3 ppt"
'Worksheets("Silicates").Range("J3") = "Kg/m3 ppt"
'Worksheets("Silicates").Range("M3") = "Kg/m3 ppt"
'Worksheets("Silicates").Range("P3") = "Kg/m3 ppt"
'Worksheets("Mg(OH)2,Ca(OH)2").Range("E3") = "Kg/m3 ppt"
'Worksheets("Mg(OH)2,Ca(OH)2").Range("H3") = "Kg/m3 ppt"
'Worksheets("Use Mass Transfer").Range("D11") = "Kg/m3"
'Worksheets("Use Mass Transfer").Range("E11") = "Kg/m3"
'Worksheets("Use Mass Transfer").Range("G11") = "Kg/m3"
'Worksheets("Use Mass Transfer").Range("H11") = "Kg/m3"
'Worksheets("MultiMix").Range("Z2") = "CaCO3 precip. Kg/m3"
'Worksheets("MultiMix").Range("AE2") = "BaSO4 precip. Kg/m3"
'Worksheets(mySheet).Select
'Worksheets(mySheet).Range("A2").Select
'End Sub

Sub OutputPptPTB()
mySheet = ActiveSheet.Name
Worksheets("Input_1000_Cases").Unprotect ("eesi")
Worksheets("Input_1000_Cases").Range("A83") = "Calcite ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A85") = "Barite ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A87") = "Halite ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A89") = "Gypsum ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A91") = "Hemihydrate ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A93") = "Anhydrite ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A95") = "Celestite ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A97") = "FeSam ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A99") = "Mackinawite ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A101") = "Troilite ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A103") = "ZnS ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A105") = "PbS ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A107") = "FeCO3 ppt (PTB)"

Worksheets("Input_1000_Cases").Range("A111") = "Calcite ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A113") = "Barite ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A115") = "Halite ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A117") = "Gypsum ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A119") = "Hemihydrate ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A121") = "Anhydrite ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A123") = "Celestite ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A125") = "FeSam ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A127") = "Mackinawite ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A129") = "Troilite ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A131") = "ZnS ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A133") = "PbS ppt (PTB)"
Worksheets("Input_1000_Cases").Range("A135") = "FeCO3 ppt (PTB)"
Worksheets("Input_1000_Cases").Protect ("eesi")

Worksheets("Well#1+Water").Unprotect ("eesi")
Worksheets("Well#1+Water").Range("H3") = "Calcite (PTB)"
Worksheets("Well#1+Water").Range("J3") = "Barite (PTB)"
Worksheets("Well#1+Water").Range("L3") = "Halite (PTB)"
Worksheets("Well#1+Water").Range("V3") = "Gypsum (PTB)"
Worksheets("Well#1+Water").Range("X3") = "Hemihydrate (PTB)"
Worksheets("Well#1+Water").Range("z3") = "Anhydrite (PTB)"
Worksheets("Well#1+Water").Range("ab3") = "Celestite (PTB)"

Worksheets("Well#1+Water").Range("L38") = "SiO2am (PTB)"
Worksheets("Well#1+Water").Range("N38") = "SiO2cr (PTB)"
Worksheets("Well#1+Water").Range("P38") = "Mg-Silicate (PTB)"
Worksheets("Well#1+Water").Range("R38") = "Ca/Mg-Silicate (PTB)"
Worksheets("Well#1+Water").Range("T38") = "Fe-Silicate (PTB)"
Worksheets("Well#1+Water").Range("AB38") = "Amor.FeS (PTB)"
Worksheets("Well#1+Water").Range("AD38") = "Mackinawite (PTB)"
Worksheets("Well#1+Water").Range("AF38") = "Troilite (PTB)"
Worksheets("Well#1+Water").Protect ("eesi")
Worksheets("Mixing Two Wells").Unprotect ("eesi")
Worksheets("Mixing Two Wells").Range("H3") = "Calcite (PTB)"
Worksheets("Mixing Two Wells").Range("J3") = "Barite (PTB)"
Worksheets("Mixing Two Wells").Range("L3") = "Halite (PTB)"
Worksheets("Mixing Two Wells").Range("V3") = "Gypsum (PTB)"
Worksheets("Mixing Two Wells").Range("X3") = "Hemihydrate (PTB)"
Worksheets("Mixing Two Wells").Range("z3") = "Anhydrite (PTB)"
Worksheets("Mixing Two Wells").Range("ab3") = "Celestite (PTB)"
Worksheets("Mixing Two Wells").Protect ("eesi")

Worksheets("Calcite").Range("F3") = "PTB"
Worksheets("Calcite").Range("G15") = "PTB"
Worksheets("Barite").Range("E3") = "PTB"
Worksheets("Barite").Range("E15") = "PTB"
Worksheets("Other SO4s").Range("D3") = "PTB"
Worksheets("Other SO4s").Range("F3") = "PTB"
Worksheets("Other SO4s").Range("H3") = "PTB"
Worksheets("Other SO4s").Range("J3") = "PTB"
Worksheets("Other SO4s").Range("D16") = "PTB"
Worksheets("Other SO4s").Range("F16") = "PTB"
Worksheets("Other SO4s").Range("H16") = "PTB"
Worksheets("Other SO4s").Range("J16") = "PTB"
Worksheets("Halite").Range("E3") = "PTB"
Worksheets("Halite").Range("E15") = "PTB"
Worksheets("Sulfides,Fluorite,Carbonates").Range("D3") = "PTB"
Worksheets("Sulfides,Fluorite,Carbonates").Range("F3") = "PTB"
Worksheets("Sulfides,Fluorite,Carbonates").Range("H3") = "PTB"
Worksheets("Sulfides,Fluorite,Carbonates").Range("J3") = "PTB"
Worksheets("Sulfides,Fluorite,Carbonates").Range("L3") = "PTB"
Worksheets("Sulfides,Fluorite,Carbonates").Range("O3") = "PTB"
Worksheets("Sulfides,Fluorite,Carbonates").Range("Q3") = "PTB"
Worksheets("Sulfides,Fluorite,Carbonates").Range("S3") = "PTB"
Worksheets("Sulfides,Fluorite,Carbonates").Range("U3") = "PTB"
Worksheets("Sulfides,Fluorite,Carbonates").Range("W3") = "PTB"
Worksheets("Sulfides,Fluorite,Carbonates").Range("D16") = "PTB"
Worksheets("Sulfides,Fluorite,Carbonates").Range("F16") = "PTB"
Worksheets("Sulfides,Fluorite,Carbonates").Range("H16") = "PTB"
Worksheets("Sulfides,Fluorite,Carbonates").Range("J16") = "PTB"
Worksheets("Silicates").Range("D3") = "PTB ppt"
Worksheets("Silicates").Range("G3") = "PTB ppt"
Worksheets("Silicates").Range("J3") = "PTB ppt"
Worksheets("Silicates").Range("M3") = "PTB ppt"
Worksheets("Silicates").Range("P3") = "PTB ppt"
Worksheets("Mg(OH)2,Ca(OH)2").Range("E3") = "PTB ppt"
Worksheets("Mg(OH)2,Ca(OH)2").Range("H3") = "PTB ppt"
Worksheets("Use Mass Transfer").Range("D11") = "PTB"
Worksheets("Use Mass Transfer").Range("E11") = "PTB"
Worksheets("Use Mass Transfer").Range("G11") = "PTB"
Worksheets("Use Mass Transfer").Range("H11") = "PTB"

'Dai 2020 deposition
Worksheets("Deposition Prediction").Range("G40").Value = "PTB"
Worksheets("Deposition Prediction").Range("H40").Value = "PTB"
Worksheets("Deposition Prediction").Range("K40").Value = "PTB"
Worksheets("Deposition Prediction").Range("L40").Value = "PTB"

If Iter_MT_WI = 0 Then Iter_MT_WI = 1
Worksheets("Deposition Prediction_WhatIf").Cells(40 + (Iter_MT_WI - 1) * 32, 7).Value = "PTB"
Worksheets("Deposition Prediction_WhatIf").Cells(40 + (Iter_MT_WI - 1) * 32, 8).Value = "PTB"
Worksheets("Deposition Prediction_WhatIf").Cells(40 + (Iter_MT_WI - 1) * 32, 11).Value = "PTB"
Worksheets("Deposition Prediction_WhatIf").Cells(40 + (Iter_MT_WI - 1) * 32, 12).Value = "PTB"

Worksheets("MultiMix").Range("Z2") = "CaCO3 precip. PTB"
Worksheets("MultiMix").Range("AE2") = "BaSO4 precip. PTB"
Worksheets(mySheet).Select
Worksheets(mySheet).Range("A2").Select
End Sub
Sub OutputPptmgperL()
mySheet = ActiveSheet.Name
Worksheets("Input_1000_Cases").Unprotect ("eesi")
Worksheets("Input_1000_Cases").Range("A83") = "Calcite ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A85") = "Barite ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A87") = "Halite ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A89") = "Gypsum ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A91") = "Hemihydrate ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A93") = "Anhydrite ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A95") = "Celestite ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A97") = "FeSam ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A99") = "Mackinawite ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A101") = "Troilite ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A103") = "ZnS ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A105") = "PbS ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A107") = "FeCO3 ppt (mg/L)"

Worksheets("Input_1000_Cases").Range("A111") = "Calcite ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A113") = "Barite ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A115") = "Halite ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A117") = "Gypsum ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A119") = "Hemihydrate ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A121") = "Anhydrite ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A123") = "Celestite ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A125") = "FeSam ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A127") = "Mackinawite ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A129") = "Troilite ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A131") = "ZnS ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A133") = "PbS ppt (mg/L)"
Worksheets("Input_1000_Cases").Range("A135") = "FeCO3 ppt (mg/L)"
Worksheets("Input_1000_Cases").Protect ("eesi")

Worksheets("Well#1+Water").Unprotect ("eesi")
Worksheets("Well#1+Water").Range("H3") = "Calcite (mg/L)"
Worksheets("Well#1+Water").Range("J3") = "Barite (mg/L)"
Worksheets("Well#1+Water").Range("L3") = "Halite (mg/L)"
Worksheets("Well#1+Water").Range("V3") = "Gypsum (mg/L)"
Worksheets("Well#1+Water").Range("X3") = "Hemihydrate (mg/L)"
Worksheets("Well#1+Water").Range("z3") = "Anhydrite (mg/L)"
Worksheets("Well#1+Water").Range("ab3") = "Celestite (mg/L)"

Worksheets("Well#1+Water").Range("L38") = "SiO2am (mg/L)"
Worksheets("Well#1+Water").Range("N38") = "SiO2cr (mg/L)"
Worksheets("Well#1+Water").Range("P38") = "Mg-Silicate (mg/L)"
Worksheets("Well#1+Water").Range("R38") = "Ca/Mg-Silicate (mg/L)"
Worksheets("Well#1+Water").Range("T38") = "Fe-Silicate (mg/L)"
Worksheets("Well#1+Water").Range("AB38") = "Amor.FeS (mg/L)"
Worksheets("Well#1+Water").Range("AD38") = "Mackinawite (mg/L)"
Worksheets("Well#1+Water").Range("AF38") = "Troilite (mg/L)"
Worksheets("Well#1+Water").Protect ("eesi")
Worksheets("Mixing Two Wells").Unprotect ("eesi")
Worksheets("Mixing Two Wells").Range("H3") = "Calcite (mg/L)"
Worksheets("Mixing Two Wells").Range("J3") = "Barite (mg/L)"
Worksheets("Mixing Two Wells").Range("L3") = "Halite (mg/L)"
Worksheets("Mixing Two Wells").Range("V3") = "Gypsum (mg/L)"
Worksheets("Mixing Two Wells").Range("X3") = "Hemihydrate (mg/L)"
Worksheets("Mixing Two Wells").Range("z3") = "Anhydrite (mg/L)"
Worksheets("Mixing Two Wells").Range("ab3") = "Celestite (mg/L)"
Worksheets("Mixing Two Wells").Protect ("eesi")

Worksheets("Calcite").Range("F3") = "mg/L"
Worksheets("Calcite").Range("G15") = "mg/L"
Worksheets("Barite").Range("E3") = "mg/L"
Worksheets("Barite").Range("E15") = "mg/L"
Worksheets("Other SO4s").Range("D3") = "mg/L"
Worksheets("Other SO4s").Range("F3") = "mg/L"
Worksheets("Other SO4s").Range("H3") = "mg/L"
Worksheets("Other SO4s").Range("J3") = "mg/L"
Worksheets("Other SO4s").Range("D16") = "mg/L"
Worksheets("Other SO4s").Range("F16") = "mg/L"
Worksheets("Other SO4s").Range("H16") = "mg/L"
Worksheets("Other SO4s").Range("J16") = "mg/L"
Worksheets("Halite").Range("E3") = "mg/L"
Worksheets("Halite").Range("E15") = "mg/L"
Worksheets("Sulfides,Fluorite,Carbonates").Range("D3") = "mg/L"
Worksheets("Sulfides,Fluorite,Carbonates").Range("F3") = "mg/L"
Worksheets("Sulfides,Fluorite,Carbonates").Range("H3") = "mg/L"
Worksheets("Sulfides,Fluorite,Carbonates").Range("J3") = "mg/L"
Worksheets("Sulfides,Fluorite,Carbonates").Range("L3") = "mg/L"
Worksheets("Sulfides,Fluorite,Carbonates").Range("O3") = "mg/L"
Worksheets("Sulfides,Fluorite,Carbonates").Range("Q3") = "mg/L"
Worksheets("Sulfides,Fluorite,Carbonates").Range("S3") = "mg/L"
Worksheets("Sulfides,Fluorite,Carbonates").Range("U3") = "mg/L"
Worksheets("Sulfides,Fluorite,Carbonates").Range("W3") = "mg/L"
Worksheets("Sulfides,Fluorite,Carbonates").Range("D16") = "mg/L"
Worksheets("Sulfides,Fluorite,Carbonates").Range("F16") = "mg/L"
Worksheets("Sulfides,Fluorite,Carbonates").Range("H16") = "mg/L"
Worksheets("Sulfides,Fluorite,Carbonates").Range("J16") = "mg/L"
Worksheets("Silicates").Range("D3") = "mg/L ppt"
Worksheets("Silicates").Range("G3") = "mg/L ppt"
Worksheets("Silicates").Range("J3") = "mg/L ppt"
Worksheets("Silicates").Range("M3") = "mg/L ppt"
Worksheets("Silicates").Range("P3") = "mg/L ppt"
Worksheets("Mg(OH)2,Ca(OH)2").Range("E3") = "mg/L ppt"
Worksheets("Mg(OH)2,Ca(OH)2").Range("H3") = "mg/L ppt"
Worksheets("Use Mass Transfer").Range("D11") = "mg/L"
Worksheets("Use Mass Transfer").Range("E11") = "mg/L"
Worksheets("Use Mass Transfer").Range("G11") = "mg/L"
Worksheets("Use Mass Transfer").Range("H11") = "mg/L"

'Dai 2020 deposition
Worksheets("Deposition Prediction").Range("G40").Value = "mg/L"
Worksheets("Deposition Prediction").Range("H40").Value = "mg/L"
Worksheets("Deposition Prediction").Range("K40").Value = "mg/L"
Worksheets("Deposition Prediction").Range("L40").Value = "mg/L"

If Iter_MT_WI = 0 Then Iter_MT_WI = 1
Worksheets("Deposition Prediction_WhatIf").Cells(40 + (Iter_MT_WI - 1) * 32, 7).Value = "mg/L"
Worksheets("Deposition Prediction_WhatIf").Cells(40 + (Iter_MT_WI - 1) * 32, 8).Value = "mg/L"
Worksheets("Deposition Prediction_WhatIf").Cells(40 + (Iter_MT_WI - 1) * 32, 11).Value = "mg/L"
Worksheets("Deposition Prediction_WhatIf").Cells(40 + (Iter_MT_WI - 1) * 32, 12).Value = "mg/L"


Worksheets("MultiMix").Range("Z2") = "CaCO3 precip. mg/L"
Worksheets("MultiMix").Range("AE2") = "BaSO4 precip. mg/L"
Worksheets(mySheet).Select
Worksheets(mySheet).Range("A2").Select
End Sub

Sub WhatIfGraph()
j = 0: k = 0:  NCountGraph = 0: NSeries = 0: Ncharts = 0
'Worksheets("What If").Columns("K:AC").Select
'     With Selection.Font
'        .Name = "Times New Roman"
'        .Size = 10
'    End With
    Worksheets("What If").Columns("K:ac").Font.Name = "Times New Roman"
    Worksheets("What If").Columns("K:ac").Font.Size = 10
    Worksheets("What If").Columns("k:k").ColumnWidth = 14
    Worksheets("What If").Columns("l:ac").ColumnWidth = 8.5
    Worksheets("What If").Rows("1:300").RowHeight = 12.75
    Worksheets("What If").Range("K:ac").NumberFormat = "0.00"
    Worksheets("What If").Range("K:ac").HorizontalAlignment = xlCenter
    Worksheets("What If").Range("p:p").NumberFormat = "@"
For i = 1 To NobWI
    Worksheets("What If").Range("k2:ac13").Offset(12 * (i - 1)).Borders(xlEdgeLeft).weight = xlMedium
    Worksheets("What If").Range("k2:ac13").Offset(12 * (i - 1)).Borders(xlEdgeTop).weight = xlMedium
    Worksheets("What If").Range("k2:ac13").Offset(12 * (i - 1)).Borders(xlEdgeBottom).weight = xlMedium
    Worksheets("What If").Range("k2:ac13").Offset(12 * (i - 1)).Borders(xlEdgeRight).weight = xlMedium
    Worksheets("What If").Range("k2:ac13").Offset(12 * (i - 1)).Borders(xlInsideVertical).weight = xlHairline
    Worksheets("What If").Range("k2:ac13").Offset(12 * (i - 1)).Borders(xlInsideHorizontal).weight = xlHairline

    Worksheets("What If").Range("k2:ac3").Offset(12 * (i - 1)).Borders(xlEdgeLeft).weight = xlMedium
    Worksheets("What If").Range("k2:ac3").Offset(12 * (i - 1)).Borders(xlEdgeTop).weight = xlMedium
    Worksheets("What If").Range("k2:ac3").Offset(12 * (i - 1)).Borders(xlEdgeBottom).weight = xlMedium
    Worksheets("What If").Range("k2:ac3").Offset(12 * (i - 1)).Borders(xlEdgeRight).weight = xlMedium
    Worksheets("What If").Range("k2:ac3").Offset(12 * (i - 1)).Borders(xlInsideVertical).weight = xlHairline
    Worksheets("What If").Range("k2:ac3").Offset(12 * (i - 1)).Borders(xlInsideHorizontal).weight = xlHairline
    Worksheets("What If").Range("k2:ac3").Offset(12 * (i - 1)).HorizontalAlignment = xlCenter
    Worksheets("What If").Range("k2:ac3").Offset(12 * (i - 1)).VerticalAlignment = xlCenter
    Worksheets("What If").Range("k2:ac3").Offset(12 * (i - 1)).Font.FontStyle = "Bold"
    Worksheets("What If").Range("k2:ac3").Offset(12 * (i - 1)).Font.ColorIndex = xlAutomatic

Next i
Graphtype = Worksheets("What If").Cells(42, 4).Value
For i = 1 To 7
    If Worksheets("What If").Cells(42 + i, 4).Value = True Then
    NSeries = NSeries + 1            'track # of check boxes
    graphcount(i - NCountGraph) = i 'track the row number for the check boxes
    Else
    NCountGraph = NCountGraph + 1
    End If
Next i
ii = graphcount(1)
Ncharts = Worksheets("What If").ChartObjects.count
If Ncharts > 0 Then Worksheets("What if").ChartObjects.Delete
For i = 1 To NobWI
    If Graphtype = 1 Then
    Set ChartWI(i) = Worksheets("What if").ChartObjects.Add _
    (Left:=365, Top:=20 + (151 * (i - 1)), Width:=250, Height:=150)
    'ChartWI(i).Locked = False
    ChartWI(i).Chart.ChartType = xlXYScatterSmooth
    If ii = 1 Then
    ChartWI(i).Chart.SetSourceData Source:=Worksheets("What if").Range("K4:K13,m4:m13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.PlotBy = xlColumns
    ChartWI(i).Chart.SeriesCollection(1).Name = "Calcite"
    End If
    If ii = 2 Then
    ChartWI(i).Chart.SetSourceData Source:=Worksheets("What if").Range("K4:K13,q4:q13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.PlotBy = xlColumns
    ChartWI(i).Chart.SeriesCollection(1).Name = "Barite"
    End If
    If ii = 3 Then
    ChartWI(i).Chart.SetSourceData Source:=Worksheets("What if").Range("K4:K13,t4:t13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.PlotBy = xlColumns
    ChartWI(i).Chart.SeriesCollection(1).Name = "Gypsum"
    End If
    If ii = 4 Then
    ChartWI(i).Chart.SetSourceData Source:=Worksheets("What if").Range("K4:K13,v4:v13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.PlotBy = xlColumns
    ChartWI(i).Chart.SeriesCollection(1).Name = "hemihydrite"
    End If
    If ii = 5 Then
    ChartWI(i).Chart.SetSourceData Source:=Worksheets("What if").Range("K4:K13,x4:x13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.PlotBy = xlColumns
    ChartWI(i).Chart.SeriesCollection(1).Name = "Anhydrite"
    End If
    If ii = 6 Then
    ChartWI(i).Chart.SetSourceData Source:=Worksheets("What if").Range("K4:K13,z4:z13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.PlotBy = xlColumns
    ChartWI(i).Chart.SeriesCollection(1).Name = "Celestite"
    End If
    If ii = 7 Then
    ChartWI(i).Chart.SetSourceData Source:=Worksheets("What if").Range("K4:K13,Ab4:AB13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.PlotBy = xlColumns
    ChartWI(i).Chart.SeriesCollection(1).Name = "Halite"
    End If
    If NSeries > 1 Then
    For j = 2 To NSeries
    If graphcount(j) = 1 Then
    ChartWI(i).Chart.SeriesCollection.Add Source:=Worksheets("What if").Range("m4: m13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.SeriesCollection(j).Name = "Calcite"
    End If
    If graphcount(j) = 2 Then
    ChartWI(i).Chart.SeriesCollection.Add Source:=Worksheets("What if").Range("q4: q13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.SeriesCollection(j).Name = "Barite"
    End If
    If graphcount(j) = 3 Then
    ChartWI(i).Chart.SeriesCollection.Add Source:=Worksheets("What if").Range("t4: t13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.SeriesCollection(j).Name = "Gypsum"
    End If
    If graphcount(j) = 4 Then
    ChartWI(i).Chart.SeriesCollection.Add Source:=Worksheets("What if").Range("v4: v13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.SeriesCollection(j).Name = "Hemihydrite"
    End If
    If graphcount(j) = 5 Then
    ChartWI(i).Chart.SeriesCollection.Add Source:=Worksheets("What if").Range("x4: x13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.SeriesCollection(j).Name = "Anhydrite"
    End If
    If graphcount(j) = 6 Then
    ChartWI(i).Chart.SeriesCollection.Add Source:=Worksheets("What if").Range("z4: z13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.SeriesCollection(j).Name = "Celestite"
    End If
    If graphcount(j) = 7 Then
    ChartWI(i).Chart.SeriesCollection.Add Source:=Worksheets("What if").Range("AB4: AB13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.SeriesCollection(j).Name = "Halite"
    End If
    Next j
    End If
    End If
    If Graphtype = 2 Then
    Set ChartWI(i) = Worksheets("What if").ChartObjects.Add _
    (Left:=365, Top:=20 + (151 * (i - 1)), Width:=250, Height:=150)
    'ChartWI(i).Locked = False
    ChartWI(i).Chart.ChartType = xlXYScatterSmooth
    If ii = 1 Then
    ChartWI(i).Chart.SetSourceData Source:=Worksheets("What if").Range("K4:K13,n4:n13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.PlotBy = xlColumns
    ChartWI(i).Chart.SeriesCollection(1).Name = "Calcite"
    End If
    If ii = 2 Then
    ChartWI(i).Chart.SetSourceData Source:=Worksheets("What if").Range("K4:K13,r4:r13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.PlotBy = xlColumns
    ChartWI(i).Chart.SeriesCollection(1).Name = "Barite"
    End If
    If ii = 3 Then
    ChartWI(i).Chart.SetSourceData Source:=Worksheets("What if").Range("K4:K13,u4:u13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.PlotBy = xlColumns
    ChartWI(i).Chart.SeriesCollection(1).Name = "Gypsum"
    End If
    If ii = 4 Then
    ChartWI(i).Chart.SetSourceData Source:=Worksheets("What if").Range("K4:K13,w4:w13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.PlotBy = xlColumns
    ChartWI(i).Chart.SeriesCollection(1).Name = "hemihydrite"
    End If
    If ii = 5 Then
    ChartWI(i).Chart.SetSourceData Source:=Worksheets("What if").Range("K4:K13,y4:y13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.PlotBy = xlColumns
    ChartWI(i).Chart.SeriesCollection(1).Name = "Anhydrite"
    End If
    If ii = 6 Then
    ChartWI(i).Chart.SetSourceData Source:=Worksheets("What if").Range("K4:K13,aa4:aa13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.PlotBy = xlColumns
    ChartWI(i).Chart.SeriesCollection(1).Name = "Celestite"
    End If
    If ii = 7 Then
    ChartWI(i).Chart.SetSourceData Source:=Worksheets("What if").Range("K4:K13,Ac4:Ac13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.PlotBy = xlColumns
    ChartWI(i).Chart.SeriesCollection(1).Name = "Halite"
    End If
    If NSeries > 1 Then
    For j = 2 To NSeries
    If graphcount(j) = 1 Then
    ChartWI(i).Chart.SeriesCollection.Add Source:=Worksheets("What if").Range("n4: n13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.SeriesCollection(j).Name = "Calcite"
    End If
    If graphcount(j) = 2 Then
    ChartWI(i).Chart.SeriesCollection.Add Source:=Worksheets("What if").Range("r4: r13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.SeriesCollection(j).Name = "Barite"
    End If
    If graphcount(j) = 3 Then
    ChartWI(i).Chart.SeriesCollection.Add Source:=Worksheets("What if").Range("u4: u13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.SeriesCollection(j).Name = "Gypsum"
    End If
    If graphcount(j) = 4 Then
    ChartWI(i).Chart.SeriesCollection.Add Source:=Worksheets("What if").Range("w4: w13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.SeriesCollection(j).Name = "Hemihydrite"
    End If
    If graphcount(j) = 5 Then
    ChartWI(i).Chart.SeriesCollection.Add Source:=Worksheets("What if").Range("y4: y13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.SeriesCollection(j).Name = "Anhydrite"
    End If
    If graphcount(j) = 6 Then
    ChartWI(i).Chart.SeriesCollection.Add Source:=Worksheets("What if").Range("aa4: aa13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.SeriesCollection(j).Name = "Celestite"
    End If
    If graphcount(j) = 7 Then
    ChartWI(i).Chart.SeriesCollection.Add Source:=Worksheets("What if").Range("Ac4: Ac13").Offset(12 * (i - 1), 0)
    ChartWI(i).Chart.SeriesCollection(j).Name = "Halite"
    End If
    Next j
    End If
    End If
Next i
For i = 1 To NobWI
ChartWI(i).Chart.HasTitle = True
If CaseCountWI(i) = 1 Then ChartWI(i).Chart.ChartTitle.Text = "Effect of Na"
If CaseCountWI(i) = 4 Then ChartWI(i).Chart.ChartTitle.Text = "Effect of Ca"
If CaseCountWI(i) = 5 Then ChartWI(i).Chart.ChartTitle.Text = "Effect of Sr"
If CaseCountWI(i) = 6 Then ChartWI(i).Chart.ChartTitle.Characters.Text = "Effect of Ba"
If CaseCountWI(i) = 10 Then ChartWI(i).Chart.ChartTitle.Characters.Text = "Effect of Cl"
If CaseCountWI(i) = 11 Then ChartWI(i).Chart.ChartTitle.Characters.Text = "Effect of SO4"
If CaseCountWI(i) = 15 Then ChartWI(i).Chart.ChartTitle.Characters.Text = "Effect of HCO3 Alkalinity"
If CaseCountWI(i) = 16 Then ChartWI(i).Chart.ChartTitle.Characters.Text = "Effect of CO3 Alkalinity"
If CaseCountWI(i) = 17 Then ChartWI(i).Chart.ChartTitle.Characters.Text = "Effect of Carboxylic acid"
If CaseCountWI(i) = 19 Then ChartWI(i).Chart.ChartTitle.Characters.Text = "Effect of CO2 in Gas"
If CaseCountWI(i) = 20 Then ChartWI(i).Chart.ChartTitle.Characters.Text = "Effect of H2S in Gas"
If CaseCountWI(i) = 21 Then ChartWI(i).Chart.ChartTitle.Characters.Text = "Effect of Aqueous H2S"
If CaseCountWI(i) = 22 Then ChartWI(i).Chart.ChartTitle.Characters.Text = "Effect of Brine pH"
If CaseCountWI(i) = 25 Then ChartWI(i).Chart.ChartTitle.Characters.Text = "Effect of Gas Rate"
If CaseCountWI(i) = 26 Then ChartWI(i).Chart.ChartTitle.Characters.Text = "Effect of Oil Rate"
If CaseCountWI(i) = 27 Then ChartWI(i).Chart.ChartTitle.Characters.Text = "Effect of Water Rate"
If CaseCountWI(i) = 29 Then ChartWI(i).Chart.ChartTitle.Characters.Text = "Effect of Temperature"
If CaseCountWI(i) = 31 Then ChartWI(i).Chart.ChartTitle.Characters.Text = "Effect of Pressure"
If CaseCountWI(i) = 32 Then ChartWI(i).Chart.ChartTitle.Characters.Text = "Effect of Evaporation/Condensation"
Next i

For i = 1 To NobWI
    With ChartWI(i).Chart.ChartArea
     .AutoScaleFont = True
     .Font.Name = "Time Newman"
     .Font.Size = 8
     
    End With
    With ChartWI(i).Chart.PlotArea
         .Interior.ColorIndex = xlNone
'    .Top = 20
'    .Height = 106
    End With
'    With ChartWI(i).Chart
'    .ChartTitle.Font.Bold = True
'    .ChartTitle.Font.Name = "Time Newman"
'    .ChartTitle.Font.Size = 10
'    End With
    With ChartWI(i).Chart.Axes(xlCategory)
       .HasTitle = True
       
       If CaseCountWI(i) = 1 Then .AxisTitle.Characters.Text = "Na (mg/L or m)"
       If CaseCountWI(i) = 4 Then .AxisTitle.Characters.Text = "Ca (mg/L or m)"
       If CaseCountWI(i) = 5 Then .AxisTitle.Characters.Text = "Sr (mg/L or m)"
       If CaseCountWI(i) = 6 Then .AxisTitle.Characters.Text = "Ba (mg/L or m)"
       If CaseCountWI(i) = 10 Then .AxisTitle.Characters.Text = "Cl (mg/L or m)"
       If CaseCountWI(i) = 11 Then .AxisTitle.Characters.Text = "SO4(mg/L or m)"
       If CaseCountWI(i) = 15 Then .AxisTitle.Characters.Text = "Alkalinity (mg/L or m)"
       If CaseCountWI(i) = 16 Then .AxisTitle.Characters.Text = "Carbonate (mg/L or m)"
       If CaseCountWI(i) = 17 Then .AxisTitle.Characters.Text = "Carboxylic Acid (mg/L or m)"
       If CaseCountWI(i) = 19 Then .AxisTitle.Characters.Text = "Gas Phase CO2 (%)"
       If CaseCountWI(i) = 20 Then .AxisTitle.Characters.Text = "Gas Phase H2S (%)"
       If CaseCountWI(i) = 21 Then .AxisTitle.Characters.Text = "TH2Saq (mg/L)"
       If CaseCountWI(i) = 22 Then .AxisTitle.Characters.Text = "Brine pH(Measured @ STP)"
       If CaseCountWI(i) = 25 Then .AxisTitle.Characters.Text = "Gas Per Day (MCF/D or Mm^3/D)"
       If CaseCountWI(i) = 26 Then .AxisTitle.Characters.Text = "Oil Per Day (B/D or m^3/D)"
       If CaseCountWI(i) = 27 Then .AxisTitle.Characters.Text = "Water Per Day (B/D or m^3/D)"
       If CaseCountWI(i) = 29 Then .AxisTitle.Characters.Text = "Temperature (癋 or 癈)"
       If CaseCountWI(i) = 31 Then .AxisTitle.Characters.Text = "Presure (Psia or Bar)"
       If CaseCountWI(i) = 32 Then .AxisTitle.Characters.Text = "Concentration Factor"
       
       
        .HasMajorGridlines = False
        .HasMinorGridlines = False
        .TickLabels.NumberFormat = "0.0"
        .AxisTitle.Font.Bold = True
        .AxisTitle.Font.Name = "Time Newman"
        .AxisTitle.Font.Size = 8
        .TickLabelPosition = xlLow
        End With

    With ChartWI(i).Chart.Axes(xlValue)
        .HasTitle = True
        If Graphtype = 2 Then
        .AxisTitle.Characters.Text = "Scale ppt (mg/L)"
        .HasMajorGridlines = False
        .HasMinorGridlines = False
        .AxisTitle.Font.Bold = True
        .AxisTitle.Font.Name = "Time Newman"
        .AxisTitle.Font.Size = 8
        .TickLabels.NumberFormat = "0"
        Else
        If UseSR <> 1 Then
        .AxisTitle.Characters.Text = "SI"
        Else
         .AxisTitle.Characters.Text = "SR"
        End If
        .HasMajorGridlines = False
        .HasMinorGridlines = False
        .AxisTitle.Font.Bold = True
        .AxisTitle.Font.Name = "Time Newman"
        .AxisTitle.Font.Size = 8
         If UseSR <> 1 Then
        .TickLabels.NumberFormat = "0.00"
        Else
         .TickLabels.NumberFormat = "0.0"
         End If
        End If
    End With
    ChartWI(i).Chart.HasLegend = True
    With ChartWI(i).Chart.Legend
        .Position = xlBottom
        .Font.Bold = True
        .Font.Name = "Time Newman"
        .Font.Size = 8
    End With
    Next i
End Sub
Sub ErrorMsgBox()
For i = 1 To 20
If errmsg(i) = 1 Then MsgBox ("The value of yCO2g of Well is greater than 1.00 with Input column(s) data.  Probably pH is too low, etc.  Program will set yCO2 = 1.00.  calculations may be in error, please check.")
If errmsg(i) = 2 Then MsgBox ("The value of yCO2g of Well is less than 0. Probably the pH or the Alk is too high with Input column(s) data.  yCO2g will be set to 0.00 for calculation.  calculations may be in error, please check.")
If errmsg(i) = 3 Then MsgBox ("The calcualted value of yH2Sstp > 1 with Input column(s) data, which is not possible.  Probably the TH2Saq is too large with one Input column data.")
If errmsg(i) = 4 Then MsgBox ("H2S%  is less than 0%.  Program will set yH2S = 0.00 and TH2Saq = 0.00; calculations may be in error, please check. ")
If errmsg(i) = 5 Then MsgBox ("faH is still greater than 0.001 M, suggesting difficult convergence with Input column(s) data.")
If errmsg(i) = 6 Then MsgBox ("Silicate did not converge within 1000 iterations with Input column(s) data.")
If errmsg(i) = 7 Then MsgBox ("You choose Option=1 for Row 54, but you did not provide T, P or the densities at T,P on Rows 60-64. The STP values of the missing data are used in this calculation.")
If errmsg(i) = 8 Then MsgBox ("According to the calculation, water is completely evaporated at a T and P condition. Program abort. No calculations at lower T, P is done. ")
If errmsg(i) = 9 Then Worksheets("Calcite").Cells(21, 16).Value = "Warning: Calcite MIC and scale risk calculation will be updated for the selected inhibitor"
If errmsg(i) = 10 Then Worksheets("Other SO4s").Cells(28, 15).Value = "Warning:  Gypsum is not expected to form at above 40 C or 104 F. The prediction may not be meaningful"
'If errmsg(i) = 12 Then MsgBox ("No aqueous phase existed at some T and P. SI is not calculated at these T & P.")
'If errmsg(i) = 13 Then MsgBox ("PCO2 > 152 atm in some cases.  PCO2 may exceed the applicable range of Henry's Law.  Predictions at high pressures may not be accurate.")
If errmsg(i) = 14 Then MsgBox ("An error is delected that prevent the execution of Flash calculation. Calculation is run assuming Option 0 on Row 55.")
If errmsg(i) = 15 Then MsgBox ("An error is detected in Input data. The flash calculation is run using pseudocomposition mode (Option 3 on Row 55).")
If errmsg(i) = 16 Then MsgBox ("You must enter a value for the gas and/or oil daily production rate to run flash calculation.  Flash calculation is not run.")
If errmsg(i) = 17 Then MsgBox ("The injection water composition is calculated with the given pH.")
If errmsg(i) = 18 Then MsgBox ("Program failed to determine the bubble point.")
If RunStat = 1 Then
If errmsg(i) = 19 Then MsgBox ("One or more of the calculated reservoir water ion concentrations or volume is negative. This implies that the assumed injected water volume is too large, which is not reasonable. Please check the Input data and re-run the calculation. ")
End If
If errmsg(i) = 20 Then MsgBox ("The program failed execute flash/speciation calculation. Consider decativate flash calculation (Set Row 55 to zero) or check the input values.")
Next i
End Sub
Sub ResetB()

title = "Clear Input Sheets."
message = "Note that all data in the Input and InputII sheets will be cleared. Click Cancel if you wish to abort."
style = vbOKCancel
response1 = MsgBox(message, style, title)
If response1 = vbOK Then
GoTo 100
Else
End
End If

100 Worksheets("Input").Range("c4:g37").Value = Empty
Worksheets("Input").Range("h10:h37").Value = Empty
Worksheets("Input").Range("c39:g42").Value = Empty
Worksheets("Input").Range("C43:g49").Value = Empty
Worksheets("Input").Range("C51:g56").Value = Empty
Worksheets("Input").Range("C58:g64").Value = Empty
Worksheets("Input").Range("C66:g79").Value = Empty
'Worksheets("Input").Range("P14:T22").Value = Empty
Worksheets("Input II").Range("c4:cx80").Value = Empty
Call UncheckAll
Worksheets("Input").Select
ActiveSheet.Range("a1").Select
End Sub

Sub V1Input() ' Input data from SSP V. 12 or 13
newbook.Worksheets("Input").Activate
300 prompt = "Which well data column do you want to copy from this file?  Only one set of brine data can be copied at a time. Enter a Brine # shown in Row 1 of Columns C-G. For example: enter 1 for Brine #1.  Click Cancel to abort."
title = "Column # from which data is to be copied"
BrineNoNew = Application.InputBox(prompt, title, , , , , Type:=1)
If BrineNoNew = False Then
GoTo 201
End If
oldbook.Worksheets("Input").Activate
title = "Which Input sheets do you want to paste the copied data?"
prompt = "Do you want to paste the data to Input or Input II sheet? Enter 1 for Input sheet and enter 2 for Input II sheet"
response3 = Application.InputBox(prompt, title, , , , , Type:=1)
If response3 > 2 Then
MsgBox "Please enter 1 for this Input sheet or 2 for Input II"
GoTo 300
End If
If response3 = 2 Then
Call V2Input
GoTo 201
Else
GoTo 100
End If

100 oldbook.Worksheets("Input").Activate
11 prompt = "Where do you want the copied data to be placed? Enter a Input # shown in Row 1 of Columns C-G, For example, enter 1 and click OK to enter data in column C.  Click Cancel to abort."
title = "Column # into which data is to be placed "
BrineNoOld = Application.InputBox(prompt, title, , , , , Type:=1)
If BrineNoOld = False Then
GoTo 201
End If
oldbook.Worksheets("Input").Activate
Worksheets("Input").Range("$b$4:$b$79").Select
Selection.Offset(0, BrineNoOld).ClearContents

newbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$B$4:$B$17").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$c$4:$c$17").Select
    Selection.Offset(0, BrineNoOld - 1).PasteSpecial Paste:=(xlPasteValues)
newbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$B$46:$B$46").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$b$18:$b$18").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
newbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$B$18:$B$20").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$b$19:$b$21").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
newbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$B$47:$B$47").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$b$22:$b$22").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
newbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$B$45:$B$45").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$b$23:$b$23").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
newbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$B$21:$B$21").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$b$24:$b$24").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
newbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$B$22:$B$22").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$b$26:$b$26").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)

newbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$B$23:$B$28").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$b$29:$b$34").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
newbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$B$31:$B$33").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$b$35:$b$37").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)

newbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$B$35:$B$38").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$b$39:$b$42").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
newbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$B$41:$B$44").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$b$43:$b$46").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
newbook.Worksheets("Input").Activate
Worksheets("Input").Range("$B$60:$B$67").Select
    Selection.Copy
oldbook.Worksheets("Input").Activate
Worksheets("Input").Range("$o$2:$o$10").Select
Selection.PasteSpecial Paste:=(xlPasteValues)
201 newbook.Close savechanges:=False
End Sub
Sub V2Input()   'V2 Input do data import from SSP 12 or 13 to Input II sheet
oldbook.Worksheets("Input II").Activate
prompt = "Where do you want the copied data to be placed? Enter a Input # shown in Row 2, For example, enter 1 and click OK to enter data in column C.  Click Cancel to abort."
title = "Column # into which data is to be placed "
BrineNoOld = Application.InputBox(prompt, title, , , , , Type:=1)
If BrineNoOld = False Then
GoTo 201
End If

oldbook.Worksheets("Input II").Activate
Worksheets("Input II").Range("$b$4:$b$79").Select
Selection.Offset(0, BrineNoOld).ClearContents

newbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$B$4:$B$17").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input II").Activate
    Worksheets("Input II").Range("$c$4:$c$17").Select
    Selection.Offset(0, BrineNoOld - 1).PasteSpecial Paste:=(xlPasteValues)
newbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$B$46:$B$46").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input II").Activate
    Worksheets("Input II").Range("$b$18:$b$18").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
newbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$B$18:$B$20").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input II").Activate
    Worksheets("Input II").Range("$b$19:$b$21").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
newbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$B$47:$B$47").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input II").Activate
    Worksheets("Input II").Range("$b$22:$b$22").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
newbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$B$45:$B$45").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input II").Activate
    Worksheets("Input II").Range("$b$23:$b$23").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
newbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$B$21:$B$21").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input II").Activate
    Worksheets("Input II").Range("$b$24:$b$24").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
newbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$B$22:$B$22").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input II").Activate
    Worksheets("Input II").Range("$b$26:$b$26").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
newbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$B$23:$B$28").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input II").Activate
    Worksheets("Input II").Range("$b$29:$b$34").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
newbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$B$31:$B$33").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input II").Activate
    Worksheets("Input II").Range("$b$35:$b$38").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
newbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$B$35:$B$39").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input II").Activate
    Worksheets("Input II").Range("$b$39:$b$42").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
newbook.Worksheets("Input").Activate
Worksheets("Input").Range("$B$41:$B$44").Select
Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input II").Activate
Worksheets("Input II").Range("$b$43:$b$46").Select
Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
201 End Sub

Sub V3Input()       'Import data from SSP 2009
If response4 = 1 Then newbook.Worksheets("Input").Activate
If response4 = 2 Then newbook.Worksheets("Input II").Activate
300 prompt = "Which well data column do you want to copy from this file?  Only one set of brine data can be copied at a time. Enter a Brine # shown in Row 1 of Columns C-G. For example: enter 1 for Brine #1.  Click Cancel to abort."
title = "Column # from which data is to be copied"
BrineNoNew = Application.InputBox(prompt, title, , , , , Type:=1)
If BrineNoNew = False Then
GoTo 203
End If
oldbook.Worksheets("Input").Activate
title = "Which Input sheets do you want to paste the copied data?"
prompt = "Do you want to paste the data to Input or Input II sheet? Enter 1 for Input sheet and enter 2 for Input II sheet"
response3 = Application.InputBox(prompt, title, , , , , Type:=1)
    If response3 = 2 Then
    Call V4Input
    GoTo 203
    Else
    GoTo 101
    End If

101 oldbook.Worksheets("Input").Activate
11 prompt = "Where do you want the copied data to be placed? Enter a Input # shown in Row 1 of Columns C-G, For example, enter 1 and click OK to enter data in column C.  Click Cancel to abort."
title = "Column # into which data is to be placed "
BrineNoOld = Application.InputBox(prompt, title, , , , , Type:=1)
If BrineNoOld = False Then
GoTo 203
End If
oldbook.Worksheets("Input").Activate
Worksheets("Input").Range("$b$4:$b$79").Select
Selection.Offset(0, BrineNoOld).ClearContents

If response4 = 1 Then newbook.Worksheets("Input").Activate
If response4 = 2 Then newbook.Worksheets("Input II").Activate
     ActiveSheet.Range("$B$4:$B$24").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$c$4:$c$24").Select
    Selection.Offset(0, BrineNoOld - 1).PasteSpecial Paste:=(xlPasteValues)

If response4 = 1 Then newbook.Worksheets("Input").Activate
If response4 = 2 Then newbook.Worksheets("Input II").Activate
     ActiveSheet.Range("$B$25:$B$25").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$b$26:$b$26").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)

If response4 = 1 Then newbook.Worksheets("Input").Activate
If response4 = 2 Then newbook.Worksheets("Input II").Activate
     ActiveSheet.Range("$B$28:$B$33").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$b$29:$b$34").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
If response4 = 1 Then newbook.Worksheets("Input").Activate
If response4 = 2 Then newbook.Worksheets("Input II").Activate
     ActiveSheet.Range("$B$36:$B$43").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$b$35:$b$42").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
If response4 = 1 Then newbook.Worksheets("Input").Activate
If response4 = 2 Then newbook.Worksheets("Input II").Activate
     ActiveSheet.Range("$B$46:$B$49").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$b$43:$b$46").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
newbook.Worksheets("Input").Activate
    ActiveSheet.Range("$B$62:$B$69").Select
    Selection.Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$o$2:$o$10").Select
    Selection.PasteSpecial Paste:=(xlPasteValues)
203 newbook.Close savechanges:=False
End Sub
'V4 Input do data import from SSP2009 to Input II sheet
Sub V4Input()
oldbook.Worksheets("Input II").Activate
prompt = "Where do you want the copied data to be placed? Enter a Input # shown in Row 2, For example, enter 1 and click OK to enter data in column C.  Click Cancel to abort."
title = "Column # into which data is to be placed "
BrineNoOld = Application.InputBox(prompt, title, , , , , Type:=1)
If BrineNoOld = False Then
GoTo 203
End If

oldbook.Worksheets("Input II").Activate
Worksheets("Input II").Range("$b$4:$b$79").Select
Selection.Offset(0, BrineNoOld).ClearContents

If response4 = 1 Then newbook.Worksheets("Input").Activate
If response4 = 2 Then newbook.Worksheets("Input II").Activate
    ActiveSheet.Range("$B$4:$B$24").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input II").Activate
    Worksheets("Input II").Range("$c$4:$c$24").Select
    Selection.Offset(0, BrineNoOld - 1).PasteSpecial Paste:=(xlPasteValues)

If response4 = 1 Then newbook.Worksheets("Input").Activate
If response4 = 2 Then newbook.Worksheets("Input II").Activate
     ActiveSheet.Range("$B$25:$B$25").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input II").Activate
    Worksheets("Input II").Range("$b$26:$b$26").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
If response4 = 1 Then newbook.Worksheets("Input").Activate
If response4 = 2 Then newbook.Worksheets("Input II").Activate
     ActiveSheet.Range("$B$26:$B$33").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input II").Activate
    Worksheets("Input II").Range("$b$27:$b$34").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
If response4 = 1 Then newbook.Worksheets("Input").Activate
If response4 = 2 Then newbook.Worksheets("Input II").Activate
     ActiveSheet.Range("$B$36:$B$38").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input II").Activate
    Worksheets("Input II").Range("$b$35:$b$37").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
If response4 = 1 Then newbook.Worksheets("Input").Activate
If response4 = 2 Then newbook.Worksheets("Input II").Activate
     ActiveSheet.Range("$B$40:$B$43").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input II").Activate
    Worksheets("Input II").Range("$b$39:$b$42").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
If response4 = 1 Then newbook.Worksheets("Input").Activate
If response4 = 2 Then newbook.Worksheets("Input II").Activate
     ActiveSheet.Range("$B$46:$B$49").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input II").Activate
    Worksheets("Input II").Range("$b$43:$b$46").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
203 End Sub

Sub V5Input()       'Import data from SSP 2010
If response4 = 1 Then newbook.Worksheets("Input").Activate
If response4 = 2 Then newbook.Worksheets("Input II").Activate
301 prompt = "Which well data column do you want to copy from this file?  Only one set of brine data can be copied at a time. Enter a Brine # shown in Row 1 of Columns C-G. For example: enter 1 for Brine #1.  Click Cancel to abort."
title = "Column # from which data is to be copied"
BrineNoNew = Application.InputBox(prompt, title, , , , , Type:=1)
If BrineNoNew = False Then
GoTo 203
End If
oldbook.Worksheets("Input").Activate
title = "Which Input sheets do you want to paste the copied data?"
prompt = "Do you want to paste the data to Input or Input II sheet? Enter 1 for Input sheet and enter 2 for Input II sheet"
response3 = Application.InputBox(prompt, title, , , , , Type:=1)
    If response3 = 2 Then
    Call V6Input
    GoTo 203
    Else
    GoTo 101
    End If

101 oldbook.Worksheets("Input").Activate
11 prompt = "Where do you want the copied data to be placed? Enter a Input # shown in Row 1 of Columns C-G, For example, enter 1 and click OK to enter data in column C.  Click Cancel to abort."
title = "Column # into which data is to be placed "
BrineNoOld = Application.InputBox(prompt, title, , , , , Type:=1)
If BrineNoOld = False Then
GoTo 203
End If
oldbook.Worksheets("Input").Activate
Worksheets("Input").Range("$b$4:$b$79").Select
Selection.Offset(0, BrineNoOld).ClearContents

If response4 = 1 Then newbook.Worksheets("Input").Activate
If response4 = 2 Then newbook.Worksheets("Input II").Activate
     ActiveSheet.Range("$B$4:$B$34").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$c$4:$c$34").Select
    Selection.Offset(0, BrineNoOld - 1).PasteSpecial Paste:=(xlPasteValues) ' BrinenoOld-1 is to offset the column; Can't offset by column B because of merged cell

If response4 = 1 Then newbook.Worksheets("Input").Activate
If response4 = 2 Then newbook.Worksheets("Input II").Activate
     ActiveSheet.Range("$B$36:$B$43").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$b$35:$b$42").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
If response4 = 1 Then newbook.Worksheets("Input").Activate
If response4 = 2 Then newbook.Worksheets("Input II").Activate
     ActiveSheet.Range("$B$45:$B$48").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$b$43:$b$46").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
    
 If response4 = 1 Then newbook.Worksheets("Input").Activate
If response4 = 2 Then newbook.Worksheets("Input II").Activate
     ActiveSheet.Range("$B$50:$B$51").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$b$47:$b$48").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
    
newbook.Worksheets("Input").Activate
    ActiveSheet.Range("$B$62:$B$69").Select
    Selection.Copy
oldbook.Worksheets("Input").Activate
    Worksheets("Input").Range("$o$2:$o$10").Select
    Selection.PasteSpecial Paste:=(xlPasteValues)
203 newbook.Close savechanges:=False
End Sub
'V6 Input do data import from SSP2010 to Input II sheet
Sub V6Input()
oldbook.Worksheets("Input II").Activate
prompt = "Where do you want the copied data to be placed? Enter a Input # shown in Row 2, For example, enter 1 and click OK to enter data in column C.  Click Cancel to abort."
title = "Column # into which data is to be placed "
BrineNoOld = Application.InputBox(prompt, title, , , , , Type:=1)
If BrineNoOld = False Then
GoTo 203
End If

oldbook.Worksheets("Input II").Activate
Worksheets("Input II").Range("$b$4:$b$79").Select
Selection.Offset(0, BrineNoOld).ClearContents

If response4 = 1 Then newbook.Worksheets("Input").Activate
If response4 = 2 Then newbook.Worksheets("Input II").Activate
    ActiveSheet.Range("$B$4:$B$34").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input II").Activate
    Worksheets("Input II").Range("$c$4:$c$34").Select
    Selection.Offset(0, BrineNoOld - 1).PasteSpecial Paste:=(xlPasteValues)


If response4 = 1 Then newbook.Worksheets("Input").Activate
If response4 = 2 Then newbook.Worksheets("Input II").Activate
     ActiveSheet.Range("$B$36:$B$43").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input II").Activate
    Worksheets("Input II").Range("$b$35:$b$42").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
If response4 = 1 Then newbook.Worksheets("Input").Activate
If response4 = 2 Then newbook.Worksheets("Input II").Activate
     ActiveSheet.Range("$B$45:$B$48").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input II").Activate
    Worksheets("Input II").Range("$b$43:$b$46").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
If response4 = 1 Then newbook.Worksheets("Input").Activate
If response4 = 2 Then newbook.Worksheets("Input II").Activate
     ActiveSheet.Range("$B$50:$B$51").Select
    Selection.Offset(0, BrineNoNew).Copy
oldbook.Worksheets("Input II").Activate
    Worksheets("Input II").Range("$b$47:$b$48").Select
    Selection.Offset(0, BrineNoOld).PasteSpecial Paste:=(xlPasteValues)
203 End Sub

Sub CopyOutputFile()
prompt = "If you click OK below, an Excel Open File dialog box will be opened and directed to the default working folder (the folder last used by Excel).  If you want to save the data in another folder, you will need to open that folder.  The default file name is InputOutput.xls. You may change the filename by entering a filename in the filename dialog box."
title = "Save Data to a File"
response1 = MsgBox(prompt, vbOKOnly, title)
If response1 = vbOK Then
Set oldbook = ActiveWorkbook
mt = Application.GetSaveAsFilename(InitialFileName:="InputOutput", filefilter:="Excel files (*.xls),*.xls")
Else
GoTo 201
End If
If mt <> False Then
Application.DisplayAlerts = False
Worksheets("Use Mass Transfer").Select
    Worksheets("Use Mass Transfer").Copy
    Set newbook = ActiveWorkbook
oldbook.Activate
Worksheets("Mg(OH)2,Ca(OH)2").Select
Worksheets("Mg(OH)2,Ca(OH)2").Copy Before:=newbook.Worksheets(1)
oldbook.Activate
Worksheets("Silicates").Select
Worksheets("Silicates").Copy Before:=newbook.Worksheets(1)
'     ActiveSheet.Shapes("Button 4").Select
'    Selection.Cut
oldbook.Activate
    Worksheets("Sulfides,Fluorite,Carbonates").Select
    Worksheets("Sulfides,Fluorite,Carbonates").Copy Before:=newbook.Worksheets(1)
    Set newbook = ActiveWorkbook
'     ActiveSheet.Shapes("Button 1").Select
'    Selection.Cut
    oldbook.Activate
    Worksheets("Other SO4s").Copy Before:=newbook.Worksheets(1)
'    ActiveSheet.Shapes("Button 1").Select
'    Selection.Cut
    oldbook.Activate
    Worksheets("Halite").Copy Before:=newbook.Worksheets(1)
'    ActiveSheet.Shapes("Button 2").Select
'    Selection.Cut
oldbook.Activate
    Worksheets("Barite").Copy Before:=newbook.Worksheets(1)
'    ActiveSheet.Shapes("Button 2").Select
'    Selection.Cut
oldbook.Activate
    Worksheets("Calcite").Copy Before:=newbook.Worksheets(1)
'    ActiveSheet.Shapes("Button 2").Select
'    Selection.Cut
oldbook.Activate
    Worksheets("MultiMix").Copy Before:=newbook.Worksheets(1)
oldbook.Activate
    Worksheets("Mixing two wells").Copy Before:=newbook.Worksheets(1)
oldbook.Activate
    Worksheets("Well#1+Water").Copy Before:=newbook.Worksheets(1)
oldbook.Activate
    Worksheets("Input II").Copy Before:=newbook.Worksheets(1)
oldbook.Activate
    Worksheets("Input").Copy Before:=newbook.Worksheets(1)
'    ActiveSheet.Unprotect ("eesi")
'    ActiveSheet.Shapes("Button 7").Select
'    Selection.Cut
'    ActiveSheet.Shapes("Button 8").Select
'    Selection.Cut
'    ActiveSheet.Shapes("Button 9").Select
'    Selection.Cut
'    ActiveSheet.Shapes("Button 6").Select
'    Selection.Cut
'    ActiveSheet.Protect ("eesi")
Application.DisplayAlerts = True
newbook.SaveAs (mt), FileFormat:=xlWorkbookNormal
Application.DisplayAlerts = False
ActiveWorkbook.Close
Worksheets("Input").Select
ActiveSheet.Range("H3").Select
Else
GoTo 201
End If
201 End Sub

Sub UncheckAll()

    For i = 3 To 7
        Worksheets("Input").Cells(3, i).Value = False
        Next i
        
    For i = 3 To 102
        Worksheets("Input II").Cells(3, i).Value = False
        Next i
    End Sub

Sub ClearVariable()
'Note only RowNo is not empty
ReDim CaseCount(5)
 iH = Empty: iNa = Empty: iK = Empty: iMg = Empty: iCa = Empty: iSr = Empty: iBa = Empty: iFe = Empty:
iZn = Empty: iOH = Empty: iCl = Empty: iAc = Empty: iHCO3 = Empty: iCO3 = Empty: iHSO4 = Empty:
iSO4 = Empty: iHS = Empty: intF = Empty: iPb = Empty: iBr = Empty: iNH4 = Empty: iH2BO3 = Empty:
 iCO2aq = Empty: iH2Saq = Empty: iCH4aq = Empty: iHAcaq = Empty: iCH4g = Empty: iCO2g = Empty:
iH2Sg = Empty: iCO2o = Empty: iCH4o = Empty: iH2So = Empty: iNH3 = Empty: iH3BO3 = Empty:
NumCat = Empty: NumAn = Empty: NumNeut = Empty: c = Empty: cp = Empty: a = Empty: ap = Empty:
n = Empty: m = Empty: iPz = Empty: i = Empty: j = Empty: kk = Empty: iNG = Empty: jNG = Empty:
iTDS = Empty: InhNo = Empty: InhNoBar = Empty: InhNoCal = Empty:
 LoopTP = Empty: InhNo1 = Empty: InhNo2 = Empty: iMaxBar = Empty: iMaxCal = Empty:
OutPutActCoefs = Empty: Run10TestCases = Empty:
 WHandBHLoop = Empty: Loop10 = Empty: LoopMixing = Empty: LoopResChem = Empty:
 SampleID = Empty: SampleDate = Empty:
 'newbook=Empty : oldbook As Workbook=Empty :
 mt = Empty: mt1 = Empty: mt2 = Empty:
 TK = Empty: TF = Empty: TC = Empty: Ppsia = Empty: Patm = Empty: APhi = Empty: TH2Saq = Empty:
 MoleCharge = Empty: mtotal = Empty: Ist = Empty: TDS = Empty: f_gamma = Empty: ETh = Empty:
EThp = Empty: X12 = Empty: X11 = Empty: X22 = Empty: X14 = Empty: X20 = Empty:
 gX14 = Empty: gX20 = Empty: gX12 = Empty: gpX14 = Empty: gpX20 = Empty: gpX12 = Empty:
 JX12 = Empty: JX11 = Empty: JX22 = Empty: JpX12 = Empty: JpX11 = Empty: JpX22 = Empty:
JX12delta = Empty: JX11delta = Empty: JX22delta = Empty:
 BMa = Empty: BcX = Empty: Bpca = Empty: BPhica = Empty: CMa = Empty: CcX = Empty: Cca = Empty:
 Phip = Empty: Phipaap = Empty: Phipccp = Empty: PhiMc = Empty: PhiXa = Empty: PhiPhiccp = Empty:
PhiPhiaap = Empty:
 Sumccpa = Empty: Sumaapc = Empty: SumYMca = Empty: SumYXac = Empty:
 PhiH2O = Empty: aH2O = Empty: ActCoefM = Empty: ActCoefX = Empty: ActCoefn = Empty:
 term1 = Empty: term2 = Empty: term3 = Empty: term4 = Empty: term5 = Empty: term6 = Empty:
termn = Empty: termsum = Empty:
 K1H2CO3 = Empty: K2HCO3 = Empty: KHAc = Empty: KH2O = Empty: K1H2S = Empty: K2HS = Empty:
KNH4 = Empty: KH3BO3 = Empty:
 KgwCO2 = Empty: KgoCO2 = Empty: KgwCH4 = Empty: KgoCH4 = Empty: KgwH2S = Empty: KgoH2S = Empty:
 KspCalcite = Empty: KspBarite = Empty: KspCelestite = Empty: KspGypsum = Empty:
KspHemihydrate = Empty:
 KspAnhydrite = Empty: KspSiderite = Empty: KspRaSO4 = Empty: KspHalite = Empty: KspFeS = Empty:
KspZnS = Empty: KspCaF2 = Empty:
KspDol = Empty: KspPbS = Empty: IAPDol = Empty: KspMgOH2 = Empty: KspCaOH2 = Empty:
KspSrCO3 = Empty: KspBaCO3 = Empty:
 pH = Empty: Alk = Empty: TAc = Empty: TNH4 = Empty: TH3BO3 = Empty: Ca = Empty: aH = Empty:
yCO2 = Empty: yCH4 = Empty: yH2S = Empty: nTCO2 = Empty: nTCH4 = Empty: nTH2S = Empty:
 VW = Empty: VO = Empty: VMeOH = Empty: VMEG = Empty: rho_w = Empty: VgTP = Empty: deltaT = Empty:
deltaP = Empty: TBH = Empty: TWH = Empty: PBH = Empty: PWH = Empty:
 aCO2 = Empty: aCH4 = Empty: aH2S = Empty: apCO2 = Empty: apCH4 = Empty: apH2S = Empty:
PBubblePt = Empty: KwoCO2 = Empty:
 CO2aq = Empty: b = Empty: HCO3 = Empty: CO3 = Empty: ng = Empty: ng0 = Empty: count = Empty:
k = Empty: cc = Empty: tHCO3 = Empty: tCO3 = Empty: hydCO3 = Empty:
 hydHS = Empty: hydAc = Empty: hydNH3 = Empty: hydH2BO3 = Empty: NH3 = Empty: H2BO3 = Empty:
 SICal = Empty: SIBar = Empty: SISid = Empty: SIGyp = Empty: SIHemi = Empty: SIAn = Empty: SICel = Empty:
SIHal = Empty:
SIFeS = Empty: SIZnS = Empty: SIPbS = Empty: SICaF2 = Empty: SIMgOH2 = Empty: SICaOH2 = Empty:
SIDol = Empty:
 dSICal = Empty: dSIBar = Empty: dSIGyp = Empty: dSIHemi = Empty: dSIAn = Empty: dSICel = Empty:
dSIHal = Empty:
dSIFeS = Empty: dSIZnS = Empty: dSICaF2 = Empty: dSISid = Empty: dSIPbS = Empty:
 fCa = Empty: fng = Empty: fpng = Empty: ppt = Empty: pptHigh = Empty: pptLow = Empty:
SumOfCations = Empty: SumOfAnions = Empty: TDScalc = Empty:
 tInh = Empty: t0Bar = Empty: t0Cal = Empty: SelectInh = Empty: FracInhNo1 = Empty:
 mass_w = Empty: Mass_o = Empty: H = Empty: OH = Empty: AC = Empty: HS = Empty: R = Empty: q1 = Empty:
q2 = Empty: q3 = Empty: q4 = Empty: q5 = Empty: q6 = Empty:
q7 = Empty: q8 = Empty: q9 = Empty: q10 = Empty: q11 = Empty: q12 = Empty: q13 = Empty: q14 = Empty
q15 = Empty: q16 = Empty: q17 = Empty: q18 = Empty: q19 = Empty: q20 = Empty: q21 = Empty
r0 = Empty: r1 = Empty:
r2 = Empty: r3 = Empty: r4 = Empty: r5 = Empty:
 SICalBh = Empty: SIBarBH = Empty: SIGypBH = Empty: SIHemiBH = Empty: SIAnBH = Empty:
SICelBH = Empty:
 SISidBH = Empty: SIHalBH = Empty: SICaF2BH = Empty: SIFeSBH = Empty: SIZnSBH = Empty:
SIPbSBH = Empty: SIPbSWH = Empty:
 fSafetyCal = Empty: fSafetyBar = Empty: bInhBarMax = Empty: bInhCalMax = Empty:
bInhBarMixed = Empty:
bInhCalMixed = Empty: ConcInhCalMixed = Empty: ConcInhBarMixed = Empty:
 fsafetyGyp = Empty: fsafetyAn = Empty: ConcInhGyp = Empty: ConcInhAn = Empty: GypExpon10 = Empty:
AnExpon10 = Empty: InhNoGyp = Empty: InhNoAn = Empty: t0Gyp = Empty: t0An = Empty:
 ConcInhBar = Empty: ConcInhCal = Empty: CalculatedTDS = Empty: KwoH2S = Empty:
H2Saq = Empty: pHHigh = Empty: pHLow = Empty: faH = Empty: fFe = Empty:
 U1 = Empty: U2 = Empty: U3 = Empty: U4 = Empty: U5 = Empty: U6 = Empty: U7 = Empty: U8 = Empty:
U9 = Empty: D1000 = Empty: dens0 = Empty:
 a1 = Empty: a2 = Empty: a3 = Empty: a4 = Empty: a5 = Empty: a6 = Empty: a7 = Empty: a8 = Empty:
a9 = Empty: a10 = Empty: dens1atm = Empty: dens = Empty: Dielec = Empty: Tr = Empty:
BarExpon10 = Empty: CalExpon10 = Empty:
 PBar = Empty: RBar = Empty:
 aPrmix = Empty: bPRmix = Empty: AStarPR = Empty: BStarPr = Empty: coef1 = Empty: coef2 = Empty:
coef3 = Empty: coef4 = Empty: ZplusRoot = Empty: ZminusRoot = Empty:
  f_ZplusRoot = Empty: f_ZminusRoot = Empty:
 Znew = Empty: VolGasMolar = Empty:

 nob = Empty: nob1 = Empty: BrineNoNew = Empty: BrineNoOld = Empty: use_Calc_Temp = Empty:
use_pH = Empty:
 QTotal = Empty: mass_MeOH = Empty: mass_MEG = Empty: Cp_w = Empty: Cp_CH4 = Empty:
Cp_Co2 = Empty: Cp_O = Empty: Cp_MeOH = Empty: Cp_MEG = Empty:
TCO3init = Empty: TH2Sinit = Empty:
 iBaSO4 = Empty: iSrSO4 = Empty: iCaSO42H2O = Empty: iNaCl = Empty: iCaSO4 = Empty:
ihemiCaSO4 = Empty: NumMean = Empty:
 xMeOH = Empty: xMEG = Empty: aNH2O = Empty:
dSIMeOHcal = Empty: dSIMEGcal = Empty:
 dSIMeOHBar = Empty: dSIMEGBar = Empty: dSIMeOHHal = Empty: dSIMEGHal = Empty:
 pHMeterReading = Empty: DpHj = Empty: dMeOH = Empty: dMEG = Empty: pH_before_precipitation = Empty:
 ln_Ksp_Gyp = Empty: ln_Ksp_Anh = Empty: dV = Empty: dk = Empty: ln_K_T_Gyp = Empty:
ln_K_T_Anh = Empty: RAtm = Empty: ln_H_T_H2S = Empty: ln_KH_H2S = Empty:
 style = Empty: title = Empty: message = Empty: prompt = Empty: pHMessage = Empty:
 response1 = Empty: response2 = Empty: response3 = Empty: response4 = Empty: Ncount = Empty:
CaHCO3Loop = Empty: iGoalSeek = Empty:
 DielecConst = Empty: KstCaHCO3 = Empty: IStCosolvent = Empty: TCa = Empty: CaHCO3 = Empty:
' IndependentVariableCellNo = Empty: IndependentVariableTargetValue = Empty:
'DependentVariableCellNo = Empty: IndVarColumnNo = Empty: IndVarRowNo = Empty:
' IndVariableValue0 = Empty: DepVarColumnNo = Empty: DepVarRowNo = Empty:
'DepVariableValue0 = Empty:
'DependentVariableTargetValue = Empty: counter = Empty:
' Targ = Empty: Dep0 = Empty: Ind0 = Empty: Ind1 = Empty: IndNew = Empty: IndOld = Empty: Dep1 = Empty:
'DepOld = Empty: Derivative = Empty:
' myRange = Empty:
 Run_Seawater_Mixing = Empty: Run_MixingTwoWells = Empty:
 RatioOilBPoints = Empty: TH2SintoWater = Empty:
 WtFrSalt = Empty: SumM = Empty: Den0overDenIst = Empty: ViscWatKinam0 = Empty:
RelativeKinViscWater = Empty: DenIst = Empty: ViscWatIst = Empty: ViscWatKinamIst = Empty:
 SIAmSilica = Empty: SIQuartz = Empty: SIChrysotile = Empty: SIGreenalite = Empty: SIDiopside = Empty:
TH4SiO4 = Empty: SIZnCO3 = Empty:
 KspAmSilica = Empty: KspQuartz = Empty: KspGreenalite = Empty: KspDiopside = Empty:
KspChrysotile = Empty: KH3SiO3 = Empty: KH4SiO4 = Empty: KspZnCO3 = Empty:
 iH4SiO4 = Empty: iTH4SiO4 = Empty: NumberToRead = Empty:
 Cp01 = Empty: Cp02 = Empty: aj = Empty: b0Cp = Empty: b1Cp = Empty: cj = Empty: Cp01400 = Empty:
Cp02400 = Empty: AJ400 = Empty:
b0400 = Empty: b1400 = Empty: CJ400 = Empty: Cp01PT = Empty: rho25c = Empty:
 Cp02PT = Empty: AJPT = Empty: b0PT = Empty: b1PT = Empty: CJPT = Empty: bCp = Empty: neu = Empty:
hISt = Empty: BJNaCl = Empty: n1Water = Empty: zM = Empty: zX = Empty: alphaCp = Empty:
 CpPhi = Empty: Cp0 = Empty: CpCp = Empty: massCp = Empty: CpPerGram = Empty: CpPerMl = Empty:
 VtotalCp = Empty: SaltMass = Empty: RCp = Empty:
 dfaHdpH = Empty: faHplusdpH = Empty: dpH = Empty:
 UseSI = Empty:
 RunMultiMix = Empty: InConc = Empty: pptateBar = Empty: pptateCal = Empty: Log10t0Bar = Empty:
Log10tInhBar = Empty: Log10t0Cal = Empty: Log10tInhCal = Empty: ConcInh = Empty:
 PCO2 = Empty: PH2S = Empty: PCH4 = Empty: QCubic = Empty: Rcubic = Empty: Xcubic = Empty:
Theta = Empty: root1 = Empty: root2 = Empty: root3 = Empty:
Vg_ZRT = Empty: t1 = Empty: t2 = Empty: t3 = Empty: t4 = Empty: t5 = Empty: t6 = Empty: t7 = Empty: t8 = Empty: t9 = Empty: t10 = Empty: t11 = Empty: t12 = Empty
s1 = Empty: S2 = Empty: s3 = Empty: s4 = Empty
pi = Empty: NAv = Empty: eps0 = Empty: eElec = Empty: kBoltz = Empty:
VperKgWater = Empty: MassperKgwater = Empty: rhoOld = Empty: TDSOld = Empty:
rhoSSE = Empty: pptMin = Empty: pptMax = Empty: fx = Empty: fppt = Empty: ippt = Empty:
sign_coef2 = Empty:
 Iteration = Empty: iden = Empty: ii = Empty: iAlk = Empty:
 TRes = Empty: PRes = Empty:
qroot = Empty: Vg_ZRT_Old = Empty: pptOld = Empty: icounting = Empty: CalculateTDSDen = Empty:
TDSSSE = Empty:
 ppt_or_not = Empty: Ksp = Empty: K1 = Empty: k2 = Empty: Kgw = Empty: NT = Empty: im = Empty:
igas = Empty: tGas = Empty:
Alk_from_QC = Empty: pHMeterReading_from_QC = Empty: RunQualityControlChecks = Empty:
 Iteration1 = Empty: Iteration2 = Empty
HCO3SSE = Empty: HCO3Old = Empty: HAcaq = Empty: HCO3stpOld = Empty:
 Run_CalcConcFactor = Empty: UseSR = Empty: UseTPCalciteSheet = Empty:
fractionalPrecipitation_MassTransport = Empty: pHAfterFeCO3ppt = Empty: pHAfterFeSppt = Empty:
 pptFeCO3_MassTransfer = Empty: pptFeCO3_NoMassTransfer = Empty: pptAn_MassTransfer = Empty:
 pptFeS_MassTransfer = Empty: pptFeS_NoMassTransfer = Empty:
pptCalcite_MassTransfer = Empty: pptCalcite_NoMassTransfer = Empty: mass_wOld = Empty:
 pptBarite_MassTransfer = Empty: pptBarite_NoMassTransfer = Empty:
Run_MassTransfer = Empty: pptCelestite_MassTransfer = Empty: pptCelestite_NoMassTransfer = Empty:
 Graphtype = Empty: NSeries = Empty: NCountGraph = Empty: Ncharts = Empty:
 nob_Input = Empty: nob_InputII = Empty: Read_InputII = Empty: NCount_II = Empty:
RunQualityControlChecks_II = Empty: RunWhatIf = Empty: NobWI = Empty: Loop1WI = Empty:
Loop2WI = Empty:
  TWIInit = Empty: PWIInit = Empty: RatioIAPtoKsp = Empty:
ISilicate = Empty: FeIn = Empty: SiIn = Empty: kc = Empty: dfFe = Empty: FeNew = Empty: fe = Empty:
FeMin = Empty: FeMax = Empty: SiMin = Empty: SiMax = Empty: SiNew = Empty: fSi = Empty: dfSi = Empty:
 MgMin = Empty: MgMax = Empty: CaMin = Empty: CaMax = Empty: xNew = Empty: dfx = Empty:
pptNew = Empty: dfppt = Empty: TCO2 = Empty:
 hydH2SiO4 = Empty: iH2SiO4 = Empty: iH3SiO4 = Empty: H2SiO4 = Empty: H3SiO4 = Empty: H4SiO4 = Empty:
iH4SiO4aq = Empty:
 sign_faH_SiO2 = Empty: SignChangeForSiO2 = Empty: TH4SiO4_Chrysotile = Empty:
TH4SiO4_Dipside = Empty: TH4SiO4_Greenalite = Empty:
pptCal = Empty: pptBar = Empty: pptSid = Empty: pptGyp = Empty: pptHemi = Empty: pptAn = Empty:
pptCel = Empty:
pptHal = Empty: pptFeS = Empty: pptZnS = Empty: pptZnCO3 = Empty: pptPbS = Empty: pptCaF2 = Empty:
pptMgOH2 = Empty: pptCaOH2 = Empty:
 pptAmSilica = Empty: pptQuartz = Empty: pptGreenalite = Empty: pptDiopside = Empty:
pptChrysotile = Empty:
 pHaftercalciteppt = Empty: pHafterMgOH2ppt = Empty: pHafterCaOH2ppt = Empty:
pHafterAmsilicappt = Empty: pHafterQuartzppt = Empty: pHafterGreenaliteppt = Empty:
 pHafterDiopsideppt = Empty: pHafterChrysotileppt = Empty:
 TpH = Empty: PpH = Empty: TVol = Empty: Pvol = Empty: CO2aqOld = Empty: TCO2SSE = Empty:
TCO2Old = Empty:
  RhoH2OTP = Empty: Psat = Empty: RunGoalSeek = Empty:
 VwSW1 = Empty: VoSW1 = Empty: VgSW1 = Empty: VMeOHSW1 = Empty: VMEGSW1 = Empty:
iC2g = Empty: iC3g = Empty: iC4ig = Empty: iC4ng = Empty: iC5ig = Empty:
 iC5ng = Empty: iC6g = Empty: iC7_12g = Empty:
 iC13_25g = Empty: iC26_80g = Empty: iH2Og = Empty: iN2g = Empty: useEOS = Empty: mass_w_0 = Empty:
AlkInit = Empty: TH4SiO4Init = Empty: TNH4Init = Empty: TH3BO3Init = Empty: TAcInit = Empty:

 SIBaCO3 = Empty: SISrCO3 = Empty: SIBaCO3BH = Empty: SISrCO3BH = Empty: pptSrCO3 = Empty:
pptBaCO3 = Empty: NaQC = Empty:
 UseH2Sgas = Empty: Run1000Cases = Empty: CaseNob1000 = Empty:
RunSSP = Empty: iTP = Empty: iRead = Empty:
 pHBH = Empty: TCO2BH = Empty: BHConcInhCal = Empty: BHConcInhBar = Empty:
WHConcInhCal = Empty: WHConcInhBar = Empty: SICalWH = Empty: SIBarWH = Empty:
SIRiskHigh = Empty: SIRiskLow = Empty: SIBarRisk = Empty:
SICalRisk = Empty: tInhRisk = Empty: iRisk = Empty: SIAnRisk = Empty: SIGypRisk = Empty:
mf_ParametersWereRead = Empty:
API = Empty: SGG = Empty: mw_oil = Empty: total_moles = Empty: AlkMT = Empty:
 mol_o = Empty: mol_g = Empty: mol_W = Empty: mol_HC = Empty:
 mol_w_Orig = Empty: mol_w3 = Empty: iz = Empty:
nTCO2EOS = Empty: nTH2sEOS = Empty:
 nTCO2_before_precipitation = Empty: nTH2S_before_precipitation = Empty:
Total_moles_before_precipitation = Empty:
 CO2_w_before_ppt = Empty: H2S_w_before_ppt = Empty:
 nCO2aq = Empty: nH2Saq = Empty: VgTPCalc = Empty:  HCWR = Empty:
SumofZ = Empty:
 YH2O = Empty: zHC = Empty: VoilCalc = Empty:
TDTPMPM = Empty: pKspDTPMPcr = Empty: bH_DTPMP = Empty: bCa_DTPMP = Empty: Phn = Empty:
logCaLow = Empty: logCaHigh = Empty: logCa = Empty: hydDTPMP = Empty:
DenomDTPMP = Empty: iPhn = Empty: MaxInh = Empty:
 TBHPMPM = Empty: bH_BHPMP = Empty: bCa_BHPMP = Empty: hydBHPMP = Empty:
denomBHPMP = Empty: pKspBHPMPcr = Empty:
 TNTMPM = Empty: aH_NTMP = Empty: bH_NTMP = Empty: bCa_NTMP = Empty: hydNTMP = Empty:
denomNTMP = Empty: pKspNTMPcr = Empty: NoRiskcalc = Empty:
errLoopTP = Empty: NoErr = Empty: UseMolal = Empty: QPBubblePt = Empty:
 mytime = Empty: mytime1 = Empty: nettime = Empty:
PipeID = Empty: PipeL = Empty: CorrRate = Empty: PipeMetalDens = Empty:
QBrineFlow = Empty: SArea = Empty:
LoverD = Empty: ReNO = Empty: VgTP_MT = Empty: VO_MT = Empty:
VW_MT = Empty: eff_diameter = Empty: Velocity_W = Empty:
 iCaHCO32 = Empty: iFeHCO32 = Empty: iFeHS2 = Empty: FlowType = Empty:
 For i = 1 To 10
Diff(i) = Empty: kmL(i) = Empty: kmT(i) = Empty: km(i) = Empty: gNNeut(i) = Empty: gNMean(i) = Empty:
ConcInhCalRisk(i) = Empty: ConcInhBarRisk(i) = Empty
ConcInhGypRisk(i) = Empty: ConcInhAnRisk(i) = Empty:
Next i
For i = 1 To 11
 radiusC(i) = Empty: DiffC(i) = Empty:
mcKin(i) = Empty: mcEq(i) = Empty: mcMT(i) = Empty: maMT(i) = Empty: MixFracTwoWells(i) = Empty

Next i
For i = 1 To 12
radiusA(i) = Empty: DiffA(i) = Empty:

Next i

For i = 1 To 15
 gCat(i) = Empty: gAn(i) = Empty: gNeut(i) = Empty: gGas(i) = Empty:
 mc(i) = Empty: ChCat(i) = Empty: ma(i) = Empty: ChAn(i) = Empty: mn(i) = Empty:
bInhGyp(i) = Empty: bInhAn(i) = Empty: mcInit(i) = Empty: maInit(i) = Empty:
EaRInh(i) = Empty: LnAInh(i) = Empty: InhName(i) = Empty: gNCat(i) = Empty: gNAn(i) = Empty:
 InhSolLimit(i) = Empty: zInput(i) = Empty: z_before_precipitation(i) = Empty:
feed_Composition(i) = Empty: bInhBar(i) = Empty: bInhCal(i) = Empty: Vex_c(i) = Empty:
MWCat(i) = Empty: MWAn(i) = Empty: V0_c(i) = Empty: V0_a(i) = Empty:
g1atmCat(i) = Empty: g1atmAn(i) = Empty: Vex_a(i) = Empty:
Next i
For i = 1 To 15
For j = 1 To 15
b0(i, j) = Empty: b1(i, j) = Empty: b2(i, j) = Empty: CPhi(i, j) = Empty:
 bi(i, j) = Empty: ci(i, j) = Empty: gi(i, j) = Empty: ai(i, j) = Empty:
Tccp(i, j) = Empty: Taap(i, j) = Empty: Lnc(i, j) = Empty: Lna(i, j) = Empty: Lnn(i, j) = Empty
Next j
Next i
For i = 1 To 15
For j = 1 To 15
For k = 1 To 15
Yccpa(i, j, k) = Empty: Yaapc(i, j, k) = Empty: zeta(i, j, k) = Empty
Next k
Next j
Next i
For i = 1 To 20
yGas(i) = Empty: TCr(i) = Empty: Pc(i) = Empty: Omega(i) = Empty: F_Omega(i) = Empty: aPR(i) = Empty: bPR(i) = Empty: Sum_aijPR(i) = Empty
gL(i) = Empty: z(i) = Empty: errmsg(i) = Empty:
Next i
For i = 1 To 20
For j = 1 To 20
kPr(i, i) = Empty:
Next j
Next i
For i = 1 To 10
MWNeut(i) = Empty: V0_n(i) = Empty: Vex_n(i) = Empty:
g1atmNeut(i) = Empty: mn(i) = Empty:
Next i
For i = 1 To 2
VgRes(i) = Empty: VoRes(i) = Empty: VwRes(i) = Empty:
Next i
For i = 1 To 5
CaseCount(i) = Empty:
Next i
For i = 1 To 40
 CaseCountWI(i) = Empty: VarNameWI(i) = Empty: VarUnitWI(i) = Empty: VarWIInit(i) = Empty: VarWIFinal(i) = Empty: DeltaVarWI(i) = Empty:
Next i
For i = 1 To 40
For j = 1 To 10
CaWI(i, j) = Empty: BaWI(i, j) = Empty: SO4WI(i, j) = Empty: HCO3AlkWI(i, j) = Empty: CO3AlkWI(i, j) = Empty: TACWI(i, j) = Empty: YCO2WI(i, j) = Empty: YH2SWI(i, j) = Empty: TH2SaqWI(i, j) = Empty:
pHMeterSTPWI(i, j) = Empty: VgTPWI(i, j) = Empty: VoWI(i, j) = Empty: VwWI(i, j) = Empty:
 TWI(i, j) = Empty: PWI(i, j) = Empty: ConcFactorWI(i, j) = Empty: NaWI(i, j) = Empty: ClWI(i, j) = Empty: SrWI(i, j) = Empty:
 Next j
Next i
For i = 1 To 7
graphcount(i) = Empty
Next i
For i = 1 To 15
For j = 1 To 10
For k = 1 To 10
For kk = 1 To 3
SIRisk(i, j, k, kk) = Empty:
Next kk
Next k
Next j
Next i
For i = 1 To 15
For j = 1 To 10
 TRisk(i, j) = Empty:
Next j
Next i

For i = 1 To 10
For j = 1 To 5
betaDTPMP(i, j) = Empty: betaNTMP(i, j) = Empty:
Next j
Next i
For i = 1 To 10
For j = 1 To 6
betaBHPMP(i, j) = Empty:
Next j
Next i

RunH2SGUI = Empty: RunH2SGoalSeek = Empty: RunGUIResRec = Empty: RunGUISepRec = Empty: RunGUIH2STune = Empty
End Sub






'Sub LoopTPMultiple()
'CaseNo = 0
'pptAmSilicaMultiple_or_Not = 1
'CaseNo = fCaseNo
'If CaseNo = 0 Then
'GoTo 600
'End If
'While CaseNo <> 0
'If CaseNo = 1 Then mt = fCalcCaseNo1
'If CaseNo = 2 Then mt = fCalcCaseNo2
'If CaseNo = 3 Then mt = fCalcCaseNo3
'If CaseNo = 4 Then mt = fCalcCaseNo4
'If CaseNo = 5 Then mt = fCalcCaseNo5
'If CaseNo = 6 Then mt = fCalcCaseNo6
'If CaseNo = 7 Then mt = fCalcCaseNo7
'If CaseNo = 8 Then mt = fCalcCaseNo8
'If CaseNo = 9 Then mt = fCalcCaseNo9
'If CaseNo = 10 Then mt = fCalcCaseNo10
'If CaseNo = 11 Then mt = fCalcCaseNo11
'If CaseNo = 12 Then mt = fCalcCaseNo12
'If CaseNo = 13 Then mt = fCalcCaseNo12
'If CaseNo = 14 Then mt = fCalcCaseNo12
'If CaseNo = 15 Then mt = fCalcCaseNo12
'Wend
'Call LoopTPOutputMultiplePpt
'600 End Sub
''***************************************************************************
'Sub CaseNo3speciation(ppt_or_not, iM, iGas, Ksp)
''Worksheets("Multiple").Activate
''ppt_or_not: "0" means no precipitation; "1" means only precipitation; and "2" means allow both precipitation and dissolution.
'ppt = 0
''The following half-interval search followed by a Newton-Raphson routine
'pHHigh = pH_before_precipitation
'pHLow = 0
'For i = 1 To 30
'  pH = (pHHigh + pHLow) / 2
'  aH = 10 ^ (-pH)
'  aOH = KH2O / aH
'  H = aH / (gCat(iH) * gNCat(iH))
'  OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
'
'  'The following statements around the cubic Vg eqation and the quadratic ppt equation are used to get consistent values of Vg and ppt at each pH value.
'  'Initially, ppt = 0 and Vg is calculated and then this value of Vg is put into the Ksp equation to calcuate ppt(new) and this is put into the cubic Vg
'  '  equation to recalculate Vg with the improved value of ppt and the process is repeated until the convergence is +/- 0.0001 in both ppt and Vg or for 100
'  '  interations.  Generally, only two or three iterations are needed.
'''  ppt = 0: pptOld = 1 * 10 ^ 42: pptCalMultiple = 0: pptCalMultipleOld = 1E+42:
'''  Vg_ZRT = 0: Vg_ZRT_Old = 1 * 10 ^ 42: Iteration = 0 'initial estimates for ppt and Vg/ZRT
'''  While Abs((pptCalMultiple - pptCalMultipleOld + 1E-21) / (pptCalMultiple + pptCalMultipleOld + 1E-16)) + _
'      Abs((Vg_ZRT - Vg_ZRT_Old + 1E-21) / (Vg_ZRT + Vg_ZRT_Old + 1E-16)) > 0.0001 And Iteration < 100
'  'This While/Wend loop calculates the effect of ppt on the gas composition and partitioning.
'    Iteration = Iteration + 1:      pptCalMultipleOld = pptCalMultiple:      Vg_ZRT_Old = Vg_ZRT
'    t1 = gGas(iCH4g) * (RatioOilBPoints * KgoCH4 * Mass_o / gL(iCH4g) _
'      + KgwCH4 * mass_w / (gNeut(iCH4aq) * gNNeut(iCH4aq)))
'    t2 = gGas(iCO2g) * (RatioOilBPoints * KgoCO2 * Mass_o / gL(iCO2o) _
'      + KgwCO2 * mass_w * (1 / (gNeut(iCO2aq) * gNNeut(iCO2aq)) _
'      + K1H2CO3 / (aH * gAn(iHCO3) * gNAn(iHCO3)) _
'      + K1H2CO3 * K2HCO3 / (aH ^ 2 * gAn(iCO3) * gNAn(iCO3))))                  't2*Vg_ZRT=moles Co2 in water+Oil phase
'    t3 = gGas(iH2Sg) * (RatioOilBPoints * KgoH2S * Mass_o / gL(iH2So) _
'      + KgwH2S * mass_w * (1 / (gNeut(iH2Saq) * gNNeut(iH2Saq)) _
'      + K1H2S / (aH * gAn(iHS) * gNAn(iHS))))                                   't3*Vg_ZRT=moles H2S in water+Oil phase
'    s1 = nTCH4 / Ppsia
'    S2 = nTCO2 / Ppsia
'    If iGas = 2 Then S2 = (nTCO2 - pptCalMultiple * mass_w) / Ppsia
'    s3 = nTH2S / Ppsia
'    If iGas = 3 Then s3 = (nTH2S - ppt * mass_w) / Ppsia
'    coef1 = 1
'    coef2 = t1 + t2 + t3 - (s1 + S2 + s3)
'    coef3 = t1 * t2 + t1 * t3 + t2 * t3 - (s1 * t2 + s1 * t3 + s3 * t1 + s3 * t2 + S2 * t1 + S2 * t3)
'    coef4 = t1 * t2 * t3 - (t1 * t2 * s3 + t1 * t3 * S2 + t2 * t3 * s1)
'    Call CubicRoots(coef1, coef2, coef3, coef4, root1, root2, root3)
'    Vg_ZRT = root1
'    If root2 > Vg_ZRT Then Vg_ZRT = root2
'    If root3 > Vg_ZRT Then Vg_ZRT = root3
'    If Vg_ZRT < 0 Then Vg_ZRT = 0   'Prevents the consideration of needed added gas volume, i.e., Vg <0.  The physics requires that Vg => 0.
'    If ppt_or_not = 0 Then GoTo 223  'If no precipitation is to be used, then skip out of the "While...Wend" loop and leave ppt = 0.
'
'  PCO2 = (nTCO2 / (Vg_ZRT + t2)) 'These are not the partial pressures for the Original brine data.
'  If iGas = 2 Then PCO2 = ((nTCO2 - pptCalMultiple * mass_w) / (Vg_ZRT + t2))
'  CO2aq = KgwCO2 * PCO2 * gGas(iCO2g) / (gNeut(iCO2aq) * gNNeut(iCO2aq))
'  HCO3 = K1H2CO3 * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
'  CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
'den = aH ^ 2 * gAn(iCO3) * gNAn(iCO3) / (K1H2CO3 * K2HCO3 * gNeut(iCO2aq) * gNNeut(iCO2aq)) _
'      + aH * gAn(iCO3) * gNAn(iCO3) / (K2HCO3 * gAn(iHCO3) * gNAn(iHCO3)) + 1
't4 = (gGas(iCO2g) * KgwCO2) * (1 / (gNeut(iCO2aq) * gNNeut(iCO2aq)) + K1H2CO3 / (aH * gAn(iHCO3) * gNAn(iHCO3)) + K1H2CO3 * K2HCO3 / (aH ^ 2 * gAn(iCO3) * gNAn(iCO3)))
'denP = den / (mass_w * t4 / (Vg_ZRT + t2))
'TotCO3P = (nTCO2 * t4 / (Vg_ZRT + t2)) / (mass_w * t4 / (Vg_ZRT + t2))
''Replace all den with denP and TotCO3 with nTCO3P
'TotCO3 = (nTCO2 - pptCalMultiple * mass_w) / (Vg_ZRT + t2) * t4
'  PorMax = mc(iCa)
'If mc(iCa) > TotCO3 Then
'    CalMax = TotCO3
'    Else
'    CalMax = mc(iCa)
'End If
'If mc(iCa) > ma(iSO4) Then
'    GypMax = ma(iSO4)
'    Else
'    GypMax = mc(iCa)
'End If
'If mc(iBa) > ma(iSO4) Then
'    BarMax = ma(iSO4)
'    Else
'    BarMax = mc(iBa)
'End If
'
'KspCalciteMultiple = KspCalcite / (gCat(iCa) * gAn(iCO3))
'KspBariteMultiple = KspBarite / (gCat(iBa) * gAn(iSO4))
'KspGypsumMultiple = KspGypsum / (gCat(iCa) * gAn(iSO4) * aH2O ^ 2)
'KspMgOH2Multiple = KspMgOH2 / (gCat(iMg))
'KspCaOH2Multiple = KspCaOH2 / (gCat(iCa))
'
'pptMgOH2Multiple = 0: pptCaOH2Multiple = 0: pptCalMultiple = 0: pptGypMultiple = 0: pptBarMultiple = 0: pptAmSilicaMultiple = 0
'pptMgOH2Multiple = (mc(iMg) - KspMgOH2Multiple / (aOH ^ 2))
''If pptMgOH2Multiple >= mc(iMg) Or pptMgOH2Multiple <= 0 Then pptMgOH2Multiple = 0
'If pptMgOH2Multiple <= 0 Then pptMgOH2Multiple = 0
'
''If CaseNo = 3 Then 'pptCaOH2Multiple+ pptGypMultiple + pptBarMultiple, but no pptCalMultiple
'r1 = KspGypsumMultiple / (KspCaOH2Multiple / aOH ^ 2)
'pptBarMultiple = mc(iBa) - KspBariteMultiple / r1
'pptGypMultiple = ma(iSO4) - r1 - pptBarMultiple
'pptCaOH2Multiple = mc(iCa) - pptGypMultiple - KspCaOH2Multiple / aOH ^ 2
''End If
''  Wend
'223 'Continue
'
'  PCH4 = (nTCH4 / (Vg_ZRT + t1))  'These are not the partial pressures for the Original brine data.
'  PCO2 = (nTCO2 / (Vg_ZRT + t2))
'  If iGas = 2 Then PCO2 = ((nTCO2 - pptCalMultiple * mass_w) / (Vg_ZRT + t2))
'  PH2S = (nTH2S / (Vg_ZRT + t3))
'  If iGas = 3 Then PH2S = (nTH2S - ppt * mass_w) / (Vg_ZRT + t3)
'  CO2aq = KgwCO2 * PCO2 * gGas(iCO2g) / (gNeut(iCO2aq) * gNNeut(iCO2aq))
'  H2Saq = KgwH2S * PH2S * gGas(iH2Sg) / (gNeut(iH2Saq) * gNNeut(iH2Saq))
'  HCO3 = K1H2CO3 * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
'  CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
'  HS = K1H2S * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
'  hydAc = aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1
'  AC = TAc / hydAc
'  HAcaq = TAc - AC
'  hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
'  H2BO3 = TH3BO3 / hydH2BO3
'  hydNH3 = aH * gCat(iNH4) * gNCat(iNH4) / (KNH4 * gNeut(iNH3) * gNNeut(iNH3)) + 1
'  NH3 = TNH4 / hydNH3
'
'pptAmSilicaMultiple_or_Not = 1  '???????????????????????????????????put back up at input etc.????????????????????????????????????
''If i = 29 Then Stop
'  hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
'  aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
'  H2SiO4 = TH4SiO4 / hydH2SiO4
'  H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
'  H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
'  'a = TH4SiO4 - H2SiO4 - H3SiO4 - H4SiO4
'  If pptAmSilicaMultiple_or_Not = 1 And TH4SiO4 > 0 And H4SiO4 > KspAmSilica / gNeut(iH4SiO4aq) Then
'    H4SiO4 = KspAmSilica / gNeut(iH4SiO4aq)   'At equil with amorphous SiO2, or H4SiO4
'    H3SiO4 = KH4SiO4 * KspAmSilica / (aH * gAn(iH3SiO4))
'    H2SiO4 = KH4SiO4 * KH3SiO3 * KspAmSilica / (aH ^ 2 * gAn(iH2SiO4))
'    pptAmSilicaMultiple = TH4SiO4 - (H4SiO4 + H3SiO4 + H2SiO4)
'    If pptAmSilicaMultiple <= 0 Or pptAmSilicaMultiple >= TH4SiO4 Then pptAmSilicaMultiple = 0
'  End If
'
'  faH = Alk - 2 * (pptMgOH2Multiple + pptCaOH2Multiple + pptCalMultiple) - (HCO3 + 2 * CO3 + HS + AC + NH3 + H2BO3 + H3SiO4 + 2 * H2SiO4 + OH - H)
'  ypH(i) = faH: xpH(i) = pH: xppt(i) = pptCalMultiple 'Used in Newton-Raphson iteration, at the end of this For loop.
'  If faH > 0 Then pHLow = pH
'  If faH < 0 Then pHHigh = pH
'  'If i = 30 Then Stop
'Next i
'
'End Sub
''***************************************************************************
'Sub C4_SSPEquilCalcsMultipleB(ppt_or_not, iM, iGas, Ksp)
''Worksheets("Multiple").Activate
''ppt_or_not: "0" means no precipitation; "1" means only precipitation; and "2" means allow both precipitation and dissolution.
'ppt = 0
''The following half-interval search followed by a Newton-Raphson routine
'pHHigh = 14
'pHLow = 0
'For i = 1 To 30
'  pH = (pHHigh + pHLow) / 2
'  aH = 10 ^ (-pH)
'  aOH = KH2O / aH
'  H = aH / (gCat(iH) * gNCat(iH))
'  OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
'
'  'The following statements around the cubic Vg eqation and the quadratic ppt equation are used to get consistent values of Vg and ppt at each pH value.
'  'Initially, ppt = 0 and Vg is calculated and then this value of Vg is put into the Ksp equation to calcuate ppt(new) and this is put into the cubic Vg
'  '  equation to recalculate Vg with the improved value of ppt and the process is repeated until the convergence is +/- 0.0001 in both ppt and Vg or for 100
'  '  interations.  Generally, only two or three iterations are needed.
'  ppt = 0: pptOld = 1 * 10 ^ 42: pptCalMultiple = 0: pptCalMultipleOld = 1E+42:
'  Vg_ZRT = 0: Vg_ZRT_Old = 1 * 10 ^ 42: Iteration = 0 'initial estimates for ppt and Vg/ZRT
'  While Abs((pptCalMultiple - pptCalMultipleOld + 1E-21) / (pptCalMultiple + pptCalMultipleOld + 1E-16)) + _
'      Abs((Vg_ZRT - Vg_ZRT_Old + 1E-21) / (Vg_ZRT + Vg_ZRT_Old + 1E-16)) > 0.0001 And Iteration < 100
'  'This While/Wend loop calculates the effect of ppt on the gas composition and partitioning.
'    Iteration = Iteration + 1:      pptCalMultipleOld = pptCalMultiple:      Vg_ZRT_Old = Vg_ZRT
'    t1 = gGas(iCH4g) * (RatioOilBPoints * KgoCH4 * Mass_o / gL(iCH4g) _
'      + KgwCH4 * mass_w / (gNeut(iCH4aq) * gNNeut(iCH4aq)))
'    t2 = gGas(iCO2g) * (RatioOilBPoints * KgoCO2 * Mass_o / gL(iCO2o) _
'      + KgwCO2 * mass_w * (1 / (gNeut(iCO2aq) * gNNeut(iCO2aq)) _
'      + K1H2CO3 / (aH * gAn(iHCO3) * gNAn(iHCO3)) _
'      + K1H2CO3 * K2HCO3 / (aH ^ 2 * gAn(iCO3) * gNAn(iCO3))))                  't2*Vg_ZRT=moles Co2 in water+Oil phase
'    t3 = gGas(iH2Sg) * (RatioOilBPoints * KgoH2S * Mass_o / gL(iH2So) _
'      + KgwH2S * mass_w * (1 / (gNeut(iH2Saq) * gNNeut(iH2Saq)) _
'      + K1H2S / (aH * gAn(iHS) * gNAn(iHS))))                                   't3*Vg_ZRT=moles H2S in water+Oil phase
'    s1 = nTCH4 / Ppsia
'    S2 = nTCO2 / Ppsia
'    If iGas = 2 Then S2 = (nTCO2 - pptCalMultiple * mass_w) / Ppsia
'    s3 = nTH2S / Ppsia
'    If iGas = 3 Then s3 = (nTH2S - ppt * mass_w) / Ppsia
'    coef1 = 1
'    coef2 = t1 + t2 + t3 - (s1 + S2 + s3)
'    coef3 = t1 * t2 + t1 * t3 + t2 * t3 - (s1 * t2 + s1 * t3 + s3 * t1 + s3 * t2 + S2 * t1 + S2 * t3)
'    coef4 = t1 * t2 * t3 - (t1 * t2 * s3 + t1 * t3 * S2 + t2 * t3 * s1)
'    Call CubicRoots(coef1, coef2, coef3, coef4, root1, root2, root3)
'    Vg_ZRT = root1
'    If root2 > Vg_ZRT Then Vg_ZRT = root2
'    If root3 > Vg_ZRT Then Vg_ZRT = root3
'    If Vg_ZRT < 0 Then Vg_ZRT = 0   'Prevents the consideration of needed added gas volume, i.e., Vg <0.  The physics requires that Vg => 0.
'    If ppt_or_not = 0 Then GoTo 223  'If no precipitation is to be used, then skip out of the "While...Wend" loop and leave ppt = 0.
'
'  PCO2 = (nTCO2 / (Vg_ZRT + t2)) 'These are not the partial pressures for the Original brine data.
'  If iGas = 2 Then PCO2 = ((nTCO2 - pptCalMultiple * mass_w) / (Vg_ZRT + t2))
'  CO2aq = KgwCO2 * PCO2 * gGas(iCO2g) / (gNeut(iCO2aq) * gNNeut(iCO2aq))
'  HCO3 = K1H2CO3 * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
'  CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
''  TotCO3 = CO2aq + HCO3 + CO3
'den = aH ^ 2 * gAn(iCO3) * gNAn(iCO3) / (K1H2CO3 * K2HCO3 * gNeut(iCO2aq) * gNNeut(iCO2aq)) _
'      + aH * gAn(iCO3) * gNAn(iCO3) / (K2HCO3 * gAn(iHCO3) * gNAn(iHCO3)) + 1
't4 = (gGas(iCO2g) * KgwCO2) * (1 / (gNeut(iCO2aq) * gNNeut(iCO2aq)) + K1H2CO3 / (aH * gAn(iHCO3) * gNAn(iHCO3)) + K1H2CO3 * K2HCO3 / (aH ^ 2 * gAn(iCO3) * gNAn(iCO3)))
'denP = den / (mass_w * t4 / (Vg_ZRT + t2))
'TotCO3P = (nTCO2 * t4 / (Vg_ZRT + t2)) / (mass_w * t4 / (Vg_ZRT + t2))
''Replace all den with denP and TotCO3 with nTCO3P
'TotCO3 = (nTCO2 - pptCalMultiple * mass_w) / (Vg_ZRT + t2) * t4
'  den = TotCO3 / CO3
'  PorMax = mc(iCa)
''If mc(iCa) > TotCO3 Then
''    CalMax = TotCO3
''    Else
''    CalMax = mc(iCa)
''End If
''If mc(iCa) > ma(iSO4) Then
''    GypMax = ma(iSO4)
''    Else
''    GypMax = mc(iCa)
''End If
''If mc(iBa) > ma(iSO4) Then
''    BarMax = ma(iSO4)
''    Else
''    BarMax = mc(iBa)
''End If
'CalMax = pptCalcite_NoMassTransfer
'BarMax = pptBarite_NoMassTransfer
'GypMax = pptGyp
'CaOH2Max = pptCaOH2
'MgOH2Max = pptMgOH2
'
'KspCalciteMultiple = KspCalcite / (gCat(iCa) * gAn(iCO3))
'KspBariteMultiple = KspBarite / (gCat(iBa) * gAn(iSO4))
'KspGypsumMultiple = KspGypsum / (gCat(iCa) * gAn(iSO4) * aH2O ^ 2)
'KspMgOH2Multiple = KspMgOH2 / (gCat(iMg))
'KspCaOH2Multiple = KspCaOH2 / (gCat(iCa))
'
'pptMgOH2Multiple = 0: pptCaOH2Multiple = 0: pptCalMultiple = 0: pptGypMultiple = 0: pptBarMultiple = 0: pptAmSilicaMultiple = 0
'pptMgOH2Multiple = (mc(iMg) - KspMgOH2Multiple / (aOH ^ 2))
''If pptMgOH2Multiple >= mc(iMg) Or pptMgOH2Multiple <= 0 Then pptMgOH2Multiple = 0
'If pptMgOH2Multiple <= 0 Then pptMgOH2Multiple = 0
'
'
''pptCaOH2Multiple+ Cal + Gyp + Bar simultaneous pptation.
'1 'Test if all four will pptate at the same time.
'
'If CaseNo = 1 Then
'
'    'Worksheets("Sheet1").Range("O9:S9").Value = Null
'    pptCalMultiple = TotCO3P - KspCalciteMultiple * denP / (KspCaOH2Multiple / (aOH ^ 2))
'    pptBarMultiple = mc(iBa) - KspBariteMultiple * KspCaOH2Multiple / aOH ^ 2 / KspGypsumMultiple
'    pptGypMultiple = ma(iSO4) - pptBarMultiple - KspGypsumMultiple / (KspCaOH2Multiple / aOH ^ 2)
'    pptCaOH2Multiple = mc(iCa) - pptCalMultiple - pptGypMultiple - KspCaOH2Multiple / aOH ^ 2
'    'caseno = 1 'pptCaOH2Multiple, pptCalMultiple, pptGypMultiple, and pptBarMultiple  precipitate
''    If pptCaOH2Multiple > 0 And pptCaOH2Multiple < mc(iCa) And pptCalMultiple > 0 And pptCalMultiple < CalMax And pptGypMultiple > 0 And pptGypMultiple < GypMax And pptBarMultiple > 0 And pptBarMultiple < BarMax Then
'    'Cells(9, 15) = CaseNo: Cells(9, 16) = pptCaOH2Multiple: Cells(9, 17) = pptCalMultiple: Cells(9, 18) = pptGypMultiple: Cells(9, 19) = pptBarMultiple
'    'If pptCaOH2Multiple > 0 And pptCalMultiple > 0 And pptGypMultiple > 0 And pptBarMultiple > 0 Then
''    If pptCaOH2Multiple > 0 And pptCaOH2Multiple < CaOH2Max And pptCalMultiple > 0 And pptGypMultiple > 0 And pptGypMultiple < GypMax And pptBarMultiple > 0 And pptBarMultiple < BarMax Then
'   GoTo 444
''   End If
''    pptCaOH2Multiple = 0: pptCalMultiple = 0: pptGypMultiple = 0: pptBarMultiple = 0
''
''        Else 'if the four are not in bounds of >0 and <max, then check to see how
''        If KspCaOH2Multiple / aOH ^ 2 > mc(iCa) Then  'undersaturated with CaOH2, this should not occurr now
''            pptCaOH2Multiple = 0: pptCalMultiple = 0: pptGypMultiple = 0: pptBarMultiple = 0
''            CaseNo = 2
''            Else
''           pptCaOH2Multiple = 0: pptCalMultiple = 0: pptGypMultiple = 0: pptBarMultiple = 0
''            CaseNo = 3
''        End If
''    End If
'End If
'
'If CaseNo = 2 Then
'    '2 'pptCalMultiple + pptGypMultiple + pptBarMultiple, No pptCaOH2Multiple
'    'If pptCaOH2Multipleis negative then try pptCalMultiple + pptGypMultiple + pptBarMultiple
'    r1 = KspCalciteMultiple * denP / KspGypsumMultiple:
'    r2 = KspGypsumMultiple / KspBariteMultiple
'    r3 = (r2 * mc(iBa) - mc(iCa) + TotCO3P - r1 * ma(iSO4)) / (r2 - r1):
'    r4 = (r1 + 1) / (r2 - r1)
'    r5 = mc(iCa) - TotCO3P + r1 * ma(iSO4) - r1 * r3:
'    R6 = r1 + r1 * r4 + 1
'    R7 = r1 * ma(iSO4) - r1 * r3: R8 = r1 + r1 * r4
'    a = R6 * R8
'    b = -(r5 * R8 + R6 * R7)
'    c = r5 * R7 - KspCalciteMultiple * denP
'    If (b ^ 2 - 4 * a * c) >= 0 Then
'        pptGypMultiple = (-b - (b ^ 2 - 4 * a * c) ^ 0.5) / (2 * a)
'        Else
'        pptGypMultiple = 0
'    End If
'    pptBarMultiple = r3 + r4 * pptGypMultiple
'    pptCalMultiple = TotCO3P - r1 * (ma(iSO4) - pptGypMultiple - pptBarMultiple)
'
'    'caseno = 2 'pptCalMultiple, pptGypMultiple, and pptBarMultiple  precipitate, Not pptCaOH2Multiple.
'    'If pptCalMultiple > 0 And pptCalMultiple < CalMax And pptGypMultiple > 0 And pptGypMultiple < GypMax And pptBarMultiple > 0 And pptBarMultiple < BarMax Then
'    'Cells(9, 15) = CaseNo: Cells(9, 16) = 0: Cells(9, 17) = pptCalMultiple: Cells(9, 18) = pptGypMultiple: Cells(9, 19) = pptBarMultiple
'    'If pptCalMultiple > 0 And pptGypMultiple > 0 And pptBarMultiple > 0 Then
''    If pptCalMultiple > 0 And pptGypMultiple > 0 And pptGypMultiple < GypMax And pptBarMultiple > 0 And pptBarMultiple < BarMax Then
'    GoTo 444
''    End If
''    pptCaOH2Multiple = 0: pptCalMultiple = 0: pptGypMultiple = 0: pptBarMultiple = 0
'End If
'
'If CaseNo = 3 Then
''3     'pptCaOH2Multiple+ pptGypMultiple + pptBarMultiple, but no pptCalMultiple
'    r1 = KspGypsumMultiple / (KspCaOH2Multiple / aOH ^ 2)
'    pptBarMultiple = mc(iBa) - KspBariteMultiple / r1
'    pptGypMultiple = ma(iSO4) - pptBarMultiple - r1
'    pptCaOH2Multiple = mc(iCa) - pptGypMultiple - KspCaOH2Multiple / aOH ^ 2
'    'caseno = 3 'pptCaOH2Multiple, pptGypMultiple, and pptBarMultiple  precipitate, Not pptCalMultiple.
'    'If pptCaOH2Multiple > 0 And pptCaOH2Multiple < mc(iCa) And pptGypMultiple > 0 And pptGypMultiple < GypMax And pptBarMultiple > 0 And pptBarMultiple < BarMax Then
'    'Cells(9, 15) = CaseNo: Cells(9, 16) = pptCaOH2Multiple: Cells(9, 17) = 0: Cells(9, 18) = pptGypMultiple: Cells(9, 19) = pptBarMultiple
'    'If pptCaOH2Multiple > 0 And pptGypMultiple > 0 And pptBarMultiple > 0 Then
''    If pptCaOH2Multiple > 0 And pptCaOH2Multiple < CaOH2Max And pptGypMultiple > 0 And pptGypMultiple < GypMax And pptBarMultiple > 0 And pptBarMultiple < BarMax Then
'    GoTo 444
''    End If
'    pptCaOH2Multiple = 0: pptCalMultiple = 0: pptGypMultiple = 0: pptBarMultiple = 0
'
'End If
'
'If CaseNo = 4 Then
'    '4 'pptCaOH2Multiple+ pptCalMultiple + pptBarMultiple, no pptGypMultiple
'    pptCalMultiple = TotCO3P - KspCalciteMultiple * denP / (KspCaOH2Multiple / aOH ^ 2)
'    pptCaOH2Multiple = mc(iCa) - pptCalMultiple - KspCaOH2Multiple / aOH ^ 2
'    a = 1
'    b = -(mc(iBa) + ma(iSO4))
'    c = mc(iBa) * ma(iSO4) - KspBariteMultiple
'    If (b ^ 2 - 4 * a * c) >= 0 Then
'        pptBarMultiple = (-b - (b ^ 2 - 4 * a * c) ^ 0.5) / (2 * a)
'        Else
'        pptBarMultiple = 0
'    End If
'    'caseno = 4 'pptCaOH2Multiple, pptCalMultiple, and pptBarMultiple  precipitate, Not pptGypMultiple.
'    'If pptCaOH2Multiple > 0 And pptCaOH2Multiple < mc(iCa) And pptCalMultiple > 0 And pptCalMultiple < CalMax And pptBarMultiple > 0 And pptBarMultiple < BarMax Then
'    'Cells(9, 15) = CaseNo: Cells(9, 16) = pptCaOH2Multiple: Cells(9, 17) = pptCalMultiple: Cells(9, 18) = 0: Cells(9, 19) = pptBarMultiple
'    'If pptCaOH2Multiple > 0 And pptCalMultiple > 0 And pptBarMultiple > 0 Then
''    If pptCaOH2Multiple > 0 And pptCaOH2Multiple < CaOH2Max And pptCalMultiple > 0 And pptBarMultiple > 0 And pptBarMultiple < BarMax Then
'    'End If
'    GoTo 444
''    End If
''    pptCaOH2Multiple = 0: pptCalMultiple = 0: pptGypMultiple = 0: pptBarMultiple = 0
'End If
'
'If CaseNo = 5 Then
''5 'pptCaOH2Multiple+pptCalMultiple+Gyp, no pptBarMultiple
'    pptGypMultiple = ma(iSO4) - KspGypsumMultiple / (KspCaOH2Multiple / aOH ^ 2)
'    pptCalMultiple = TotCO3P - KspCalciteMultiple * denP / (KspCaOH2Multiple / aOH ^ 2)
'    pptCaOH2Multiple = mc(iCa) - pptGypMultiple - pptCalMultiple - KspCaOH2Multiple / (aOH ^ 2)  '??????????????????????????????????????????
'    'caseno = 5 'pptCaOH2Multiple, pptCalMultiple, and pptGypMultiple precipitate, Not pptBarMultiple.
''If pptCaOH2Multiple > 0 And pptCaOH2Multiple < mc(iCa) And pptCalMultiple > 0 And pptCalMultiple < CalMax And pptGypMultiple > 0 And pptGypMultiple < GypMax Then
'    'Cells(9, 15) = CaseNo: Cells(9, 16) = pptCaOH2Multiple: Cells(9, 17) = pptCalMultiple: Cells(9, 18) = pptGypMultiple: Cells(9, 19) = 0
'    'If pptCaOH2Multiple > 0 And pptCalMultiple > 0 And pptGypMultiple > 0 Then
''    If pptCaOH2Multiple > 0 And pptCaOH2Multiple < CaOH2Max And pptCalMultiple > 0 And pptGypMultiple > 0 And pptGypMultiple < GypMax Then
'    GoTo 444
''    End If
''    pptCaOH2Multiple = 0: pptCalMultiple = 0: pptGypMultiple = 0: pptBarMultiple = 0
'End If
'
'If CaseNo = 6 Then
'    '6 'pptCaOH2Multiple+ pptCalMultiple
'    pptCalMultiple = TotCO3P - KspCalciteMultiple * denP / (KspCaOH2Multiple / aOH ^ 2)
'    pptCaOH2Multiple = mc(iCa) - pptCalMultiple - KspCaOH2Multiple / aOH ^ 2
'    'caseno = 6 'Only pptCaOH2Multipleand pptCalMultiple precipitate.
''If pptCaOH2Multiple > 0 And pptCaOH2Multiple < mc(iCa) And pptCalMultiple > 0 And pptCalMultiple < CalMax Then
'    'Cells(9, 15) = CaseNo: Cells(9, 16) = pptCaOH2Multiple: Cells(9, 17) = pptCalMultiple: Cells(9, 18) = 0: Cells(9, 19) = 0
'    'If pptCaOH2Multiple > 0 And pptCalMultiple > 0 Then
''    If pptCaOH2Multiple > 0 And pptCaOH2Multiple < CaOH2Max And pptCalMultiple > 0 Then
'    GoTo 444
''    End If
''    pptCaOH2Multiple = 0: pptCalMultiple = 0: pptGypMultiple = 0: pptBarMultiple = 0
'End If
'
'If CaseNo = 7 Then
''7 'pptCaOH2Multiple+ pptGypMultiple
'    pptGypMultiple = ma(iSO4) - KspGypsumMultiple / (KspCaOH2Multiple / aOH ^ 2)
'    pptCaOH2Multiple = mc(iCa) - pptGypMultiple - KspCaOH2Multiple / aOH ^ 2
''    caseno = 7 'Only pptCaOH2Multipleand pptGypMultiple precipitate.
''If pptCaOH2Multiple > 0 And pptCaOH2Multiple < mc(iCa) And pptGypMultiple > 0 And pptGypMultiple < GypMax Then
'    'Cells(9, 15) = CaseNo: Cells(9, 16) = pptCaOH2Multiple: Cells(9, 17) = 0: Cells(9, 18) = pptGypMultiple: Cells(9, 19) = 0
'    'If pptCaOH2Multiple > 0 And pptGypMultiple > 0 Then
''    If pptCaOH2Multiple > 0 And pptCaOH2Multiple < mc(iCa) And pptGypMultiple > 0 And pptGypMultiple < GypMax Then
'
'    GoTo 444
''    End If
''    pptCaOH2Multiple = 0: pptCalMultiple = 0: pptGypMultiple = 0: pptBarMultiple = 0
'End If
'
'If CaseNo = 8 Then
''8 'pptCaOH2Multiple+ pptBarMultiple
'    a = 1
'    b = -(mc(iBa) + ma(iSO4))
'    c = mc(iBa) * ma(iSO4) - KspBariteMultiple
'    If (b ^ 2 - 4 * a * c) >= 0 Then
'        pptBarMultiple = (-b - (b ^ 2 - 4 * a * c) ^ 0.5) / (2 * a)
'        Else
'        pptBarMultiple = 0
'    End If
'    pptCaOH2Multiple = mc(iCa) - KspCaOH2Multiple / aOH ^ 2
''    caseno = 8 'Only pptCaOH2Multipleand pptBarMultiple precipitate.
''If pptCaOH2Multiple > 0 And pptCaOH2Multiple < mc(iCa) And pptBarMultiple > 0 And pptBarMultiple < BarMax Then
'    'Cells(9, 15) = CaseNo: Cells(9, 16) = pptCaOH2Multiple: Cells(9, 17) = 0: Cells(9, 18) = 0: Cells(9, 19) = pptBarMultiple
'    'If pptCaOH2Multiple > 0 And pptBarMultiple > 0 Then
''    If pptCaOH2Multiple > 0 And pptCaOH2Multiple < mc(iCa) And pptBarMultiple > 0 And pptBarMultiple < BarMax Then
'
'    GoTo 444
''    End If
''    pptCaOH2Multiple = 0: pptCalMultiple = 0: pptGypMultiple = 0: pptBarMultiple = 0
'End If
'If CaseNo = 9 Then   ' From Multiple V 13, derived by MT
''If SICal > 0 And SIGyp > 0 Then
'    '9 'pptCalMultiple + pptGypMultiple
'    r1 = KspGypsumMultiple / (KspCalciteMultiple * den)
'    r4 = nTCO2 * t4 / (Vg_ZRT + t2)
'    r5 = mass_w * t4 / (Vg_ZRT + t2)
'    R6 = mc(iCa) - ma(iSO4) + r1 * r4
'    R7 = 1 + r1 * r5
'    a = R7 * r5
'    b = -(R6 * r5 + R7 * r4)
'    c = R6 * r4 - KspCalciteMultiple * den
'    If (b ^ 2 - 4 * a * c) >= 0 Then
'        pptCalMultiple = (-b - (b ^ 2 - 4 * a * c) ^ 0.5) / (2 * a)
'        Else
'        pptCalMultiple = 0
'    End If
'    pptGypMultiple = ma(iSO4) - r1 * (r4 - r5 * pptCalMultiple)
''    caseno = 9 'Only pptCalMultiple and pptGypMultiple precipitate.
'    'If pptCalMultiple > 0 And pptCalMultiple < CalMax And pptGypMultiple > 0 And pptGypMultiple < GypMax Then
'    'Cells(9, 15) = CaseNo: Cells(9, 16) = 0: Cells(9, 17) = pptCalMultiple: Cells(9, 18) = pptGypMultiple: Cells(9, 19) = 0
'    'If pptCalMultiple > 0 And pptGypMultiple > 0 Then
''    If pptCalMultiple > 0 And pptGypMultiple > 0 And pptGypMultiple < GypMax Then
'
'    GoTo 444
''    End If
''    pptCaOH2Multiple = 0: pptCalMultiple = 0: pptGypMultiple = 0: pptBarMultiple = 0
'End If
'
'
'
'If CaseNo = 10 Then
''10     'pptCalMultiple + pptBarMultiple
'    a = 1
'    b = -(mc(iCa) + TotCO3P)
'    c = mc(iCa) * TotCO3P - KspCalciteMultiple * denP
'    If (b ^ 2 - 4 * a * c) >= 0 Then
'        pptCalMultiple = (-b - (b ^ 2 - 4 * a * c) ^ 0.5) / (2 * a)
'        Else
'        pptCalMultiple = 0
'    End If
'    a = 1
'    b = -(mc(iBa) + ma(iSO4))
'    c = mc(iBa) * ma(iSO4) - KspBariteMultiple
'    If (b ^ 2 - 4 * a * c) >= 0 Then
'        pptBarMultiple = (-b - (b ^ 2 - 4 * a * c) ^ 0.5) / (2 * a)
'        Else
'        pptBarMultiple = 0
'    End If
''    caseno = 10 'Only pptCalMultiple and pptBarMultiple precipitate.
''If pptCalMultiple > 0 And pptCalMultiple < CalMax And pptBarMultiple > 0 And pptBarMultiple < BarMax Then
'    'Cells(9, 15) = CaseNo: Cells(9, 16) = 0: Cells(9, 17) = pptCalMultiple: Cells(9, 18) = 0: Cells(9, 19) = pptBarMultiple
'    'If pptCalMultiple > 0 And pptBarMultiple > 0 Then
''    If pptCalMultiple > 0 And pptBarMultiple > 0 And pptBarMultiple < BarMax Then
'
'    GoTo 444
''    End If
''    pptCaOH2Multiple = 0: pptCalMultiple = 0: pptGypMultiple = 0: pptBarMultiple = 0
'End If
'If CaseNo = 11 Then
''11 'pptGypMultiple + pptBarMultiple
'    r1 = KspBariteMultiple / KspGypsumMultiple
'    r2 = ma(iSO4) - mc(iBa) + r1 * mc(iCa)
'    r3 = 1 + r1
'    a = r3
'    b = -(mc(iCa) * r3 + r2)
'    c = mc(iCa) * r2 - KspBariteMultiple / r1
'    If (b ^ 2 - 4 * a * c) >= 0 Then
'        pptGypMultiple = (-b - (b ^ 2 - 4 * a * c) ^ 0.5) / (2 * a)
'        Else
'        pptGypMultiple = 0
'    End If
'    pptBarMultiple = mc(iBa) - r1 * (mc(iCa) - pptGypMultiple)
''    caseno = 11 'Only pptGypMultiple and pptBarMultiple precipitate.
''If pptGypMultiple > 0 And pptGypMultiple < GypMax And pptBarMultiple > 0 And pptBarMultiple < BarMax Then
'    'Cells(9, 15) = CaseNo: Cells(9, 16) = 0: Cells(9, 17) = 0: Cells(9, 18) = pptGypMultiple: Cells(9, 19) = pptBarMultiple
'    'If pptGypMultiple > 0 And pptBarMultiple > 0 Then
''    If pptGypMultiple > 0 And pptGypMultiple < GypMax And pptBarMultiple > 0 And pptBarMultiple < BarMax Then
'    GoTo 444
''    End If
''    pptCaOH2Multiple = 0: pptCalMultiple = 0: pptGypMultiple = 0: pptBarMultiple = 0
'End If
'If CaseNo = 12 Then
''12     'pptCaOH2Multiple only
'    pptCaOH2Multiple = mc(iCa) - KspCaOH2Multiple / (aOH ^ 2)
'    CaseNo = 12 'Only pptCaOH2Multipleprecipitates.
''If pptCaOH2Multiple > 0 And pptCaOH2Multiple < mc(iCa) Then
'    'Cells(9, 15) = CaseNo: Cells(9, 16) = pptCaOH2Multiple: Cells(9, 17) = 0: Cells(9, 18) = 0: Cells(9, 19) = 0
'    'If pptCaOH2Multiple > 0 Then
''    If pptCaOH2Multiple > 0 And pptCaOH2Multiple < CaOH2Max Then
'    GoTo 444
''    End If
''    pptCaOH2Multiple = 0: pptCalMultiple = 0: pptGypMultiple = 0: pptBarMultiple = 0
'End If
'
'If CaseNo = 13 Then
''13     'pptCalMultiple only
'    a = 1
'    b = -(mc(iCa) + TotCO3P)
'    c = mc(iCa) * TotCO3P - KspCalciteMultiple * denP
'    If (b ^ 2 - 4 * a * c) >= 0 Then
'        pptCalMultiple = (-b - (b ^ 2 - 4 * a * c) ^ 0.5) / (2 * a)
'        Else
'        pptCalMultiple = 0
'    End If
''    caseno = 13 'Only pptCalMultiple precipitates.
'    'If pptCalMultiple > 0 And pptCalMultiple < CalMax Then
'    'Cells(9, 15) = CaseNo: Cells(9, 16) = 0: Cells(9, 17) = pptCalMultiple: Cells(9, 18) = 0: Cells(9, 19) = 0
''    If pptCalMultiple > 0 Then
'    GoTo 444
''    End If
''    pptCaOH2Multiple = 0: pptCalMultiple = 0: pptGypMultiple = 0: pptBarMultiple = 0
'End If
'If CaseNo = 14 Then
''14 'pptBarMultiple only
'    a = 1
'    b = -(mc(iBa) + ma(iSO4))
'    c = mc(iBa) * ma(iSO4) - KspBariteMultiple
'    If (b ^ 2 - 4 * a * c) >= 0 Then
'        pptBarMultiple = (-b - (b ^ 2 - 4 * a * c) ^ 0.5) / (2 * a)
'        Else
'        pptBarMultiple = 0
'    End If
''    caseno = 14 'Only pptBarMultiple precipitates.
''If pptBarMultiple > 0 And pptBarMultiple < BarMax Then
'    'Cells(9, 15) = CaseNo: Cells(9, 16) = 0: Cells(9, 17) = 0: Cells(9, 18) = 0: Cells(9, 19) = pptBarMultiple
'    'If pptBarMultiple > 0 Then
''    If pptBarMultiple > 0 And pptBarMultiple < BarMax Then
'
'    GoTo 444
''    End If
''    pptCaOH2Multiple = 0: pptCalMultiple = 0: pptGypMultiple = 0: pptBarMultiple = 0
'End If
'If CaseNo = 15 Then
'    '15 'pptGypMultiple only
'    a = 1
'    b = -(mc(iCa) + ma(iSO4))
'    c = mc(iCa) * ma(iSO4) - KspGypsumMultiple
'    If (b ^ 2 - 4 * a * c) >= 0 Then
'        pptGypMultiple = (-b - (b ^ 2 - 4 * a * c) ^ 0.5) / (2 * a)
'        Else
'        pptGypMultiple = 0
'    End If
'    'caseno = 15 'Only pptGypMultiple precipitates.
'
'    'If pptGypMultiple > 0 And pptGypMultiple < GypMax Then  '????????????????????????????????????????????????
'    'Cells(9, 15) = CaseNo: Cells(9, 16) = 0: Cells(9, 17) = 0: Cells(9, 18) = pptGypMultiple: Cells(9, 19) = 0
'    'If pptGypMultiple > 0 Then  '????????????????????????????????????????????????
''    If pptGypMultiple > 0 And pptGypMultiple <= GypMax Then  '????????????????????????????????????????????????
'    GoTo 444
''    End If
''    pptCaOH2Multiple = 0: pptCalMultiple = 0: pptGypMultiple = 0: pptBarMultiple = 0
'End If
'
''16 'No precipitation
''CaseNo = 16 'No precipitation occurs.
''Cells(9, 15) = CaseNo: Cells(9, 16) = 0: Cells(9, 17) = 0: Cells(9, 18) = 0: Cells(9, 19) = 0
''pptCaOH2Multiple = 0: pptCalMultiple = 0: pptGypMultiple = 0: pptBarMultiple = 0
'
'   ' If ppt_or_not = 1 And ppt < 0 Then ppt = 0
'    'If you do not want to allow for precipitation nor dissolution, then set ppt = 0.  Since SI > 0 to be here, ppt is always positive.
'    'If you are allowing for precipitation or for dissolution, then you need to allow ppt to be +/0/- for speciation in the Alk equation.
'    'If Iteration = 1 And iGas > 3 Then GoTo 223
'444  Wend
'223 'Continue
'
'  PCH4 = (nTCH4 / (Vg_ZRT + t1))  'These are not the partial pressures for the Original brine data.
'  PCO2 = (nTCO2 / (Vg_ZRT + t2))
'  If iGas = 2 Then PCO2 = ((nTCO2 - pptCalMultiple * mass_w) / (Vg_ZRT + t2))
'  PH2S = (nTH2S / (Vg_ZRT + t3))
'  If iGas = 3 Then PH2S = (nTH2S - ppt * mass_w) / (Vg_ZRT + t3)
'  CO2aq = KgwCO2 * PCO2 * gGas(iCO2g) / (gNeut(iCO2aq) * gNNeut(iCO2aq))
'  H2Saq = KgwH2S * PH2S * gGas(iH2Sg) / (gNeut(iH2Saq) * gNNeut(iH2Saq))
'  HCO3 = K1H2CO3 * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
'  CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
'  HS = K1H2S * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
'  hydAc = aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1
'  AC = TAc / hydAc
'  HAcaq = TAc - AC
'  hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
'  H2BO3 = TH3BO3 / hydH2BO3
'  hydNH3 = aH * gCat(iNH4) * gNCat(iNH4) / (KNH4 * gNeut(iNH3) * gNNeut(iNH3)) + 1
'  NH3 = TNH4 / hydNH3
'
'pptAmSilicaMultiple_or_Not = 1  '???????????????????????????????????put back up at input etc.????????????????????????????????????
''If i = 29 Then Stop
'
'  hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
'  aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
'  H2SiO4 = TH4SiO4 / hydH2SiO4
'  H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
'  H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
'  'a = TH4SiO4 - H2SiO4 - H3SiO4 - H4SiO4
'  If pptAmSilicaMultiple_or_Not = 1 And TH4SiO4 > 0 And H4SiO4 > KspAmSilica / gNeut(iH4SiO4aq) Then
'    H4SiO4 = KspAmSilica / gNeut(iH4SiO4aq)   'At equil with amorphous SiO2, or H4SiO4
'    H3SiO4 = KH4SiO4 * KspAmSilica / (aH * gAn(iH3SiO4))
'    H2SiO4 = KH4SiO4 * KH3SiO3 * KspAmSilica / (aH ^ 2 * gAn(iH2SiO4))
'    pptAmSilicaMultiple = TH4SiO4 - (H4SiO4 + H3SiO4 + H2SiO4)
'    If pptAmSilicaMultiple <= 0 Or pptAmSilicaMultiple >= TH4SiO4 Then pptAmSilicaMultiple = 0
'  End If
'
'  faH = Alk - 2 * (pptMgOH2Multiple + pptCaOH2Multiple + pptCalMultiple) - (HCO3 + 2 * CO3 + HS + AC + NH3 + H2BO3 + H3SiO4 + 2 * H2SiO4 + OH - H)
'  ypH(i) = faH: xpH(i) = pH: xppt(i) = pptCalMultiple 'Used in Newton-Raphson iteration, at the end of this For loop.
'  If faH > 0 Then pHLow = pH
'  If faH < 0 Then pHHigh = pH
'  'If i = 30 Then Stop
'Next i
'
'End Sub
'
'
'Function fCaseNo()
'If mc(iCa) > 0 And mc(iBa) > 0 And ma(iSO4) > 0 And Alk > 0 Then
'    If SICal > 0 And SIBar > 0 And SIGyp > 0 And SICaOH2 > 0 Then CaseNo = 1 'Cal+Bar+Gyp+Por
'    If SICal > 0 And SIGyp > 0 And SIBar > 0 And SICaOH2 < 0 Then CaseNo = 2 'Cal+Bar+Gyp
'End If
'If mc(iCa) > 0 And Alk > 0 Then
'    If SICal < 0 And SIBar > 0 And SIGyp > 0 And SICaOH2 > 0 Then
'    CaseNo = 3 'Bar+Gyp+Por
'    End If
'Else
'    If SIBar > 0 And SIGyp > 0 And SICaOH2 > 0 Then
'    CaseNo = 3 'Bar+Gyp+Por
'    End If
'End If
'If mc(iCa) > 0 And ma(iSO4) > 0 Then
'    If SICal > 0 And SIBar > 0 And SIGyp < 0 And SICaOH2 > 0 Then
'    CaseNo = 4 'Cal+Bar+Por
'    End If
'Else
'    If SICal > 0 And SIBar > 0 And SICaOH2 > 0 Then
'    CaseNo = 4 'Cal+Bar+Por
'    End If
'End If
'If mc(iBa) > 0 And ma(iSO4) > 0 Then
'    If SICal > 0 And SIBar < 0 And SIGyp > 0 And SICaOH2 > 0 Then
'    CaseNo = 5 'Cal+Gyp+Por
'    End If
'Else
'    If SICal > 0 And SIGyp > 0 And SICaOH2 > 0 Then
'    CaseNo = 5 'Cal+Gyp+Por
'    End If
'End If
'If mc(iCa) > 0 And mc(iBa) > 0 And ma(iSO4) > 0 Then
'    If SICal > 0 And SIBar < 0 And SIGyp < 0 And SICaOH2 > 0 Then
'    CaseNo = 6 'Cal+Por
'    End If
'ElseIf mc(iCa) > 0 And ma(iSO4) > 0 Then
'    If SICal > 0 And SIGyp < 0 And SICaOH2 > 0 Then
'    CaseNo = 6  'Cal+Por
'    End If
'ElseIf mc(iBa) > 0 And ma(iSO4) > 0 Then
'    If SICal > 0 And SIBar < 0 And SICaOH2 > 0 And SIGyp < 0 Then
'    CaseNo = 6 'Cal+Por
'    End If
'ElseIf mc(iCa) > 0 Then
'    If SICal > 0 And SICaOH2 > 0 Then
'    CaseNo = 6 'Cal+Por
'    End If
'End If
'If mc(iCa) > 0 And mc(iBa) > 0 And Alk > 0 And ma(iSO4) > 0 Then
'    If SICal < 0 And SIGyp > 0 And SIBar < 0 And SICaOH2 > 0 Then
'    CaseNo = 7
'    End If
'    ElseIf mc(iCa) > 0 And Alk > 0 And ma(iSO4) > 0 Then
'        If SICal < 0 And SIGyp > 0 And SICaOH2 > 0 Then
'         CaseNo = 7
'        End If
'    ElseIf mc(iCa) > 0 And mc(iBa) > 0 And ma(iSO4) > 0 Then
'        If SIBar < 0 And SIGyp > 0 And SICaOH2 > 0 Then
'         CaseNo = 7
'        End If
'End If
'If mc(iCa) > 0 And mc(iBa) > 0 And Alk > 0 And ma(iSO4) > 0 Then
'    If SICal < 0 And SIGyp < 0 And SIBar > 0 And SICaOH2 > 0 Then
'    CaseNo = 8
'    ElseIf mc(iCa) > 0 And mc(iBa) > 0 And ma(iSO4) > 0 Then
'    If SICal < 0 And SIBar > 0 And SIGyp < 0 And SICaOH2 > 0 Then
'     CaseNo = 8
'    End If
'    End If
'End If
'
'If mc(iCa) > 0 And mc(iBa) > 0 And ma(iSO4) > 0 Then
'    If SICal > 0 And SIBar < 0 And SIGyp > 0 And SICaOH2 < 0 Then
'    CaseNo = 9
'    End If
'ElseIf mc(iBa) > 0 And ma(iSO4) > 0 Then
'    If SICal > 0 And SIBar < 0 And SIGyp > 0 Then
'    CaseNo = 9
'    End If
'ElseIf mc(iCa) > 0 Then
'    If SICal > 0 And SIGyp > 0 And SICaOH2 < 0 Then
'    CaseNo = 9
'    End If
'End If
'If mc(iCa) > 0 And mc(iBa) > 0 And ma(iSO4) > 0 And Alk > 0 Then
'    If SICal > 0 And SIBar > 0 And SIGyp < 0 And SICaOH2 < 0 Then
'    CaseNo = 10
'    End If
'End If
'If mc(iCa) > 0 And mc(iBa) > 0 And ma(iSO4) > 0 And Alk > 0 Then
'    If SICal < 0 And SIBar > 0 And SIGyp > 0 And SICaOH2 < 0 Then
'    CaseNo = 11
'    End If
'ElseIf mc(iCa) > 0 And mc(iBa) > 0 And ma(iSO4) > 0 Then
'    If SICal < 0 And SIBar > 0 And SIGyp > 0 And SICaOH2 < 0 Then
'    CaseNo = 11
'    End If
'End If
'If mc(iCa) > 0 And mc(iBa) > 0 And ma(iSO4) > 0 And Alk > 0 Then
'    If SICal < 0 And SIBar < 0 And SIGyp < 0 And SICaOH2 > 0 Then
'    CaseNo = 12
'    End If
'ElseIf mc(iCa) > 0 And mc(iBa) > 0 And ma(iSO4) > 0 Then
'    If SIBar < 0 And SIGyp < 0 And SICaOH2 > 0 Then
'    CaseNo = 12
'    End If
'ElseIf mc(iCa) > 0 And Alk > 0 And ma(iSO4) > 0 Then
'    If SICal < 0 And SIGyp < 0 And SICaOH2 > 0 Then
'    CaseNo = 12
'    End If
'ElseIf mc(iCa) > 0 And Alk > 0 Then
'    If SICal < 0 And SICaOH2 > 0 Then
'    CaseNo = 12
'    End If
'ElseIf mc(iCa) > 0 Then
'    If SICaOH2 > 0 Then
'    CaseNo = 12
'    End If
'End If
'If mc(iCa) > 0 And mc(iBa) > 0 And ma(iSO4) > 0 And Alk > 0 Then
'    If SICal > 0 And SIBar < 0 And SIGyp < 0 And SICaOH2 < 0 Then
'    CaseNo = 13
'    End If
'ElseIf mc(iCa) > 0 And Alk > 0 And ma(iSO4) > 0 Then
'    If SICal > 0 And SIGyp < 0 And SICaOH2 < 0 Then
'    CaseNo = 13
'    End If
'ElseIf mc(iCa) > 0 And Alk > 0 Then
'    If SICal > 0 And SICaOH2 < 0 Then
'    CaseNo = 13
'    End If
'End If
'If mc(iCa) > 0 And mc(iBa) > 0 And ma(iSO4) > 0 And Alk > 0 Then
'    If SICal < 0 And SIBar > 0 And SIGyp < 0 And SICaOH2 < 0 Then
'    CaseNo = 14
'    End If
'ElseIf mc(iCa) > 0 And mc(iBa) > 0 And ma(iSO4) > 0 Then
'    If SIBar > 0 And SIGyp < 0 And SICaOH2 < 0 Then
'    CaseNo = 14
'    End If
'ElseIf SIBar > 0 Then
'    CaseNo = 14
'End If
'If mc(iCa) > 0 And mc(iBa) > 0 And ma(iSO4) > 0 And Alk > 0 Then
'    If SICal < 0 And SIBar < 0 And SIGyp > 0 And SICaOH2 < 0 Then
'    CaseNo = 15
'    End If
'ElseIf mc(iCa) > 0 And Alk > 0 And ma(iSO4) > 0 Then
'    If SICal < 0 And SIGyp > 0 And SICaOH2 < 0 Then
'    CaseNo = 15
'    End If
'ElseIf mc(iCa) > 0 And ma(iSO4) > 0 Then
'    If SIGyp > 0 And SICaOH2 < 0 Then
'    CaseNo = 15
'    End If
'End If
'fCaseNo = CaseNo
'End Function
'
'Function fCalcCaseNo1()
'If CaseNo = 1 Then 'Cal+Bar+gyp+por
'Call C4_SSPEquilCalcsMultipleB(1, iM, 2, Ksp)
'    If pptCaOH2Multiple > 0 And pptCaOH2Multiple < mc(iCa) And pptCalMultiple > 0 And pptGypMultiple > 0 And pptBarMultiple > 0 Then
'    CaseNo = 0
'    ElseIf pptCaOH2Multiple < 0 And pptCalMultiple > 0 And pptGypMultiple > 0 And pptBarMultiple > 0 Then 'Cal+Bar+Gyp
'    CaseNo = 2
'    ElseIf pptCaOH2Multiple > 0 And pptCalMultiple < 0 And pptGypMultiple > 0 And pptBarMultiple < 0 Then  'Cal+Gyp+Bar
'    CaseNo = 3
'    ElseIf pptCaOH2Multiple > 0 And pptCalMultiple > 0 And pptGypMultiple < 0 And pptBarMultiple > 0 Then 'Cal+Bar+Por
'    CaseNo = 4
'    End If
'End If
'fCalcCaseNo1 = CaseNo
'End Function
'
'Function fCalcCaseNo2()
'If CaseNo = 2 Then 'Cal+Bar+gyp
'Call C4_SSPEquilCalcsMultipleB(1, iM, 2, Ksp)
'    If pptCalMultiple > 0 And pptGypMultiple > 0 And pptBarMultiple > 0 Then
'    CaseNo = 0
'    End If
'    If pptCalMultiple > 0 And pptBarMultiple < 0 And pptGypMultiple > 0 Then  'Cal+Gyp
'        CaseNo = 9
'
'    End If
'    If pptCalMultiple > 0 And pptBarMultiple > 0 And pptGypMultiple < 0 Then  'Cal+Bar
'        CaseNo = 10
'    End If
'    If pptCalMultiple < 0 And pptBarMultiple > 0 And pptGypMultiple > 0 Then  'Gyp+Bar
'    CaseNo = 11
'    End If
'End If
'fCalcCaseNo2 = CaseNo
'End Function
'Function fCalcCaseNo3()
'If CaseNo = 3 Then 'Bar+gyp+Por
'Call C4_SSPEquilCalcsMultipleB(1, iM, 2, Ksp)
'    If pptCaOH2Multiple > 0 And pptCaOH2Multiple < mc(iCa) And pptGypMultiple > 0 And pptBarMultiple > 0 Then
'    CaseNo = 0
'    End If
'    If pptCaOH2Multiple > 0 And pptBarMultiple < 0 And pptGypMultiple > 0 Then 'Por+Gyp
'        CaseNo = 7
'    End If
'    If pptCaOH2Multiple > 0 And pptBarMultiple > 0 And pptGypMultiple < 0 Then   'Por+Bar
'        CaseNo = 8
'    End If
'    If pptCaOH2Multiple < 0 And pptBarMultiple > 0 And pptGypMultiple > 0 Then  'Gyp+Bar
'    CaseNo = 11
'    End If
'End If
'fCalcCaseNo3 = CaseNo
'End Function
'Function fCalcCaseNo4()
'If CaseNo = 4 Then 'Cal+Bar+Por
'Call C4_SSPEquilCalcsMultipleB(1, iM, 2, Ksp)
'If pptCaOH2Multiple > 0 And pptCaOH2Multiple < mc(iCa) And pptCalMultiple > 0 And pptBarMultiple > 0 Then
'    CaseNo = 0
'    End If
'    If pptCaOH2Multiple > 0 And pptCalMultiple < 0 And pptBarMultiple > 0 Then 'Por+Bar
'        CaseNo = 8
'    End If
'    If pptCaOH2Multiple > 0 And pptCalMultiple > 0 And pptBarMultiple < 0 Then   'Por+Cal
'        CaseNo = 6
'    End If
'    If pptCaOH2Multiple < 0 And pptCalMultiple > 0 And pptBarMultiple > 0 Then  'Cal+Bar
'    CaseNo = 10
'    End If
'End If
'fCalcCaseNo4 = CaseNo
'End Function
'Function fCalcCaseNo5()
'If CaseNo = 5 Then 'Cal+Gyp+Por
'Call C4_SSPEquilCalcsMultipleB(1, iM, 2, Ksp)
'If pptCaOH2Multiple > 0 And pptCaOH2Multiple < mc(iCa) And pptCalMultiple > 0 And pptGypMultiple > 0 Then
'CaseNo = 0
'    End If
'    If pptCaOH2Multiple > 0 And pptCalMultiple < 0 And pptGypMultiple > 0 Then 'Por+Gyp
'        CaseNo = 7
'    End If
'    If pptCaOH2Multiple > 0 And pptCalMultiple > 0 And pptGypMultiple < 0 Then   'Por+Cal
'        CaseNo = 6
'    End If
'    If pptCaOH2Multiple < 0 And pptCalMultiple > 0 And pptGypMultiple > 0 Then  'Cal+Gyp
'    CaseNo = 9
'    End If
'End If
'fCalcCaseNo5 = CaseNo
'End Function
'Function fCalcCaseNo6()
'If CaseNo = 6 Then 'Por+Cal
'    Call C4_SSPEquilCalcsMultipleB(1, iM, 2, Ksp)
'    If pptCaOH2Multiple > 0 And pptCaOH2Multiple < mc(iCa) And pptCalMultiple > 0 Then  '        CaseNo = 0
'        CaseNo = 0
'        ElseIf pptCaOH2Multiple < 0 Then
'        CaseNo = 13
'        ElseIf pptCalMultiple < 0 Then
'        CaseNo = 12
'    End If
'End If
'fCalcCaseNo6 = CaseNo
'End Function
'
'Function fCalcCaseNo7()
'If CaseNo = 7 Then 'Por+Gyp
'    Call C4_SSPEquilCalcsMultipleB(1, iM, 2, Ksp)
'    If pptCaOH2Multiple > 0 And pptCaOH2Multiple < mc(iCa) And pptGypMultiple > 0 Then  '        CaseNo = 0
'        CaseNo = 0
'        ElseIf pptCaOH2Multiple < 0 Then
'        CaseNo = 15
'        ElseIf pptGypMultiple < 0 Then
'        CaseNo = 12
'    End If
'End If
'fCalcCaseNo7 = CaseNo
'End Function
'Function fCalcCaseNo8()
'If CaseNo = 8 Then 'Por+Bar
'    Call C4_SSPEquilCalcsMultipleB(1, iM, 2, Ksp)
'    If pptCaOH2Multiple > 0 And pptCaOH2Multiple < mc(iCa) And pptBarMultiple > 0 Then  '        CaseNo = 0
'   CaseNo = 0
'   ElseIf pptCaOH2Multiple < 0 Then
'        CaseNo = 14
'        ElseIf pptBarMultiple < 0 Then
'        CaseNo = 12
'        End If
'    End If
'    fCalcCaseNo8 = CaseNo
'End Function
'Function fCalcCaseNo9()
'If CaseNo = 9 Then 'Cal+Gyp
'    Call C4_SSPEquilCalcsMultipleB(1, iM, 2, Ksp)
'    If pptCalMultiple > 0 And pptGypMultiple > 0 Then
'    CaseNo = 0
'    ElseIf pptCalMultiple < 0 Then
'    CaseNo = 15
'    ElseIf pptGypMultiple < 0 Then
'    CaseNo = 13
'    End If
'End If
'fCalcCaseNo9 = CaseNo
'End Function
'
'Function fCalcCaseNo10()
'If CaseNo = 10 Then 'Cal+Bar
'    Call C4_SSPEquilCalcsMultipleB(1, iM, 2, Ksp)
'    If pptCalMultiple > 0 And pptBarMultiple > 0 Then
'        CaseNo = 0
'        ElseIf pptCalMultiple < 0 Then
'        CaseNo = 14
'        ElseIf pptBarMultiple < 0 Then
'        CaseNo = 13
'    End If
'End If
'fCalcCaseNo10 = CaseNo
'End Function
'
'Function fCalcCaseNo11()
'If CaseNo = 11 Then 'Gyp+Bar
'Call C4_SSPEquilCalcsMultipleB(1, iM, 2, Ksp)
'If pptGypMultiple > 0 And pptBarMultiple > 0 Then
'    CaseNo = 0
'    ElseIf pptBarMultiple < 0 And pptGypMultiple > 0 Then
'    CaseNo = 15
'    ElseIf pptBarMultiple > 0 And pptGypMultiple < 0 Then
'    CaseNo = 14
'    End If
'End If
'fCalcCaseNo11 = CaseNo
'End Function
'Function fCalcCaseNo12()
'Call C4_SSPEquilCalcsMultipleB(1, iM, 2, Ksp)
'CaseNo = 0
'fCalcCaseNo12 = CaseNo
'
'End Function
'Sub LoopTPOutputMultiplePpt()
'Worksheets("Multiple Ppt").Unprotect ("eesi")
'If RunSSP = 1 Then
'Worksheets("Multiple Ppt").Cells(14 - LoopTP, 1) = TF
'Worksheets("Multiple Ppt").Cells(14 - LoopTP, 2) = Ppsia
'Worksheets("Multiple Ppt").Cells(14 - LoopTP, 3) = pH_before_precipitation - DpHj
'Worksheets("multiple Ppt").Cells(14 - LoopTP, 4) = pptMgOH2Multiple * 58321 * (rho25c - TDS * 0.000001)
'Worksheets("multiple Ppt").Cells(14 - LoopTP, 5) = pptCaOH2Multiple * 74094 * (rho25c - TDS * 0.000001)
'Worksheets("multiple Ppt").Cells(14 - LoopTP, 6) = pptCalMultiple * 100091 * (rho25c - TDS * 0.000001)
'Worksheets("multiple Ppt").Cells(14 - LoopTP, 7) = pptGypMultiple * 172172 * (rho25c - TDS / 1000000#)
'Worksheets("multiple Ppt").Cells(14 - LoopTP, 8) = pptBarMultiple * 233390 * (rho25c - TDS / 1000000#)
'If pptAmSilicaMultiple_or_Not = 1 Then
'    Worksheets("Multiple Ppt").Cells(14 - LoopTP, 9) = pptAmSilicaMultiple * 60084 * (rho25c - TDS * 0.000001)
'    Else
'    Worksheets("Multiple Ppt").Cells(14 - LoopTP, 9) = Null
'End If
'Worksheets("Multiple Ppt").Cells(14 - LoopTP, 10) = pH - DpHj
'Worksheets("Multiple Ppt").Cells(14 - LoopTP, 11) = (mc(iCa) - (pptCalMultiple + pptGypMultiple + pptCaOH2Multiple)) * 40080 * (rho25c - TDS * 0.000001)
'Worksheets("Multiple Ppt").Cells(14 - LoopTP, 12) = (mc(iBa) - (pptBarMultiple)) * 137327 * (rho25c - TDS / 1000000#)
'Worksheets("Multiple Ppt").Cells(14 - LoopTP, 13) = (ma(iSO4) - (pptBarMultiple + pptGypMultiple)) * 96060 * (rho25c - TDS / 1000000#)
'Worksheets("Multiple Ppt").Cells(14 - LoopTP, 14) = (mc(iMg) - pptMgOH2Multiple) * 24305 * (rho25c - TDS / 1000000#)
'Worksheets("Multiple Ppt").Cells(14 - LoopTP, 15) = nTCO2
'Worksheets("Multiple Ppt").Cells(14 - LoopTP, 16) = nTCO2 - pptCalMultiple * mass_w
'
''If LoopTP = 1 Then Worksheets("Input").Range("t12") = pH - DpHj
''Worksheets("sheet1").Cells(14 - LoopTP, 1) = TF
''Worksheets("sheet1").Cells(14 - LoopTP, 2) = Ppsia
''Worksheets("Sheet1").Cells(14 - LoopTP, 3) = Log10(KspCalciteMultiple)
''Worksheets("Sheet1").Cells(14 - LoopTP, 4) = Log10(KspBariteMultiple)
''Worksheets("Sheet1").Cells(14 - LoopTP, 5) = Log10(KspGypsumMultiple)
''Worksheets("Sheet1").Cells(14 - LoopTP, 6) = Log10(KspCaOH2Multiple)
''Worksheets("Sheet1").Cells(14 - LoopTP, 7) = Log10(KspMgOH2Multiple)
''Worksheets("Sheet1").Cells(14 - LoopTP, 8) = Log10(KspCalcite)
''Worksheets("Sheet1").Cells(14 - LoopTP, 9) = Log10(KspBarite)
''Worksheets("Sheet1").Cells(14 - LoopTP, 10) = Log10(KspGypsum)
''Worksheets("Sheet1").Cells(14 - LoopTP, 11) = Log10(KspCaOH2)
''Worksheets("Sheet1").Cells(14 - LoopTP, 12) = Log10(KspMgOH2)
''Worksheets("Sheet1").Cells(14 - LoopTP, 13) = Log10(KspAmSilica)
''Worksheets("Sheet1").Cells(14 - LoopTP, 14) = gCat(iCa)
''Worksheets("Sheet1").Cells(14 - LoopTP, 15) = gAn(iSO4)
''Worksheets("Sheet1").Cells(14 - LoopTP, 16) = aH2O
''Worksheets("Sheet1").Cells(14 - LoopTP, 17) = gCat(iCa) * gAn(iSO4) * aH2O ^ 2
''
''Worksheets("Sheet1").Cells(14 - LoopTP, 12) = Log10(KspMgOH2)
''Worksheets("Sheet1").Cells(14 - LoopTP, 13) = Log10(KspAmSilica)
'End If
'If RunMultiMixSlb = 1 Then
'Worksheets("Multiple Ppt").Cells(3 + LoopResChem, 1) = TF
'Worksheets("Multiple Ppt").Cells(3 + LoopResChem, 2) = Ppsia
'Worksheets("Multiple Ppt").Cells(3 + LoopResChem, 3) = pH_before_precipitation - DpHj
'Worksheets("Multiple Ppt").Cells(3 + LoopResChem, 4) = pptMgOH2Multiple * 58321 * (rho25c - TDS * 0.000001)
'Worksheets("Multiple Ppt").Cells(3 + LoopResChem, 5) = pptCaOH2Multiple * 74094 * (rho25c - TDS * 0.000001)
'Worksheets("Multiple Ppt").Cells(3 + LoopResChem, 6) = pptCalMultiple * 100091 * (rho25c - TDS * 0.000001)
'Worksheets("Multiple Ppt").Cells(3 + LoopResChem, 7) = pptGypMultiple * 172172 * (rho25c - TDS / 1000000#)
'Worksheets("Multiple Ppt").Cells(3 + LoopResChem, 8) = pptBarMultiple * 233390 * (rho25c - TDS / 1000000#)
''Worksheets("Multimix_Slb").Cells(3 + LoopResChem, 1) = TF
''Worksheets("Multimix_Slb").Cells(3 + LoopResChem, 2) = Ppsia
'Worksheets("Multimix_Slb").Cells(2 + LoopResChem, 65) = pH_before_precipitation - DpHj
'Worksheets("Multimix_Slb").Cells(2 + LoopResChem, 66) = pptMgOH2Multiple * 58321 * (rho25c - TDS * 0.000001)
'Worksheets("Multimix_Slb").Cells(2 + LoopResChem, 67) = pptCaOH2Multiple * 74094 * (rho25c - TDS * 0.000001)
'Worksheets("Multimix_Slb").Cells(2 + LoopResChem, 68) = pptCalMultiple * 100091 * (rho25c - TDS * 0.000001)
'Worksheets("Multimix_Slb").Cells(2 + LoopResChem, 69) = pptGypMultiple * 172172 * (rho25c - TDS / 1000000#)
'Worksheets("Multimix_Slb").Cells(2 + LoopResChem, 70) = pptBarMultiple * 233390 * (rho25c - TDS / 1000000#)
'If pptAmSilicaMultiple_or_Not = 1 Then
'    Worksheets("Multiple Ppt").Cells(3 + LoopResChem, 9) = pptAmSilicaMultiple * 60084 * (rho25c - TDS * 0.000001)
'    Worksheets("Multimix_Slb").Cells(2 + LoopResChem, 71) = pptAmSilicaMultiple * 60084 * (rho25c - TDS * 0.000001)
'    Else
'    Worksheets("Multiple Ppt").Cells(3 + LoopResChem, 9) = Null
'    Worksheets("Multimix_Slb").Cells(2 + LoopResChem, 71) = Null
'End If
'Worksheets("Multiple Ppt").Cells(3 + LoopResChem, 10) = pH - DpHj
'Worksheets("Multiple Ppt").Cells(3 + LoopResChem, 11) = (mc(iCa) - (pptCalMultiple + pptGypMultiple + pptCaOH2Multiple)) * 40080 * (rho25c - TDS * 0.000001)
'Worksheets("Multiple Ppt").Cells(3 + LoopResChem, 12) = (mc(iBa) - (pptBarMultiple)) * 137327 * (rho25c - TDS / 1000000#)
'Worksheets("Multiple Ppt").Cells(3 + LoopResChem, 13) = (ma(iSO4) - (pptBarMultiple + pptGypMultiple)) * 96060 * (rho25c - TDS / 1000000#)
'Worksheets("Multiple Ppt").Cells(3 + LoopResChem, 14) = (mc(iMg) - pptMgOH2Multiple) * 24305 * (rho25c - TDS / 1000000#)
'Worksheets("Multiple Ppt").Cells(3 + LoopResChem, 15) = nTCO2
'Worksheets("Multiple Ppt").Cells(3 + LoopResChem, 16) = nTCO2 - pptCalMultiple * mass_w
'Worksheets("Multimix_Slb").Cells(2 + LoopResChem, 72) = pH - DpHj
'Worksheets("Multimix_Slb").Cells(2 + LoopResChem, 73) = (mc(iCa) - (pptCalMultiple + pptGypMultiple + pptCaOH2Multiple)) * 40080 * (rho25c - TDS * 0.000001)
'Worksheets("Multimix_Slb").Cells(2 + LoopResChem, 74) = (mc(iBa) - (pptBarMultiple)) * 137327 * (rho25c - TDS / 1000000#)
'Worksheets("Multimix_Slb").Cells(2 + LoopResChem, 75) = (ma(iSO4) - (pptBarMultiple + pptGypMultiple)) * 96060 * (rho25c - TDS / 1000000#)
'Worksheets("Multimix_Slb").Cells(2 + LoopResChem, 76) = (mc(iMg) - pptMgOH2Multiple) * 24305 * (rho25c - TDS / 1000000#)
'Worksheets("Multimix_Slb").Cells(2 + LoopResChem, 77) = nTCO2
'Worksheets("Multimix_Slb").Cells(2 + LoopResChem, 78) = nTCO2 - pptCalMultiple * mass_w
'If LoopResChem = 1 Then Worksheets("Input").Range("t12") = Empty
'End If
'Worksheets("Multiple Ppt").Protect ("eesi")
'
'End Sub
'*****************************************************************************************
'Sub Shell_MultiphaseFlash()
'mytime = Time
'Worksheets("Shell Multiflash").Unprotect ("eesi")
'Worksheets("Shell Multiflash").Range("E3:k24").ClearContents
''Before the subroutine:
'Application.ScreenUpdating = False
''Application.Calculation = xlCalculationManual
'
'Worksheets("Input").Activate
'RunSSP = 1:
'Call InitializeOptionClearCellContent
'RunShellMultiflash = 1
'ReDim CaseCount(5), CaseCount_II(110)
'Call CountNOB
'Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
'
'ReDim Preserve NaMix(nob_Input + nob_InputII), MgMix(nob_Input + nob_InputII), CaMix(nob_Input + nob_InputII), SrMix(nob_Input + nob_InputII), BaMix(nob_Input + nob_InputII), FeMix(nob_Input + nob_InputII), ZnMix(nob_Input + nob_InputII),Ramix(nob_Input + nob_InputII)
'Redim Preserve ClMix(nob_Input + nob_InputII), PbMix(nob_Input + nob_InputII), BrMix(nob_Input + nob_InputII)
'ReDim Preserve NH3Mix(nob_Input + nob_InputII), H3SiO4Mix(nob_Input + nob_InputII), H2SiO4Mix(nob_Input + nob_InputII), H4SiO4Mix(nob_Input + nob_InputII), H3BO3Mix(nob_Input + nob_InputII), CO2aqMix(nob_Input + nob_InputII), H2SaqMix(nob_Input + nob_InputII), HACaqMix(nob_Input + nob_InputII)
'ReDim Preserve UseH2SgasMix(nob_Input + nob_InputII), SO4Mix(nob_Input + nob_InputII), FMix(nob_Input + nob_InputII), TDSMix(nob_Input + nob_InputII), AlkMix(nob_Input + nob_InputII), TAcMix(nob_Input + nob_InputII), KMix(nob_Input + nob_InputII), MixFrac(nob_Input + nob_InputII)
'ReDim Preserve rho_Mix(nob_Input + nob_InputII), TH2SaqMix(nob_Input + nob_InputII), pHMeterStpMix(nob_Input + nob_InputII), TH4SiO4Mix(nob_Input + nob_InputII), TNH4Mix(nob_Input + nob_InputII), TH3BO3Mix(nob_Input + nob_InputII)
'ReDim Preserve SampleIDMix(nob_Input + nob_InputII), SampleDateMix(nob_Input + nob_InputII), OperatorMix(nob_Input + nob_InputII), WellNameMix(nob_Input + nob_InputII), FieldMix(nob_Input + nob_InputII), StateMix(nob_Input + nob_InputII) As String
'ReDim Preserve VgTPMix(nob_Input + nob_InputII), VoMix(nob_Input + nob_InputII), VwMix(nob_Input + nob_InputII), VMeOHMix(nob_Input + nob_InputII), VMEGMix(nob_Input + nob_InputII), oilAPIgravMix(nob_Input + nob_InputII), gasSpGravMix(nob_Input + nob_InputII), MixFracGas(nob_Input + nob_InputII)
'ReDim Preserve nTCO2Mix(nob_Input + nob_InputII), nTCH4Mix(nob_Input + nob_InputII), nTH2SMix(nob_Input + nob_InputII), mass_w_Mix(nob_Input + nob_InputII), mass_o_Mix(nob_Input + nob_InputII), MixFracOil(nob_Input + nob_InputII)
'ReDim Preserve mass_MeOH_mix(nob_Input + nob_InputII), mass_MEG_mix(nob_Input + nob_InputII), Qheat(nob_Input + nob_InputII), yCO2Mix(nob_Input + nob_InputII), yH2SMix(nob_Input + nob_InputII), yCH4Mix(nob_Input + nob_InputII)
'ReDim Preserve YCH4stpmix(nob_Input + nob_InputII), RatioOilBPointsmix(nob_Input + nob_InputII), CalculatedTDSMix(nob_Input + nob_InputII), rho25CMix(nob_Input + nob_InputII)
'ReDim Preserve HstpMix(nob_Input + nob_InputII), OHstpMix(nob_Input + nob_InputII), HCO3stpMix(nob_Input + nob_InputII), CO3stpMix(nob_Input + nob_InputII), ACstpMix(nob_Input + nob_InputII), HSstpMix(nob_Input + nob_InputII), NH4STPMix(nob_Input + nob_InputII), H2BO3stpMix(nob_Input + nob_InputII)
'ReDim Preserve HCO3AlkMix(nob_Input + nob_InputII), CO3AlkMix(nob_Input + nob_InputII), HAlkMix(nob_Input + nob_InputII), OHAlkMix(nob_Input + nob_InputII)
'ReDim Preserve ConcFactor(nob_Input + nob_InputII)
'ReDim Preserve TCO2Mix(nob_Input + nob_InputII), TofpH(nob_Input + nob_InputII), PofpH(nob_Input + nob_InputII), TofVol(nob_Input + nob_InputII), PofVol(nob_Input + nob_InputII)
'ReDim Preserve OilDensityMix(nob_Input + nob_InputII), GasDensityMix(nob_Input + nob_InputII), WaterDensityMix(nob_Input + nob_InputII)
'ReDim Preserve UseTPpHMix(nob_Input + nob_InputII), UseTPVolMix(nob_Input + nob_InputII), useEOSmix(nob_Input + nob_InputII)
'ReDim Preserve molc(NumCat, nob_Input + nob_InputII), mola(NumAn, nob_Input + nob_InputII), moln(NumNeut, nob_Input + nob_InputII) ' Convert all ions to moles
'ReDim Preserve molAlk(nob_Input + nob_InputII), molTAC(nob_Input + nob_InputII), molTNH4(nob_Input + nob_InputII), molTH3BO3(nob_Input + nob_InputII), molTH2Saq(nob_Input + nob_InputII), molTH4SiO4(nob_Input + nob_InputII)
'ReDim Preserve mol_g_origMix(nob_Input + nob_InputII), mol_o_OrigMix(nob_Input + nob_InputII), mol_w_OrigMix(nob_Input + nob_InputII), mol_g_finalMix(nob_Input + nob_InputII), mol_o_finalMix(nob_Input + nob_InputII), mol_w_finalMix(nob_Input + nob_InputII), mol_w_evapMix(nob_Input + nob_InputII)
'ReDim Preserve Total_molesMix(nob_Input + nob_InputII), SumofZMix(nob_Input + nob_InputII), nTCO2MixEOS(nob_Input + nob_InputII), nTH2SMixEOS(nob_Input + nob_InputII), zMix(nob_Input + nob_InputII, 20)
'ReDim Preserve CaseCount(nob_Input + nob_InputII), CaseCount_II(nob_Input + nob_InputII)
'ReDim Preserve usepHmix(nob_Input + nob_InputII)
'ReDim eosProps(nComponents, 1 To 6), kij(nComponents, nComponents) 'Caleb
'ReDim density(3), compositions(15, 4), phi(15, 3), Compr(3), beta(3), zOutput(15)
''Call Worksheets("Readme").B2_ReadinAllData      'Reads in all Input concentrations, put in terms of molality and calculate total moles of CO2, H2S, CH4.
'mySheet = "Input"
'    For iRead = 1 To nob  'For any number of mixing on Input sheet "nob=number of brines selected"; same for three "what ifs at bottom of each page".  For mixing page "nob = 2", the first two column of data.
'    If Run1000Cases = 1 Then CaseCount(iRead) = LoopTP 'Amy 1000Cases
'       j = CaseCount(iRead)
'       kk = iRead
'    Call ReadInputPartA(kk)
'    Next iRead
'
'    For iRead = 1 To nob  'For any number of mixing on Input sheet "nob=number of brines selected"; same for three "what ifs at bottom of each page".  For mixing page "nob = 2", the first two column of data.
'       j = CaseCount(iRead)
'       kk = iRead
'       Call ReadInputPartB(kk)
'    Next iRead
'
' For iRead = 1 To nob
'    j = CaseCount(iRead)
'    kk = iRead
'    Call ReadInputPartC(kk)
''    If RunStat = 0 Then
''    If Run_CalcConcFactor = 1 Then
''        Worksheets("Input").Cells(30, 8).Value = rho25c  'Thermodynamic density.
''    Else
''        ActiveSheet.Cells(30, j + 2).Value = rho25c  'Thermodynamic density.
''    End If
''    End If
'Next iRead
''useEOS = 0
''Call Worksheets("Readme").B3_CalcConcs           'Cacluate all concentration data from wells on input screen.
'
'Worksheets("Shell Multiflash").Activate
'If Worksheets("Shell Multiflash").Range("a1").Value = "T(C)" Then
'UseSI = 1
'Else
'UseSI = 0
'End If
'
'TF = Worksheets("Shell Multiflash").Range("B1").Value '
'Ppsia = Worksheets("Shell Multiflash").Range("D1").Value '
'If UseSI = 1 Then TF = Worksheets("Shell Multiflash").Range("B1").Value * 9 / 5 + 32  'convert to F
'If UseSI = 1 Then Ppsia = Worksheets("Shell Multiflash").Range("D1").Value * 14.503774 'convert to psia
'    TK = (TF - 32) * 5 / 9 + 273.15: TC = (TF - 32) * 5 / 9
'    Patm = Ppsia / 14.696
'    PBar = Ppsia / 14.50377
'For i = 1 To 3 'zero all values from multiflash calculation with Z from the Input sheet , Z is read from this sheet
'For j = 1 To 15
'beta(i) = 0: density(i) = 0: Compr(i) = 0: phi(j, i) = 0
'compositions(j, i + 1) = 0
'Next j
'Next i
'
'For i = 1 To 15
'  z(i) = Worksheets("Shell Multiflash").Cells(2 + i, 3)
'Next i
'SumofZ = 0:
'For iNG = 1 To 15
' SumofZ = SumofZ + z(iNG)
'Next iNG
'For iNG = 1 To 15
'z(iNG) = z(iNG) / SumofZ
'z_before_precipitation(iNG) = z(iNG)
'Next iNG
''mf_ParametersWereRead = False
'Total_moles_before_precipitation = 1: nTCO2_before_precipitation = z(2): nTH2S_before_precipitation = z(3): total_moles = 1 'for calculation form Shell Multiflash sheet w z(i) input
'If z(15) = 0 Then 'Force activity coeff = 1 when water is absent
''iCO2aq = 1: iH2Saq = 2
'aH2O = 1: gNeut(iCO2aq) = 1: gNeut(iH2Saq) = 1
'Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'Else
'  Call CalcIonicStrength
'  Call C1_ThermodynamicEquilConsts
'  Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
'  Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'  mass_w = total_moles * beta(3) * compositions(15, 4) * 0.01801528 'unit=Kg H2O in aqueous phase
' If beta(3) > 0 Then
'    Call C4_EOS_TCO2_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
'     mt = fmn
'    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
'    Call C4_EOS_TCO2_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
'rhoTP = CalcRhoTP(TK, TC, PBar, Patm)
'End If
'End If
'For i = 1 To 3
'    If beta(i) > 0 Then
'
'        Worksheets("Shell Multiflash").Cells(18, 4 + i) = beta(i)
'        Worksheets("Shell Multiflash").Cells(19, 4 + i) = Compr(i)
'        Worksheets("Shell Multiflash").Cells(20, 4 + i) = density(i)
'        Worksheets("Shell Multiflash").Cells(21, 4 + i) = mass_phase(i)
'        If i = 3 Then Worksheets("Shell Multiflash").Cells(20, 4 + i) = rhoTP
'        For j = 1 To 15
'            Worksheets("Shell Multiflash").Cells(2 + j, 4 + i) = compositions(j, i + 1) * 100
'            If j = 2 Or j = 3 Then
'            Worksheets("Shell Multiflash").Cells(2 + j, 4) = zOutput(j) * 1000000# 'ppmMole
'             End If
'
'            If compositions(j, 4) > 0 Then
'            If j = 2 Then
'            Worksheets("Shell Multiflash").Cells(2 + j, 9) = compositions(j, 2) / (1 - 1 / ((CO2aq + HCO3 + CO3) / (1000 / 18.01528) + 1)) 'calc mole frac of CO2 in water, ignore all other hydrocarbons
'            Worksheets("Shell Multiflash").Cells(2 + j, 10) = compositions(j, 3) / (1 - 1 / ((CO2aq + HCO3 + CO3) / (1000 / 18.01528) + 1))
'            ElseIf j = 3 Then
'            Worksheets("Shell Multiflash").Cells(2 + j, 9) = compositions(j, 2) / (1 - 1 / ((HS + H2Saq) / (1000 / 18.01528) + 1))
'            Worksheets("Shell Multiflash").Cells(2 + j, 10) = compositions(j, 3) / (1 - 1 / ((HS + H2Saq) / (1000 / 18.01528) + 1))
'            Else
'            Worksheets("Shell Multiflash").Cells(2 + j, 9) = compositions(j, 2) / compositions(j, 4)
'            Worksheets("Shell Multiflash").Cells(2 + j, 10) = compositions(j, 3) / compositions(j, 4)
'            End If
'            End If
'            If compositions(j, 3) > 0 Then Worksheets("Shell Multiflash").Cells(2 + j, 11) = compositions(j, 2) / compositions(j, 3)
'            If beta(1) > 0 Then 'when gas is present
'            If UseSI = 0 Then Worksheets("Shell Multiflash").Cells(2 + j, 8) = Ppsia * compositions(j, 2) * phi(j, 1)
'            If UseSI = 1 Then Worksheets("Shell Multiflash").Cells(2 + j, 8) = PBar * compositions(j, 2) * phi(j, 1)
'            ElseIf beta(2) > 0 Then 'when oil is present
'            If UseSI = 0 Then Worksheets("Shell Multiflash").Cells(2 + j, 8) = Ppsia * compositions(j, 3) * phi(j, 2)
'            If UseSI = 1 Then Worksheets("Shell Multiflash").Cells(2 + j, 8) = PBar * compositions(j, 3) * phi(j, 2)
'            ElseIf beta(2) = 0 And beta(3) > 0 Then
'            If UseSI = 0 Then Worksheets("Shell Multiflash").Cells(2 + j, 8) = Ppsia * compositions(j, 4) * phi(j, 3)
'            If UseSI = 1 Then Worksheets("Shell Multiflash").Cells(2 + j, 8) = PBar * compositions(j, 4) * phi(j, 3)
'            End If
'        Next j
'    End If
'Next i
''For j = 1 To 15
''If UseSI = 0 Then fugacity(j) = Ppsia * compositions(j, 2) * phi(j, 1)
''If UseSI = 1 Then fugacity(j) = PBar * compositions(j, 2) * phi(j, 1)
''fugacity(j) = phi(j, 1) * compositions(j, 2)
''    Worksheets("Shell Multiflash").Cells(2 + j, 8) = fugacity(j) 'Output fugacity
''    If j = 2 Or j = 3 Then
''    Worksheets("Shell Multiflash").Cells(2 + j, 4) = z(j) * 1000000# 'ppmMole
'
''    End If
'' Next j
'    If beta(1) > 0 Then Worksheets("Shell Multiflash").Range("E22") = MW_Phase(1)
'    If beta(2) > 0 Then Worksheets("Shell Multiflash").Range("F22") = MW_Phase(2)
'
' If beta(1) > 0 Then
' a = mass_phase(1) / density(1)
' Else
' a = 0
' End If
'
' If beta(2) > 0 Then
' b = mass_phase(2) / density(2)
' Else
' b = 0
' End If
' If beta(3) > 0 Then
' c = mass_phase(3) / density(3)
' Else
' c = 0
' End If
'
' Worksheets("Shell Multiflash").Range("E24") = a / (a + b + c) * 100
' Worksheets("Shell Multiflash").Range("F24") = b / (a + b + c) * 100
' Worksheets("Shell Multiflash").Range("G24") = c / (a + b + c) * 100
' 'calculate bubble and dew points
'
'Set myRange = Worksheets("Shell Multiflash").Range("$C$3:$c$17")
'bubblepoint = bPoint(myRange, TK, gNeut(1), gNeut(2), aH2O)
''dewpoint = dPoint(myRange, TK, gNeut(1), gNeut(2), aH2O)
'    If UseSI = 1 Then
'    Worksheets("Shell Multiflash").Range("E23") = bubblepoint
'    Else
'    Worksheets("Shell Multiflash").Range("E23") = bubblepoint * 14.503774 'Output psia
'    End If
''    If UseSI = 1 Then
''    Worksheets("Shell Multiflash").Range("I24") = dewpoint
''    Else
''    Worksheets("Shell Multiflash").Range("I24") = dewpoint * 14.503774 'Output psia
''    End If
''After the subroutine:
'Application.Calculation = xlCalculationAutomatic
'Application.ScreenUpdating = True
'
' Worksheets("Shell Multiflash").Protect ("eesi")
' mytime1 = Time
' End
'
'End Sub
'Sub ShellA1_H2SPartition()
'Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
'Call ClearVariable
'   RunSSP = 1: RunH2SPartition = 1:
''   Worksheets("Calcite").Range("B1:J1").Value = Null
''Worksheets("Calcite").Range("p4:u13").Value = Null
''Worksheets("Barite").Range("B1:J1").Value = Null
''Worksheets("Barite").Range("p4:u13").Value = Null
''Worksheets("Halite").Range("B1:J1").Value = Null
''Worksheets("Other SO4s").Range("B1:J1").Value = Null
''Worksheets("Other SO4s").Range("P4:U14").Value = Null
''Worksheets("Sulfides,Fluorite,Carbonates").Range("B1:J1").Value = Null
''Worksheets("Silicates").Range("B1:J1").Value = Null
''Worksheets("Mg(OH)2,Ca(OH)2").Range("B1:J1").Value = Null
'Worksheets("Shell Speciation").Range("A4:Ai13").Value = Null
'Worksheets("Shell Speciation").Range("A24:T33").Value = Null
'Worksheets("Shell Speciation").Range("A44:T53").Value = Null
''Worksheets("Shell Speciation").Range("A64:T73").Value = Null
'
'Call InitializeOptionClearCellContent
'ReDim CaseCount(5), CaseCount_II(110)
'Call CountNOB
'Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
'
'Call Worksheets("Readme").B2_ReadinAllData      'Reads in all Input concentrations, put in terms of molality and calculate total moles of CO2, H2S, CH4.
'
'Call Worksheets("Readme").B3_CalcConcs           'Cacluate all concentration data from wells on input screen.
'
'Call Worksheets("Readme").B4_CalcFinalBrine      'Mixed bine output.
'
''
'If useEOS <> 0 Then
'Worksheets("H2S partition").Range("d4:ab13").ClearContents
'Worksheets("H2S partition").Range("ad3:af17").Value = Null
'
'For i = 1 To 15
'Worksheets("H2S partition").Cells(2 + i, 30) = Worksheets("Input").Cells(4 + i, 23)
'Next i
'
'
'For iNG = 1 To 15
'Worksheets("H2S partition").Cells(2 + iNG, 31) = z_before_precipitation(iNG)
'Worksheets("H2S partition").Cells(2 + iNG, 32) = z_before_precipitation(iNG)
'
'Next iNG
''****************END OF Output reservoir composition to include water mole fraction
'For LoopTP = 1 To 10
'    TF = Worksheets("H2S partition").Cells(14 - LoopTP, 2):
'    Ppsia = Worksheets("H2S partition").Cells(14 - LoopTP, 3):
'    If UseSI = 1 Then TF = Worksheets("H2S partition").Cells(14 - LoopTP, 2) * 9 / 5 + 32  'convert to F
'    If UseSI = 1 Then Ppsia = Worksheets("H2S partition").Cells(14 - LoopTP, 3) * 14.503774 'convert to psia
'    TK = (TF - 32) * 5 / 9 + 273.15: TC = (TF - 32) * 5 / 9
'    Patm = Ppsia / 14.696
'    PBar = Ppsia / 14.503774
'  'Returns HCO3, HS, aH, Ac, and a set of SI values for all solids at the present
'  'T, P, and compositions.
'Call B5_CalculateSIvalues
'Call ShellB3_H2SOutput
''Call ShellB4_SpeciationOutput '*********************************************Amy uncomment********************************
'
''Amy add calculate bubblepoints. Note that there are problem with bPoints when z(1) or z(2) or Z(3)=0  Waiting for Paco's fix
''Worksheets("H2S partition").Activate
''Set myRange = Worksheets("H2S partition").Range("$AE$3:$AE$17")
''bubblepoint = bPoint(myRange, TK, gNeut(1), gNeut(2), aH2O)
'''dewpoint = dPoint(myRange, TK, gNeut(1), gNeut(2), aH2O)
''    If UseSI = 1 Then
''    Worksheets("H2S partition").Cells(14 - LoopTP, 28) = bubblepoint
''    Else
''    Worksheets("H2S partition").Cells(14 - LoopTP, 28) = bubblepoint * 14.503774 'Output psia
''    End If
''        If bubblepoint = Null Then errmsg(18) = 18
'Next LoopTP
'Call ErrorMsgBox
'Application.ScreenUpdating = True
'Application.Calculation = xlCalculationAutomatic
'  If UseSI = 1 Then
'   TBH = (TBH - 32) * 5 / 9 'convert to C
'   TWH = (TWH - 32) * 5 / 9
'   PBH = PBH / 14.503774  'Convert to Bar
'   PWH = PWH / 14.503774
'    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial and final temperatures are " & TBH & " and " & TWH & " C;" & Chr(13) _
'    & "Initial and final pressures are " & PBH & " and " & PWH & " Bar." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." & Chr(13) & Chr(13) _
'
'    Else
'    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial and final temperatures are " & TBH & " and " & TWH & " F;" & Chr(13) _
'    & "Initial and final pressures are " & PBH & " and " & PWH & " psia." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "."
'    End If
'Else
'MsgBox ("An error is detected.  Calculation abort. Please select Option 1 on Row 55 of the Input sheet to continue.")
'GoTo 500
'End If
'
''Worksheets("H2S partition").Range("L4:L13").Value = Worksheets("Halite").Range("F4:F13").Value
'500 End
'End Sub
'Sub ShellA2_H2SPartition_wGoalSeek()
'RunH2SGoalSeek = 1
'Call ShellB1_H2SGoalSeek
'
''nTH2S_before_precipitation = z(3) * total_moles 'This shouldn't matter in H2S partition calculation
'    RunGoalSeek = 0    'Reset to zero for possible future runs that are not GoalSeek.
'
'For iNG = 1 To 15
'Worksheets("H2S partition").Cells(2 + iNG, 32) = z(iNG)
'Next iNG
'nTH2S_before_precipitation = z(3) * total_moles 'This shouldn't matter in H2S partition calculation
'
'
'For LoopTP = 1 To 10
'    TF = Worksheets("H2S partition").Cells(14 - LoopTP, 2):
'    Ppsia = Worksheets("H2S partition").Cells(14 - LoopTP, 3):
'    If UseSI = 1 Then TF = Worksheets("H2S partition").Cells(14 - LoopTP, 2) * 9 / 5 + 32  'convert to F
'    If UseSI = 1 Then Ppsia = Worksheets("H2S partition").Cells(14 - LoopTP, 3) * 14.503774 'convert to psia
'    TK = (TF - 32) * 5 / 9 + 273.15: TC = (TF - 32) * 5 / 9
'    Patm = Ppsia / 14.696
'    PBar = Ppsia / 14.503774
'  'Returns HCO3, HS, aH, Ac, and a set of SI values for all solids at the present
'  'T, P, and compositions.
'  'Redefine z, total_moles for the MultiphaseFlash, Note this is required for GoalSeek with EOS at a single T, P
'  For iNG = 1 To 15
'  z(iNG) = z_before_precipitation(iNG)
'  Next iNG
'  total_moles = Total_moles_before_precipitation
'
'Call B5_CalculateSIvalues
'Call ShellB3_H2SOutput
'Call ShellB4_SpeciationOutput
'
'
'Worksheets("H2S partition").Activate
'Set myRange = Worksheets("H2S partition").Range("$Af$3:$Af$17")
'bubblepoint = bPoint(myRange, TK, gNeut(1), gNeut(2), aH2O)
''dewpoint = dPoint(myRange, TK, gNeut(1), gNeut(2), aH2O)
'    If UseSI = 1 Then
'    Worksheets("H2S partition").Cells(14 - LoopTP, 28) = bubblepoint
'    Else
'    Worksheets("H2S partition").Cells(14 - LoopTP, 28) = bubblepoint * 14.503774 'Output psia
'    End If
'        If bubblepoint = Null Then errmsg(18) = 18
'
'Next LoopTP
'
'   If UseSI = 1 Then
'   TBH = (TBH - 32) * 5 / 9 'convert to C
'   TWH = (TWH - 32) * 5 / 9
'   PBH = PBH / 14.503774  'Convert to Bar
'   PWH = PWH / 14.503774
'    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial and final temperatures are " & TBH & " and " & TWH & " C;" & Chr(13) _
'    & "Initial and final pressures are " & PBH & " and " & PWH & " Bar." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "."  '
'    Else
'    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial and final temperatures are " & TBH & " and " & TWH & " F;" & Chr(13) _
'    & "Initial and final pressures are " & PBH & " and " & PWH & " psia." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "."  ''******************************
'    End If
'
'Call ErrorMsgBox
'
''If Run_MassTransfer <> 1 Or Run10TestCases <> 1 Or RunWhatIf <> 1 Or Run_Seawater_Mixing <> 1 Or Run_MixingTwoWells <> 1 Then
'Worksheets("H2S partition").Activate
'Worksheets("H2S partition").Range("A1").Select
'500 End
'End Sub
'Sub ShellB1_H2SGoalSeek()
''If useEOS <> 0 Then
'Worksheets("H2S partition").Unprotect ("eesi")
'    Worksheets("H2S partition").Activate
''InputBox to get the cells to be adjusted, etc.
'Set myRange = Application.InputBox(prompt:="Click on the Target Cell", Type:=8)
'    DepVarColumnNo = myRange.Column
'    DepVarRowNo = myRange.Row
'DependentVariableTargetValue = Application.InputBox(prompt:="Type the Target Value", Type:=1)
'
''Set myRange = Application.InputBox(prompt:="Click on the Cell to Change", Type:=8)
''    IndVarColumnNo = myRange.Column
''    IndVarRowNo = myRange.Row
'    IndVarColumnNo = 34
'    IndVarRowNo = 5
'    IndVariableValue0 = Worksheets("H2S partition").Cells(IndVarRowNo, IndVarColumnNo).Value   'IndVariableValue0=new nTH2S_before_precipitaion
'        If IndVariableValue0 < 0.0000000001 Then
'            Worksheets("H2S partition").Cells(IndVarRowNo, IndVarColumnNo) = 10 'artitrarily set zero values to 10 to start diffrentiation.
'        End If
'Application.ScreenUpdating = False
'Call ClearVariable 'Empty all indices, except RowNo
'   RunSSP = 1: RunH2SPartition = 1 ' This to prevent wipeout of SI values on the Input sheet
'   Call InitializeOptionClearCellContent
'    mySheet = "Input"
''    If mySheet = "Simplified Input" Then
''    RunSimpSSP = 1
''    Else
''    RunSSP = 1
''    End If
'ReDim CaseCount(5), CaseCount_II(110)
'Call CountNOB
'Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
''If mySheet = "Simplified Input" Then
''Call Worksheets("Readme").B2_ReadinAllDataSimplified      'Reads in all Input concentrations, put in terms of molality and calculate total moles of CO2, H2S, CH4.
''Else
'Call Worksheets("Readme").B2_ReadinAllData      'Reads in all Input concentrations, put in terms of molality and calculate total moles of CO2, H2S, CH4.
''End If
'Call Worksheets("Readme").B3_CalcConcs           'Cacluate all concentration data from wells on input screen.
'mytime1 = Time
'Call Worksheets("Readme").B4_CalcFinalBrine      'Mixed bine output.
''    For iNG = 1 To 15
''Worksheets("Sheet2").Cells(2 + iNG, 1) = nTCO2_before_precipitation
''Worksheets("Sheet2").Cells(2 + iNG, 2) = nTH2S_before_precipitation
''Worksheets("sheet2").Cells(2 + iNG, 3) = Total_moles_before_precipitation
''Worksheets("sheet2").Cells(2 + iNG, 4) = z_before_precipitation(iNG)
''Next iNG
'For iNG = 1 To 15
'z_before_precipitation(iNG) = z_before_precipitation(iNG) * Total_moles_before_precipitation
'Next iNG
'Total_moles_before_precipitation = Total_moles_before_precipitation - nTH2S_before_precipitation + IndVariableValue0
'nTH2S_before_precipitation = IndVariableValue0
'For iNG = 1 To 15
'z_before_precipitation(iNG) = z_before_precipitation(iNG) / Total_moles_before_precipitation
'Next iNG
'z_before_precipitation(3) = nTH2S_before_precipitation / Total_moles_before_precipitation
'For iNG = 1 To 15
'Worksheets("H2S partition").Cells(2 + iNG, 32) = z_before_precipitation(iNG)
'Next iNG
'
''For iNG = 1 To 15
''Worksheets("Sheet2").Cells(2 + iNG, 6) = nTCO2_before_precipitation
''Worksheets("Sheet2").Cells(2 + iNG, 7) = nTH2S_before_precipitation
''Worksheets("sheet2").Cells(2 + iNG, 8) = Total_moles_before_precipitation
''Worksheets("sheet2").Cells(2 + iNG, 9) = z_before_precipitation(iNG)
''Next iNG
'
'
'Application.ScreenUpdating = True
'Call ShellB2_H2SpartitionRevisedZ  'Obtain initial values of all variables with those in Input screen.
'    DepVariableValue0 = Worksheets("H2S partition").Cells(DepVarRowNo, DepVarColumnNo).Value
'    Targ = DependentVariableTargetValue
'    IndVariableValue0 = Worksheets("H2S partition").Cells(IndVarRowNo, IndVarColumnNo).Value
'    If DepVarColumnNo = 16 Or DepVarColumnNo = 18 Then
'        DepVariableValue0 = DepVariableValue0 / 1000000#
'        Targ = Targ / 1000000#
'        DependentVariableTargetValue = DependentVariableTargetValue / 1000000#
'    End If
'        If IndVariableValue0 <= 0# Then
'            MsgBox ("Initial value of independent variable must be a positive number.  If it is zero, enter some initial guess and start again.")
'            GoTo 2150
'        End If
'    DepOld = DepVariableValue0
'    IndNew = IndVariableValue0
'For iGoalSeek = 1 To 20
'    IndOld = IndNew
'    For iNG = 1 To 15
'    z_before_precipitation(iNG) = z_before_precipitation(iNG) * Total_moles_before_precipitation
'    Next iNG
'    Total_moles_before_precipitation = Total_moles_before_precipitation - nTH2S_before_precipitation + IndNew
'    nTH2S_before_precipitation = IndNew
'    For iNG = 1 To 15
'    z_before_precipitation(iNG) = z_before_precipitation(iNG) / Total_moles_before_precipitation
'    Next iNG
'    z_before_precipitation(3) = nTH2S_before_precipitation / Total_moles_before_precipitation
'    For iNG = 1 To 15
'    Worksheets("H2S partition").Cells(2 + iNG, 32) = z_before_precipitation(iNG)
'    Next iNG
'
''    For iNG = 1 To 15
''Worksheets("Sheet2").Cells(2 + iNG, iGoalSeek * 7 + 4) = nTCO2_before_precipitation
''Worksheets("Sheet2").Cells(2 + iNG, iGoalSeek * 7 + 5) = nTH2S_before_precipitation
''Worksheets("sheet2").Cells(2 + iNG, iGoalSeek * 7 + 6) = Total_moles_before_precipitation
''Worksheets("sheet2").Cells(2 + iNG, iGoalSeek * 7 + 7) = z_before_precipitation(iNG)
''Worksheets("sheet2").Cells(2 + iNG, iGoalSeek * 7 + 8) = DepOld
''Worksheets("sheet2").Cells(2 + iNG, iGoalSeek * 7 + 9) = IndNew
''Next iNG
''
'    Call ShellB2_H2SpartitionRevisedZ 'Obtain inital values of the DepOld function at the intial values of the independent variable.
'    DepOld = Worksheets("H2S partition").Cells(DepVarRowNo, DepVarColumnNo).Value
'    If DepVarColumnNo = 16 Or DepVarColumnNo = 18 Then DepOld = DepOld / 1000000#
'        'Set up and calculate the numerical derivative and then return variables to original values.**************************
'        Worksheets("H2S partition").Cells(IndVarRowNo, IndVarColumnNo) = 1.01 * IndNew   'Increase Ind0 by 10% to take numerical derivative.
'
'    For iNG = 1 To 15
'    z_before_precipitation(iNG) = z_before_precipitation(iNG) * Total_moles_before_precipitation
'    Next iNG
'    Total_moles_before_precipitation = Total_moles_before_precipitation - nTH2S_before_precipitation + IndNew * 1.01
'    nTH2S_before_precipitation = IndNew * 1.01
'    For iNG = 1 To 15
'    z_before_precipitation(iNG) = z_before_precipitation(iNG) / Total_moles_before_precipitation
'    Next iNG
'    z_before_precipitation(3) = nTH2S_before_precipitation / Total_moles_before_precipitation
'    For iNG = 1 To 15
'    Worksheets("H2S partition").Cells(2 + iNG, 32) = z_before_precipitation(iNG)
'    Next iNG
'
'        Call ShellB2_H2SpartitionRevisedZ   'Calcuate Dependent function, Dep1, at new value of independent variable, Ind1.
'        Dep1 = Worksheets("H2S partition").Cells(DepVarRowNo, DepVarColumnNo).Value
'     If DepVarColumnNo = 16 Or DepVarColumnNo = 18 Then Dep1 = Dep1 / 1000000#
'        Derivative = (Dep1 - DepOld) / (0.01 * IndOld)
'        Worksheets("H2S partition").Cells(IndVarRowNo, IndVarColumnNo) = IndOld  'Return Ind variable in worksheet to original value
'        Worksheets("H2S partition").Cells(DepVarRowNo, DepVarColumnNo) = DepOld  'Return Dep variable to value at Ind0
'     If DepVarColumnNo = 16 Or DepVarColumnNo = 18 Then Worksheets("H2S partition").Cells(DepVarRowNo, DepVarColumnNo) = DepOld * 1000000#
'            If Derivative = 0 Then
'                Call ShellB2_H2SpartitionRevisedZ 'Reset all variables to original values in all sheets.
'                MsgBox ("Since dDep/dInd = 0.00, they are not a fuction of each other.  Calculation will be stopped.  See Notes at bottom of Input sheet.")
'                GoTo 2150   'Exit loop and calculation after printing message.
'            End If
'    'End of derivative routine. ***********************************************************************************************
'
'    IndNew = IndOld - (DepOld - DependentVariableTargetValue) / Derivative 'Calculate new value of Independent variable, IndNew
'        If Abs((DepOld - DependentVariableTargetValue) / Derivative) > Abs(IndOld) Then  'If the change in one iteration step exceeds the initial value, make changes according to the following rules:
'            If -1 * (DepOld - DependentVariableTargetValue) / Derivative > 0 Then IndNew = IndOld * 5 * Rnd() 'Take control of change by increasing only five times.
'            If -1 * (DepOld - DependentVariableTargetValue) / Derivative < 0 Then IndNew = IndOld / 5 * Rnd() 'Take control of change by decreasing only five times.
'        End If
'    Worksheets("H2S partition").Cells(IndVarRowNo, IndVarColumnNo) = IndNew  'Return Ind variable in worksheet to original value
'
'    If (Abs(IndNew - IndOld) / (IndNew + IndOld)) < 0.0005 Or Abs(DepOld - DependentVariableTargetValue) / DepOld < 0.0005 Then 'Check for convergence of Newton Raphson routine.
'        GoTo 2150   'GoalSeek-like routine has converged; exit loop.
'    End If
'Next iGoalSeek
'
'2150 Worksheets("H2S partition").Select
'   If iGoalSeek = 21 Then MsgBox ("GoalSeek-like routine has not converged in twenty iterations; re-run for another ten interations; put a new inital value in the cell being changed; or change the problem.")
'        Call ShellB2_H2SpartitionRevisedZ  'Calcuate Dependent function, Dep1, at new value of independent variable, Ind1.
'        Worksheets("H2S partition").Activate
'        Worksheets("H2S partition").Cells(IndVarRowNo, IndVarColumnNo).Select  'Set curser on independent variable cell.
'
'End Sub
'I. This subroutine is activated by clicking on the Run button in the H2S partition screen.
'Sub ShellB2_H2SpartitionRevisedZ()
'Application.ScreenUpdating = False
'
'    TF = Worksheets("H2S partition").Cells(DepVarRowNo, 2):
'    Ppsia = Worksheets("H2S partition").Cells(DepVarRowNo, 3):
'    If UseSI = 1 Then TF = TF * 9 / 5 + 32  'convert to F
'    If UseSI = 1 Then Ppsia = Ppsia * 14.503774 'convert to psia
'    TK = (TF - 32) * 5 / 9 + 273.15: TC = (TF - 32) * 5 / 9
'    Patm = Ppsia / 14.696
'    PBar = Ppsia / 14.503774
'  'Redefine z, total_moles for the MultiphaseFlash, Note this is required for GoalSeek with EOS at a single T, P
'  For iNG = 1 To 15
'  z(iNG) = z_before_precipitation(iNG)
'  Next iNG
'  total_moles = Total_moles_before_precipitation
'Call B5_CalculateSIvalues
'
'Worksheets("H2S partition").Cells(DepVarRowNo, 4) = beta(1)
'Worksheets("H2S partition").Cells(DepVarRowNo, 5) = beta(2)
'Worksheets("H2S partition").Cells(DepVarRowNo, 6) = beta(3)
'Worksheets("H2S partition").Cells(DepVarRowNo, 7) = Compr(1)
'Worksheets("H2S partition").Cells(DepVarRowNo, 8) = Compr(2)
'Worksheets("H2S partition").Cells(DepVarRowNo, 9) = Compr(3)
'Worksheets("H2S partition").Cells(DepVarRowNo, 10) = density(1)
'Worksheets("H2S partition").Cells(DepVarRowNo, 11) = density(2)
'Worksheets("H2S partition").Cells(DepVarRowNo, 12) = rhoTP
'
'Worksheets("H2S partition").Cells(DepVarRowNo, 13) = pH - DpHj
'If beta(1) > 0 Then  'when both gas phase present
'If UseSI = 0 Then Worksheets("H2S partition").Cells(DepVarRowNo, 14) = Ppsia * compositions(3, 2)
'If UseSI = 1 Then Worksheets("H2S partition").Cells(DepVarRowNo, 14) = PBar * compositions(3, 2)
'End If
'
'Worksheets("H2S partition").Cells(DepVarRowNo, 15) = compositions(3, 2) * phi(3, 1) * Ppsia
'
'If beta(1) > 0 Then 'when gas is present
'If UseSI = 0 Then Worksheets("H2S partition").Cells(DepVarRowNo, 15) = Ppsia * compositions(3, 2) * phi(3, 1)
'If UseSI = 1 Then Worksheets("H2S partition").Cells(DepVarRowNo, 15) = PBar * compositions(3, 2) * phi(3, 1)
'ElseIf beta(2) > 0 Then 'when oil is present
'If UseSI = 0 Then Worksheets("H2S partition").Cells(DepVarRowNo, 15) = Ppsia * compositions(3, 3) * phi(3, 2)
'If UseSI = 1 Then Worksheets("H2S partition").Cells(DepVarRowNo, 15) = PBar * compositions(3, 3) * phi(3, 2)
'ElseIf beta(2) = 0 And beta(3) > 0 Then
'If UseSI = 0 Then Worksheets("H2S partition").Cells(DepVarRowNo, 15) = Ppsia * compositions(3, 4) * phi(3, 3)
'If UseSI = 1 Then Worksheets("H2S partition").Cells(DepVarRowNo, 15) = PBar * compositions(3, 4) * phi(3, 3)
'End If
'
'Worksheets("H2S partition").Cells(DepVarRowNo, 16) = compositions(3, 2) * 1000000#
'Worksheets("H2S partition").Cells(DepVarRowNo, 18) = compositions(3, 3) * 1000000#
'Worksheets("H2S partition").Cells(DepVarRowNo, 20) = H2Saq
'Worksheets("H2S partition").Cells(DepVarRowNo, 21) = HS
'Worksheets("H2S partition").Cells(DepVarRowNo, 22) = CO2aq
'Worksheets("H2S partition").Cells(DepVarRowNo, 23) = HCO3
'Worksheets("H2S partition").Cells(DepVarRowNo, 24) = CO3
'If compositions(3, 3) > 0 Then Worksheets("H2S partition").Cells(DepVarRowNo, 25) = compositions(3, 2) / compositions(3, 3)
'If (H2Saq + HS) > 0 Then
'Worksheets("H2S partition").Cells(DepVarRowNo, 26) = compositions(3, 2) / (H2Saq + HS)
'Worksheets("H2S partition").Cells(DepVarRowNo, 27) = compositions(3, 3) / (H2Saq + HS)
'End If
'Application.ScreenUpdating = True
''500 End Sub
'Sub ShellB3_H2SOutput()
'Dim TDSTP
'TDSTP = TDS / rho25c * rhoTP
'Worksheets("H2S partition").Cells(14 - LoopTP, 4) = beta(1)
'Worksheets("H2S partition").Cells(14 - LoopTP, 5) = beta(2)
'Worksheets("H2S partition").Cells(14 - LoopTP, 6) = beta(3)
'Worksheets("H2S partition").Cells(14 - LoopTP, 7) = Compr(1)
'Worksheets("H2S partition").Cells(14 - LoopTP, 8) = Compr(2)
'Worksheets("H2S partition").Cells(14 - LoopTP, 9) = Compr(3)
'Worksheets("H2S partition").Cells(14 - LoopTP, 10) = density(1)
'Worksheets("H2S partition").Cells(14 - LoopTP, 11) = density(2)
'Worksheets("H2S partition").Cells(14 - LoopTP, 12) = rhoTP
'
'Worksheets("H2S partition").Cells(14 - LoopTP, 13) = pH - DpHj
'If beta(1) > 0 Then  'when gas is present
'If UseSI = 0 Then Worksheets("H2S partition").Cells(14 - LoopTP, 14) = Ppsia * compositions(3, 2)
'If UseSI = 1 Then Worksheets("H2S partition").Cells(14 - LoopTP, 14) = PBar * compositions(3, 2)
'End If
'If beta(1) > 0 Then 'when gas is present
'If UseSI = 0 Then Worksheets("H2S partition").Cells(14 - LoopTP, 15) = Ppsia * compositions(3, 2) * phi(3, 1)
'If UseSI = 1 Then Worksheets("H2S partition").Cells(14 - LoopTP, 15) = PBar * compositions(3, 2) * phi(3, 1)
'ElseIf beta(2) > 0 Then 'when oil is present
'If UseSI = 0 Then Worksheets("H2S partition").Cells(14 - LoopTP, 15) = Ppsia * compositions(3, 3) * phi(3, 2)
'If UseSI = 1 Then Worksheets("H2S partition").Cells(14 - LoopTP, 15) = PBar * compositions(3, 3) * phi(3, 2)
'ElseIf beta(2) = 0 And beta(3) > 0 Then
'If UseSI = 0 Then Worksheets("H2S partition").Cells(14 - LoopTP, 15) = Ppsia * compositions(3, 4) * phi(3, 3)
'If UseSI = 1 Then Worksheets("H2S partition").Cells(14 - LoopTP, 15) = PBar * compositions(3, 4) * phi(3, 3)
'End If
'
'Worksheets("H2S partition").Cells(14 - LoopTP, 16) = compositions(3, 2) * 1000000#
'If beta(1) > 0 Then Worksheets("H2S partition").Cells(14 - LoopTP, 17) = compositions(3, 2) * 34.08 / MW_Phase(1) * density(1) * 1000000#
' Worksheets("H2S partition").Cells(14 - LoopTP, 18) = compositions(3, 3) * 1000000#
'If beta(2) > 0 Then Worksheets("H2S partition").Cells(14 - LoopTP, 19) = compositions(3, 3) * 34.08 / MW_Phase(2) * density(2) * 1000000#
'Worksheets("H2S partition").Cells(14 - LoopTP, 20) = H2Saq * (34080 * (rhoTP - TDSTP / 1000000#))
'Worksheets("H2S partition").Cells(14 - LoopTP, 21) = HS * (33070 * (rhoTP - TDSTP / 1000000#))
'Worksheets("H2S partition").Cells(14 - LoopTP, 22) = S * (32056 * (rhoTP - TDSTP / 1000000#))
'Worksheets("H2S partition").Cells(14 - LoopTP, 23) = CO2aq * (62020 * (rhoTP - TDSTP / 1000000#))
'Worksheets("H2S partition").Cells(14 - LoopTP, 24) = HCO3 * (61019 * (rhoTP - TDSTP / 1000000#))
'Worksheets("H2S partition").Cells(14 - LoopTP, 25) = CO3 * (60019 * (rhoTP - TDSTP / 1000000#))
'
'
'If compositions(3, 3) > 0 Then Worksheets("H2S partition").Cells(14 - LoopTP, 26) = compositions(3, 2) / compositions(3, 3)
'If (H2Saq + HS) > 0 Then
'If compositions(3, 2) > 0 Then Worksheets("H2S partition").Cells(14 - LoopTP, 27) = compositions(3, 2) / (H2Saq + HS + S)
'If compositions(3, 3) > 0 Then Worksheets("H2S partition").Cells(14 - LoopTP, 28) = compositions(3, 3) / (H2Saq + HS + S)
'End If
'
'If LoopTP = 9 Then Worksheets("H2S partition").Cells(14 - LoopTP, 33) = nTH2S_before_precipitation
'End Sub
'Sub ShellB4_SpeciationOutput()
'Dim TDSTP
'TDSTP = TDS / rho25c * rhoTP
''Output speciations
'  If UseSI = 0 Then
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 1) = TF
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 2) = Ppsia
'  Else
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 1) = TC
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 2) = PBar
'  End If
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 3) = pH - DpHj
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 4) = H
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 5) = OH
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 6) = CO2aq
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 7) = HCO3
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 8) = CO3
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 9) = HAcaq
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 10) = AC
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 11) = H2Saq
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 12) = HS
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 13) = S
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 14) = NH3
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 15) = H2BO3
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 16) = H3SiO4
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 17) = H2SiO4
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 18) = mc(iNa)
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 19) = mc(iK)
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 20) = mc(iMg)
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 21) = mc(iCa)
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 22) = mc(iSr)
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 23) = mc(iBa)
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 24) = mc(iFe)
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 25) = mc(iZn)
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 26) = mc(iPb)
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 27) = ma(iCl)
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 28) = ma(iSO4)
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 29) = rhoTP
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 30) = compositions(1, 4) * 1000000#
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 32) = compositions(4, 4) * 1000000#
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 34) = compositions(14, 4) * 1000000#
'  If compositions(15, 4) > 0 And rhoTP > 0 Then
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 31) = compositions(1, 4) / compositions(15, 4) / 0.0180153 * (rhoTP - TDS / 1000000#) * 16.04 * 1000
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 33) = compositions(4, 4) / compositions(15, 4) / 0.0180153 * (rhoTP - TDS / 1000000#) * 30.07 * 1000
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 35) = compositions(14, 4) / compositions(15, 4) / 0.0180153 * (rhoTP - TDS / 1000000#) * 28.01 * 1000
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 36) = mass_phase(3) / (1 - TDS / 1000000# / rhoTP) 'Kg of salt solution
'  End If
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 37) = TDSTP
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 38) = total_moles
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 39) = compositions(15, 4)
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 40) = nTCO2_before_precipitation
'  Worksheets("Shell Speciation").Cells(14 - LoopTP, 41) = nTH2S_before_precipitation
'  If UseSI = 0 Then
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 1) = TF
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 2) = Ppsia
'  Else
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 1) = TC
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 2) = PBar
'  End If
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 3) = compositions(1, 2)
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 4) = compositions(2, 2)
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 5) = compositions(3, 2)
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 6) = compositions(4, 2)
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 7) = compositions(5, 2)
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 8) = compositions(6, 2)
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 9) = compositions(7, 2)
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 10) = compositions(8, 2)
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 11) = compositions(9, 2)
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 12) = compositions(10, 2)
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 13) = compositions(11, 2)
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 14) = compositions(12, 2)
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 15) = compositions(13, 2)
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 16) = compositions(14, 2)
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 17) = compositions(15, 2)
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 18) = density(1)
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 19) = mass_phase(1)
'  Worksheets("Shell Speciation").Cells(34 - LoopTP, 20) = MW_Phase(1)
'   If UseSI = 0 Then
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 1) = TF
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 2) = Ppsia
'  Else
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 1) = TC
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 2) = PBar
'  End If
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 3) = compositions(1, 3)
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 4) = compositions(2, 3)
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 5) = compositions(3, 3)
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 6) = compositions(4, 3)
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 7) = compositions(5, 3)
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 8) = compositions(6, 3)
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 9) = compositions(7, 3)
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 10) = compositions(8, 3)
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 11) = compositions(9, 3)
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 12) = compositions(10, 3)
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 13) = compositions(11, 3)
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 14) = compositions(12, 3)
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 15) = compositions(13, 3)
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 16) = compositions(14, 3)
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 17) = compositions(15, 3)
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 18) = density(2)
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 19) = mass_phase(2)
'  Worksheets("Shell Speciation").Cells(54 - LoopTP, 20) = MW_Phase(2)
''   If UseSI = 0 Then
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 1) = TF
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 2) = Ppsia
''  Else
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 1) = Tc
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 2) = PBar
''  End If
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 3) = compositions(1, 4)
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 4) = compositions(2, 4)
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 5) = compositions(3, 4)
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 6) = compositions(4, 4)
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 7) = compositions(5, 4)
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 8) = compositions(6, 4)
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 9) = compositions(7, 4)
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 10) = compositions(8, 4)
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 11) = compositions(9, 4)
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 12) = compositions(10, 4)
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 13) = compositions(11, 4)
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 14) = compositions(12, 4)
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 15) = compositions(13, 4)
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 16) = compositions(14, 4)
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 17) = compositions(15, 4)
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 18) = density(3)
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 19) = mass_phase(3)
''  Worksheets("Shell Speciation").Cells(74 - LoopTP, 20) = MW_Phase(3)
'
'End Sub
'



'Sub ShellA3_GuiResReconcile(myiosheet, myiocol)
'mytime = Time
'mySheet = myiosheet
'RunGUIResRec = 1
'If Worksheets(mySheet).Range("C48").Value > 0 Then MsgBox ("Base is added in this water.  Calculation takes longer than expected to equilibrate CO2 and H2S.")
''Worksheets(mySheet).Range("C110").Value = Empty
''Worksheets(mySheet).Range("C111").Value = Worksheets(mySheet).Range("C308").Value 'set C111 = Alk (m)
'nob = 1: j = 1
'Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
'Call Worksheets("Readme").ShellC2_GUIReadDataFromIO
'Dim rhoTPOld As Double, TDSTPOld As Double 'store rhtp and TDSTP at separator condition to calculate Alk at separator condition
'rhoTPOld = rhoTP: TDSTPOld = TDSTP
'If mass_w = 0 Then
'MsgBox ("Aqueous phase doesn't seem to present. Increase water cut and try again")
'End
'End If
'    TBH = Worksheets(mySheet).Cells(39, 3)
'        If UseSI = 1 Then TBH = TBH * 9 / 5 + 32
'        If TBH < 24.8 Then MsgBox ("Initial temperature is below 24.8F or -4C. Initial temperature will be set to 77 F or 25 C.")
'        If TBH < 24.8 Then
'            If UseSI = 1 Then
'            Worksheets(mySheet).Cells(39, j + 2) = 25
'            Else
'            Worksheets(mySheet).Cells(39, j + 2) = 77
'            End If
'        End If
'        If TBH < 24.8 Then TBH = 77
'        If TBH > 482 Then MsgBox ("Initial temperature is above 482 F. Initail temperature will be set to 482 F or 250 C.")
'        If TBH > 482 Then
'            If UseSI = 1 Then
'            Worksheets(mySheet).Cells(39, j + 2) = 250
'            Else
'            Worksheets(mySheet).Cells(39, j + 2) = 482
'            End If
'        End If
'        If TBH > 482 Then TBH = 482
'
'    PBH = Worksheets(mySheet).Cells(41, 3)
'        If UseSI = 1 Then PBH = PBH * 14.503774
'        If PBH < 12 Then MsgBox ("Initial pressure is below 12 psia or 0.827 bar. Initial pressure will be set to 14.7 psi or 1.01325 bar.")
'        If PBH < 12 Then
'            If UseSI = 1 Then
'            Worksheets(mySheet).Cells(41, j + 2) = 1.01325
'            Else
'            Worksheets(mySheet).Cells(41, j + 2) = 14.7
'            End If
'        End If
'        If PBH < 12 Then PBH = 14.7 'If P is zero, probably it is guage and therefore add 1 atm
'        If PBH > 30000 Then MsgBox ("Initial pressure is above 30,000 psi. Initial pressure will be set to 30,000 psia or 2,068.4 bar.")
'        If PBH > 30000 Then
'            If UseSI = 1 Then
'            Worksheets(mySheet).Cells(41, j + 2) = 30000 / 14.503774
'            Else
'            Worksheets(mySheet).Cells(41, j + 2) = 30000
'            End If
'        End If
'        If PBH > 30000 Then PBH = 30000
'
'    TF = TBH: Ppsia = PBH
'    TK = (TF - 32) * 5 / 9 + 273.15:    TC = (TF - 32) * 5 / 9
'    Patm = Ppsia / 14.696:    PBar = Ppsia / 14.503774
'Call ShellC4_GUI_RRH2Osaturation(myiosheet, myiocol)
'
''An index to tell program that the GoalSeek portion is being run.
'    'RunGoalSeek = 1: iGoalSeek = 0: RunSSP = 0: RunQualityControlChecks = 0
''    DepVarColumnNo = 3
''    DepVarRowNo = 110 'Cells C110 is Calcite SI
'DependentVariableTargetValue = 0
''    IndVarColumnNo = 3
''    IndVarRowNo = 111
'    'IndVariableValue0 = Worksheets(mySheet).Cells(IndVarRowNo, IndVarColumnNo).Value '*******
'    IndVariableValue0 = molAlkF
'        If IndVariableValue0 < 0.0000000001 Then
'            'Worksheets(mySheet).Cells(IndVarRowNo, IndVarColumnNo) = 10 'artitrarily set zero values to 10 to start diffrentiation.
'        molAlkF = 0.005 * mass_w
'        End If
'Alk = molAlkF / mass_w
''Call ShellC6_GUICarbonateSpeciation(myiosheet, myiocol)
'Call ShellC5_GuiCalciteSI(myiosheet, myiocol)
'    'DepVariableValue0 = Worksheets(mySheet).Cells(DepVarRowNo, DepVarColumnNo).Value
'    DepVariableValue0 = SICal
'    Targ = DependentVariableTargetValue
'    'IndVariableValue0 = Worksheets(mySheet).Cells(IndVarRowNo, IndVarColumnNo).Value
'    'IndVariableValue0 = Alk
'        If IndVariableValue0 <= 0# Then
'            MsgBox ("Initial value of independent variable must be a positive number.  If it is zero, enter some initial guess and start again.")
'            GoTo 2150
'        End If
'    DepOld = DepVariableValue0
'    IndNew = IndVariableValue0
'For iGoalSeek = 1 To 20
'    IndOld = IndNew
'    molAlkF = IndNew
'    Alk = molAlkF / mass_w
'Call ShellC5_GuiCalciteSI(myiosheet, myiocol)
'        'DepOld = Worksheets(mySheet).Cells(DepVarRowNo, DepVarColumnNo).Value
'        DepOld = SICal
'        'Set up and calculate the numerical derivative and then return variables to original values.**************************
'        'Worksheets(mySheet).Cells(IndVarRowNo, IndVarColumnNo) = 1.01 * IndNew   'Increase Ind0 by 10% to take numerical derivative.
'        molAlkF = 1.01 * IndNew   'Increase Ind0 by 10% to take numerical derivative.
'        Alk = molAlkF / mass_w
'Call ShellC5_GuiCalciteSI(myiosheet, myiocol)
'        'Dep1 = Worksheets(mySheet).Cells(DepVarRowNo, DepVarColumnNo).Value
'        Dep1 = SICal
'        Derivative = (Dep1 - DepOld) / (0.01 * IndOld)
''        Worksheets(mySheet).Cells(IndVarRowNo, IndVarColumnNo) = IndOld  'Return Ind variable in worksheet to original value
''        Worksheets(mySheet).Cells(DepVarRowNo, DepVarColumnNo) = DepOld  'Return Dep variable to value at Ind0
'            molAlkF = IndOld
'            Alk = molAlkF / mass_w
'            If Derivative = 0 Then
'
'                MsgBox ("Since dDep/dInd = 0.00, they are not a fuction of each other.  Calculation will be stopped.  See Notes at bottom of Input sheet.")
'                GoTo 2150   'Exit loop and calculation after printing message.
'            End If
'    'End of derivative routine. ***********************************************************************************************
'
'    IndNew = IndOld - (DepOld - DependentVariableTargetValue) / Derivative 'Calculate new value of Independent variable, IndNew
'        If Abs((DepOld - DependentVariableTargetValue) / Derivative) > Abs(IndOld) Then  'If the change in one iteration step exceeds the initial value, make changes according to the following rules:
'            If -1 * (DepOld - DependentVariableTargetValue) / Derivative > 0 Then IndNew = IndOld * 5 * Rnd() 'Take control of change by increasing only five times.
'            If -1 * (DepOld - DependentVariableTargetValue) / Derivative < 0 Then IndNew = IndOld / 5 * Rnd() 'Take control of change by decreasing only five times.
'        End If
'    'Worksheets(mySheet).Cells(IndVarRowNo, IndVarColumnNo) = IndNew  'Return Ind variable in worksheet to original value
'
'    If (Abs(IndNew - IndOld) / (IndNew + IndOld)) < 0.005 Or Abs(DepOld - DependentVariableTargetValue) < 0.005 Then  'Check for convergence of Newton Raphson routine.
'        GoTo 2150   'GoalSeek-like routine has converged; exit loop.
'    End If
'Next iGoalSeek
'
'2150 If iGoalSeek = 21 Then MsgBox ("GoalSeek-like routine has not converged in twenty iterations; re-run for another ten interations; put a new inital value in the cell being changed; or change the problem.")
'
'        Call ShellC5_GuiCalciteSI(myiosheet, myiocol)
'        'Call ShellB9_GuiOutput
'        Worksheets(mySheet).Range("C111").Value = molAlkF / mass_w * (61019 * (rhoTPOld - TDSTPOld / 1000000#)) 'Alk in mg/L at separtor condition
'        Worksheets(mySheet).Range("C112").Value = molAlkF / mass_w
'        Worksheets(mySheet).Range("C110").Value = SICal
'    mytime1 = Time
'   nettime = (mytime1 - mytime)
'        Worksheets(mySheet).Range("C318").Value = nettime * 24 * 60
'Dim NewAlk As Double, NewAlkm As Double, OldAlk As Double, OldAlkm As Double, UserAnswer As Variant
'
'OldAlk = Worksheets(myiosheet).Range("C280").Value2    ' Old Alkalinity in mg/L
'OldAlkm = Worksheets(myiosheet).Range("C308").Value2 ' Old Alkalinity total moles
''
'NewAlk = Worksheets(myiosheet).Range("C111").Value2
'NewAlkm = Worksheets(myiosheet).Range("C112").Value2
'' ========================================================================
'' Open Message Box to ask user if he would like to keep results or discard
'UserAnswer = MsgBox("Calcite Equilibration is Done! The New Alkalinity is " & Format(NewAlk, 0#) & " mg/L. " & "The Old Alkalinity is " & Format(OldAlk, 0#) & " mg/L. Would You Like to Replace the Old Alkalinity?", vbYesNo)
'
'If UserAnswer = vbYes Then
'    Worksheets(myiosheet).Range("C280").Value2 = NewAlk
'    Worksheets(myiosheet).Range("C308").Value2 = NewAlkm
'     'Call ShellB9_GuiOutput  All the other values are calculated at reservoir T, P and the data was not stored.
'Else
'End If
'
''        Worksheets(mySheet).Activate
''        Worksheets(mySheet).Cells(IndVarRowNo, IndVarColumnNo).Select  'Set curser on independent variable cell.
'''''******************************
''    MsgBox "Calculation is finished. Reservoir temperature is " & TBH & " F; Reservior pressure is " & PBH & " psia."
'
'    RunGoalSeek = 0: RunGUIResRec = 0 'Reset to zero for possible future runs that are not GoalSeek.
'
''   Worksheets(mySheet).Range("J10") = nettime * 24 * 3600
''Worksheets(mySheet).Select
''Worksheets(mySheet).Range("A2").Select
'End Sub
'
'Sub ShellA4_GuiQualityControl(myiosheet, myiocol)
'ReDim CaseCount(1)
'mySheet = myiosheet
'Worksheets(mySheet).Range("C83:c91").Value = Empty
'Worksheets(mySheet).Range("C119:c313").ClearContents
'RunH2SGUI = 1 'Signal that QC is to be outputted to mySheet
'    'If mySheet = "Simplified Input" Then RunSimpSSP = 1
'RunQualityControlChecks = 1: RunQualityControlChecks_II = 0: RunGoalSeek = 0: RunSSP = 0
'UseSR = 0: UseTPCalciteSheet = 0: Read_InputII = 0: NCount_II = 0: useEOS = 0
'LoopMixing = 0: UseMolal = 0: iTP = 0:  RunShellMultiflash = 0:
'Run_CalcConcFactor = 0:
'RunGoalSeek = 0: RunStatGoalSeek = 0: Run_MassTransfer = 0
'For i = 1 To 14
'InhSolLimit(i) = 0
'Next i
'For i = 1 To 20
'errmsg(i) = 0
'Next i
'deltaT = 0: deltaP = 0: DpHj = 0:
'For i = 1 To 15
'feed_Composition(i) = 0
'Next i
'nob_Input = 1: nob_InputII = 0: nob = nob_Input:
'If myiocol = "Stream1" Then CaseCount(1) = 1
'nob = 1:
'Worksheets(mySheet).Range("C55:c55") = 1
'
'Worksheets(mySheet).Range("C36").Value = Worksheets(mySheet).Range("C103").Value
'Worksheets(mySheet).Range("C37").Value = Worksheets(mySheet).Range("C103").Value * Worksheets(mySheet).Range("C104").Value / 100 / (1 - Worksheets(mySheet).Range("C104").Value / 100)
'If Worksheets(mySheet).Range("C104").Value > 0 Then
'Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
'Call Worksheets("Readme").ShellB6_GuiReadinAllData(myiosheet, myiocol)    'Reads in all Input concentrations, put in terms of molality and calculate total moles of CO2, H2S, CH4.
'Else
'MsgBox ("QC can only be run if water cut >0. Program abort.")
'End
'End If
'End Sub
'Sub ShellA5_GuiSepReconc(myiosheet, myiocol)
''Sub ShellA5_GuiSepReconc()
'Application.ScreenUpdating = False
'Application.EnableEvents = False
'
''Application.Calculation = xlCalculationManual
'Call ClearVariable
'   RunSSP = 1: RunGUISepRec = 1: RunH2SGUI = 1: RunH2SPartition = 1: RunGUIH2STune = 0
'Call InitializeOptionClearCellContent
'
'
'mySheet = myiosheet
'
'Worksheets(mySheet).Range("C119:c313").ClearContents
''Worksheets(mySheet).Range("H10:h91").ClearContents
'Worksheets(mySheet).Range("C55:c55") = 1
'Worksheets(mySheet).Range("C54:c54") = 1
'ReDim CaseCount(1), CaseCount_II(1)
'CaseCount(1) = 1
'nob = 1
''Worksheets(mySheet).Range("C35").Value = Worksheets(mySheet).Range("C102").Value * Worksheets(mySheet).Range("C103").Value / 1000
'Worksheets(mySheet).Range("C36").Value = Worksheets(mySheet).Range("C103").Value
'Worksheets(mySheet).Range("C37").Value = Worksheets(mySheet).Range("C103").Value * (Worksheets(mySheet).Range("C104").Value / 100) / (1 - Worksheets(mySheet).Range("C104").Value / 100)
'nob_Input = nob
''If nob > 1 Then Worksheets(mySheet).Cells(55, 8).Value = 1 ' UseEOSMix for mixed solution is set on Column H in ReadInDataA
'Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
'
'Call Worksheets("Readme").ShellB6_GuiReadinAllData(myiosheet, myiocol)       'Reads in all Input concentrations, put in terms of molality and calculate total moles of CO2, H2S, CH4.
''pbub_bar = bPoint_CS(myiosheet, myiocol, eosProps, kij, TK, zOutput, gNeut, aH2O)
''     Pbub_psia = pbub_bar * 14.503778 'convert Pbub(bar) to Pbub(psia)
'Call ShellB9_GuiOutput
'Call ShellD1_GUIErrormsgbox
''Amy add calculate bubblepoints. Note that there are problem with bPoints when z(1) or z(2) or Z(3)=0  Waiting for Paco's fix
''Worksheets("H2S partition").Activate
'
'Application.EnableEvents = True
'Application.ScreenUpdating = True
'
'MsgBox "Reconciliation is done for flow rate input at separator condition of " & VoMix(1) & " BPD of oil, " & watercut(1) * 100 & "% water cut, " & Round(TVol) & " F, " & Round(Pvol) & " psia."
'End Sub
'
'Sub ShellA6_GuiH2STuning(myiosheet, myiocol)
'    Application.EnableEvents = False
'    mySheet = myiosheet
'Call ClearVariable
'    RunH2SGUI = 1: RatioOilBPoints = 1: RunGUIH2STune = 1 'use for initial guess in speciation
'    nob = 1:
'    If mySheet = "SR_IO" Then j = 1
'    If mySheet = "SSF_IO" Then j = 6
'Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
'Call ShellC2_GUIReadDataFromIO
'    Worksheets(mySheet).Cells(138, j + 2) = Worksheets(mySheet).Cells(312, j + 2)
'    TF = Worksheets(mySheet).Cells(100, j + 2):
'    Ppsia = Worksheets(mySheet).Cells(101, j + 2):
'    If UseSI = 1 Then TF = Worksheets(mySheet).Cells(100, j + 2) * 9 / 5 + 32 'convert to F
'    If UseSI = 1 Then Ppsia = Worksheets(mySheet).Cells(101, j + 2) * 14.503774 'convert to psia
'    TK = (TF - 32) * 5 / 9 + 273.15: TC = (TF - 32) * 5 / 9
'    Patm = Ppsia / 14.696
'    PBar = Ppsia / 14.503774
'DependentVariableTargetValue = Worksheets(mySheet).Cells(105, j + 2) / 100 'as mole fr
'    IndVarColumnNo = j + 2
'    IndVarRowNo = 138
'IndVariableValue0 = Worksheets(mySheet).Cells(IndVarRowNo, IndVarColumnNo).Value   'IndVariableValue0=new nTH2S_before_precipitaion
'        If IndVariableValue0 < 0.0000000001 Then
'            Worksheets(mySheet).Cells(IndVarRowNo, IndVarColumnNo) = 1 'artitrarily set zero values to 10 to start diffrentiation.
'            IndVariableValue0 = 1
'        End If
'    DepVarColumnNo = j + 2
'    DepVarRowNo = 170
'DepVariableValue0 = Worksheets(mySheet).Cells(DepVarRowNo, DepVarColumnNo).Value
'
'Targ = DependentVariableTargetValue
'DepOld = DepVariableValue0
'IndNew = IndVariableValue0
'IndOld = IndNew
'For iGoalSeek = 1 To 20
'    For iNG = 1 To 15
'    z_before_precipitation(iNG) = z_before_precipitation(iNG) * Total_moles_before_precipitation
'    Next iNG
'    Total_moles_before_precipitation = Total_moles_before_precipitation - IndOld + IndNew
'    IndOld = IndNew
'    nTH2S_before_precipitation = IndNew
'    For iNG = 1 To 15
'    z_before_precipitation(iNG) = z_before_precipitation(iNG) / Total_moles_before_precipitation
'    Next iNG
'    z_before_precipitation(3) = nTH2S_before_precipitation / Total_moles_before_precipitation
'
'    Call ShellC3_GuiH2SSpeciation(myiosheet, myiocol)  'Obtain inital values of the DepOld function at the intial values of the independent variable.
'        DepOld = compositions(3, 2)
'    'Set up and calculate the numerical derivative and then return variables to original values.**************************
'    'Worksheets(mySheet).Cells(138, j + 2) = 1.01 * IndNew 'Increase Ind0 by 10% to take numerical derivative.
'    For iNG = 1 To 15
'    z_before_precipitation(iNG) = z_before_precipitation(iNG) * Total_moles_before_precipitation
'    Next iNG
'    Total_moles_before_precipitation = Total_moles_before_precipitation - nTH2S_before_precipitation + IndNew * 1.01
'    nTH2S_before_precipitation = IndNew * 1.01
'    For iNG = 1 To 15
'    z_before_precipitation(iNG) = z_before_precipitation(iNG) / Total_moles_before_precipitation
'    Next iNG
'    z_before_precipitation(3) = nTH2S_before_precipitation / Total_moles_before_precipitation
'    For iNG = 1 To 15
'    Worksheets(mySheet).Cells(138 + iNG, j + 2) = z_before_precipitation(iNG)
'    Next iNG
'
'    Call ShellC3_GuiH2SSpeciation(myiosheet, myiocol)   'Calcuate Dependent function, Dep1, at new value of independent variable, Ind1.
'        Dep1 = compositions(3, 2)
'        Derivative = (Dep1 - DepOld) / (0.01 * IndOld)
'    Worksheets(mySheet).Cells(IndVarRowNo, IndVarColumnNo) = IndOld  'Return Ind variable in worksheet to original value
'    Worksheets(mySheet).Cells(DepVarRowNo, DepVarColumnNo) = DepOld  'Return Dep variable to value at Ind0
'    If Derivative = 0 Then
'        Call ShellC3_GuiH2SSpeciation(myiosheet, myiocol) 'Reset all variables to original values in all sheets.
'        MsgBox ("Since dDep/dInd = 0.00, they are not a fuction of each other.  Calculation will be stopped.  See Notes at bottom of Input sheet.")
'        GoTo 2150   'Exit loop and calculation after printing message.
'    End If
'    'End of derivative routine. ***********************************************************************************************
'
'    IndNew = IndOld - (DepOld - DependentVariableTargetValue) / Derivative 'Calculate new value of Independent variable, IndNew
'        If Abs((DepOld - DependentVariableTargetValue) / Derivative) > Abs(IndOld) Then  'If the change in one iteration step exceeds the initial value, make changes according to the following rules:
'            If -1 * (DepOld - DependentVariableTargetValue) / Derivative > 0 Then IndNew = IndOld * 5 * Rnd() 'Take control of change by increasing only five times.
'            If -1 * (DepOld - DependentVariableTargetValue) / Derivative < 0 Then IndNew = IndOld / 5 * Rnd() 'Take control of change by decreasing only five times.
'        End If
'    Worksheets(mySheet).Cells(IndVarRowNo, IndVarColumnNo) = IndNew  'Return Ind variable in worksheet to original value
'
'    If (Abs(IndNew - IndOld) / (IndNew + IndOld)) < 0.0005 Or Abs(DepOld - DependentVariableTargetValue) < 0.000000001 Then 'Check for convergence of Newton Raphson routine.
'        GoTo 2150   'GoalSeek-like routine has converged; exit loop.
'    End If
'Next iGoalSeek
'
'2150 If iGoalSeek = 21 Then MsgBox ("GoalSeek-like routine has not converged in twenty iterations; re-run for another ten interations; put a new inital value in the cell being changed; or change the problem.")
'     Call ShellB9_GuiOutput
'
' '       Call ShellB8_GuiH2SpartitionRevisedZ  'Calcuate Dependent function, Dep1, at new value of independent variable, Ind1.
''        Worksheets("H2S partition").Activate
''        Worksheets("H2S partition").Cells(IndVarRowNo, IndVarColumnNo).Select  'Set curser on independent variable cell.
'RunGUIH2STune = 0
'Application.EnableEvents = True
'End Sub
'Sub ShellA7_Gui_SSF(myiosheet, myiocol)
'Application.ScreenUpdating = False
'Application.EnableEvents = False
''Application.Calculation = xlCalculationManual
''mytime = Time
'Call ClearVariable
'    RunGUISSF = 1
'mySheet = myiosheet:
'For i = 1 To 5   'Read the check boxes at the top of the Input sheet to determine which wells to use.
'    If Worksheets(mySheet).Shapes("Check Box" & " " & CStr(i)).ControlFormat.Value = xlOn Then
'        nob = nob + 1
'        End If
'Next i
'Worksheets(mySheet).Range("C55:H55") = 1
'Worksheets(mySheet).Range("H158:H182") = Empty
'Worksheets(mySheet).Range("H184:H208") = Empty
'Worksheets(mySheet).Range("H210:H310") = Empty
'Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
'j = 6
'Call Worksheets("Readme").ShellC2_GUIReadDataFromIO          'Read all data from IO
'
'    TF = Worksheets(mySheet).Cells(100, 8):
'    Ppsia = Worksheets(mySheet).Cells(101, 8):
'    If UseSI = 1 Then TF = Worksheets(mySheet).Cells(100, 8) * 9 / 5 + 32 'convert to F
'    If UseSI = 1 Then Ppsia = Worksheets(mySheet).Cells(101, 8) * 14.503774 'convert to psia
'    TK = (TF - 32) * 5 / 9 + 273.15: TC = (TF - 32) * 5 / 9
'    Patm = Ppsia / 14.696
'    PBar = Ppsia / 14.503774
'  'Returns HCO3, HS, aH, Ac, and a set of SI values for all solids at the present
'  'T, P, and compositions.
'If mass_w > 0 Then
'Call ShellC6_GUICarbonateSpeciation(myiosheet, myiocol)
'Else
'aH2O = 1: gNeut(2) = 1: gNeut(3) = 1
'Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
'                TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'If beta(3) > 0 Then 'set the water phase to be deionized water (No salt was carried over)
''Worksheets(mySheet).Cells(310, 8) = total_moles * 1000 * beta(3) * compositions(15, 4) * 0.01801528 'mass_w is only the aqueous phase H2O
''For n = 2 To 4
'' molnF(n) = 0
'' mn(n) = 0
''  Next n
''  For a = 1 To 13
''molaF(a) = 0
''ma(a) = 0
''  Next a
''  For c = 1 To 10
''molcF(c) = 0
''mc(c) = 0
'' Next c
''  Call CalcIonicStrength
'' rhoTP = CalcRhoTP(TK, TC, Pbar, Patm)
' Call ShellC6_GUICarbonateSpeciation(myiosheet, myiocol)
'
'End If
'End If
''Call ShellB3_H2SOutput
'Call ShellB9_GuiOutput
'Call ShellD1_GUIErrormsgbox
''Amy add calculate bubblepoints. Note that there are problem with bPoints when z(1) or z(2) or Z(3)=0  Waiting for Paco's fix
''Worksheets("H2S partition").Activate
'
''Set myRange = Worksheets(mySheet).Range("$b$119:$b$133").Offset(0, j)
''
''bubblepoint = bPoint(myRange, TK, gNeut(1), gNeut(2), aH2O)
''dewpoint = dPoint(myRange, TK, gNeut(1), gNeut(2), aH2O)
''If nob = 1 Then j = CaseCount(1)
''If nob > 1 Then j = 6
''j = 6
''    If UseSI = 1 Then
''    Worksheets(mySheet).Cells(155, j + 2) = bubblepoint
''    Else
''    Worksheets(mySheet).Cells(155, j + 2) = bubblepoint * 14.503774 'Output psia
''    End If
''        If bubblepoint = Null Then errmsg(18) = 18
''
''Call ErrorMsgBox
'RunGUISSF = 0
'
''mytime1 = Time
''nettime = (mytime1 - mytime)
''Worksheets(mySheet).Cells(318, j + 2).Value = nettime * 24 * 60
'Application.EnableEvents = True
'Application.ScreenUpdating = True
'End Sub
'Sub ShellA8_GuiSSFStreamTuning(myiosheet, myiocol)
'    Application.EnableEvents = False
'    mySheet = myiosheet:
'Call ClearVariable
'    RunH2SGUI = 1:  RatioOilBPoints = 1: 'use for initial guess in speciation
'    nob = 1:
'If myiocol = "Stream1" Then
'j = 1
'ElseIf myiocol = "Stream2" Then
'j = 2
'ElseIf myiocol = "Stream3" Then
'j = 3
'ElseIf myiocol = "Stream4" Then
'j = 4
'ElseIf myiocol = "Stream5" Then
'j = 5
'End If
'
'Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
'Call ShellC2_GUIReadDataFromIO
'    TF = Worksheets(mySheet).Cells(100, j + 2):
'    Ppsia = Worksheets(mySheet).Cells(101, j + 2):
'    If UseSI = 1 Then TF = Worksheets(mySheet).Cells(100, j + 2) * 9 / 5 + 32 'convert to F
'    If UseSI = 1 Then Ppsia = Worksheets(mySheet).Cells(101, j + 2) * 14.503774 'convert to psia
'    TK = (TF - 32) * 5 / 9 + 273.15: TC = (TF - 32) * 5 / 9
'    Patm = Ppsia / 14.696
'    PBar = Ppsia / 14.503774
'    SumofZ = 0
'    For iNG = 1 To 15
'    z(iNG) = z(iNG) / total_moles
'    SumofZ = SumofZ + z(iNG)
'    Next iNG
'    For iNG = 1 To 15 'normalize z to total of 1.00
'    z(iNG) = z(iNG) / SumofZ
'    z_before_precipitation(iNG) = z(iNG)
'    Next iNG
'    nTCO2_before_precipitation = z(2) * total_moles
'    nTH2S_before_precipitation = z(3) * total_moles
'Call ShellC3_GuiH2SSpeciation(myiosheet, myiocol)
'     Call ShellB9_GuiOutput
'     Call ShellD1_GUIErrormsgbox
'
'
'Application.EnableEvents = True
'End Sub
'
'Sub ShellB6_GuiReadinAllData(myiosheet, myiocol)
''Worksheets(mySheet).Activate
'
'ReDim Preserve NaMix(nob), MgMix(nob), CaMix(nob), SrMix(nob), BaMix(nob), FeMix(nob), ZnMix(nob), ClMix(nob), PbMix(nob), BrMix(nob)
'ReDim Preserve NH3Mix(nob), H3SiO4Mix(nob), H2SiO4Mix(nob), H4SiO4Mix(nob), H3BO3Mix(nob), CO2aqMix(nob), H2SaqMix(nob), HACaqMix(nob)
'ReDim Preserve UseH2SgasMix(nob), SO4Mix(nob), FMix(nob), TDSMix(nob), AlkMix(nob), TAcMix(nob), KMix(nob), MixFrac(nob)
'ReDim Preserve rho_Mix(nob), TH2SaqMix(nob), pHMeterStpMix(nob), TH4SiO4Mix(nob), TNH4Mix(nob), TH3BO3Mix(nob)
'ReDim Preserve SampleIDMix(nob), SampleDateMix(nob), OperatorMix(nob), WellNameMix(nob), FieldMix(nob), StateMix(nob) As String
'ReDim Preserve VgTPMix(nob), VoMix(nob), VwMix(nob), VMeOHMix(nob), VMEGMix(nob), oilAPIgravMix(nob), gasSpGravMix(nob), MixFracGas(nob)
'ReDim Preserve nTCO2Mix(nob), nTCH4Mix(nob), nTH2SMix(nob), mass_w_Mix(nob), mass_o_Mix(nob), MixFracOil(nob)
'ReDim Preserve mass_MeOH_mix(nob), mass_MEG_mix(nob), Qheat(nob), yCO2Mix(nob), yH2SMix(nob), yCH4Mix(nob)
'ReDim Preserve YCH4stpmix(nob), RatioOilBPointsmix(nob), CalculatedTDSMix(nob), rho25CMix(nob)
'ReDim Preserve HstpMix(nob), OHstpMix(nob), HCO3stpMix(nob), CO3stpMix(nob), ACstpMix(nob), HSstpMix(nob), NH4STPMix(nob), H2BO3stpMix(nob)
'ReDim Preserve HCO3AlkMix(nob), CO3AlkMix(nob), HAlkMix(nob), OHAlkMix(nob)
'ReDim Preserve ConcFactor(nob), watercut(nob)
'ReDim Preserve CaseCount(nob), CaseCount_II(nob)
'ReDim Preserve TCO2Mix(nob), TofpH(nob), PofpH(nob), TofVol(nob), PofVol(nob)
'ReDim Preserve OilDensityMix(nob), GasDensityMix(nob), WaterDensityMix(nob)
'ReDim Preserve UseTPpHMix(nob), UseTPVolMix(nob), useEOSmix(nob)
'ReDim Preserve molc(NumCat, nob), mola(NumAn, nob), moln(NumNeut, nob) ' Convert all ions to moles
'ReDim Preserve molAlk(nob), molTAC(nob), molTNH4(nob), molTH3BO3(nob), molTH2Saq(nob), molTH4SiO4(nob)
'ReDim Preserve mol_g_origMix(nob), mol_o_OrigMix(nob), mol_w_OrigMix(nob), mol_g_finalMix(nob), mol_o_finalMix(nob), mol_w_finalMix(nob), mol_w_evapMix(nob)
'ReDim Preserve Total_molesMix(nob), SumofZMix(nob), nTCO2MixEOS(nob), nTH2SMixEOS(nob), zMix(nob, 20)
'ReDim Preserve usepHmix(nob)
'ReDim eosProps(nComponents, 1 To 6), kij(nComponents, nComponents)
'ReDim density(3), compositions(15, 4), phi(15, 3), Compr(3), beta(3), zOutput(15)
'    For iRead = 1 To nob  'For any number of mixing on Input sheet "nob=number of brines selected"; same for three "what ifs at bottom of each page".  For mixing page "nob = 2", the first two column of data.
'       j = CaseCount(iRead)
'       kk = iRead
'    Call ReadInputPartA(kk)
'    Next iRead
'    If RunGoalSeek = 1 Then
'    HCO3AlkMix(kk) = Worksheets(mySheet).Cells(111, j + 2).Value
'    If UseMolal = 0 Then HCO3AlkMix(kk) = HCO3AlkMix(kk) / (61019 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    AlkMix(kk) = HCO3AlkMix(kk) + 2 * CO3AlkMix(kk) - HAlkMix(kk) + OHAlkMix(kk)
'    TCO2Mix(kk) = HCO3AlkMix(kk) + CO3AlkMix(kk)
'    End If
'
'
' For iRead = 1 To nob
'    j = CaseCount(iRead)
'    kk = iRead
'    Call ReadInputPartC(kk)
'    Worksheets(mySheet).Cells(30, j + 2).Value = rho25c  'Thermodynamic density.
'Next iRead
'    'If RunGUISepRec = 1 Then
'    TofVol(kk) = Worksheets(mySheet).Cells(100, j + 2).Value
'    PofVol(kk) = Worksheets(mySheet).Cells(101, j + 2).Value
'    If UseSI = 1 Then
'    TofVol(kk) = TofVol(kk) * 9 / 5 + 32 ' Convert Input TC unit to TF unit
'    PofVol(kk) = PofVol(kk) * 14.503774 ' Convert Input P (Bar) unit to Ppsia unit
'    End If
'    TVol = TofVol(kk): Pvol = PofVol(kk)
'    'End If
'For iRead = 1 To nob
'       j = CaseCount(iRead)
'       kk = iRead
'       Call ShellC1_GuiReadInputPartD(kk, myiosheet, myiocol)
'Next iRead
'
'End Sub
'
'Sub ShellB9_GuiOutput()
'Dim TDSTP As Double
'
'If mass_w > 0 Then 'Note that mass_w only calculated when there is brine in the stream, it is not calc when mixing two gases or two oils (no salt present)
'mt = fTPFunc(0) 'set T, P to STP for final brine calculation
'    rho25c = CalcRhoTP(TK, TC, PBar, Patm)
'TDS = 0: CalculateTDSDen = 0 'Calculate TDS from density
'        For iden = 2 To NumCat
'            CalculateTDSDen = CalculateTDSDen + 0.001 * mc(iden) * MWCat(iden)  '=Sum of g salt/Kg H2O
'        Next iden
'        For iden = 2 To NumAn
'            CalculateTDSDen = CalculateTDSDen + 0.001 * ma(iden) * MWAn(iden)
'        Next iden
'        For iden = 2 To NumNeut
'            CalculateTDSDen = CalculateTDSDen + 0.001 * mn(iden) * MWNeut(iden)
'        Next iden
'            TDS = CalculateTDSDen / (1 + CalculateTDSDen) * rho25c * 1000000# 'TDS in unit of mg/L,  numerator=(Kgsalt/KgH2O), denometer=(1+Kgsalt/KgH2O)=(Kgsoln/KgH2O);density Kgsoln/Lsoln
'TDSTP = TDS / rho25c * rhoTP
'End If
'
'
''If nob = 1 Then
''j = CaseCount(1)
''Else
''j = 6
''End If
'If RunGUISSF = 1 Then j = 6
'
'If RunGUIResRec = 1 Then j = 1
'If RunGUISepRec = 1 Then j = 1
'If mySheet = "SR_IO" And RunGUIH2STune = 1 Then j = 1
'If mySheet = "SSF_IO" And RunGUIH2STune = 1 Then j = 6
'TF = Worksheets(mySheet).Cells(100, j + 2): ' Reset T, P to the current calculation, for calculation of fugacity
'Ppsia = Worksheets(mySheet).Cells(101, j + 2):
'
''If RunGUISSF <> 1 Then
'If RunGUIH2STune <> 1 Then
'For iNG = 1 To 15
'Worksheets(mySheet).Cells(118 + iNG, j + 2) = z_before_precipitation(iNG)
'Worksheets(mySheet).Cells(138 + iNG, j + 2) = z_before_precipitation(iNG)
'Next iNG
''Output speciations
'Worksheets(mySheet).Cells(134, j + 2) = Total_moles_before_precipitation / 1000
'Worksheets(mySheet).Cells(154, j + 2) = Total_moles_before_precipitation / 1000
'Else
'For iNG = 1 To 15
'Worksheets(mySheet).Cells(138 + iNG, j + 2) = z_before_precipitation(iNG)
'Next iNG
'Worksheets(mySheet).Cells(154, j + 2) = Total_moles_before_precipitation / 1000
'End If
'If RunGUISepRec = 1 Then Worksheets(mySheet).Cells(155, j + 2) = Total_moles_before_precipitation / 1000
''End If
''Worksheets(mySheet).Cells(155, j + 2) = Pbub_psia
''If RunH2SGoalSeek = 1 Then
'''Output fugacity, PH2S, total moles of H2S for GoalSeek H2S
''If beta(1) > 0 Then 'when gas is present
''If UseSI = 0 Then Worksheets(mySheet).Cells(136, j + 2) = Ppsia * compositions(3, 2) * phi(3, 1)
''If UseSI = 1 Then Worksheets(mySheet).Cells(136, j + 2) = PBar * compositions(3, 2) * phi(3, 1)
''ElseIf beta(2) > 0 Then 'when oil is present
''If UseSI = 0 Then Worksheets(mySheet).Cells(136, j + 2) = Ppsia * compositions(3, 3) * phi(3, 2)
''If UseSI = 1 Then Worksheets(mySheet).Cells(136, j + 2) = PBar * compositions(3, 3) * phi(3, 2)
''ElseIf beta(2) = 0 And beta(3) > 0 Then
''If UseSI = 0 Then Worksheets(mySheet).Cells(136, j + 2) = Ppsia * compositions(3, 4) * phi(3, 3)
''If UseSI = 1 Then Worksheets(mySheet).Cells(136, j + 2) = PBar * compositions(3, 4) * phi(3, 3)
''End If
''If beta(1) > 0 Then  'when gas is present
''If UseSI = 0 Then Worksheets(mySheet).Cells(137, j + 2) = Ppsia * compositions(3, 2)
''If UseSI = 1 Then Worksheets(mySheet).Cells(137, j + 2) = PBar * compositions(3, 2)
''Worksheets(mySheet).Cells(138, j + 2) = nTH2S_before_precipitation
''End If
''End If
'If beta(1) > 0 Then 'when gas is present
'  Worksheets(mySheet).Cells(158, j + 2) = beta(1) * Total_moles_before_precipitation / 1000 'Kmoles
'  Worksheets(mySheet).Cells(159, j + 2) = beta(1) * Total_moles_before_precipitation * MW_Phase(1) / 1000 'Kg
'  Worksheets(mySheet).Cells(160, j + 2) = beta(1) * Total_moles_before_precipitation * MW_Phase(1) / 1000 / density(1) / 28.31685 / 1000 'MSCF
'  Worksheets(mySheet).Cells(161, j + 2) = beta(1)
'  If beta(3) > 0 And beta(2) > 0 Then
'    Worksheets(mySheet).Cells(162, j + 2) = beta(1) * MW_Phase(1) / (beta(1) * MW_Phase(1) + beta(2) * MW_Phase(2) + beta(3) * MW_Phase(3))
'    Worksheets(mySheet).Cells(163, j + 2) = (beta(1) * MW_Phase(1) / density(1)) / ((beta(1) * MW_Phase(1) / density(1)) + (beta(2) * MW_Phase(2) / density(2)) + (beta(3) * MW_Phase(3) / density(3)))
'  ElseIf beta(3) = 0 And beta(2) > 0 Then
'    Worksheets(mySheet).Cells(162, j + 2) = beta(1) * MW_Phase(1) / (beta(1) * MW_Phase(1) + beta(2) * MW_Phase(2))
'    Worksheets(mySheet).Cells(163, j + 2) = (beta(1) * MW_Phase(1) / density(1)) / ((beta(1) * MW_Phase(1) / density(1)) + (beta(2) * MW_Phase(2) / density(2)))
'  ElseIf beta(3) > 0 And beta(2) = 0 Then
'    Worksheets(mySheet).Cells(162, j + 2) = beta(1) * MW_Phase(1) / (beta(1) * MW_Phase(1) + beta(3) * MW_Phase(3))
'    Worksheets(mySheet).Cells(163, j + 2) = (beta(1) * MW_Phase(1) / density(1)) / ((beta(1) * MW_Phase(1) / density(1)) + (beta(3) * MW_Phase(3) / density(3)))
'  ElseIf beta(3) = 0 And beta(2) = 0 Then
'       Worksheets(mySheet).Cells(163, j + 2) = 1
'  End If
'  Worksheets(mySheet).Cells(164, j + 2) = Compr(1)
'  Worksheets(mySheet).Cells(165, j + 2) = MW_Phase(1)
'  Worksheets(mySheet).Cells(166, j + 2) = MW_Phase(1) / density(1)
'  Worksheets(mySheet).Cells(167, j + 2) = density(1)
'  Worksheets(mySheet).Cells(168, j + 2) = compositions(1, 2)
'  Worksheets(mySheet).Cells(169, j + 2) = compositions(2, 2)
'  Worksheets(mySheet).Cells(170, j + 2) = compositions(3, 2)
'  Worksheets(mySheet).Cells(171, j + 2) = compositions(4, 2)
'  Worksheets(mySheet).Cells(172, j + 2) = compositions(5, 2)
'  Worksheets(mySheet).Cells(173, j + 2) = compositions(6, 2)
'  Worksheets(mySheet).Cells(174, j + 2) = compositions(7, 2)
'  Worksheets(mySheet).Cells(175, j + 2) = compositions(8, 2)
'  Worksheets(mySheet).Cells(176, j + 2) = compositions(9, 2)
'  Worksheets(mySheet).Cells(177, j + 2) = compositions(10, 2)
'  Worksheets(mySheet).Cells(178, j + 2) = compositions(11, 2)
'  Worksheets(mySheet).Cells(179, j + 2) = compositions(12, 2)
'  Worksheets(mySheet).Cells(180, j + 2) = compositions(13, 2)
'  Worksheets(mySheet).Cells(181, j + 2) = compositions(14, 2)
'  Worksheets(mySheet).Cells(182, j + 2) = compositions(15, 2)
'End If
'If beta(2) > 0 Then
'  Worksheets(mySheet).Cells(184, j + 2) = beta(2) * Total_moles_before_precipitation / 1000 'Kmoles
'  Worksheets(mySheet).Cells(185, j + 2) = beta(2) * Total_moles_before_precipitation * MW_Phase(2) / 1000 'Kg
'  Worksheets(mySheet).Cells(186, j + 2) = beta(2) * Total_moles_before_precipitation * MW_Phase(2) / 1000 / density(2) / 158.9873
'  Worksheets(mySheet).Cells(187, j + 2) = beta(2)
'    If beta(1) > 0 And beta(3) > 0 Then
'      Worksheets(mySheet).Cells(188, j + 2) = beta(2) * MW_Phase(2) / (beta(1) * MW_Phase(1) + beta(2) * MW_Phase(2) + beta(3) * MW_Phase(3))
'      Worksheets(mySheet).Cells(189, j + 2) = (beta(2) * MW_Phase(2) / density(2)) / ((beta(1) * MW_Phase(1) / density(1)) + (beta(2) * MW_Phase(2) / density(2)) + (beta(3) * MW_Phase(3) / density(3)))
'    ElseIf beta(3) = 0 And beta(1) > 0 Then
'      Worksheets(mySheet).Cells(188, j + 2) = beta(2) * MW_Phase(2) / (beta(1) * MW_Phase(1) + beta(2) * MW_Phase(2))
'      Worksheets(mySheet).Cells(189, j + 2) = (beta(2) * MW_Phase(2) / density(2)) / ((beta(1) * MW_Phase(1) / density(1)) + (beta(2) * MW_Phase(2) / density(2)))
'    ElseIf beta(1) = 0 And beta(3) > 0 Then
'      Worksheets(mySheet).Cells(188, j + 2) = beta(2) * MW_Phase(2) / (beta(2) * MW_Phase(2) + beta(3) * MW_Phase(3))
'      Worksheets(mySheet).Cells(189, j + 2) = (beta(2) * MW_Phase(2) / density(2)) / ((beta(2) * MW_Phase(2) / density(2)) + (beta(3) * MW_Phase(3) / density(3)))
'    ElseIf beta(1) = 0 And beta(3) = 0 Then
'       Worksheets(mySheet).Cells(189, j + 2) = 1
'    End If
'
'  Worksheets(mySheet).Cells(190, j + 2) = Compr(2)
'  Worksheets(mySheet).Cells(191, j + 2) = MW_Phase(2)
'  Worksheets(mySheet).Cells(192, j + 2) = MW_Phase(2) / density(2)
'  Worksheets(mySheet).Cells(193, j + 2) = density(2)
'
'  Worksheets(mySheet).Cells(194, j + 2) = compositions(1, 3)
'  Worksheets(mySheet).Cells(195, j + 2) = compositions(2, 3)
'  Worksheets(mySheet).Cells(196, j + 2) = compositions(3, 3)
'  Worksheets(mySheet).Cells(197, j + 2) = compositions(4, 3)
'  Worksheets(mySheet).Cells(198, j + 2) = compositions(5, 3)
'  Worksheets(mySheet).Cells(199, j + 2) = compositions(6, 3)
'  Worksheets(mySheet).Cells(200, j + 2) = compositions(7, 3)
'  Worksheets(mySheet).Cells(201, j + 2) = compositions(8, 3)
'  Worksheets(mySheet).Cells(202, j + 2) = compositions(9, 3)
'  Worksheets(mySheet).Cells(203, j + 2) = compositions(10, 3)
'  Worksheets(mySheet).Cells(204, j + 2) = compositions(11, 3)
'  Worksheets(mySheet).Cells(205, j + 2) = compositions(12, 3)
'  Worksheets(mySheet).Cells(206, j + 2) = compositions(13, 3)
'  Worksheets(mySheet).Cells(207, j + 2) = compositions(14, 3)
'  Worksheets(mySheet).Cells(208, j + 2) = compositions(15, 3)
'End If
'If beta(3) > 0 Then
'  Worksheets(mySheet).Cells(210, j + 2) = beta(3) * Total_moles_before_precipitation / 1000 'Kmoles
'  Worksheets(mySheet).Cells(211, j + 2) = beta(3) * Total_moles_before_precipitation * MW_Phase(3) / 1000 'Kg
'  If mass_w > 0 Then
'  Worksheets(mySheet).Cells(212, j + 2) = mass_w / (rhoTP - TDSTP / 1000000#) / 158.9873 'bbl
'  Else
'  Worksheets(mySheet).Cells(212, j + 2) = beta(3) * Total_moles_before_precipitation * MW_Phase(3) / 1000 / rhoTP / 158.9873
'  End If
'  Worksheets(mySheet).Cells(213, j + 2) = beta(3)
'
'    If beta(1) > 0 And beta(2) > 0 Then
'     Worksheets(mySheet).Cells(214, j + 2) = beta(3) * MW_Phase(3) / (beta(1) * MW_Phase(1) + beta(2) * MW_Phase(2) + beta(3) * MW_Phase(3))
'     Worksheets(mySheet).Cells(215, j + 2) = (beta(3) * MW_Phase(3) / density(3)) / ((beta(1) * MW_Phase(1) / density(1)) + (beta(2) * MW_Phase(2) / density(2)) + (beta(3) * MW_Phase(3) / density(3)))
'    ElseIf beta(2) = 0 And beta(1) > 0 Then
'      Worksheets(mySheet).Cells(214, j + 2) = beta(3) * MW_Phase(3) / (beta(1) * MW_Phase(1) + beta(3) * MW_Phase(3))
'      Worksheets(mySheet).Cells(215, j + 2) = (beta(3) * MW_Phase(3) / density(3)) / ((beta(1) * MW_Phase(1) / density(1)) + (beta(3) * MW_Phase(3) / density(3)))
'    ElseIf beta(1) = 0 And beta(2) > 0 Then
'      Worksheets(mySheet).Cells(214, j + 2) = beta(3) * MW_Phase(3) / (beta(2) * MW_Phase(2) + beta(3) * MW_Phase(3))
'      Worksheets(mySheet).Cells(215, j + 2) = (beta(3) * MW_Phase(3) / density(3)) / ((beta(2) * MW_Phase(2) / density(2)) + (beta(3) * MW_Phase(3) / density(3)))
'    ElseIf beta(1) = 0 And beta(2) = 0 Then
'       Worksheets(mySheet).Cells(215, j + 2) = 1
'    End If
'  Worksheets(mySheet).Cells(216, j + 2) = Compr(3)
'  Worksheets(mySheet).Cells(217, j + 2) = MW_Phase(3)
'  Worksheets(mySheet).Cells(218, j + 2) = MW_Phase(3) / density(3)
'  Worksheets(mySheet).Cells(219, j + 2) = density(3)
'
' Worksheets(mySheet).Cells(220, j + 2) = compositions(1, 4)
'  Worksheets(mySheet).Cells(221, j + 2) = compositions(2, 4)
'  Worksheets(mySheet).Cells(222, j + 2) = compositions(3, 4)
'  Worksheets(mySheet).Cells(223, j + 2) = compositions(4, 4)
'  Worksheets(mySheet).Cells(224, j + 2) = compositions(5, 4)
'  Worksheets(mySheet).Cells(225, j + 2) = compositions(6, 4)
'  Worksheets(mySheet).Cells(226, j + 2) = compositions(7, 4)
'  Worksheets(mySheet).Cells(227, j + 2) = compositions(8, 4)
'  Worksheets(mySheet).Cells(228, j + 2) = compositions(9, 4)
'  Worksheets(mySheet).Cells(229, j + 2) = compositions(10, 4)
'  Worksheets(mySheet).Cells(230, j + 2) = compositions(11, 4)
'  Worksheets(mySheet).Cells(231, j + 2) = compositions(12, 4)
'  Worksheets(mySheet).Cells(232, j + 2) = compositions(13, 4)
'  Worksheets(mySheet).Cells(233, j + 2) = compositions(14, 4)
'  Worksheets(mySheet).Cells(234, j + 2) = compositions(15, 4)
'End If
'If beta(1) > 0 Then 'when gas is present
'Worksheets(mySheet).Cells(236, j + 2) = Ppsia * compositions(1, 2) * phi(1, 1)
'Worksheets(mySheet).Cells(237, j + 2) = Ppsia * compositions(2, 2) * phi(2, 1)
'Worksheets(mySheet).Cells(238, j + 2) = Ppsia * compositions(3, 2) * phi(3, 1)
'Worksheets(mySheet).Cells(239, j + 2) = Ppsia * compositions(4, 2) * phi(4, 1)
'Worksheets(mySheet).Cells(240, j + 2) = Ppsia * compositions(5, 2) * phi(5, 1)
'Worksheets(mySheet).Cells(241, j + 2) = Ppsia * compositions(6, 2) * phi(6, 1)
'Worksheets(mySheet).Cells(242, j + 2) = Ppsia * compositions(7, 2) * phi(7, 1)
'Worksheets(mySheet).Cells(243, j + 2) = Ppsia * compositions(8, 2) * phi(8, 1)
'Worksheets(mySheet).Cells(244, j + 2) = Ppsia * compositions(9, 2) * phi(9, 1)
'Worksheets(mySheet).Cells(245, j + 2) = Ppsia * compositions(10, 2) * phi(10, 1)
'Worksheets(mySheet).Cells(246, j + 2) = Ppsia * compositions(11, 2) * phi(11, 1)
'Worksheets(mySheet).Cells(247, j + 2) = Ppsia * compositions(12, 2) * phi(12, 1)
'Worksheets(mySheet).Cells(248, j + 2) = Ppsia * compositions(13, 2) * phi(13, 1)
'Worksheets(mySheet).Cells(249, j + 2) = Ppsia * compositions(14, 2) * phi(14, 1)
'Worksheets(mySheet).Cells(250, j + 2) = Ppsia * compositions(15, 2) * phi(15, 1)
'ElseIf beta(2) > 0 Then 'when oil is present
'Worksheets(mySheet).Cells(236, j + 2) = Ppsia * compositions(1, 3) * phi(1, 2)
'Worksheets(mySheet).Cells(237, j + 2) = Ppsia * compositions(2, 3) * phi(2, 2)
'Worksheets(mySheet).Cells(238, j + 2) = Ppsia * compositions(3, 3) * phi(3, 2)
'Worksheets(mySheet).Cells(239, j + 2) = Ppsia * compositions(4, 3) * phi(4, 2)
'Worksheets(mySheet).Cells(240, j + 2) = Ppsia * compositions(5, 3) * phi(5, 2)
'Worksheets(mySheet).Cells(241, j + 2) = Ppsia * compositions(6, 3) * phi(6, 2)
'Worksheets(mySheet).Cells(242, j + 2) = Ppsia * compositions(7, 3) * phi(7, 2)
'Worksheets(mySheet).Cells(243, j + 2) = Ppsia * compositions(8, 3) * phi(8, 2)
'Worksheets(mySheet).Cells(244, j + 2) = Ppsia * compositions(9, 3) * phi(9, 2)
'Worksheets(mySheet).Cells(245, j + 2) = Ppsia * compositions(10, 3) * phi(10, 2)
'Worksheets(mySheet).Cells(246, j + 2) = Ppsia * compositions(11, 3) * phi(11, 2)
'Worksheets(mySheet).Cells(247, j + 2) = Ppsia * compositions(12, 3) * phi(12, 2)
'Worksheets(mySheet).Cells(248, j + 2) = Ppsia * compositions(13, 3) * phi(13, 2)
'Worksheets(mySheet).Cells(249, j + 2) = Ppsia * compositions(14, 3) * phi(14, 2)
'Worksheets(mySheet).Cells(250, j + 2) = Ppsia * compositions(15, 3) * phi(15, 2)
'End If
'If beta(3) > 0 Then
'  Worksheets(mySheet).Cells(252, j + 2) = rhoTP
'  Worksheets(mySheet).Cells(253, j + 2) = pH - DpHj
'
'  Worksheets(mySheet).Cells(254, j + 2) = CO2aq * (62030 * (rhoTP - TDSTP / 1000000#))
'  Worksheets(mySheet).Cells(255, j + 2) = H2Saq * (34080 * (rhoTP - TDSTP / 1000000#))
'  Worksheets(mySheet).Cells(256, j + 2) = HAcaq * (60054 * (rhoTP - TDSTP / 1000000#))
'  'Worksheets(mySheet).Cells(257, j + 2) = NH3 * (17031 * (rhoTP - TDSTP / 1000000#))
'
'  Worksheets(mySheet).Cells(258, j + 2) = OH * ((rhoTP - TDSTP / 1000000#))
'  Worksheets(mySheet).Cells(259, j + 2) = ma(iCl) * (35450 * (rhoTP - TDSTP / 1000000#))
'  Worksheets(mySheet).Cells(260, j + 2) = AC * (59054 * (rhoTP - TDSTP / 1000000#))
'  Worksheets(mySheet).Cells(261, j + 2) = HCO3 * (61019 * (rhoTP - TDSTP / 1000000#))
'  Worksheets(mySheet).Cells(262, j + 2) = CO3 * (60019 * (rhoTP - TDSTP / 1000000#))
'  Worksheets(mySheet).Cells(263, j + 2) = ma(iSO4) * (96064 * (rhoTP - TDSTP / 1000000#))
'  Worksheets(mySheet).Cells(264, j + 2) = HS * (33073 * (rhoTP - TDSTP / 1000000#))
'
'  Worksheets(mySheet).Cells(266, j + 2) = ma(iBr) * (79904 * (rhoTP - TDSTP / 1000000#))
'  Worksheets(mySheet).Cells(267, j + 2) = S * (32065 * (rhoTP - TDSTP / 1000000#))
'  'Worksheets(mySheet).Cells(265, j + 2) = H2BO3 * (60825 * (rhoTP - TDSTP / 1000000#))
'  'Worksheets(mySheet).Cells(266, j + 2) = H3SiO4 * (59070 * (rhoTP - TDSTP / 1000000#))
'  'Worksheets(mySheet).Cells(267, j + 2) = H2SiO4 * (58060 * (rhoTP - TDSTP / 1000000#))
'
'  Worksheets(mySheet).Cells(269, j + 2) = H * (rhoTP - TDSTP / 1000000#) 'unit N
'  Worksheets(mySheet).Cells(270, j + 2) = mc(iNa) * (22990 * (rhoTP - TDSTP / 1000000#))
'  Worksheets(mySheet).Cells(271, j + 2) = mc(iK) * (39102 * (rhoTP - TDSTP / 1000000#))
'  Worksheets(mySheet).Cells(272, j + 2) = mc(iMg) * (24305 * (rhoTP - TDSTP / 1000000#))
'  Worksheets(mySheet).Cells(273, j + 2) = mc(iCa) * (40080 * (rhoTP - TDSTP / 1000000#))
'  Worksheets(mySheet).Cells(274, j + 2) = mc(iSr) * (87620 * (rhoTP - TDSTP / 1000000#))
'  Worksheets(mySheet).Cells(275, j + 2) = mc(iBa) * (137330 * (rhoTP - TDSTP / 1000000#))
'  Worksheets(mySheet).Cells(276, j + 2) = mc(iFe) * (55847 * (rhoTP - TDSTP / 1000000#))
'  Worksheets(mySheet).Cells(277, j + 2) = mc(iZn) * (65380 * (rhoTP - TDSTP / 1000000#))
'  Worksheets(mySheet).Cells(278, j + 2) = mc(iPb) * (207200 * (rhoTP - TDSTP / 1000000#))
'
'  Worksheets(mySheet).Cells(279, j + 2) = TDSTP
'  Worksheets(mySheet).Cells(280, j + 2) = Alk * (61019 * (rhoTP - TDSTP / 1000000#))
'  Worksheets(mySheet).Cells(281, j + 2) = TAc * (60062 * (rhoTP - TDSTP / 1000000#))
'  For n = 2 To 4
'  Worksheets(mySheet).Cells(280 + n, j + 2) = mn(n)
'  Next n
'  For a = 1 To 9
'  Worksheets(mySheet).Cells(285 + a, j + 2) = ma(a)
'  Next a
'  Worksheets(mySheet).Cells(295, j + 2) = S
'  For c = 1 To 10
'  Worksheets(mySheet).Cells(296 + c, j + 2) = mc(c)
'  Next c
'  Worksheets(mySheet).Cells(308, j + 2) = Alk
'  Worksheets(mySheet).Cells(309, j + 2) = TAc
'  Worksheets(mySheet).Cells(310, j + 2) = mass_w 'Kg of pure water
'End If
'  Worksheets(mySheet).Cells(311, j + 2) = nTCO2_before_precipitation
'  Worksheets(mySheet).Cells(312, j + 2) = nTH2S_before_precipitation
'  Worksheets(mySheet).Cells(313, j + 2) = z_before_precipitation(15) * Total_moles_before_precipitation
'  Worksheets(mySheet).Cells(314, j + 2) = phi(2, 1)
'  Worksheets(mySheet).Cells(315, j + 2) = phi(2, 2)
'  Worksheets(mySheet).Cells(316, j + 2) = phi(3, 1)
'  Worksheets(mySheet).Cells(317, j + 2) = phi(3, 2)
'
'End Sub
'
'
'Sub ShellB7_GUIQCCalculations(kk, j)
'mt = fTPFunc(0) 'Reset T,P to STP condition for QC calculation, for fV0
'    If UseMolal = 0 Then
'    AlkMix(kk) = Worksheets(mySheet).Cells(24, j + 2).Value / (61019 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
'    AlkMix(kk) = AlkMix(kk) + 2 * Worksheets(mySheet).Cells(25, j + 2).Value / (60019 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
'    AlkMix(kk) = AlkMix(kk) + Worksheets(mySheet).Cells(48, j + 2).Value / (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#)
'    AlkMix(kk) = AlkMix(kk) - Worksheets(mySheet).Cells(47, j + 2).Value / (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#)
'    TAcMix(kk) = Worksheets(mySheet).Cells(26, j + 2).Value / (59044 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#))
'    Else
'    AlkMix(kk) = Worksheets(mySheet).Cells(24, j + 2).Value
'    AlkMix(kk) = AlkMix(kk) + 2 * Worksheets(mySheet).Cells(25, j + 2).Value
'    AlkMix(kk) = AlkMix(kk) + Worksheets(mySheet).Cells(48, j + 2).Value
'    AlkMix(kk) = AlkMix(kk) - Worksheets(mySheet).Cells(47, j + 2).Value
'    TAcMix(kk) = Worksheets(mySheet).Cells(26, j + 2).Value
'    End If
'    SumOfCations = 0.0000001
'    For c = 1 To NumCat
'      SumOfCations = SumOfCations + ChCat(c) * mc(c)
'    Next c
'        SumOfAnions = -0.0000001
'    For a = 1 To NumAn
'      SumOfAnions = SumOfAnions + ChAn(a) * ma(a)
'    Next a
'    Alk_from_QC = (HCO3 + 2 * CO3 + HS + 2 * S + AC + NH3 + H2BO3 + H3SiO4 + 2 * H2SiO4 + OH - H)
'    NaQC = (-SumOfAnions - (SumOfCations - NaMix(kk)))
''correspond to useEOS<>0 most parameters in QC has been calculated at the end of ReadInDataD sub
'     Worksheets(mySheet).Cells(83, j + 2) = compositions(3, 2) * 100
'    If UseMolal = 0 Then
'    Worksheets(mySheet).Cells(84, j + 2) = (H2Saq + HS + S) * (34080 * (rho25c - TDS / 1000000#))
'    Else
'    Worksheets(mySheet).Cells(84, j + 2) = (H2Saq + HS + S)
'    End If
'    Worksheets(mySheet).Cells(85, j + 2) = pHMeterReading
'    Worksheets(mySheet).Cells(86, j + 2) = compositions(2, 2) * 100 'QC check for assuming that pH and Alk are correct, what would PCO2 be?
'
'    'rho25c = CalcRhoTP(298.15, 25#, 1.013254, 1#)   'Function subroutine
'    'Call ShellB9_GuiOutput
'    If UseMolal = 0 Then
'    Worksheets(mySheet).Cells(87, j + 2) = Alk_from_QC * 61019 * (rho25c - TDS / 1000000#)
'    Worksheets(mySheet).Cells(88, j + 2).Value = SumOfCations * (rho25c - TDS / 1000000#) 'Convert output from equiv/kg-water to equiv/l-solution
'    Worksheets(mySheet).Cells(89, j + 2).Value = SumOfAnions * (rho25c - TDS / 1000000#) 'Convert output from equiv/kg-water to equiv/l-solution
'    Worksheets(mySheet).Cells(91, j + 2).Value = NaQC * 22990 * (rho25c - TDS / 1000000#)
'    Else
'    Worksheets(mySheet).Cells(87, j + 2) = Alk_from_QC
'    Worksheets(mySheet).Cells(88, j + 2).Value = SumOfCations
'    Worksheets(mySheet).Cells(89, j + 2).Value = SumOfAnions
'    Worksheets(mySheet).Cells(91, j + 2).Value = NaQC
'
'    End If
'    Worksheets(mySheet).Cells(90, j + 2).Value = TDS
'
'    response1 = MsgBox("To satisfy charge balance, Na concentration should be equal to " & Format(Worksheets(mySheet).Range("C91").Value, "standard") & _
'    " mg/L. " & Chr(13) & Chr(13) & "Do you want to replace the Na concentration with this value?", vbYesNo)
'    If response1 = vbYes Then
'    Worksheets(mySheet).Cells(10, j + 2) = Format(NaQC * 22990 * (rho25c - TDS / 1000000#), "Standard")
'    Worksheets(mySheet).Cells(270, j + 2) = NaQC * (22990 * (rhoTP - TDSTP / 1000000#))
'    Worksheets(mySheet).Cells(298, j + 2) = NaQC
'    End If
'End Sub
''*****Calculate mass_w, nTCO2, nTH2S, total moles, oil density, gas density
'Sub ShellC1_GuiReadInputPartD(kk, myiosheet, myiocol)
''This sub calculate z(1-15), totalmoles, nTCO2, nTH2S, nTH2O for the combined G/O/W fluid
'
'Dim mol_o_new As Double
'
''mf_ParametersWereRead = False
'For iNG = 1 To 15
'zOutput(iNG) = 0
'Next iNG
'useEOSmix(kk) = 1
'For iNG = 1 To 14
'zMix(kk, iNG) = Worksheets(mySheet).Cells(65 + iNG, j + 2) / 100:
'Next iNG
'zMix(kk, 15) = 0#
'VoMix(kk) = Worksheets(mySheet).Cells(103, j + 2)
'watercut(kk) = Worksheets(mySheet).Cells(104, j + 2) / 100
'SumofZMix(kk) = 0
'For iNG = 1 To 14
'If zMix(kk, iNG) < 0.0000001 Then zMix(kk, iNG) = 0
'SumofZMix(kk) = SumofZMix(kk) + zMix(kk, iNG)       'count total mole fraction of hydrocarbon+CO2+H2S
'Next iNG
'If SumofZMix(kk) > 0 Then
'For iNG = 1 To 14   'Normalized z(1) to z(14)
'z(iNG) = zMix(kk, iNG) / SumofZMix(kk)
'Next iNG
'End If
'
''Assign local variables for this sub
'    mc(iH) = HstpMix(kk): mc(iNa) = NaMix(kk): mc(iK) = KMix(kk): mc(iMg) = MgMix(kk): mc(iCa) = CaMix(kk): TCa = mc(iCa)
'    mc(iSr) = SrMix(kk): mc(iBa) = BaMix(kk): mc(iFe) = FeMix(kk): mc(iZn) = ZnMix(kk): mc(iPb) = PbMix(kk)
'    ma(iOH) = OHstpMix(kk): ma(iCl) = ClMix(kk): ma(iAc) = ACstpMix(kk): mc(iNH4) = NH4STPMix(kk): ma(iH2BO3) = H2BO3stpMix(kk)
'    ma(iHCO3) = HCO3stpMix(kk): ma(iCO3) = CO3stpMix(kk)
'    ma(iSO4) = SO4Mix(kk): ma(iHS) = HSstpMix(kk): ma(intF) = FMix(kk): ma(iBr) = BrMix(kk)
'    Alk = AlkMix(kk): TAc = TAcMix(kk): TNH4 = TNH4Mix(kk): TH3BO3 = TH3BO3Mix(kk): TH2Saq = TH2SaqMix(kk): TCO2 = TCO2Mix(kk)
'    useEOS = useEOSmix(kk):  use_pH = usepHmix(kk): UseH2Sgas = UseH2SgasMix(kk):
''Calculate mass of water, oil, moles of water, oil and gas based on the fluid temperature and pressure**********************************************
'If UseTPVolMix(kk) = 1 Then mt = fTPFunc(1)  'check T, P for mass_W, mass_O, mol_g calculation
'If UseTPVolMix(kk) = 0 Then mt = fTPFunc(0)
'    Call CalcIonicStrength
'    Call C1_ThermodynamicEquilConsts
'    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm) ' Calculate act coeff in the presence of hydrate inhibitor at STP
'If UseTPVolMix(kk) = 1 Then WaterDensityMix(kk) = CalcRhoTP(TK, TC, PBar, Patm) 'Use calculated water density at temperation TVol and PVol
'
'If watercut(kk) = 0 Then 'if there is no water
'    'Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'
' Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
'                TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'
'
'
'    Mass_o = 159 * VoMix(kk) * density(2) 'unit Kg
'    mol_o = 1000 * Mass_o / MW_Phase(2) ' moles of oil per day
'    mol_g = mol_o * (1 - beta(2)) / beta(2)
'    mol_HC = mol_o + mol_g
'    nTCO2EOS = z(2) * mol_HC
'    nTH2sEOS = z(3) * mol_HC
'        VgTP = mol_g * Compr(1) * RBar * TK / PBar / 1000 'unit m3
'        mass_o_Mix(kk) = Mass_o
'        Worksheets(mySheet).Cells(35, j + 2) = VgTP * 35.31467 / 1000
'        Worksheets(mySheet).Cells(36, j + 2) = VoMix(kk)
'        Worksheets(mySheet).Cells(37, j + 2) = 0
'        total_moles = mol_HC
'
'Else
'    'Make initial guess for density(2), MW_Phase(2), mol_HC, mol_w
'    density(2) = 0.75:
'    Mass_o = 159 * VoMix(kk) * density(2) 'unit Kg
'    mol_o = 1000 * Mass_o / 180 ' initial guess for MW of oil phase is 180
'    mol_HC = mol_o / (1 - z(1) - z(2) - z(3) - z(4) - z(14))
'    mol_g = mol_HC - mol_o
'    VwMix(kk) = watercut(kk) * VoMix(kk) / (1 - watercut(kk))
'    mass_w = 159 * VwMix(kk) * WaterDensityMix(kk) 'unit Kg of salt water
'    mass_w = mass_w * (1 - CalculatedTDSMix(kk) / rho25CMix(kk) * 0.000001) 'Kg mass of pure water
'    mol_w_Orig = 1000 * mass_w / 18.01528  ' moles of water per day (ignore HC in water)
'    mol_W = 1000 * mass_w / 18.01528 + PsatH2O(TK) * mol_g / PBar ' initial guess include H2O in the gas phase
'    total_moles = mol_o + mol_g + mol_W
'    SumofZMix(kk) = 0
'    For iNG = 1 To 14
'    z(iNG) = z(iNG) * mol_HC
'    SumofZMix(kk) = SumofZMix(kk) + z(iNG)
'    Next iNG
'    For iNG = 1 To 14
'    feed_Composition(iNG) = z(iNG) / total_moles
'    Next iNG
'    feed_Composition(15) = mol_W / total_moles
'    SumofZMix(kk) = 0
'    For iNG = 1 To 15
'    SumofZMix(kk) = SumofZMix(kk) + feed_Composition(iNG)
'    Next iNG
'    Iteration = 1
''    mf_ParametersWereRead = False
''    Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, feed_Composition, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'
' Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
'                TK, PBar, total_moles, feed_Composition, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'
'        If compositions(15, 4) > 0.5 Then
'        mol_o = 159 * VoMix(kk) * density(2) * 1000 / MW_Phase(2) 'correspond to phase 2
'        mol_g = mol_o * beta(1) / beta(2) 'correspond to phase 1
'        mol_W = mol_o * beta(3) / beta(2) 'correspond to phase 3
'        total_moles = mol_g + mol_o + mol_W
'        mol_HC = mol_o + mol_g - total_moles * (beta(1) * compositions(15, 2) + beta(2) * compositions(15, 3) - beta(3) * (1 - compositions(15, 4)))
'        mol_H2O = mol_o * beta(3) / beta(2) + total_moles * (beta(1) * compositions(15, 2) + beta(2) * compositions(15, 3) - beta(3) * (1 - compositions(15, 4)))
'        mol_w3 = total_moles * beta(3) * compositions(15, 4) 'H2O moles in aqueous phase
'
'        Else
'        While mol_w3 = 0 'if no water phase present, the initial guess for H2O is off, increase 10%
'        total_moles = mol_HC + mol_W * 1.1
'        mol_H2O = mol_H2O + mol_W * 0.1
'        SumofZMix(kk) = 0
'        For iNG = 1 To 14
'        z(iNG) = z(iNG) * mol_HC
'        SumofZMix(kk) = SumofZMix(kk) + z(iNG)
'        Next iNG
'        For iNG = 1 To 14
'        feed_Composition(iNG) = z(iNG) / total_moles
'        Next iNG
'        feed_Composition(15) = mol_H2O / total_moles
'        SumofZMix(kk) = 0
'        For iNG = 1 To 15
'        SumofZMix(kk) = SumofZMix(kk) + feed_Composition(iNG)
'        Next iNG
''        mf_ParametersWereRead = False
''        Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, feed_Composition, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'
'  Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
'                TK, PBar, total_moles, feed_Composition, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'
'        If compositions(15, 4) > 0.5 Then
'        mol_o = 159 * VoMix(kk) * density(2) * 1000 / MW_Phase(2)
'        mol_g = mol_o * beta(1) / beta(2)
'        mol_W = mol_o * beta(3) / beta(2)
'        total_moles = mol_g + mol_g + mol_W
'        mol_HC = mol_o + mol_g - total_moles * (beta(1) * compositions(15, 2) + beta(2) * compositions(15, 3) - beta(3) * (1 - compositions(15, 4)))
'        mol_H2O = mol_o * beta(3) / beta(2) + total_moles * (beta(1) * compositions(15, 2) + beta(2) * compositions(15, 3) - beta(3) * (1 - compositions(15, 4)))
'        mol_w3 = total_moles * beta(3) * compositions(15, 4) 'H2O moles in aqueous phase
'
'        Else
'        mol_w3 = 0
'        End If
'        Wend
'        End If
'While Abs((mol_w3 - mol_w_Orig) / mol_w_Orig) > 0.001  'reconcile criteria better than +-0.1%
'    total_moles = mol_g + mol_o + mol_W - mol_w3 + mol_w_Orig
'    mol_H2O = mol_H2O - mol_w3 + mol_w_Orig
'    SumofZMix(kk) = 0
'    For iNG = 1 To 14
'    z(iNG) = zMix(kk, iNG) * mol_HC
'    SumofZMix(kk) = SumofZMix(kk) + z(iNG)
'    Next iNG
'    For iNG = 1 To 14
'    feed_Composition(iNG) = z(iNG) / total_moles
'    Next iNG
'    feed_Composition(15) = mol_H2O / total_moles
'    SumofZMix(kk) = 0
'    For iNG = 1 To 15
'    SumofZMix(kk) = SumofZMix(kk) + feed_Composition(iNG)
'    Next iNG
'    'Call MultiPhaseFlash(False, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, feed_Composition, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'    Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
'                TK, PBar, total_moles, feed_Composition, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'
'
'If compositions(15, 4) > 0.5 Then
'    mol_w3 = total_moles * beta(3) * compositions(15, 4)
'    mol_o = 159 * VoMix(kk) * density(2) * 1000 / MW_Phase(2)
'    mol_g = mol_o * beta(1) / beta(2)
'    mol_W = mol_o * beta(3) / beta(2)
'    mol_HC = mol_o + mol_g - total_moles * (beta(1) * compositions(15, 2) + beta(2) * compositions(15, 3) - beta(3) * (1 - compositions(15, 4)))
'    mol_H2O = mol_o * beta(3) / beta(2) + total_moles * (beta(1) * compositions(15, 2) + beta(2) * compositions(15, 3) - beta(3) * (1 - compositions(15, 4)))
'
'Else
'    mol_w3 = 0
'End If
'Wend
'    mass_w = total_moles * beta(3) * compositions(15, 4) * 0.01801528 'mass_w is only the aqueous phase H2O
'    Total_molesMix(kk) = total_moles
'    mass_w_Mix(kk) = mass_w
'    nTCO2EOS = zOutput(2) * total_moles
'    nTH2sEOS = zOutput(3) * total_moles
'    VgTP = mol_g * RBar * TK * Compr(1) / PBar / 1000 'unit m3
'End If
'nTCO2_before_precipitation = nTCO2EOS
'nTH2S_before_precipitation = nTH2sEOS
'Total_moles_before_precipitation = total_moles
'nTCO2Mix(kk) = nTCO2EOS: nTH2SMix(kk) = nTH2sEOS
'For iz = 1 To 15
'z_before_precipitation(iz) = zOutput(iz)
'zMix(kk, iz) = zOutput(iz)
'Next iz
'
'Worksheets(mySheet).Cells(35, j + 2) = VgTP * 35.31467 / 1000
'Worksheets(mySheet).Cells(36, j + 2) = VoMix(kk)
'Worksheets(mySheet).Cells(37, j + 2) = VwMix(kk)
'
''**** flash and convert to STP condition
'If mol_w_Orig > 0 Then ' only do this if water phase exist
' Call ShellC7_GUI_EOS_EquilCalcs(0, 5, 2, KspCalcite, myiosheet, myiocol)  'calculate Separator or STP pH if useEOS>0
''*********
'mt = fmn  'Assign neutral species and HCO3, CO3, HS and recalculate ionic strength, Pitzer Coeff and pH
'Call CalcIonicStrength
'Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
'Call ShellC7_GUI_EOS_EquilCalcs(0, 5, 2, KspCalcite, myiosheet, myiocol) '(ppt_or_not, iMetals, iGas, Ksp)
'mt = fmn
'pHMeterReading = pH - DpHj 'at separator T&P or STP
'rhoTP = CalcRhoTP(TK, TC, PBar, Patm) 'at separator T&P or STP
'Worksheets(mySheet).Cells(34, j + 2) = pHMeterReading
'If UseMolal = 1 Then Worksheets(mySheet).Cells(29, j + 2) = CalculatedTDSMix(kk)
'
'For c = 1 To NumCat
'   molcF(c) = mc(c) * mass_w
'Next c
'For a = 1 To NumAn
'   molaF(a) = ma(a) * mass_w
'Next a
'For n = 1 To NumNeut
'   molnF(n) = mn(n) * mass_w
'Next n
'molAlkF = Alk * mass_w: molTACF = TAc * mass_w:
'TDSTP = TDS / rho25c * rhoTP
'End If
'   If RunQualityControlChecks = 1 Then
'   If mol_w_Orig > 0 Then
'       Call ShellB7_GUIQCCalculations(kk, j)
'        End
'    Else
'    MsgBox ("QC is to balance ion charges of water phase and it only execute when aqueous phase is present. Accoring to VLE calculation, aqueous phase does not exist at this condition. Increase water cut and try again.")
'    End
'    End If
'    End If
'
'
''If RunShellMultiflash = 1 Then
''    total_moles = mol_g + mol_o + mol_W
''    useEOS = 1
''    For iNG = 1 To 15
''    zMix(kk, iNG) = Worksheets("Shell Multiflash").Cells(2 + iNG, 3)
''    Next iNG
''    SumofZMix(kk) = 0
''    For iNG = 1 To 15
''    If zMix(kk, iNG) < 0.0000001 Then zMix(kk, iNG) = 0
''    SumofZMix(kk) = SumofZMix(kk) + zMix(kk, iNG)       'count total mole fraction of hydrocarbon+CO2+H2S
''    Next iNG
''    If SumofZMix(kk) > 0 Then
''    For iNG = 1 To 15   'Normalized z(1) to z(14)
''    zMix(kk, iNG) = zMix(kk, iNG) / SumofZMix(kk)
''    Next iNG
''    End If
''  nTCO2MixEOS(kk) = zMix(kk, 2) * total_moles
''  nTH2SMixEOS(kk) = zMix(kk, 3) * total_moles
''  Total_molesMix(kk) = total_moles
''End If
'End Sub
'
'Sub ShellC2_GUIReadDataFromIO()
''This sub read hydrocarbon+H2O composition (15), total moles, CO2, H2S, and molality of ions from IO sheet
''This sub is used to calculate (1) reservoir reonciliation, (2) H2S tuning, (3) SSF Calculate phase amount, (4) SSF mixing 1 to 5 wells
'rhoTP = Worksheets(mySheet).Cells(252, j + 2)
'TDSTP = Worksheets(mySheet).Cells(279, j + 2)
'
'If RunGUIH2STune = 1 Then 'When run H2S Tuning, read z from line 118 the first time
'    For iNG = 1 To 15
'    z(iNG) = Worksheets(mySheet).Cells(118 + iNG, j + 2)
'    z_before_precipitation(iNG) = z(iNG)
'    Next iNG
'    total_moles = Worksheets(mySheet).Cells(134, j + 2) * 1000
'    Total_moles_before_precipitation = total_moles
'
'ElseIf RunGUIH2STune = 0 Then
'    For iNG = 1 To 15
'    z(iNG) = Worksheets(mySheet).Cells(138 + iNG, j + 2)
'    z_before_precipitation(iNG) = z(iNG)
'    Next iNG
'    total_moles = Worksheets(mySheet).Cells(154, j + 2) * 1000
'    Total_moles_before_precipitation = total_moles
'    nTCO2_before_precipitation = z(2) * total_moles
'    nTH2S_before_precipitation = z(3) * total_moles
'    'Worksheets(mySheet).Cells(312, j + 2) = nTH2S_before_precipitation '
'    'Worksheets(mySheet).Cells(313, j + 2) = nTCO2_before_precipitation '
'End If
'mass_w = 0: molAlkF = 0: molTACF = 0
'For n = 2 To 4
' molnF(n) = 0
' mn(n) = 0
'  Next n
'  For a = 1 To 13
'molaF(a) = 0
'ma(a) = 0
'  Next a
'  For c = 1 To 10
'molcF(c) = 0
'mc(c) = 0
' Next c
'
'If RunGUISSF <> 1 Then   'All other calculation assume j=1 and for single well
'    mass_w = Worksheets(mySheet).Cells(310, j + 2) 'Kg of pure water, overwrite in ShellA8_GUISSFstreamtuning
'    nTCO2_before_precipitation = Worksheets(mySheet).Cells(311, j + 2)
'    nTH2S_before_precipitation = Worksheets(mySheet).Cells(312, j + 2)
'    For n = 2 To 4
'    mn(n) = Worksheets(mySheet).Cells(280 + n, j + 2)
'    Next n
'    For a = 1 To 9
'    ma(a) = Worksheets(mySheet).Cells(285 + a, j + 2)
'    Next a
'    ma(13) = Worksheets(mySheet).Cells(295, j + 2)
'    For c = 1 To 10
'    mc(c) = Worksheets(mySheet).Cells(296 + c, j + 2)
'    Next c
'    Alk = Worksheets(mySheet).Cells(308, j + 2)
'    TAc = Worksheets(mySheet).Cells(309, j + 2)
'    For n = 2 To 4
'    molnF(n) = mn(n) * mass_w
'    Next n
'    For a = 1 To 13
'    molaF(a) = ma(a) * mass_w
'    Next a
'    For c = 1 To 10
'    molcF(c) = mc(c) * mass_w
'    Next c
'    molAlkF = Alk * mass_w
'    molTACF = TAc * mass_w
'ElseIf RunGUISSF = 1 Then  'Add up all electrolyte data in SSF mode for 1 to five wells (nob) and update CO2, H2S, H2O values
'
'For i = 1 To nob 'update Row 310,311,312,313 based on total moles of flow on SSF Simulation Sheet
'Worksheets(mySheet).Cells(310, i + 2) = Worksheets(mySheet).Cells(154, i + 2) * Worksheets(mySheet).Cells(213, i + 2) * Worksheets(mySheet).Cells(234, i + 2) * 0.01801528 'mass_w is only the aqueous phase H2O
''Worksheets(mySheet).Cells(311, i + 2) = Worksheets(mySheet).Cells(154, i + 2) * Worksheets(mySheet).Cells(140, i + 2)
''Worksheets(mySheet).Cells(312, i + 2) = Worksheets(mySheet).Cells(154, i + 2) * Worksheets(mySheet).Cells(141, i + 2)
''Worksheets(mySheet).Cells(313, i + 2) = Worksheets(mySheet).Cells(154, i + 2) * Worksheets(mySheet).Cells(153, i + 2)
'Next i
'  For i = 1 To nob 'Combined all ions is the number of wells in moles
'    mass_w = mass_w + Worksheets(mySheet).Cells(310, i + 2) 'Kg pure water
'    For n = 2 To 4
'    molnF(n) = molnF(n) + Worksheets(mySheet).Cells(280 + n, i + 2) * Worksheets(mySheet).Cells(310, i + 2)
'    Next n
'    For a = 1 To 9
'    molaF(a) = molaF(a) + Worksheets(mySheet).Cells(285 + a, i + 2) * Worksheets(mySheet).Cells(310, i + 2)
'    Next a
'    molaF(13) = molaF(13) + Worksheets(mySheet).Cells(295, i + 2) * Worksheets(mySheet).Cells(310, i + 2)
'    For c = 1 To 10
'    molcF(c) = molcF(c) + Worksheets(mySheet).Cells(296 + c, i + 2) * Worksheets(mySheet).Cells(310, i + 2)
'    Next c
'    molAlkF = molAlkF + Worksheets(mySheet).Cells(308, i + 2) * Worksheets(mySheet).Cells(310, i + 2)
'    molTACF = molTACF + Worksheets(mySheet).Cells(309, i + 2) * Worksheets(mySheet).Cells(310, i + 2)
'  Next i
'    If mass_w > 0 Then
'    For n = 2 To 4
'    mn(n) = molnF(n) / mass_w
'    Next n
'    For a = 1 To 13
'    ma(a) = molaF(a) / mass_w
'    Next a
'
'    For c = 1 To 10
'    mc(c) = molcF(c) / mass_w
'    Next c
'    Alk = molAlkF / mass_w
'    TAc = molTACF / mass_w
'    End If
'End If
'End Sub
'Sub ShellC3_GuiH2SSpeciation(myiosheet, myiocol)
''This sub calculate speciation at a given T, P, without adjusting the aqueous concentration.
''This sub is used for GuiH2S Tuning and for Calculate phase volumes
'Application.ScreenUpdating = False
'If mass_w <> 0 Then
'Call CalcIonicStrength
'Call C1_ThermodynamicEquilConsts
'Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
'Else
'gNeut(iCO2aq) = 1: gNeut(iH2Saq) = 1: aH2O = 1
'End If
' Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
'                TK, PBar, total_moles, z_before_precipitation, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'
'If mass_w > 0 Then
'    Call ShellC7_GUI_EOS_EquilCalcs(0, 5, 2, KspCalcite, myiosheet, myiocol)  '(ppt_or_not, iMetals, iGas, Ksp)
'     mt = fmn
'    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
'    Call ShellC7_GUI_EOS_EquilCalcs(0, 5, 2, KspCalcite, myiosheet, myiocol)  '(ppt_or_not, iMetals, iGas, Ksp)
'     mt = fmn
'End If
'Application.ScreenUpdating = True
'End Sub
'Sub ShellC6_GUICarbonateSpeciation(myiosheet, myiocol)
''This sub is used for SSF.
'SICal = Null: mass_w_0 = mass_w
'  Call CalcIonicStrength 'based on separator condition
'      If Ist > 12 Then
'        errmsg(2) = 1
'        For c = 1 To NumCat
'        mc(c) = molcF(c) / mass_w * 12 / Ist
'        Next c
'        For a = 1 To NumAn
'        ma(a) = molaF(a) / mass_w * 12 / Ist
'        Next a
'        Alk = molAlkF / mass_w * 12 / Ist
'        TH4SiO4 = 0
'        TNH4 = 0
'        TH3BO3 = 0
'        TAc = molTACF / mass_w * 12 / Ist
'        Call CalcIonicStrength 'Reduced ion concentration to 12 Ist and recalculate Ist
'    End If
'
'  Call C1_ThermodynamicEquilConsts
'  Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
'     Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
'                TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'
'    mass_w = total_moles * beta(3) * compositions(15, 4) * 0.01801528 'unit=Kg H2O in aqueous phase
'    If compositions(15, 4) < 0.5 Then ' when phase 3 is not aqueous
'    errmsg(1) = 1: Ist = Null: pH = Null
'        GoTo 500
'    End If
'    If mass_w = 0 Then 'if no water exist, exit SI calculation and go to the next T,P
'    errmsg(1) = 1: Ist = Null: pH = Null
'    GoTo 500
'    End If
''    If mass_w / mass_w_0 < 0.05 Then
''    errmsg(1) = 1: Ist = Null
''    End
''    End If
'    For c = 1 To NumCat
'    mc(c) = molcF(c) / mass_w
'    Next c
'    For a = 1 To NumAn
'    ma(a) = molaF(a) / mass_w
'    Next a
'    Alk = molAlkF / mass_w
'    TH4SiO4 = 0
'    TNH4 = 0
'    TH3BO3 = 0
'    TAc = molTACF / mass_w
'    mass_wOld = mass_w
'    Call CalcIonicStrength
'    If Ist > 12 Then
'        errmsg(2) = 1: Ist = Null: pH = Null
'        For c = 1 To NumCat
'        mc(c) = molcF(c) / mass_w * 12 / Ist
'        Next c
'        For a = 1 To NumAn
'        ma(a) = molaF(a) / mass_w * 12 / Ist
'        Next a
'        Alk = molAlkF / mass_w * 12 / Ist
'        TH4SiO4 = 0
'        TNH4 = 0
'        TH3BO3 = 0
'        TAc = molTACF / mass_w * 12 / Ist
'        Call CalcIonicStrength 'Reduced ion concentration to 12 Ist and recalculate Ist
'    End If
'    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
'    'Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'     Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
'                TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'    mass_w = total_moles * beta(3) * compositions(15, 4) * 0.01801528 'unit=Kg H2O in aqueous phase
'    Iteration = 0
'    While (mass_wOld - mass_w) ^ 2 > 0.0001 * mass_w ^ 2  'iteration loop to calculate amount of water in aqueous phase, at low water cut, beta(3) is a strong function of ionic strength
'    'while loop tolerance for change in water mass is better than 1%
'    If compositions(15, 4) < 0.5 Then
'    errmsg(1) = 1: Ist = Null: pH = Null
'    GoTo 500
'    End If
'    If mass_w = 0 Then 'if no water exist, exit SI calculation and go to the next T,P
'    errmsg(1) = 1: Ist = Null: pH = Null
'     GoTo 500
'    End If
'    For c = 1 To NumCat
'    mc(c) = molcF(c) / mass_w
'    Next c
'    For a = 1 To NumAn
'    ma(a) = molaF(a) / mass_w
'    Next a
'    Alk = molAlkF / mass_w
'    TH4SiO4 = 0
'    TNH4 = 0
'    TH3BO3 = 0
'    TAc = molTACF / mass_w
'    mass_wOld = mass_w
'    Call CalcIonicStrength
'    If Ist > 12 Then
'        errmsg(2) = 1: Ist = Null: pH = Null
'        For c = 1 To NumCat
'        mc(c) = molcF(c) / mass_w * 12 / Ist
'        Next c
'        For a = 1 To NumAn
'        ma(a) = molaF(a) / mass_w * 12 / Ist
'        Next a
'        Alk = molAlkF / mass_w * 12 / Ist
'        TH4SiO4 = 0
'        TNH4 = 0
'        TH3BO3 = 0
'        TAc = molTACF / mass_w * 12 / Ist
'        Call CalcIonicStrength 'Reduced ion concentration to 12 Ist and recalculate Ist
'    End If
'    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
'    'Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'     Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
'                TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'    mass_w = total_moles * beta(3) * compositions(15, 4) * 0.01801528 'unit=Kg H2O in aqueous phase
'    mass_w = (mass_wOld + mass_w) / 2
'    Iteration = Iteration + 1
''
'    Wend 'To reconcile water in phase 3 at reservoir T,P
'If mass_w > 0 Then
'    Call CalcIonicStrength
'    If Ist > 12 Then
'        errmsg(2) = 1: Ist = Null: pH = Null
'        For c = 1 To NumCat
'        mc(c) = molcF(c) / mass_w * 12 / Ist
'        Next c
'        For a = 1 To NumAn
'        ma(a) = molaF(a) / mass_w * 12 / Ist
'        Next a
'        Alk = molAlkF / mass_w * 12 / Ist
'        TH4SiO4 = 0
'        TNH4 = 0
'        TH3BO3 = 0
'        TAc = molTACF / mass_w * 12 / Ist
'        Call CalcIonicStrength 'Reduced ion concentration to 12 Ist and recalculate Ist
'    End If
'    Call ShellC7_GUI_EOS_EquilCalcs(0, 5, 2, KspCalcite, myiosheet, myiocol) '(ppt_or_not, iMetals, iGas, Ksp)
'     mt = fmn
'    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
'    Call ShellC7_GUI_EOS_EquilCalcs(0, 5, 2, KspCalcite, myiosheet, myiocol)  '(ppt_or_not, iMetals, iGas, Ksp)
'
''SICal = Log10(mc(iCa) * HCO3 * gCat(iCa) * gNCat(iCa) * gAn(iHCO3) * gNAn(iHCO3) * K2HCO3 / (aH * KspCalcite))
'rhoTP = CalcRhoTP(TK, TC, PBar, Patm)
'Else
'500 gNeut(2) = 1: gNeut(3) = 1: aH2O = 1
'    Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
'                TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'End If
'End Sub
'Sub ShellC4_GUI_RRH2Osaturation(myiosheet, myiocol)
''This sub is used for reservoir reconciliation.
'mass_w_0 = mass_w
'  Call CalcIonicStrength 'based on separator condition
'      If Ist > 12 Then GoTo 100
'  Call C1_ThermodynamicEquilConsts
'  Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
'     Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
'                TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'    mass_w = total_moles * beta(3) * compositions(15, 4) * 0.01801528 'unit=Kg H2O in aqueous phase
'    If compositions(15, 4) < 0.5 Then GoTo 100
'    If mass_w = 0 Then GoTo 100
'    For c = 1 To NumCat
'    mc(c) = molcF(c) / mass_w
'    Next c
'    For a = 1 To NumAn
'    ma(a) = molaF(a) / mass_w
'    Next a
'    Alk = molAlkF / mass_w
'    TH4SiO4 = 0
'    TNH4 = 0
'    TH3BO3 = 0
'    TAc = molTACF / mass_w
'    mass_wOld = mass_w
'    Call CalcIonicStrength
'    If Ist > 12 Then GoTo 100
'    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
'     Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
'                TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'    mass_w = total_moles * beta(3) * compositions(15, 4) * 0.01801528 'unit=Kg H2O in aqueous phase
'    Iteration = 0
'    While (mass_wOld - mass_w) ^ 2 > 0.0001 * mass_w ^ 2  'iteration loop to calculate amount of water in aqueous phase, at low water cut, beta(3) is a strong function of ionic strength
'    'while loop tolerance for change in water mass is better than 1%
'    If compositions(15, 4) < 0.5 Then GoTo 100
'    If mass_w = 0 Then GoTo 100
'    For c = 1 To NumCat
'    mc(c) = molcF(c) / mass_w
'    Next c
'    For a = 1 To NumAn
'    ma(a) = molaF(a) / mass_w
'    Next a
'    Alk = molAlkF / mass_w
'    TH4SiO4 = 0
'    TNH4 = 0
'    TH3BO3 = 0
'    TAc = molTACF / mass_w
'    mass_wOld = mass_w
'    Call CalcIonicStrength
'    If Ist > 12 Then GoTo 100
'    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
'     Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
'                TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'    mass_w = total_moles * beta(3) * compositions(15, 4) * 0.01801528 'unit=Kg H2O in aqueous phase
'    mass_w = (mass_wOld + mass_w) / 2
'    Iteration = Iteration + 1
''
'Wend 'To reconcile water in phase 3 at reservoir T,P
'If mass_w = 0 Then
'100 MsgBox ("Aqueous phase does not exist at reservoir condition. Program abort. Increase water cut and try again")
'End
'Else
'End If
'End Sub
'Sub ShellC5_GuiCalciteSI(myiosheet, myiocol)
''This sub is used for reservoir reconciliation.
'SICal = Null:
'If mass_w > 0 Then
'    Call CalcIonicStrength
'    If Ist > 12 Then
'        errmsg(2) = 1: Ist = Null: pH = Null
'        For c = 1 To NumCat
'        mc(c) = molcF(c) / mass_w * 12 / Ist
'        Next c
'        For a = 1 To NumAn
'        ma(a) = molaF(a) / mass_w * 12 / Ist
'        Next a
'        Alk = molAlkF / mass_w * 12 / Ist
'        TH4SiO4 = 0
'        TNH4 = 0
'        TH3BO3 = 0
'        TAc = molTACF / mass_w * 12 / Ist
'        Call CalcIonicStrength 'Reduced ion concentration to 12 Ist and recalculate Ist
'    End If
'    pH = Worksheets(mySheet).Range("C253")
'    If pH > 7 Then
'    Call ShellC7_GUI_EOS_EquilCalcs(0, 5, 2, KspCalcite, myiosheet, myiocol) '(ppt_or_not, iMetals, iGas, Ksp)
'    Else
'    Call ShellC7_GUI_SimplifiedEOS_EquilCalcs(ppt_or_not, Im, iGas, Ksp, myiosheet, myiocol)
'    End If
'     mt = fmn
'    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
'    pH = Worksheets(mySheet).Range("C253")
'    If pH > 7 Then
'    Call ShellC7_GUI_EOS_EquilCalcs(0, 5, 2, KspCalcite, myiosheet, myiocol) '(ppt_or_not, iMetals, iGas, Ksp)
'    Else
'    Call ShellC7_GUI_SimplifiedEOS_EquilCalcs(ppt_or_not, Im, iGas, Ksp, myiosheet, myiocol)
'    End If
'
'SICal = Log10(mc(iCa) * HCO3 * gCat(iCa) * gNCat(iCa) * gAn(iHCO3) * gNAn(iHCO3) * K2HCO3 / (aH * KspCalcite))
'rhoTP = CalcRhoTP(TK, TC, PBar, Patm)
'Else
'MsgBox ("Aqueous phase does not exist at reservoir condition. Program abort. Increase water cut and try again")
'End
'End If
'End Sub
'
'
''*************************************************************************************************************
'Sub ShellC7_GUI_EOS_EquilCalcs(ppt_or_not, Im, iGas, Ksp, myiosheet, myiocol)  'ppt_or_not: "0" means no precipitation; "1" means only precipitation; and "2" means allow both precipitation and dissolution.
''The following half-interval search followed by a Newton-Raphson routine
''Use zTemp() and total_moles-temp for transfering temperary data
''Every cycle, these values are conserved nTCO2_before_precipitation, nTH2S_before_precipitation,Total_moles_before_precipitation,z_before_precipitation
'
'ppt = 0:
'pHHigh = 14
'pHLow = 0
'RatioOilBPoints = 1
'For i = 1 To 15
'    pH = (pHHigh + pHLow) / 2
'    aH = 10 ^ (-pH)
'    H = aH / (gCat(iH) * gNCat(iH))
'    OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
'    nTCO2EOS = nTCO2_before_precipitation
'    nTH2sEOS = nTH2S_before_precipitation
'    total_moles_Temp = Total_moles_before_precipitation
'    For iz = 1 To 15
'    zTemp(iz) = z_before_precipitation(iz)
'    Next iz
'
'     Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
'                TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'
'    t1 = 1: t2 = 1: t5 = 1: t6 = 1
'    If beta(1) > 0 Then
'    If phi(2, 1) <> 0 Then t1 = (gNeut(iCO2aq) * gNNeut(iCO2aq)) / (KgwCO2 * phi(2, 1))
'    If phi(3, 1) <> 0 Then t5 = (gNeut(iH2Saq) * gNNeut(iH2Saq)) / (KgwH2S * phi(3, 1))
'    End If
'    If beta(2) > 0 Then
'    If phi(2, 2) <> 0 Then
'    If beta(1) > 0 Then t2 = phi(2, 1) * RatioOilBPoints * KgoCO2 / phi(2, 2)
'    End If
'    If phi(3, 2) <> 0 Then
'    If beta(1) > 0 Then t6 = phi(3, 1) * RatioOilBPoints * KgoH2S / phi(3, 2)
'    End If
'    End If
'
'    t3 = (K1H2CO3 * aH2O) * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
'    t4 = (K1H2CO3 * aH2O) * K2HCO3 * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH ^ 2 * gAn(iCO3) * gNAn(iCO3))
'    t7 = K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
'    t8 = K1H2S * K2HS * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH ^ 2 * gAn(iSion) * gNAn(iSion)) 'Place holder for S-2 species
'    s1 = 0.01801528 * compositions(15, 4) 'Unit Kg/ per mole of phase 3
'    S2 = MW_Phase(2) / 1000 ' Unit Kg/mole of phase 2
'    s3 = beta(1) * t1 / Ppsia + beta(2) * S2 * t1 * t2 + beta(3) * (1 + t3 + t4)
'    s4 = beta(1) * t5 / Ppsia + beta(2) * S2 * t5 * t6 + beta(3) * (1 + t7 + t8)
'    'mass_w = s1 * beta(3) * total_moles_temp
'    Delta_nTCO2EOS = zTemp(2) * s1 / s3 * (t3 + t4) * beta(3) * total_moles_Temp
'    Delta_nTH2SEOS = zTemp(3) * s1 / s4 * (t7 + t8) * beta(3) * total_moles_Temp
'    If Delta_nTCO2EOS > nTCO2_before_precipitation Then Delta_nTCO2EOS = nTCO2_before_precipitation * (1 - 1 / (1 + t3 + t4)) 'set delta CO2 H2S limits
'    If Delta_nTH2SEOS > nTH2S_before_precipitation Then Delta_nTH2SEOS = nTH2S_before_precipitation * (1 - 1 / (1 + t7 + t8))
'    total_moles_Temp = Total_moles_before_precipitation - Delta_nTCO2EOS - Delta_nTH2SEOS
'    zTemp(1) = z_before_precipitation(1) * Total_moles_before_precipitation / total_moles_Temp
'    zTemp(2) = (nTCO2_before_precipitation - Delta_nTCO2EOS) / total_moles_Temp
'    zTemp(3) = (nTH2S_before_precipitation - Delta_nTH2SEOS) / total_moles_Temp
'    For iz = 4 To 15
'    zTemp(iz) = z_before_precipitation(iz) * Total_moles_before_precipitation / total_moles_Temp
'    Next iz
'    mt = ShellC8_GUI_fEOS_Speciation(myiosheet, myiocol)
''    CO2_w_before_ppt = (CO2aq + HCO3 + CO3)
''    H2S_w_before_ppt = (H2Saq + HS + S)
'
''    t11 = 1 + (aH * gAn(iCO3) * gNAn(iCO3) / (K2HCO3 * gAn(iHCO3) * gNAn(iHCO3))) + (aH ^ 2 * gAn(iCO3) * gNAn(iCO3) / ((K1H2CO3 * aH2O) * K2HCO3 * gNeut(iCO2aq) * gNNeut(iCO2aq)))
''    t12 = 1 + (aH * gAn(iHS) * gNAn(iHS)) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq)) + (aH ^ 2 * gAn(iSion) * gNAn(iSion) / (K1H2S * K2HS * gNeut(iH2Saq) * gNNeut(iH2Saq)))
'S2 = 0: s3 = 0: q3 = 0: q4 = 0: s5 = 0: s6 = 0: q5 = 0: q6 = 0
'If compositions(2, 4) > 0 Then
'S2 = compositions(2, 2) * beta(1) / compositions(2, 4) * beta(3)
's3 = compositions(2, 3) * beta(2) / compositions(2, 4) * beta(3)
'q3 = nTCO2_before_precipitation / (s1 * beta(3) * total_moles_Temp)
'q4 = S2 + s3 + 1 + t3 + t4
'End If
'
'If compositions(3, 4) > 0 Then
's5 = compositions(3, 2) * beta(1) / compositions(3, 4) * beta(3)
's6 = compositions(3, 3) * beta(2) / compositions(3, 4) * beta(3)
'q5 = nTH2S_before_precipitation / (s1 * beta(3) * total_moles_Temp)
'q6 = S2 + s3 + 1 + t7 + t8
'End If
'    'The following statements around the cubic Vg eqation and the quadratic ppt equation are used to get consistent values of Vg and ppt at each pH value.
'    'Initially, ppt = 0 and Vg is calculated and then this value of Vg is put into the Ksp equation to calcuate ppt(new) and this is put into the cubic Vg
'    '  equation to recalculate Vg with the improved value of ppt and the process is repeated until the convergence is +/- 0.0001 in both ppt and Vg or for 100
'    '  interations.  Generally, only two or three iterations are needed.
'
'
'
''223 If ppt_or_not = 1 And ppt > 0 Then mt = fEOS_Speciation
'    hydAc = aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1
'    AC = TAc / hydAc
'    HAcaq = TAc - AC
'    hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
'    H2BO3 = TH3BO3 / hydH2BO3
'    hydNH3 = aH * gNeut(iNH3) * gNNeut(iNH3) / (KNH4 * gCat(iNH4) * gNCat(iNH4)) + 1
'    NH3 = TNH4 / hydNH3
'
'  hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
'  aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
'  H2SiO4 = TH4SiO4 / hydH2SiO4
'  H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
'  H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
'  'a = TH4SiO4 - (H2SiO4 + H3SiO4 + H4SiO4)
'
'    faH = Alk - 2 * ppt - (HCO3 + 2 * CO3 + HS + 2 * S + AC + NH3 + H2BO3 + H3SiO4 + 2 * H2SiO4 + OH - H)
'    ypH(i) = faH: xpH(i) = pH: xppt(i) = ppt 'Used in Newton-Raphson iteration, at the end of this For loop.
'    If faH > 0 Then pHLow = pH
'    If faH < 0 Then pHHigh = pH
'
'Next i
'
''The following statements take the last two interation values of pH and of faH and uses a Newton-Raphson method to calculate the best pH value.
''From this improved pH value the ppt values are recalulated for final output.  This generally improves the convergence from three significant
''  figures to about eight+ significant figures with little additional computation; once the iteration is close to the answer.
'If Abs(ypH(i - 1) / ((ypH(i - 1) - ypH(i - 2)) / (xpH(i - 1) - xpH(i - 2)))) < 0.001 Then
'    pH = pH - ypH(i - 1) / ((ypH(i - 1) - ypH(i - 2)) / (xpH(i - 1) - xpH(i - 2)))  '(i-1) is used since the last i is one larger than the number of loops.
'Else
'    pH = Abs((xpH(i - 1) + xpH(i - 2))) / 2
'    errmsg(5) = 5
'End If
'
'    aH = 10 ^ (-pH)
'    H = aH / (gCat(iH) * gNCat(iH))
'    OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
'    mt = ShellC8_GUI_fEOS_Speciation(myiosheet, myiocol)
''    CO2_w_before_ppt = (CO2aq + HCO3 + CO3)
''    H2S_w_before_ppt = (H2Saq + HS + S)
''    t11 = 1 + (aH * gAn(iCO3) * gNAn(iCO3) / (K2HCO3 * gAn(iHCO3) * gNAn(iHCO3))) + (aH ^ 2 * gAn(iCO3) * gNAn(iCO3) / ((K1H2CO3 * aH2O) * K2HCO3 * gNeut(iCO2aq) * gNNeut(iCO2aq)))
''    t12 = 1 + (aH * gAn(iHS) * gNAn(iHS)) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq)) + (aH ^ 2 * gAn(iSion) * gNAn(iSion) / (K1H2S * K2HS * gNeut(iH2Saq) * gNNeut(iH2Saq)))
'If compositions(2, 4) > 0 Then
'S2 = compositions(2, 2) * beta(1) / compositions(2, 4) * beta(3)
's3 = compositions(2, 3) * beta(2) / compositions(2, 4) * beta(3)
'q3 = nTCO2_before_precipitation / (s1 * beta(3) * total_moles_Temp)
'q4 = S2 + s3 + 1 + t3 + t4
'End If
'If compositions(3, 4) > 0 Then
's5 = compositions(3, 2) * beta(1) / compositions(3, 4) * beta(3)
's6 = compositions(3, 3) * beta(2) / compositions(3, 4) * beta(3)
'q5 = nTH2S_before_precipitation / (s1 * beta(3) * total_moles_Temp)
'q6 = S2 + s3 + 1 + t7 + t8
'End If
'    'The following statements around the cubic Vg eqation and the quadratic ppt equation are used to get consistent values of Vg and ppt at each pH value.
'    'Initially, ppt = 0 and Vg is calculated and then this value of Vg is put into the Ksp equation to calcuate ppt(new) and this is put into the cubic Vg
'    '  equation to recalculate Vg with the improved value of ppt and the process is repeated until the convergence is +/- 0.0001 in both ppt and Vg or for 100
'    '  interations.  Generally, only two or three iterations are needed.
'
'
'    hydAc = aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1
'    AC = TAc / hydAc
'    HAcaq = TAc - AC
'    hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
'    H2BO3 = TH3BO3 / hydH2BO3
'    hydNH3 = aH * gNeut(iNH3) * gNNeut(iNH3) / (KNH4 * gCat(iNH4) * gNCat(iNH4)) + 1
'    NH3 = TNH4 / hydNH3
'    hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
'    aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
'    H2SiO4 = TH4SiO4 / hydH2SiO4
'    H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
'    H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
'
'    faH = Alk - 2 * ppt - (HCO3 + 2 * CO3 + HS + 2 * S + AC + NH3 + H2BO3 + H3SiO4 + 2 * H2SiO4 + OH - H)
'
'    'cehck**********************************************
'mass_w = s1 * beta(3) * total_moles_Temp
'
'End Sub
'
'Function ShellC8_GUI_fEOS_Speciation(myiosheet, myiocol)
' Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
'                TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'    s1 = 0.01801528 * compositions(15, 4) 'Unit Kg/ per mole of phase 3
'    CO2aq = compositions(2, 4) / s1
'    H2Saq = compositions(3, 4) / s1
'    HCO3 = (K1H2CO3 * aH2O) * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
'    CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
'    HS = K1H2S * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
'    S = K2HS * HS * gAn(iHS) * gNAn(iHS) / (aH * gAn(iSion) * gNAn(iSion))
'    t9 = (HCO3 + CO3) * s1 * beta(3) * total_moles_Temp
'    t10 = (HS + S) * s1 * beta(3) * total_moles_Temp
'    If iGas = 2 Then
'    q1 = nTCO2_before_precipitation - ppt * s1 * beta(3) * total_moles_Temp
'    Else
'    q1 = nTCO2_before_precipitation
'    End If
'    If iGas = 3 Then
'    q2 = nTH2S_before_precipitation - ppt * s1 * beta(3) * total_moles_Temp
'    Else
'    q2 = nTH2S_before_precipitation
'    End If
'    If t9 > q1 Then Delta_nTCO2EOS = q1 * (1 - 1 / (1 + t3 + t4))  'At high pH, the limiting factor is nTCO2_before_precipitation, set most of CO2 in aqueous phase
'    If t10 > q2 Then Delta_nTH2SEOS = q2 * (1 - 1 / (1 + t7 + t8))
'    total_moles_Temp = Total_moles_before_precipitation - Delta_nTCO2EOS - Delta_nTH2SEOS - ppt * s1 * beta(3) * total_moles_Temp
'    zTemp(1) = z_before_precipitation(1) * Total_moles_before_precipitation / total_moles_Temp
'    zTemp(2) = (q1 - Delta_nTCO2EOS) / total_moles_Temp
'    zTemp(3) = (q2 - Delta_nTH2SEOS) / total_moles_Temp
'    For iz = 4 To 15
'    zTemp(iz) = z_before_precipitation(iz) * Total_moles_before_precipitation / total_moles_Temp
'    Next iz
'
'     Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
'                TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'
'    s1 = 0.01801528 * compositions(15, 4) 'Unit Kg/ per mole of phase 3
'    CO2aq = compositions(2, 4) / s1
'    H2Saq = compositions(3, 4) / s1
'    HCO3 = (K1H2CO3 * aH2O) * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
'    CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
'    HS = K1H2S * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
'    S = K2HS * HS * gAn(iHS) * gNAn(iHS) / (aH * gAn(iSion) * gNAn(iSion))
'    t9 = (HCO3 + CO3) * s1 * beta(3) * total_moles_Temp
'    t10 = (HS + S) * s1 * beta(3) * total_moles_Temp
'
'Iteration = 0
'If t9 > 0 Then
''While Abs(Delta_nTCO2EOS - t9 + 1E-21) / (q1 + 1E-16) > 0.0001 And Iteration < 20
'While Abs(1 - (Delta_nTCO2EOS / t9)) > 0.001 And Iteration < 20
'nTCO2EOS = q1 - (Delta_nTCO2EOS + t9) / 2
'nTH2sEOS = q2 - (Delta_nTH2SEOS + t10) / 2
'total_moles_Temp = Total_moles_before_precipitation - (Delta_nTCO2EOS + t9) / 2 - (Delta_nTH2SEOS + t10) / 2 - ppt * s1 * beta(3) * total_moles_Temp
'Delta_nTCO2EOS = (Delta_nTCO2EOS + t9) / 2: Delta_nTH2SEOS = (Delta_nTH2SEOS + t10) / 2
'zTemp(1) = z_before_precipitation(1) * Total_moles_before_precipitation / total_moles_Temp
'zTemp(2) = nTCO2EOS / total_moles_Temp
'zTemp(3) = nTH2sEOS / total_moles_Temp
'    For iz = 4 To 15
'    zTemp(iz) = z_before_precipitation(iz) * Total_moles_before_precipitation / total_moles_Temp
'Next iz
'
' Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
'                TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'
'    s1 = 0.01801528 * compositions(15, 4) 'Unit Kg/ per mole of phase 3
'    CO2aq = compositions(2, 4) / s1
'    H2Saq = compositions(3, 4) / s1
'    HCO3 = (K1H2CO3 * aH2O) * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
'    CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
'    HS = K1H2S * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
'    S = K2HS * HS * gAn(iHS) * gNAn(iHS) / (aH * gAn(iSion) * gNAn(iSion))
't9 = (HCO3 + CO3) * s1 * beta(3) * total_moles_Temp
't10 = (HS + S) * s1 * beta(3) * total_moles_Temp
'If t9 > q1 Then t9 = q1 * (1 - 1 / (1 + t3 + t4))
'If t10 > q2 Then t10 = q2 * (1 - 1 / (1 + t7 + t8))
'Iteration = Iteration + 1
'Wend
'End If
'If t10 > 0 Then
''While Abs(Delta_nTH2SEOS - t10) / q2 > 0.0001 And Iteration < 20
'While Abs(1 - Delta_nTH2SEOS / t10) > 0.001 And Iteration < 20
'nTCO2EOS = q1 - (Delta_nTCO2EOS + t9) / 2
'nTH2sEOS = q2 - (Delta_nTH2SEOS + t10) / 2
'total_moles_Temp = Total_moles_before_precipitation - (Delta_nTCO2EOS + t9) / 2 - (Delta_nTH2SEOS + t10) / 2 - ppt * s1 * beta(3) * total_moles_Temp
''Delta_nTCO2EOS = t9: Delta_nTH2SEOS = t10
'Delta_nTCO2EOS = (Delta_nTCO2EOS + t9) / 2: Delta_nTH2SEOS = (Delta_nTH2SEOS + t10) / 2
'zTemp(1) = z_before_precipitation(1) * Total_moles_before_precipitation / total_moles_Temp
'zTemp(2) = nTCO2EOS / total_moles_Temp
'zTemp(3) = nTH2sEOS / total_moles_Temp
'    For iz = 4 To 15
'    zTemp(iz) = z_before_precipitation(iz) * Total_moles_before_precipitation / total_moles_Temp
'Next iz
'   Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
'                TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'
'    s1 = 0.01801528 * compositions(15, 4) 'Unit Kg/ per mole of phase 3
'    CO2aq = compositions(2, 4) / s1
'    H2Saq = compositions(3, 4) / s1
'    HCO3 = (K1H2CO3 * aH2O) * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
'    CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
'    HS = K1H2S * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
'    S = K2HS * HS * gAn(iHS) * gNAn(iHS) / (aH * gAn(iSion) * gNAn(iSion))
't9 = (HCO3 + CO3) * s1 * beta(3) * total_moles_Temp
't10 = (HS + S) * s1 * beta(3) * total_moles_Temp
'If t9 > q1 Then
't9 = q1 * (1 - 1 / (1 + t3 + t4))
'End If
'If t10 > q2 Then
't10 = q2 * (1 - 1 / (1 + t7 + t8))
'End If
'Iteration = Iteration + 1
'Wend
'End If
'TCO2 = Delta_nTCO2EOS / (s1 * beta(3) * total_moles_Temp) + CO2aq
'If TCO2 * (s1 * beta(3) * total_moles_Temp) > q1 Then
'TCO2 = q1 / (s1 * beta(3) * total_moles_Temp)
'End If
'TH2Saq = Delta_nTH2SEOS / (s1 * beta(3) * total_moles_Temp) + H2Saq
'If TH2Saq * (s1 * beta(3) * total_moles_Temp) > q2 Then
'TH2Saq = q2 / (s1 * beta(3) * total_moles_Temp)
'End If
'      aH = 10 ^ (-pH)
'      OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
'      HCO3 = TCO2 / (aH / (K1H2CO3 * aH2O) / gNeut(iCO2aq) / gNNeut(iCO2aq) * gAn(iHCO3) * gNAn(iHCO3) + 1 + K2HCO3 / aH / gAn(iCO3) / gNAn(iCO3) * gAn(iHCO3) * gNAn(iHCO3))
'      CO2aq = aH * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / ((K1H2CO3 * aH2O) * gNeut(iCO2aq) * gNNeut(iCO2aq))
'      CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
'      hydHS = aH * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq)) + 1 + (K2HS * gAn(iHS) * gNAn(iHS)) / (aH * gAn(iSion) * gNAn(iSion))
'      HS = TH2Saq / hydHS
'      H2Saq = aH * HS * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq))
'      S = K2HS * HS * gAn(iHS) * gNAn(iHS) / (aH * gAn(iSion) * gNAn(iSion))
''mt = ShellC8_GUI_fEOS_Speciation(myiosheet, myiocol)
'End Function
'
'Sub ShellC7_GUI_SimplifiedEOS_EquilCalcs(ppt_or_not, Im, iGas, Ksp, myiosheet, myiocol) 'ppt_or_not: "0" means no precipitation; "1" means only precipitation; and "2" means allow both precipitation and dissolution.
''Simplified subroutine for Reservoir Reconciliation at pH<7.  Skip the simultaneous iteration of speciation and Multiphase flash
''The following half-interval search followed by a Newton-Raphson routine
'ppt = 0
'pHHigh = 14
'pHLow = 0
'For i = 1 To 15
'    pH = (pHHigh + pHLow) / 2
'    aH = 10 ^ (-pH)
'    H = aH / (gCat(iH) * gNCat(iH))
'    OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
'    nTCO2EOS = nTCO2_before_precipitation
'    nTH2sEOS = nTH2S_before_precipitation
'    total_moles = Total_moles_before_precipitation
'    For iz = 1 To 15
'    z(iz) = z_before_precipitation(iz)
'    Next iz
'    Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
'                TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'    nCO2aq = total_moles * beta(3) * compositions(2, 4)  'unit=molesCO2 in water before ppt
'    nH2Saq = total_moles * beta(3) * compositions(3, 4)  'unit=molesH2S in water before ppt
'    CO2aq = nCO2aq / mass_w
'    H2Saq = nH2Saq / mass_w
'    HCO3 = (K1H2CO3 * aH2O) * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
'    CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
'    HS = K1H2S * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
'    CO2_w_before_ppt = (CO2aq + HCO3 + CO3)
'    H2S_w_before_ppt = (H2Saq + HS)
'    t2 = 1 + (aH * gAn(iCO3) * gNAn(iCO3) / (K2HCO3 * gAn(iHCO3) * gNAn(iHCO3))) + (aH ^ 2 * gAn(iCO3) * gNAn(iCO3) / ((K1H2CO3 * aH2O) * K2HCO3 * gNeut(iCO2aq) * gNNeut(iCO2aq)))
'    t3 = 1 + (aH * gAn(iHS) * gNAn(iHS)) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq))
'    hydAc = aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1
'    AC = TAc / hydAc
'    HAcaq = TAc - AC
'    hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
'    H2BO3 = TH3BO3 / hydH2BO3
'    hydNH3 = aH * gNeut(iNH3) * gNNeut(iNH3) / (KNH4 * gCat(iNH4) * gNCat(iNH4)) + 1
'    NH3 = TNH4 / hydNH3
'    hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
'    aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
'    H2SiO4 = TH4SiO4 / hydH2SiO4
'    H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
'    H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
'    faH = Alk - 2 * ppt - (HCO3 + 2 * CO3 + HS + AC + NH3 + H2BO3 + H3SiO4 + 2 * H2SiO4 + OH - H)
'    ypH(i) = faH: xpH(i) = pH: xppt(i) = ppt 'Used in Newton-Raphson iteration, at the end of this For loop.
'    If faH > 0 Then pHLow = pH
'    If faH < 0 Then pHHigh = pH
'Next i
'
''The following statements take the last two interation values of pH and of faH and uses a Newton-Raphson method to calculate the best pH value.
''From this improved pH value the ppt values are recalulated for final output.  This generally improves the convergence from three significant
''  figures to about eight+ significant figures with little additional computation; once the iteration is close to the answer.
'If Abs(ypH(i - 1) / ((ypH(i - 1) - ypH(i - 2)) / (xpH(i - 1) - xpH(i - 2)))) < 0.001 Then
'    pH = pH - ypH(i - 1) / ((ypH(i - 1) - ypH(i - 2)) / (xpH(i - 1) - xpH(i - 2)))  '(i-1) is used since the last i is one larger than the number of loops.
'Else
'    pH = Abs((xpH(i - 1) + xpH(i - 2))) / 2
'    errmsg(5) = 5
'End If
'
'    nTCO2EOS = nTCO2_before_precipitation
'    nTH2sEOS = nTH2S_before_precipitation
'    total_moles = Total_moles_before_precipitation
'    For iz = 1 To 15
'    z(iz) = z_before_precipitation(iz)
'    Next iz
'    Call MultiPhaseFlash_CS(myiosheet, myiocol, eosProps, kij, _
'                TK, PBar, total_moles_Temp, zTemp, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'    aH = 10 ^ (-pH)
'    H = aH / (gCat(iH) * gNCat(iH))
'    OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
'    nCO2aq = total_moles * beta(3) * compositions(2, 4) 'unit=molesCO2 in water before ppt
'    nH2Saq = total_moles * beta(3) * compositions(3, 4) 'unit=molesH2S in water before ppt
'    CO2aq = nCO2aq / mass_w
'    H2Saq = nH2Saq / mass_w
'    HCO3 = (K1H2CO3 * aH2O) * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
'    CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
'    HS = K1H2S * H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (aH * gAn(iHS) * gNAn(iHS))
'    CO2_w_before_ppt = CO2aq + HCO3 + CO3
'    H2S_w_before_ppt = H2Saq + HS
'
'    t2 = 1 + (aH * gAn(iCO3) * gNAn(iCO3) / (K2HCO3 * gAn(iHCO3) * gNAn(iHCO3))) + (aH ^ 2 * gAn(iCO3) * gNAn(iCO3)) / ((K1H2CO3 * aH2O) * K2HCO3 * gNeut(iCO2aq) * gNNeut(iCO2aq))
'    t3 = 1 + (aH * gAn(iHS) * gNAn(iHS)) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq))
'    hydAc = aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1
'    AC = TAc / hydAc
'    HAcaq = TAc - AC
'    hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
'    H2BO3 = TH3BO3 / hydH2BO3
'    hydNH3 = aH * gNeut(iNH3) * gNNeut(iNH3) / (KNH4 * gCat(iNH4) * gNCat(iNH4)) + 1
'    NH3 = TNH4 / hydNH3
'    hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
'    aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
'    H2SiO4 = TH4SiO4 / hydH2SiO4
'    H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
'    H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
'    faH = Alk - 2 * ppt - (HCO3 + 2 * CO3 + HS + AC + NH3 + H2BO3 + H3SiO4 + 2 * H2SiO4 + OH - H)
'
'End Sub
'
'
'Sub ShellD1_GUIErrormsgbox()
'For i = 1 To 2
'If errmsg(i) = 1 Then MsgBox ("According to the calculation, water is completely evaporated at this T and P or the aqueous phase is too concentrated to prevent ion speciation calculation.")
'If errmsg(i) = 2 Then MsgBox ("According to the calculation, water is evaporated to near dryness. The salt content of the water is reduced to 12 m, i.e., approximately the solubility of halite in the presence of high Ca brine, in order to allow for aqueous speciation calculation.")
'Next i
'End Sub
'
'
'
'
'
'Shell SMT *****************************************************************
'Shell SMT *****************************************************************
'Sub SMT_A1_SSP_1000_Cases()
'Dim lastrow
''Dim Bavalues() As Double, SO4values() As Double, SRvalues() As Double
'mytime = Time:
'RunSMT = 1: LoopTP = 0
''Before the subroutine:
'Application.ScreenUpdating = False
'mySheet = "PW_comp":
'Worksheets(mySheet).Range("Aj9:At1956").Value = Null
'Worksheets("BaSO4 isopleth").Range("A11:J2010").ClearContents
'Call InitializeOptionClearCellContent
'lastrow = Worksheets(mySheet).Range("A" & Rows.count).End(xlUp).Row
'ReDim CaseCount(lastrow)
'
'Run1000Cases = 1: RunSSP = 0
'nob = 0: Ncount = 0: NCount_II = 0: nob_Input = 0: nob_InputII = 0: CaseNob1000 = 0
'For i = 1 To lastrow - 8
'     If Worksheets(mySheet).Cells(8 + i, 35).Value = True Then
'        CaseNob1000 = CaseNob1000 + 1
'        CaseCount(i - Ncount) = i
'      Else
'        Ncount = Ncount + 1
'      End If
'Next i
'nob_Input = 1: nob = 1: RunSSP = 0:
'ReDim Preserve CaseCount(CaseNob1000) 'set this outside SMT_B2_ReadinAllData
'For LoopTP = 1 To CaseNob1000
'Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
'Call Worksheets("Readme").SMT_B2_ReadinAllData     'Reads in all Input concentrations, put in terms of molality and calculate total moles of CO2, H2S, CH4.
'MultiplePpt = 0   'Disallow multiple ppt to be calculated
'pHstp = pH
'Call Worksheets("Readme").B3_CalcConcs           'Cacluate all concentration data from wells on input screen.
'
'TF = Worksheets(mySheet).Cells(CaseCount(LoopTP) + 8, 33):
'Ppsia = Worksheets(mySheet).Cells(CaseCount(LoopTP) + 8, 34):
'        If TF < 24.8 Or TF = Empty Then
'        TF = 77
'        Worksheets(mySheet).Cells(CaseCount(LoopTP) + 8, 33) = 77
'        MsgBox ("Temperature is below 24,8 F. Temperature will be set to 77 F.")
'        End If
'        If TF > 482 Then
'        Worksheets(mySheet).Cells(CaseCount(LoopTP) + 8, 33) = 482
'        MsgBox ("Temperature is greater than 482 F. Temperature will be set to 482 F.")
'        TWH = 482
'        End If
'        If Ppsia < 12 Or Ppsia = Empty Then
'        MsgBox ("Pressure is below 12 psia. Initial pressure will be set to 14.7 psi.")
'        Worksheets(mySheet).Cells(CaseCount(LoopTP) + 8, 34) = 14.7
'        Ppsia = 14.7
'        End If
'        If Ppsia > 25000 Then
'        MsgBox ("Pressure is greater than 25,000 psia. Initial pressure will be set to 25,000 psi.")
'        Worksheets(mySheet).Cells(CaseCount(LoopTP) + 8, 34) = 25000
'        Ppsia = 25000
'        End If
'
'PBar = Ppsia / 14.503774: TC = (TF - 32) * 5 / 9: TK = (TF - 32) * 5 / 9 + 273.15: Patm = Ppsia / 14.696
'Call B5_CalculateSIvalues
''rhoTP = CalcRhoTP(TK, TC, PBar, Patm)
'pH_before_precipitation = pH
'
'Worksheets("BaSO4 isopleth").Cells(10 + LoopTP, 4) = 10 ^ SIBar
'Call LoopTPppt
'
''Application.Calculation = xlCalculationManual
'Call SMT_LoopTPWrite1000Cases
''Application.Calculation = xlCalculationAutomatic
'
'Next LoopTP
'Call SMT_B3PlotBaSO4isopleth
''After the subroutine:
''Application.Calculation = xlCalculationAutomatic
'Application.ScreenUpdating = True
''mytime1 = Time
''nettime = (mytime1 - mytime)
''Worksheets(mySheet).Range("Aq3") = nettime * 24 * 3600  It takes about four minutes (243 sec) to run 434 cases
'MsgBox "Calculation is finished. No. of calculation = " & CaseNob1000
'Worksheets("PW_comp").Activate
'Worksheets("PW_comp").Cells(CaseCount(1) + 8, 26 + 8).Select
'End
'End Sub
'
''I. This subroutine is activated by clicking on the Run button in the Input screen.
'Sub SMT_A2_Run_SSP()
'Dim lastrow
''Application.ScreenUpdating = False
''Application.Calculation = xlCalculationManual
''Application.ScreenUpdating = False
''Application.Calculation = xlCalculationManual
''mytime = Time
'mySheet = "PW_comp"
'RunSSP = 1: Run1000Cases = 0: RunStat = 0: RunQualityControlChecks = 0: RunH2SGUI = 0: CaseNob1000 = 0: RunSMT = 1
''End If
''Application.ScreenUpdating = False
'Worksheets("System analysis").Range("F7:P16").Value = Empty
'Call InitializeOptionClearCellContent
'lastrow = Worksheets(mySheet).Range("A" & Rows.count).End(xlUp).Row
'ReDim CaseCount(lastrow)
'nob = 0: Ncount = 0: NCount_II = 0: nob_Input = 0: nob_InputII = 0: Run1000Cases = 0:
'For i = 1 To lastrow - 8
'     If Worksheets(mySheet).Cells(8 + i, 35).Value = True Then
'        nob = nob + 1
'        CaseCount(i - Ncount) = i
'      Else
'        Ncount = Ncount + 1
'      End If
'Next i
'    nob_Input = nob
'ReDim Preserve CaseCount(nob) 'set this outside SMT_B2_ReadinAllData
'Worksheets(mySheet).Activate
'Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
'Call Worksheets("Readme").SMT_B2_ReadinAllData      'Reads in all Input concentrations, put in terms of molality and calculate total moles of CO2, H2S, CH4.
'Call Worksheets("Readme").B3_CalcConcs           'Cacluate all concentration data from wells on input screen.
'
''Call Worksheets("Readme").B4_CalcFinalBrine      'Mixed bine output.
'lastrow = Worksheets("System analysis").Range("d" & Rows.count).End(xlUp).Row
' For LoopTP = 1 To (lastrow - 6)
'    TF = Worksheets("System analysis").Cells(lastrow + 1 - LoopTP, 4):
'    Ppsia = Worksheets("System analysis").Cells(lastrow + 1 - LoopTP, 5):
'    If TF = "" Then TF = Empty: If Ppsia = "" Then Ppsia = Empty
'    If TF = Empty Then TF = 77: If Ppsia = Empty Then Ppsia = 14.7
'    If UseSI = 1 Then TF = Worksheets("System analysis").Cells(lastrow + 1 - LoopTP, 4) * 9 / 5 + 32
'    If UseSI = 1 Then Ppsia = Worksheets("System analysis").Cells(lastrow + 1 - LoopTP, 5) * 14.503774
'    TK = (TF - 32) * 5 / 9 + 273.15
'    Patm = Ppsia / 14.696
'    PBar = Ppsia / 14.503774
'    TC = (TF - 32) * 5 / 9
'    If LoopTP = 1 Then
'    TBH = TF: PBH = Ppsia
'    End If
'    If LoopTP = lastrow - 6 Then
'    TWH = TF: PWH = Ppsia
'    End If
' Call B5_CalculateSIvalues
' pH_before_precipitation = pH  'This saves the pH value before any dissolution or precipitation takes place.
' Call LoopTPppt
'    Worksheets("System analysis").Cells(lastrow + 1 - LoopTP, 6) = pH_before_precipitation - DpHj 'Output pH at T,P
'    Worksheets("System analysis").Cells(lastrow + 1 - LoopTP, 7) = 10 ^ SICal
'    Worksheets("System analysis").Cells(lastrow + 1 - LoopTP, 8) = pptCalcite_NoMassTransfer * 100091 * (rho25c - TDS * 0.000001)  'Amont of calcite to ppt to equilibrium.
'    Worksheets("System analysis").Cells(lastrow + 1 - LoopTP, 9) = 10 ^ SIBar
'    Worksheets("System analysis").Cells(lastrow + 1 - LoopTP, 10) = pptBarite_NoMassTransfer * 233390 * (rho25c - TDS / 1000000#)
'    Worksheets("System analysis").Cells(lastrow + 1 - LoopTP, 11) = 10 ^ SIAn
'    Worksheets("System analysis").Cells(lastrow + 1 - LoopTP, 12) = pptAn * 136140 * (rho25c - TDS / 1000000#)
'    Worksheets("System analysis").Cells(lastrow + 1 - LoopTP, 13) = 10 ^ SICel
'    Worksheets("System analysis").Cells(lastrow + 1 - LoopTP, 14) = pptCel * 183680 * (rho25c - TDS / 1000000#)
'    Worksheets("System analysis").Cells(lastrow + 1 - LoopTP, 15) = 10 ^ SIHal
'    Worksheets("System analysis").Cells(lastrow + 1 - LoopTP, 16) = pptHal * 58443 * (rho25c - TDS / 1000000#)
'Next LoopTP
'
'201 If RunGoalSeek = 0 And Run_MassTransfer = 0 Then 'The following updates the Last two columns even when GoalSeek is not run
'    Call ErrorMsgBox
''    If UseSI = 1 Then
''    TBH = (TBH - 32) * 5 / 9
''    TWH = (TWH - 32) * 5 / 9
''    PBH = PBH / 14.503774
''    PWH = PWH / 14.503774
''    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial and final temperatures are " & TBH & " and " & TWH & " C;" & Chr(13) _
''    & "Initial and final pressures are " & PBH & " and " & PWH & " Bar." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." & Chr(13) & Chr(13) _
' '
''    Else
'    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial and final temperatures are " & TBH & " and " & TWH & " F;" & Chr(13) _
'    & "Initial and final pressures are " & Round(PBH) & " and " & Round(PWH) & " psia."  ''******************************
''    End If
'    End If
'
'If Run_MassTransfer <> 1 Or Run10TestCases <> 1 Or RunWhatIf <> 1 Or Run_Seawater_Mixing <> 1 Or Run_MixingTwoWells <> 1 Then
'Worksheets("System analysis").Activate
'Worksheets("System analysis").Range("A1").Select
'End If
'End Sub
'
'Sub SMT_B2_ReadinAllData()
'    OutPutActCoefs = 0
'    If Run1000Cases = 1 Then nob = nob_Input
'ReDim Preserve NaMix(nob), MgMix(nob), CaMix(nob), SrMix(nob), BaMix(nob), FeMix(nob), ZnMix(nob), ClMix(nob), PbMix(nob), RaMix(nob), BrMix(nob)
'ReDim Preserve NH3Mix(nob), H3SiO4Mix(nob), H2SiO4Mix(nob), H4SiO4Mix(nob), H3BO3Mix(nob), CO2aqMix(nob), H2SaqMix(nob), HACaqMix(nob)
'ReDim Preserve UseH2SgasMix(nob), SO4Mix(nob), FMix(nob), TDSMix(nob), AlkMix(nob), TAcMix(nob), KMix(nob), MixFrac(nob)
'ReDim Preserve rho_Mix(nob), TH2SaqMix(nob), pHMeterStpMix(nob), TH4SiO4Mix(nob), TNH4Mix(nob), TH3BO3Mix(nob)
'ReDim Preserve SampleIDMix(nob), SampleDateMix(nob), OperatorMix(nob), WellNameMix(nob), FieldMix(nob), StateMix(nob) As String
'ReDim Preserve VgTPMix(nob), VoMix(nob), VwMix(nob), VMeOHMix(nob), VMEGMix(nob), oilAPIgravMix(nob), gasSpGravMix(nob), MixFracGas(nob)
'ReDim Preserve nTCO2Mix(nob), nTCH4Mix(nob), nTH2SMix(nob), mass_w_Mix(nob), mass_o_Mix(nob), MixFracOil(nob)
'ReDim Preserve mass_MeOH_mix(nob), mass_MEG_mix(nob), Qheat(nob), yCO2Mix(nob), yH2SMix(nob), yCH4Mix(nob)
'ReDim Preserve YCH4stpmix(nob), RatioOilBPointsmix(nob), CalculatedTDSMix(nob), rho25CMix(nob)
'ReDim Preserve HstpMix(nob), OHstpMix(nob), HCO3stpMix(nob), CO3stpMix(nob), ACstpMix(nob), HSstpMix(nob), NH4STPMix(nob), H2BO3stpMix(nob)
'ReDim Preserve HCO3AlkMix(nob), CO3AlkMix(nob), HAlkMix(nob), OHAlkMix(nob)
'ReDim Preserve ConcFactor(nob)
'
'ReDim Preserve TCO2Mix(nob), TofpH(nob), PofpH(nob), TofVol(nob), PofVol(nob)
'ReDim Preserve OilDensityMix(nob), GasDensityMix(nob), WaterDensityMix(nob)
'ReDim Preserve UseTPpHMix(nob), UseTPVolMix(nob), useEOSmix(nob)
'ReDim Preserve molc(NumCat, nob), mola(NumAn, nob), moln(NumNeut, nob) ' Convert all ions to moles
'ReDim Preserve molAlk(nob), molTAC(nob), molTNH4(nob), molTH3BO3(nob), molTH2Saq(nob), molTH4SiO4(nob)
'ReDim Preserve mol_g_origMix(nob), mol_o_OrigMix(nob), mol_w_OrigMix(nob), mol_g_finalMix(nob), mol_o_finalMix(nob), mol_w_finalMix(nob), mol_w_evapMix(nob)
'ReDim Preserve Total_molesMix(nob), SumofZMix(nob), nTCO2MixEOS(nob), nTH2SMixEOS(nob), zMix(nob, 20)
'ReDim Preserve usepHmix(nob)
'
'
'
'
'
'    For iRead = 1 To nob  'For any number of mixing on Input sheet "nob=number of brines selected"; same for three "what ifs at bottom of each page".  For mixing page "nob = 2", the first two column of data.
'       j = CaseCount(iRead)
'       If Run1000Cases = 1 Then j = CaseCount(LoopTP) 'Amy 1000Cases
'       kk = iRead
'    If Run1000Cases = 1 Then
'    Worksheets("BaSO4 isopleth").Cells(10 + LoopTP, 1) = Worksheets("PW_comp").Cells(8 + j, 1)
'    Worksheets("BaSO4 isopleth").Cells(10 + LoopTP, 2) = Worksheets("PW_comp").Cells(8 + j, 6)
'    Worksheets("BaSO4 isopleth").Cells(10 + LoopTP, 3) = Worksheets("PW_comp").Cells(8 + j, 14)
'    End If
'    Call SMT_ReadInputPartA(kk)
'    Next iRead
'
'    For iRead = 1 To nob  'For any number of mixing on Input sheet "nob=number of brines selected"; same for three "what ifs at bottom of each page".  For mixing page "nob = 2", the first two column of data.
'       j = CaseCount(iRead)
'       If Run1000Cases = 1 Then j = CaseCount(LoopTP) 'Amy 1000Cases
'       kk = iRead
'       Call SMT_ReadInputPartB(kk)
'    Next iRead
'
' For iRead = 1 To nob
'    j = CaseCount(iRead)
'    If Run1000Cases = 1 Then j = CaseCount(LoopTP) 'Amy 1000Cases
'    kk = iRead
'    Call ReadInputPartC(kk)
'Next iRead
'
'For iRead = 1 To nob
'       j = CaseCount(iRead)
'       If Run1000Cases = 1 Then j = CaseCount(LoopTP) 'Amy 1000Cases
'       kk = iRead
'       Call SMT_ReadInputPartD(kk, j)
'Next iRead
''If Run1000Cases = 1 Then
''TBH = Worksheets(mySheet).Range("H5")
''        If UseSI = 1 Then TBH = TBH * 9 / 5 + 32
''        If TBH < 24.8 Then MsgBox ("Initial temperature is below 24.8F or -4C. Initial temperature will be set to 77 F or 25 C.")
''        If TBH < 24.8 Then
''            If UseSI = 1 Then
''            Worksheets(mySheet).Range("H5") = 25
''            Else
''            Worksheets(mySheet).Range("H5") = 77
''            End If
''        End If
''        If TBH < 24.8 Then TBH = 77
''        If TBH > 482 Then MsgBox ("Initial temperature is above 482 F. Initail temperature will be set to 482 F or 250 C.")
''        If TBH > 482 Then
''            If UseSI = 1 Then
''            Worksheets(mySheet).Range("H5") = 250
''            Else
''            Worksheets(mySheet).Range("H5") = 482
''            End If
''        End If
''        If TBH > 482 Then TBH = 482
''TWH = TBH
''       PBH = Worksheets(mySheet).Range("H4")
''        If UseSI = 1 Then PBH = PBH * 14.503774
''        If PBH < 12 Then MsgBox ("Initial pressure is below 12 psia or 0.827 bar. Initial pressure will be set to 14.7 psi or 1.01325 bar.")
''        If PBH < 12 Then
''            If UseSI = 1 Then
''            Worksheets(mySheet).Range("H4") = 1.01325
''            Else
''            Worksheets(mySheet).Range("H4") = 14.7
''            End If
''        End If
''        If PBH < 12 Then PBH = 14.7 'If P is zero, probably it is guage and therefore add 1 atm
''        If PBH > 30000 Then MsgBox ("Initial pressure is above 30,000 psi. Initial pressure will be set to 30,000 psia or 2,068.4 bar.")
''        If PBH > 30000 Then
''            If UseSI = 1 Then
''            Worksheets(mySheet).Range("H4") = 30000 / 14.503774
''            Else
''            Worksheets(mySheet).Range("H4") = 30000
''            End If
''        End If
''        If PBH > 30000 Then PBH = 30000
''    PWH = PBH
''End If
'End Sub
''
'Sub SMT_ReadInputPartA(kk)
'UseSI = 0: UseMolal = 0
'Dim useTIC
'If RunSMTBaSO4isopleth = 0 Then
'If Worksheets(mySheet).Cells(4, 9).Value = "(bara)" Then UseSI = 1
'For iTDS = 1 To 14
'If Worksheets(mySheet).Cells(j + 8, 5 + iTDS).Value = "" Then Worksheets(mySheet).Cells(j + 8, 5 + iTDS).Value = Empty
'Next iTDS
'For iTDS = 1 To 4
'If Worksheets(mySheet).Cells(j + 8, 26 + iTDS).Value = "" Then Worksheets(mySheet).Cells(j + 8, 23 + iTDS).Value = Empty
'Next iTDS
'If Worksheets(mySheet).Cells(j + 8, 18).Value = "" Then Worksheets(mySheet).Cells(j + 8, 18).Value = Empty
'If Worksheets(mySheet).Cells(j + 8, 19).Value = "" Then Worksheets(mySheet).Cells(j + 8, 19).Value = Empty
'
'BaMix(kk) = Worksheets(mySheet).Cells(j + 8, 6).Value
'CaMix(kk) = Worksheets(mySheet).Cells(j + 8, 7).Value
'KMix(kk) = Worksheets(mySheet).Cells(j + 8, 8).Value
'MgMix(kk) = Worksheets(mySheet).Cells(j + 8, 9).Value
'FeMix(kk) = Worksheets(mySheet).Cells(j + 8, 10).Value
' SrMix(kk) = Worksheets(mySheet).Cells(j + 8, 11).Value
'NaMix(kk) = Worksheets(mySheet).Cells(j + 8, 12).Value
'  ClMix(kk) = Worksheets(mySheet).Cells(j + 8, 13).Value
'  SO4Mix(kk) = Worksheets(mySheet).Cells(j + 8, 14).Value
'TH3BO3Mix(kk) = Worksheets(mySheet).Cells(j + 8, 15).Value
'TAcMix(kk) = (Worksheets(mySheet).Cells(j + 8, 16).Value / 59046 + Worksheets(mySheet).Cells(j + 8, 17).Value / 73070) * 59046
'useTIC = Worksheets(mySheet).Cells(j + 8, 20).Value
'If useTIC = Empty Then useTIC = 0
'If useTIC = "" Then useTIC = 0
'If useTIC = 0 Then HCO3AlkMix(kk) = Worksheets(mySheet).Cells(j + 8, 18).Value
'If useTIC = 1 Then HCO3AlkMix(kk) = Worksheets(mySheet).Cells(j + 8, 19).Value + TAcMix(kk) / 59046 * 61019
'pHMeterStpMix(kk) = Worksheets(mySheet).Cells(j + 8, 21).Value 'Store values of pH on the input sheet that will not be changed.
'yCO2Mix(kk) = Worksheets(mySheet).Cells(j + 8, 30).Value / 100
''   UseH2SgasMix(kk) = 1
''    If UseH2SgasMix(kk) = 1 Then
''    yH2SMix(kk) = Worksheets(mySheet).Cells(j + 8, 28).Value / 100
''    TH2SaqMix(kk) = 0
''    Else
''    TH2SaqMix(kk) = Worksheets(mySheet).Cells(j + 8, 28).Value
''    yH2SMix(kk) = 0
''    End If
'yH2SMix(kk) = 0
'    ZnMix(kk) = 0: PbMix(kk) = 0: FMix(kk) = 0: BrMix(kk) = 0: TH4SiO4Mix(kk) = 0
'    CO3AlkMix(kk) = 0: TNH4Mix(kk) = 0
'HAlkMix(kk) = 0:    OHAlkMix(kk) = 0:    ConcFactor(kk) = 1: usepHmix(kk) = 0
'UseTPCalciteSheet = 0: UseTPpHMix(kk) = 0: UseTPVolMix(kk) = 0: useEOSmix(kk) = 0
'TDSMix(kk) = 0
'
'If UseMolal = 0 Then
'    For iTDS = 1 To 12
'        TDSMix(kk) = TDSMix(kk) + Worksheets(mySheet).Cells(j + 8, 5 + iTDS).Value
'        Next iTDS
'        If useTIC = 0 Then TDSMix(kk) = TDSMix(kk) + Worksheets(mySheet).Cells(j + 8, 18).Value - Worksheets(mySheet).Cells(j + 8, 16).Value - Worksheets(mySheet).Cells(j + 8, 17).Value
'        If useTIC = 1 Then TDSMix(kk) = TDSMix(kk) + Worksheets(mySheet).Cells(j + 8, 19).Value
'    Else
'        For iTDS = 1 To 12
'        TDSMix(kk) = TDSMix(kk) + Worksheets(mySheet).Cells(j + 8, 5 + iTDS).Value * 53459 / 2 'Use corelation of NaCl molal to TDS, initial guess for molality input
'        Next iTDS
'        If useTIC = 0 Then TDSMix(kk) = TDSMix(kk) + (Worksheets(mySheet).Cells(j + 8, 18).Value - Worksheets(mySheet).Cells(j + 8, 16).Value - Worksheets(mySheet).Cells(j + 8, 17).Value) * 53459 / 2
'        If useTIC = 1 Then TDSMix(kk) = TDSMix(kk) + Worksheets(mySheet).Cells(j + 8, 19).Value * 53459 / 2
'End If
'Else
'BaMix(kk) = Worksheets("BaSO4 isopleth").Cells(4, 4).Value
'CaMix(kk) = Worksheets("BaSO4 isopleth").Cells(4, 5).Value
'KMix(kk) = Worksheets("BaSO4 isopleth").Cells(4, 6).Value
'MgMix(kk) = Worksheets("BaSO4 isopleth").Cells(4, 7).Value
'FeMix(kk) = Worksheets("BaSO4 isopleth").Cells(4, 8).Value
' SrMix(kk) = Worksheets("BaSO4 isopleth").Cells(4, 9).Value
'NaMix(kk) = Worksheets("BaSO4 isopleth").Cells(4, 10).Value
'  ClMix(kk) = Worksheets("BaSO4 isopleth").Cells(4, 11).Value
'  SO4Mix(kk) = Worksheets("BaSO4 isopleth").Cells(4, 12).Value
'TH3BO3Mix(kk) = Worksheets("BaSO4 isopleth").Cells(4, 13).Value
'TAcMix(kk) = (Worksheets("BaSO4 isopleth").Cells(4, 14).Value / 59046 + Worksheets("BaSO4 isopleth").Cells(4, 15).Value / 73070) * 59046
'useTIC = Worksheets("BaSO4 isopleth").Cells(4, 18).Value
'
'If useTIC = Empty Then useTIC = 0
'If useTIC = "" Then useTIC = 0
'If useTIC = 0 Then HCO3AlkMix(kk) = Worksheets("BaSO4 isopleth").Cells(4, 16).Value
'If useTIC = 1 Then HCO3AlkMix(kk) = Worksheets("BaSO4 isopleth").Cells(4, 17).Value + TAcMix(kk) / 59046 * 61019
''pHMeterStpMix(kk) = Worksheets("BaSO4 isopleth").Cells(4, 21).Value 'Store values of pH on the input sheet that will not be changed.
'yCO2Mix(kk) = Worksheets("BaSO4 isopleth").Cells(4, 19).Value / 100
''   UseH2SgasMix(kk) = 1
''    If UseH2SgasMix(kk) = 1 Then
''    yH2SMix(kk) = Worksheets(mySheet).Cells(j + 8, 28).Value / 100
''    TH2SaqMix(kk) = 0
''    Else
''    TH2SaqMix(kk) = Worksheets(mySheet).Cells(j + 8, 28).Value
''    yH2SMix(kk) = 0
''    End If
'yH2SMix(kk) = 0
'
'    ZnMix(kk) = 0: PbMix(kk) = 0: FMix(kk) = 0: BrMix(kk) = 0: TH4SiO4Mix(kk) = 0
'    CO3AlkMix(kk) = 0: TNH4Mix(kk) = 0
'HAlkMix(kk) = 0:    OHAlkMix(kk) = 0:    ConcFactor(kk) = 1: usepHmix(kk) = 0
'UseTPCalciteSheet = 0: UseTPpHMix(kk) = 0: UseTPVolMix(kk) = 0: useEOSmix(kk) = 0
'TDSMix(kk) = 0
'
'If UseMolal = 0 Then
'    For iTDS = 1 To 12
'        TDSMix(kk) = TDSMix(kk) + Worksheets("BaSO4 isopleth").Cells(4, 3 + iTDS).Value
'        Next iTDS
'        If useTIC = 0 Then TDSMix(kk) = TDSMix(kk) + Worksheets("BaSO4 isopleth").Cells(4, 16).Value - Worksheets("BaSO4 isopleth").Cells(j + 8, 14).Value - Worksheets("BaSO4 isopleth").Cells(j + 8, 15).Value
'        If useTIC = 1 Then TDSMix(kk) = TDSMix(kk) + Worksheets("BaSO4 isopleth").Cells(4, 17).Value
'    Else
'        For iTDS = 1 To 12
'        TDSMix(kk) = TDSMix(kk) + Worksheets("BaSO4 isopleth").Cells(4, 3 + iTDS).Value * 53459 / 2 'Use corelation of NaCl molal to TDS, initial guess for molality input
'        Next iTDS
'        If useTIC = 0 Then TDSMix(kk) = TDSMix(kk) + (Worksheets("BaSO4 isopleth").Cells(4, 16).Value - Worksheets("BaSO4 isopleth").Cells(4, 14).Value - Worksheets("BaSO4 isopleth").Cells(4, 15).Value) * 53459 / 2
'        If useTIC = 1 Then TDSMix(kk) = TDSMix(kk) + Worksheets("BaSO4 isopleth").Cells(4, 17).Value * 53459 / 2
'End If
'End If
'rho_Mix(kk) = 0.9991 + 0.0000006398 * TDSMix(kk)
'If UseMolal = 0 Then 'Flag that the Input is as mg/L
'    NaMix(kk) = NaMix(kk) / (22990 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk) 'Convert mg/L to molality
'    KMix(kk) = KMix(kk) / (39098 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    MgMix(kk) = MgMix(kk) / (24305 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    CaMix(kk) = CaMix(kk) / (40080 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    SrMix(kk) = SrMix(kk) / (87620 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    BaMix(kk) = BaMix(kk) / (137330 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    FeMix(kk) = FeMix(kk) / (55847 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    ZnMix(kk) = ZnMix(kk) / (65380 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    PbMix(kk) = PbMix(kk) / (207200 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk) 'Pb added
'    ClMix(kk) = ClMix(kk) / (35450 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    SO4Mix(kk) = SO4Mix(kk) / (96064 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    FMix(kk) = FMix(kk) / (18998 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    BrMix(kk) = BrMix(kk) / (79904 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk) 'Br added
'    TH4SiO4Mix(kk) = TH4SiO4Mix(kk) / (28085 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk) 'Input silica as SiO2.
'    HCO3AlkMix(kk) = HCO3AlkMix(kk) / (61019 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    'CO3AlkMix(kk) = CO3AlkMix(kk) / (60019 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'
'    TAcMix(kk) = TAcMix(kk) / (59046 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    'TNH4Mix(kk) = TNH4Mix(kk) / (17031 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    'TH3BO3Mix(kk) = TH3BO3Mix(kk) / (10811 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    'If UseH2SgasMix(kk) = 0 Then TH2SaqMix(kk) = TH2SaqMix(kk) / (34080 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk) 'Used to calculate yH2Sstp
'    'HAlkMix(kk) = HAlkMix(kk) / (0.9991 - 0.0000003612 * TDSMix(kk)) 'convert N to m
'    'OHAlkMix(kk) = OHAlkMix(kk) / (0.9991 - 0.0000003612 * TDSMix(kk))
'     CO3AlkMix(kk) = 0: TNH4Mix(kk) = 0: TH3BO3Mix(kk) = 0: TH2SaqMix(kk) = 0: HAlkMix(kk) = 0: OHAlkMix(kk) = 0
'End If
'    AlkMix(kk) = HCO3AlkMix(kk) + 2 * CO3AlkMix(kk) - HAlkMix(kk) + OHAlkMix(kk)
'    TCO2Mix(kk) = HCO3AlkMix(kk) + CO3AlkMix(kk)
'yCH4Mix(kk) = 1 - (yCO2Mix(kk) + yH2SMix(kk)) 'assume dry gas as default
'If yCH4Mix(kk) < 0 Then yCH4Mix(kk) = 0
'If yCO2Mix(kk) > 1 Then
'    errmsg(1) = 1
'    yCO2Mix(kk) = 1
'End If
'If yCO2Mix(kk) < 0 Then
'    errmsg(2) = 2
'    yCO2Mix(kk) = 0: yCO2 = 0: CO2aq = 0: HCO3 = 0: CO3 = 0
'End If
'If yH2SMix(kk) > 1 Then
'    errmsg(3) = 3
'    yH2SMix(kk) = 1: yH2S = 1: TH2SaqMix(kk) = 0 'This will cause the program to use yH2Sstp as the calculation for TH2Saq instead of the input sheet value.
'End If
'If yH2SMix(kk) < 0 Then
'    errmsg(4) = 4
'    yH2SMix(kk) = 0: yH2S = 0:  HS = 0: H2Saq = 0: TH2SaqMix(kk) = 0
'End If
'100 End Sub
'Sub SMT_ReadInputPartB(kk)
'    VoMix(kk) = Worksheets(mySheet).Cells(j + 8, 27).Value
'VwMix(kk) = Worksheets(mySheet).Cells(j + 8, 28).Value
'    VgTPMix(kk) = Worksheets(mySheet).Cells(j + 8, 29).Value * 1000 '1000 ft/d or m^3/d
'    oilAPIgravMix(kk) = Worksheets(mySheet).Cells(j + 8, 31).Value 'If no, or 0, the read in the API grav and sp grav and use these to calc. the Pbpt.
'    gasSpGravMix(kk) = Worksheets(mySheet).Cells(j + 8, 32).Value
'    VMeOHMix(kk) = 0: VMEGMix(kk) = 0
'If UseSI = 0 Then
'    VgTPMix(kk) = VgTPMix(kk) * 28.31685 'convert 1000 ft^3 to be m^3
'    Else
'    VgTPMix(kk) = VgTPMix(kk) * 1000 'convert 1000 m3 to m3
'End If
'If UseSI = 1 Then
'    VoMix(kk) = VoMix(kk) / 0.159 'Convert m3 to barrels
'    VwMix(kk) = VwMix(kk) / 0.159 'Convert m3 to barrels
'    VMeOHMix(kk) = VMeOHMix(kk) / 0.159
'    VMEGMix(kk) = VMEGMix(kk) / 0.159
'    TofVol(kk) = TofVol(kk) * 9 / 5 + 32 ' Convert Input TC unit to TF unit
'    PofVol(kk) = PofVol(kk) * 14.503774 ' Convert Input P (Bar) unit to Ppsia unit
'    TofpH(kk) = TofpH(kk) * 9 / 5 + 32 ' Convert Input TC unit to TF unit
'    PofpH(kk) = PofpH(kk) * 14.503774 ' Convert Input P (Bar) unit to Ppsia unit
'End If
'TpH = TofpH(kk): PpH = PofpH(kk): TVol = TofVol(kk): Pvol = PofVol(kk)
'If oilAPIgravMix(kk) = 0 Or oilAPIgravMix(kk) = "" Then oilAPIgravMix(kk) = 30
'If gasSpGravMix(kk) = 0 Or gasSpGravMix(kk) = "" Then gasSpGravMix(kk) = 0.6
'If UseTPVolMix(kk) = 0 Then
'    mt = fTPFunc(0) ' STP Condition
'    WaterDensityMix(kk) = rho_Mix(kk)
'    GasDensityMix(kk) = gasSpGravMix(kk) * (Patm * 28.97 / (0.08206 * TK)) 'unit as Kg/m^3
'    OilDensityMix(kk) = (141.5 / (oilAPIgravMix(kk) + 131.5)) * (fH2ODensity(TK, PBar) / 1000) 'conver density from API gravity
'Else 'UseTPVolMix(kk) = 1
'    mt = fTPFunc(1) ' At T, P of volume data
'    GasDensityMix(kk) = gasSpGravMix(kk) * (Patm * 28.97 / (0.08206 * TK)) 'unit as Kg/m^3
'    OilDensityMix(kk) = (141.5 / (oilAPIgravMix(kk) + 131.5)) * (fH2ODensity(TK, PBar) / 1000) 'conver density from API gravity
'End If
'If VgTPMix(kk) = 0 Then VgTPMix(kk) = 1 / 1000000# 'If volume of gas is equal to zero, then add one mL of gas.
'If VoMix(kk) = 0 Then VoMix(kk) = 1 / 159 / 1000 'If no oil is reported, add one ml of oil per day, to avoid singularities.
'If VwMix(kk) = 0 Then VwMix(kk) = 1 / 159 / 1000  'If no water is reported, add one ml of water per day, to avoid singularities.
'100  End Sub
'
'Sub SMT_ReadInputPartD(kk, j)
''Assign local variables for this sub
'    mc(iH) = HstpMix(kk): mc(iNa) = NaMix(kk): mc(iK) = KMix(kk): mc(iMg) = MgMix(kk): mc(iCa) = CaMix(kk): TCa = mc(iCa)
'    mc(iSr) = SrMix(kk): mc(iBa) = BaMix(kk): mc(iFe) = FeMix(kk): mc(iZn) = ZnMix(kk): mc(iPb) = PbMix(kk)
'    ma(iOH) = OHstpMix(kk): ma(iCl) = ClMix(kk): ma(iAc) = ACstpMix(kk): mc(iNH4) = NH4STPMix(kk): ma(iH2BO3) = H2BO3stpMix(kk)
'    ma(iHCO3) = HCO3stpMix(kk): ma(iCO3) = CO3stpMix(kk)
'    ma(iSO4) = SO4Mix(kk): ma(iHS) = HSstpMix(kk): ma(intF) = FMix(kk): ma(iBr) = BrMix(kk)
'    Alk = AlkMix(kk): TAc = TAcMix(kk): TNH4 = TNH4Mix(kk): TH3BO3 = TH3BO3Mix(kk): TH2Saq = TH2SaqMix(kk): TCO2 = TCO2Mix(kk)
'    VW = VwMix(kk): VgTP = VgTPMix(kk): VO = VoMix(kk): VMeOH = VMeOHMix(kk): VMEG = VMEGMix(kk): mass_MeOH = mass_MeOH_mix(kk): mass_MEG = mass_MEG_mix(kk):
'    yCO2 = yCO2Mix(kk): yH2S = yH2SMix(kk): yCH4 = yCH4Mix(kk)   'Local variable values; in this loop only.
'    useEOS = 0:  use_pH = usepHmix(kk): UseH2Sgas = UseH2SgasMix(kk):
'    SGG = gasSpGravMix(kk): API = oilAPIgravMix(kk)
''Calculate mass of water, oil, moles of water, oil and gas based on the fluid temperature and pressure**********************************************
'If UseTPVolMix(kk) = 1 Then mt = fTPFunc(1)  'check T, P for mass_W, mass_O, mol_g calculation
'If UseTPVolMix(kk) = 0 Then mt = fTPFunc(0)
'    Call CalcIonicStrength
'    pH = pHMeterStpMix(kk) + DpHj
'    RatioOilBPoints = fRatioOilBPoints
'    Call C1_ThermodynamicEquilConsts
'    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm) ' Calculate act coeff in the presence of hydrate inhibitor at STP
'    Call PengRobinson3
'    Call C5_CalcpHPCO2PH2SSTP
''******Reassign CO2aq, HCO3, CO3, H2Saq, HS and recalculate ionic strength
'    mt = fmn
'    Call CalcIonicStrength
'    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
'    Call C5_CalcpHPCO2PH2SSTP
''    If useEOSmix(kk) = 1 Then
''    mc(iH) = 0.0000001: ma(iOH) = 0.0000001: ma(iAc) = TAc: ma(iHCO3) = Alk: ma(iHS) = 0: mn(iH4SiO4aq) = tH4SiO4: mn(iH3BO3) = TH3BO3: mc(iNH4) = TNH4
''    End If
' If UseTPVolMix(kk) = 1 Then WaterDensityMix(kk) = CalcRhoTP(TK, TC, PBar, Patm) 'Use calculated water density at temperation TVol and PVol
'    mass_o_Mix(kk) = 159 * VoMix(kk) * OilDensityMix(kk) ' These were used for calc nTCO2 and nTH2S in useEOS=0 and useEOS=3. The values were recalculated in useEOS=1 or 2
'    mass_w_Mix(kk) = 159 * VwMix(kk) * WaterDensityMix(kk)  'convert to Kg salt water, this is only true if WaterDensityMix(kk) is accurately measured at T, P if UseTPVolMix(kk) =1
'    mass_w_Mix(kk) = mass_w_Mix(kk) * (1 - CalculatedTDSMix(kk) / rho25CMix(kk) * 0.000001)
'    Mass_o = mass_o_Mix(kk): mass_w = mass_w_Mix(kk)
'    mt = fTotalCO2H2Smoles 'Calculate the total moles of each gas component (whether in the gas or in oil or water)
'    'note that VgTP is in unit of m^3  829 is converted from He's coeff of 78740 when Vg is in unit of MMCF.
'    yCO2Mix(kk) = yCO2: yCH4Mix(kk) = yCH4: yH2SMix(kk) = yH2S
'    nTCO2Mix(kk) = nTCO2: nTCH4Mix(kk) = nTCH4: nTH2SMix(kk) = nTH2S
'123 End Sub
'Sub SMT_LoopTPWrite1000Cases()
'    j = CaseCount(LoopTP)
'    Worksheets(mySheet).Cells(j + 8, 36) = 10 ^ SICal
'    Worksheets(mySheet).Cells(j + 8, 37) = pptCalcite_NoMassTransfer * 100091 * (rho25c - TDS * 0.000001) 'Amont of calcite to ppt to equilibrium.
'    Worksheets(mySheet).Cells(j + 8, 38) = 10 ^ SIBar
'    Worksheets(mySheet).Cells(j + 8, 39) = pptBarite_NoMassTransfer * 233390 * (rho25c - TDS / 1000000#)
'    Worksheets(mySheet).Cells(j + 8, 40) = 10 ^ SIAn
'    Worksheets(mySheet).Cells(j + 8, 41) = pptAn * 136140 * (rho25c - TDS / 1000000#)
'    Worksheets(mySheet).Cells(j + 8, 42) = 10 ^ SICel
'    Worksheets(mySheet).Cells(j + 8, 43) = pptCel * 183680 * (rho25c - TDS / 1000000#)
'    Worksheets(mySheet).Cells(j + 8, 44) = 10 ^ SIHal
'    Worksheets(mySheet).Cells(j + 8, 45) = pptHal * 58443 * (rho25c - TDS / 1000000#)
'    Worksheets(mySheet).Cells(j + 8, 46) = pHstp - DpHj
'End Sub
'
'Sub SMT_B3PlotBaSO4isopleth()
'Dim i As Integer
'Dim MaxIntegersIndex As Integer, MaxBa As Double, MaxSO4 As Double, MaxSR As Double, DeltaIon As Double, ST(5) As Double
'ReDim SRvalues(CaseNob1000) As Double, Bavalues(CaseNob1000), SO4values(CaseNob1000)
'Dim BaAct(20, 3) As Double, SO4Act(20, 3) As Double
'
'ST(1) = Worksheets("BaSO4 isopleth").Range("G8")
'ST(2) = Worksheets("BaSO4 isopleth").Range("H8")
'ST(3) = Worksheets("BaSO4 isopleth").Range("i8")
'For i = 1 To CaseNob1000
'Bavalues(i) = Worksheets("BaSO4 isopleth").Cells(10 + i, 2)
'SO4values(i) = Worksheets("BaSO4 isopleth").Cells(10 + i, 3)
'SRvalues(i) = Worksheets("BaSO4 isopleth").Cells(10 + i, 4)
'Next i
''Calculate Ba, SO4 activity coefficients*********************
'RunSMTBaSO4isopleth = 1: kk = 1
'    Call SMT_ReadInputPartA(kk)
'    Call ReadInputPartC(kk)
'TF = Worksheets("BaSO4 isopleth").Range("J8").Value
'Ppsia = Worksheets("BaSO4 isopleth").Range("l8").Value
'    PBar = Ppsia / 14.503774: TC = (TF - 32) * 5 / 9: TK = (TF - 32) * 5 / 9 + 273.15: Patm = Ppsia / 14.696
'  Call CalcIonicStrength
'  Call C1_ThermodynamicEquilConsts
'  Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O, TK, TC, PBar, Patm)
''**************************************************
'MaxIntegersIndex = 1
'For i = 1 To UBound(Bavalues)
'    If Bavalues(i) > Bavalues(MaxIntegersIndex) Then
'        MaxIntegersIndex = i
'    End If
'Next
'MaxBa = Bavalues(MaxIntegersIndex) 'index of max value is MaxValOfIntArray
'MaxIntegersIndex = 1
'For i = 1 To UBound(SO4values)
'    If SO4values(i) > SO4values(MaxIntegersIndex) Then
'        MaxIntegersIndex = i
'    End If
'Next
'MaxSO4 = SO4values(MaxIntegersIndex) 'index of max value is MaxValOfIntArray
'
'MaxIntegersIndex = 1
'For i = 1 To UBound(SRvalues)
'    If SRvalues(i) > SRvalues(MaxIntegersIndex) Then
'        MaxIntegersIndex = i
'    End If
'Next
'MaxSR = SRvalues(MaxIntegersIndex) 'index of max value is MaxValOfIntArray
'
'If MaxSR > ST(1) Then
'MaxSR = MaxSR
'Else
'MaxSR = ST(1)
'End If
'If MaxSR > ST(2) Then
'MaxSR = MaxSR
'Else
'MaxSR = ST(2)
'End If
'If MaxSR > ST(3) Then
'MaxSR = MaxSR
'Else
'MaxSR = ST(3)
'End If
'MaxBa = MaxBa / 137330 / (rho25c - TDS * 0.000001)
'MaxSO4 = MaxSO4 / 96064 / (rho25c - TDS * 0.000001)
'If MaxBa > MaxSO4 Then
'DeltaIon = MaxBa / 10
'Else
'DeltaIon = MaxSO4 / 10
'End If
'For a = 1 To 3
'For c = 1 To 10
'BaAct(c, a) = c * DeltaIon
'SO4Act(c, a) = KspBarite * ST(a) / BaAct(c, a) / gCat(iBa) / gAn(iSO4)
'Next c
'Next a
'
'For a = 1 To 3
'For c = 11 To 20
'SO4Act(c, a) = (c - 10) * DeltaIon
'BaAct(c, a) = KspBarite * ST(a) / SO4Act(c, a) / gCat(iBa) / gAn(iSO4)
'Next c
'Next a
'
'
'
'
'For a = 1 To 3
'For c = 1 To 20
'
'Worksheets("BaSO4 isopleth").Cells(c + 10, 3 + a * 2) = BaAct(c, a) * 137330 * (rho25c - TDS * 0.000001)
'Worksheets("BaSO4 isopleth").Cells(c + 10, 4 + a * 2) = SO4Act(c, a) * 96064 * (rho25c - TDS * 0.000001)
'Next c
'Next a
'ActiveWorkbook.Worksheets("BaSO4 isopleth").Sort.SortFields.Clear
'    ActiveWorkbook.Worksheets("BaSO4 isopleth").Sort.SortFields.Add Key:=Range( _
'        "E11:E30"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
'        xlSortNormal
'With ActiveWorkbook.Worksheets("BaSO4 isopleth").Sort
'        .SetRange Range("E11:F30")
'        .Header = xlNo
'        .MatchCase = False
'        .Orientation = xlTopToBottom
'        .Apply
' End With
' ActiveWorkbook.Worksheets("BaSO4 isopleth").Sort.SortFields.Clear
'    ActiveWorkbook.Worksheets("BaSO4 isopleth").Sort.SortFields.Add Key:=Range( _
'        "g11:g30"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
'        xlSortNormal
' With ActiveWorkbook.Worksheets("BaSO4 isopleth").Sort
'        .SetRange Range("g11:H30")
'        .Header = xlNo
'        .MatchCase = False
'        .Orientation = xlTopToBottom
'        .Apply
'  End With
' ActiveWorkbook.Worksheets("BaSO4 isopleth").Sort.SortFields.Clear
'    ActiveWorkbook.Worksheets("BaSO4 isopleth").Sort.SortFields.Add Key:=Range( _
'        "i11:i30"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
'        xlSortNormal
' With ActiveWorkbook.Worksheets("BaSO4 isopleth").Sort
'        .SetRange Range("i11:j30")
'        .Header = xlNo
'        .MatchCase = False
'        .Orientation = xlTopToBottom
'        .Apply
' End With
'
'End Sub
'
'Sub SMT_UncheckAll()
'Application.Calculation = xlCalculationManual
'Dim lastrow
'Application.ScreenUpdating = False
'mySheet = ActiveSheet.Name
'lastrow = Worksheets(mySheet).Range("A" & Rows.count).End(xlUp).Row
'    For i = 1 To lastrow
'        Worksheets(mySheet).Cells(8 + i, 35).Value = False
'        Next i
'Application.Calculation = xlCalculationAutomatic
'End Sub
'Sub SMT_CheckAll()
'Application.Calculation = xlCalculationManual
'Dim lastrow
'Application.ScreenUpdating = False
'mySheet = ActiveSheet.Name
'lastrow = Worksheets(mySheet).Range("A" & Rows.count).End(xlUp).Row
'    For i = 1 To lastrow
'        Worksheets(mySheet).Cells(8 + i, 35).Value = True
'        Next i
'Application.Calculation = xlCalculationAutomatic
'End Sub

  
'STAT**********************************
'Sub StatA1ReservoirCalc()
'mySheet = "Input data sheet": RunStat = 1: RunStatReservoirCalc = 1: RunStatResCalcAlk = 0 ' Flag for negative concentration value
'Worksheets(mySheet).Activate
'Worksheets(mySheet).Range("G11").Activate
'Application.ScreenUpdating = False
''Application.Calculation = xlCalculationManual
''mytime = Time
'Worksheets("Calcite").Range("B1:J1").Value = Null
'Worksheets("Calcite").Range("p4:u13").Value = Null
'Worksheets("Barite").Range("B1:J1").Value = Null
'Worksheets("Barite").Range("p4:u13").Value = Null
'Worksheets("Halite").Range("B1:J1").Value = Null
'Worksheets("Other SO4s").Range("B1:J1").Value = Null
'Worksheets("Other SO4s").Range("P4:U14").Value = Null
'Worksheets("Sulfides,Fluorite,Carbonates").Range("B1:J1").Value = Null
'Worksheets("Silicates").Range("B1:J1").Value = Null
'Worksheets("Mg(OH)2,Ca(OH)2").Range("B1:J1").Value = Null
'
'
'Call InitializeOptionClearCellContent
'ReDim CaseCount(5), CaseCount_II(110)
'Call CountNOB
'Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
'Call Worksheets("Readme").StatB1ReadinAllData
'Call Worksheets("Readme").StatB2CalcReservoirConc
'Call ErrorMsgBox
'
'Worksheets("Input Data Sheet").Range("G11").Value = mc(iNa) * (22990 * (rho25c - TDS / 1000000#))
'Worksheets("Input Data Sheet").Range("G12").Value = mc(iK) * (39102 * (rho25c - TDS / 1000000#))
'Worksheets("Input Data Sheet").Range("G13").Value = mc(iMg) * (24305 * (rho25c - TDS / 1000000#))
'Worksheets("Input Data Sheet").Range("G14").Value = mc(iCa) * (40080 * (rho25c - TDS / 1000000#))
'Worksheets("Input Data Sheet").Range("G15").Value = mc(iSr) * (87620 * (rho25c - TDS / 1000000#))
'Worksheets("Input Data Sheet").Range("G16").Value = mc(iBa) * (137330 * (rho25c - TDS / 1000000#))
'Worksheets("Input Data Sheet").Range("G17").Value = mc(iFe) * (55847 * (rho25c - TDS / 1000000#))
'Worksheets("Input Data Sheet").Range("G18").Value = mc(iZn) * (65380 * (rho25c - TDS / 1000000#))
'Worksheets("Input Data Sheet").Range("G19").Value = mc(iPb) * (207200 * (rho25c - TDS / 1000000#))
'Worksheets("Input Data Sheet").Range("G20").Value = ma(iCl) * (35450 * (rho25c - TDS / 1000000#))
'Worksheets("Input Data Sheet").Range("G21").Value = ma(iSO4) * (96064 * (rho25c - TDS / 1000000#))
'Worksheets("Input Data Sheet").Range("G22").Value = ma(iBr) * (79904 * (rho25c - TDS / 1000000#))
'Worksheets("Input Data Sheet").Range("g23").Value = TH4SiO4 * (28085 * (rho25c - TDS / 1000000#))
'Worksheets("Input Data Sheet").Range("g24").Value = Alk * (61019 * (rho25c - TDS / 1000000#))
'Worksheets("Input Data Sheet").Range("G26").Value = yCO2 * 100
'Worksheets("Input Data Sheet").Range("G27") = TH2Saq * (34080 * (rho25c - TDS / 1000000#))
''Worksheets("Input Data Sheet").Range("G28") = pH - DpHj
'Worksheets("Input Data Sheet").Range("g31").Value = TAc * (60054 * (rho25c - TDS / 1000000#))
'If UseSI = 0 Then Worksheets("Input Data Sheet").Range("g32").Value = VW 'output as bbl
'If UseSI = 1 Then Worksheets("Input Data Sheet").Range("g32").Value = VW * 0.159 'output as m3
'If Alk < 0 Then   'Do this when Alkalinity is the only negative value
'response1 = MsgBox(prompt:="The calculated reservoir alkalinity is negative, possibly due to errors in measured produced water or fresh water alkalinity.  The program can reconcile reservoir alkalinity value by assuming the reservoir water is at equilibrium with calcite in the reservoir? Click Yes, the program will find the total alkalinity based on reservoir T, P, and CO2% from cells Q6, R6 and G26 of the Input data sheet.  Click No to exit the calculation.  You may re-enter the correct reservoir T, P, and CO2% in Cells Q6, R6, and G26 and click Calculate Reservoir Composition button on the Halite Module sheet to reconcile the total alkalinity for this reservoir composition again.", _
'            Buttons:=vbYesNo, title:="Update Alkalinity")
'
'    If response1 = vbYes Then
'    RunStatResCalcAlk = 1
'    Call StatC1GoalSeekAlk
''    Worksheets("Input Data Sheet").Range("g24").Value = Alk * (61019 * (rho25c - TDS / 1000000#))
''    Worksheets("Input Data Sheet").Range("G26").Value = yCO2 * 100
''    Worksheets("Input Data Sheet").Range("G28") = pH - DpHj
'
'    ElseIf response1 = vbNo Then
'    Worksheets("Input Data Sheet").Range("g24").Value = Alk * (61019 * (rho25c - TDS / 1000000#))
''    Worksheets("Input Data Sheet").Range("G26").Value = yCO2 * 100
''    Worksheets("Input Data Sheet").Range("G27") = TH2Saq * (34080 * (rho25c - TDS / 1000000#))
''    Worksheets("Input Data Sheet").Range("G28") = pH - DpHj
''    Worksheets("Input Data Sheet").Range("g31").Value = TAc * (60054 * (rho25c - TDS / 1000000#))
''    If UseSI = 0 Then Worksheets("Input Data Sheet").Range("g32").Value = VW 'output as bbl
''    If UseSI = 1 Then Worksheets("Input Data Sheet").Range("g32").Value = VW * 0.159 'output as m3
''    GoTo 201
'    End If
'End If
''For C = 1 To NumCat
''    mcInit(C) = mc(C)   'redefine conc mcInit for evaporation/concentration calc
''    Next C
''    For A = 1 To NumAn
''    maInit(A) = ma(A)
''    Next A
''    AlkInit = Alk
''    TH4SiO4Init = TH4SiO4
''    TNH4Init = TNH4
''    TH3BO3Init = TH3BO3
''    TAcInit = TAc
''    mt = fmn
'
''    For i = 1 To 7
''        Worksheets("Input").Cells(i + 29, 7).Value = ""
''    Next i
'
'
'
'
'201 RunStatResCalcAlk = 0
'RunStatReservoirCalc = 0 ' Reset this parameter to zero to avoid confusion in CountNOB sub for the other Stat subs.
'MsgBox ("This calculation is based on the assumption that the produced water analysis shown in Column C of the Input data sheet was already contaminated with injected water breakthrough." _
'& Chr(13) & "The injected fresh water composition is listed on Column K. The porduced water volume is listed in Cell U5 and the injected water volume is listed in Cell U6." & Chr(13) & _
'"The calculated reservoir composition and reservoir water volume are shown in Column G.")
'
'Worksheets(mySheet).Activate
'
'Application.ScreenUpdating = True
''Application.Calculation = xlCalculationAutomatic
'End
'End Sub
'Sub StatA3SICalc(RunStatSICalc, itest As Integer)
''use this to flag if this calculation is used in StatA2GoalSeek  initialization calculation
'Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
''If Worksheets("Halite Module").Range("K33") = "True" Then
'Use_ZnCl2Const = 1
''MsgBox ("The SIs and the precipitate amounts of ZnS, PbS are calculated based on the stability constants of chlorozinc and lead complexes (Seward, 1984 and Ruaya and Seward, 1986).")
''Else
''Use_ZnCl2Const = 0
''End If
'RunStatSICalcSSP = RunStatSICalc
'mySheet = "Input data sheet": RunStat = 1
''mytime = Time
'Worksheets("Calcite").Range("B1:J1").Value = Null
'Worksheets("Calcite").Range("p4:u13").Value = Null
'Worksheets("Barite").Range("B1:J1").Value = Null
'Worksheets("Barite").Range("p4:u13").Value = Null
'Worksheets("Halite").Range("B1:J1").Value = Null
'Worksheets("Other SO4s").Range("B1:J1").Value = Null
'Worksheets("Other SO4s").Range("P4:U14").Value = Null
'Worksheets("Sulfides,Fluorite,Carbonates").Range("B1:J1").Value = Null
'Worksheets("Silicates").Range("B1:J1").Value = Null
'Worksheets("Mg(OH)2,Ca(OH)2").Range("B1:J1").Value = Null
'
'Worksheets("Calcite").Range("A4:K13").Value = Null
'Worksheets("Barite").Range("A4:F13").Value = Null
'Worksheets("Halite").Range("A4:F13").Value = Null
'Worksheets("Other SO4s").Range("A4:J13").Value = Null
'Worksheets("Sulfides,Fluorite,Carbonates").Range("A4:S13").Value = Null
'
'Call InitializeOptionClearCellContent
'ReDim CaseCount(5), CaseCount_II(110)
'Call CountNOB
'Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
'Call Worksheets("Readme").StatB1ReadinAllData
''If Worksheets(mySheet).Range("A4") = 2 Then
''UseTPCalciteSheet = 1
''Else
''UseTPCalciteSheet = 0
''End If
'
'Call Worksheets("Readme").B3_CalcConcs           'Cacluate all concentration data from wells on input screen.
' deltaT = (TBH - TWH) / 9
'  deltaP = (PBH - PWH) / 9
'  DepthBH = ActiveSheet.Cells(6, 16): DepthWH = ActiveSheet.Cells(5, 16):
'  deltaDepth = (DepthBH - DepthWH) / 9
'  Worksheets("Calcite").Cells(13, 1) = TBH 'Output TBH, PBH to the Calcite Sheet
'  Worksheets("Calcite").Cells(4, 1) = TWH
'  Worksheets("Calcite").Cells(13, 2) = PBH
'  Worksheets("Calcite").Cells(4, 2) = PWH
'  If UseSI = 1 Then Worksheets("Calcite").Cells(13, 1) = (TBH - 32) * 5 / 9
'  If UseSI = 1 Then Worksheets("Calcite").Cells(4, 1) = (TWH - 32) * 5 / 9
'  If UseSI = 1 Then Worksheets("Calcite").Cells(13, 2) = PBH / 14.503774
'  If UseSI = 1 Then Worksheets("Calcite").Cells(4, 2) = PWH / 14.503774
'
'For LoopTP = 1 To StatTPnob
'
'    If UseTPCalciteSheet = 0 Then
'        If LoopTP = 1 Then location = Worksheets("Input data sheet").Cells(6, 15)
'        If LoopTP = 10 Then location = Worksheets("Input data sheet").Cells(5, 15)
'        If LoopTP <> 1 And LoopTP <> 10 Then location = ""
'        TF = TBH - deltaT * (LoopTP - 1)
'        Ppsia = PBH - deltaP * (LoopTP - 1)
'        Depth = DepthBH - deltaDepth * (LoopTP - 1)
'    Else
'        location = Worksheets("Input data sheet").Cells(10 + StatTPnob - LoopTP, 15)
'        Depth = Worksheets("Input data sheet").Cells(10 + StatTPnob - LoopTP, 16)
'        TF = Worksheets("Input data sheet").Cells(10 + StatTPnob - LoopTP, 17):
'        Ppsia = Worksheets("Input data sheet").Cells(10 + StatTPnob - LoopTP, 18):
'        If UseSI = 1 Then TF = TF * 9 / 5 + 32
'        If UseSI = 1 Then Ppsia = Ppsia * 14.503774
'
'    End If
'    PBar = Ppsia / 14.503774
'    Tc = (TF - 32) * 5 / 9
'    TK = (TF - 32) * 5 / 9 + 273.15
'    Patm = Ppsia / 14.696
'    Call LoopTPSI
'
'    ' If Ist <> 0 Then
'    ' Call LoopTPVisHeatCap
'    ' If Run_MassTransfer = 1 Then Call MassTransferCoefficients
'    'End If
'     Call LoopTPppt
'     Call LoopTPWrite
'
'Next LoopTP
'
' If RunStatSICalcSSP = 2 And RunStatGoalSeek = 0 Then 'Output mixing ratio
' If CaseCount(1) = 1 Then Worksheets("Halite Analysis").Range("O3") = VwMix(2) / VwMix(1)
' If CaseCount(1) = 5 Then Worksheets("Halite Analysis").Range("O3") = VwMix(2) / (VwMix(1) + VwMix(2))
' End If
'
''Call ScaleRiskGraph
''    mytime1 = Time
''    nettime = (mytime1 - mytime)
''    Worksheets("Input").Range("R28") = nettime * 24 * 3600
'
''If itest = 0 Then
'201 If RunStatGoalSeek = 0 Then 'The following updates the Last two columns even when GoalSeek is not run
'       Call ErrorMsgBox
'      If UseSI = 1 Then
'        TBH = (TBH - 32) * 5 / 9
'        TWH = (TWH - 32) * 5 / 9
'        PBH = PBH / 14.503774
'        PWH = PWH / 14.503774
'        MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The reservoir temperatures is " & TBH & " C;" & Chr(13) _
'        & "reservoir pressure is " & PBH & " Bar." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." & Chr(13) & Chr(13) _
'        & "Calculation Option(s) used for Input 1 is " & usepHmix(1)
'        Else
'        MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The reservoir temperatures is " & TBH & " F;" & Chr(13) _
'        & "Reservoir pressure is " & PBH & " psia." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." & Chr(13) & Chr(13) _
'        & "Calculation Option(s) on Row 51 used for Input 1 is " & Chr(13) & usepHmix(1)
'        End If
'
'    Worksheets("Halite analysis").Activate
'    If RunStatSICalcSSP = 1 Then Worksheets("Halite analysis").Range("B1").Activate 'Used in Halite analysis single water
'    If RunStatSICalcSSP = 2 And RunStatGoalSeek = 0 Then
'    Worksheets("Halite analysis").Range("J1").Activate  'Used in Halite analysis mixing two water
'    End If
'    If RunStatSICalcSSP = 3 Then
'    Worksheets("Output data sheet").Activate
'    'Worksheets("Output data sheet").Range("P11:V20") = Worksheets("Output data sheet").Range("H6:N15")
'    Worksheets("Output data sheet").Range("H1").Activate
'    End If
' '   End 'program do not end if run from GoalSeek
'End If
''End If
'
'Application.ScreenUpdating = True
'Application.Calculation = xlCalculationAutomatic
'
'End Sub
'
'
''********************************************************************************************
''III.  This subroutine is activated by clicking on the button in either the mixing input
''      or the mixing output screens.
'Sub StatA4Mixing()
'' mytime = Time
'RunStat = 1: RunStatMix = 1
'
'Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
'
'Call InitializeOptionClearCellContent
'
'mySheet = "Input data sheet"
'ReDim CaseCount(5), CaseCount_II(110)
'Call CountNOB
'For WHandBHLoop = 0 To 1          'Does 10 (T,P) combinations for both the BH(0) and WH(1) conditions.
'For LoopMixing = 1 To 11       'Do 10 mixing compositions, as listed in sheet.
'
'  MixFrac(2) = Worksheets("Halite analysis").Cells(17 - LoopMixing, 18)
'  MixFrac(1) = 1 - MixFrac(2)
'    Call B1_InitializeIndices
'    Call Worksheets("Readme").StatB1ReadinAllData
'    Call B3_CalcConcs
'    'Call B4_CalcFinalBrine
'    If WHandBHLoop = 0 Then
'      TF = TBH:  TK = (TF - 32) * 5 / 9 + 273.15
'      Ppsia = PBH: Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774:
'    Else
'      TF = TWH:  TK = (TF - 32) * 5 / 9 + 273.15
'      Ppsia = PWH: Patm = Ppsia / 14.696: PBar = Ppsia / 14.503774:
'    End If
'
'    Call B5_CalculateSIvalues
'    pH_before_precipitation = pH
'
'    Worksheets("Halite analysis").Cells(17 - LoopMixing, 19 + WHandBHLoop) = rhoTP
'    If UseSR = 0 Then Worksheets("Halite analysis").Cells(17 - LoopMixing, 21 + WHandBHLoop) = SIHal
'    If UseSR = 1 Then Worksheets("Halite analysis").Cells(17 - LoopMixing, 21 + WHandBHLoop) = 10 ^ SIHal
'
'    pptHal = 0
'    If SIHal > 0 Then
'      B = -(mc(iNa) + ma(iCl))
'      CC = mc(iNa) * ma(iCl) - KspHalite / (gCat(iNa) * gAn(iCl) * gNMean(iNaCl) ^ 2)
'      pptHal = (-B - (B ^ 2 - 4 * CC) ^ 0.5) / 2
'    End If
'    Worksheets("Halite analysis").Cells(17 - LoopMixing, 23 + WHandBHLoop) = pptHal * 58443 * (rho25c - TDS / 1000000#)
'
'Next LoopMixing
'Next WHandBHLoop
''    Worksheets("Halite Tool").Range("T2") = WellNameMix(1)
''    Worksheets("Halite Tool").Range("V2") = Worksheets("Input").Range("c5")
'    Call ErrorMsgBox
'    'Application.ScreenUpdating = True
'    Worksheets("Halite analysis").Activate 'Automatically opens the Mixing sheet.
''mytime1 = Time
''nettime = (mytime1 - mytime) * 24 * 3600
''Worksheets("Input").Range("R28") = nettime
'
'Application.ScreenUpdating = True
'Application.Calculation = xlCalculationAutomatic
'    If UseSI = 1 Then
'    TBH = (TBH - 32) * 5 / 9: TWH = (TWH - 32) * 5 / 9: PBH = PBH / 14.503774: PWH = PWH / 14.50377
'    End If
'    If UseSI = 1 Then
'    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial and final temperatures are " & TBH & " and " & TWH & " C;" & Chr(13) _
'    & "Initial and final pressures are " & PBH & " and " & PWH & " Bar." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." & Chr(13) & Chr(13) _
'    & "Calculation Option(s) on Row 51 used for Input 1 is " & Chr(13) & usepHmix(1)
'    Else
'    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial and final temperatures are " & TBH & " and " & TWH & " F;" & Chr(13) _
'    & "Initial and final pressures are " & PBH & " and " & PWH & " psia." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." & Chr(13) & Chr(13) _
'    & "Calculation Option(s) on Row 51 used for Input 1 is " & Chr(13) & usepHmix(1)
'    End If
'    Worksheets("Halite analysis").Range("R1").Activate
'    End
'
'
'201 End Sub
'Sub StatA2GoalSeek()
''Note Mysheet is where GoalSeek button is. It can be either Input or Simplified Input
''mysheet1 is where the independent variable is. It can be either Input, InputII, or Simplified Input Sheet
'    'An index to tell program that the GoalSeek portion is being run.
'
'    If Worksheets("Output data sheet").Range("J6").Value = Empty Then Call StatA3SICalc(3, 1)
'    Worksheets("Output data sheet").Range("P11:V20").Value = Worksheets("Output data sheet").Range("H6:N15").Value
'    RunStatGoalSeek = 1: iGoalSeek = 0: RunSSP = 0:
''InputBox to get the cells to be adjusted, etc.
'Worksheets("Output data sheet").Activate
'Worksheets("Output data sheet").Range("P2").Activate
'MsgBox ("This procedure optimize the fresh water volume based on the desired SI/SR, amount of halite precipitate, or density shown on cells T11 to V20. " & Chr(13) & Chr(13) & _
'"Since fresh water volume is added to dilute the salt concentration, the target value " & "(" & "SI, SR, amount of halite precipitate, or density" & ")" & " has to be smaller than the current value shown in the cell.")
'Set myRange = Application.InputBox(prompt:="Click on the Target Cell in Cells T11-V20.", Type:=8)
'    DepVarColumnNo = myRange.Column
'    DepVarRowNo = myRange.Row
'Worksheets("Output data sheet").Cells(DepVarRowNo, DepVarColumnNo).Activate
'DependentVariableTargetValue = Application.InputBox(prompt:="Type the Target Value. If target cell is on Column T and the output is SR, the target cell has to be greater than 0.00. If the target cell is on Column U or V (i.e., amount of halite precipitate or density), no negative value is allowed.", Type:=1)
''If mySheet = "Input" Then  'Select eitehr Input or Simplified Input sheet as starting page
''title = "Which Input sheets has the Cell to change?"
''prompt = "Do you want to change the cell on Input or Input II sheet? Enter 1 for Input sheet and enter 2 for Input II sheet"
''response3 = Application.InputBox(prompt, title, , , , , Type:=1)
''If response3 = 1 Then
''Worksheets("Input").Activate
''myname = "Input"
''Else
''Worksheets("Input II").Activate
''myname = "Input II"
''End If
''Else
'myname = "Output data sheet"
''End If
'Worksheets("Output data sheet").Activate
'
'Set myRange = Application.InputBox(prompt:="Click on the Cell to Change. Typically, this will be cell R5 (Fresh water volume).", Type:=8)
'    IndVarColumnNo = myRange.Column
'    IndVarRowNo = myRange.Row
'
'    IndVariableValue0 = Worksheets(myname).Cells(IndVarRowNo, IndVarColumnNo).Value   '*******
'        If IndVariableValue0 < 0.0000000001 Then
'            Worksheets(myname).Cells(IndVarRowNo, IndVarColumnNo) = 10 'artitrarily set zero values to 10 to start diffrentiation.
'        End If
'     Call StatB3GoalSeek1(2)
''    Call StatA3SICalc(2) 'Obtain initial values of all variables with those in Input screen.
'    DepVariableValue0 = Worksheets(myname).Cells(DepVarRowNo, DepVarColumnNo).Value
'    Targ = DependentVariableTargetValue
'    IndVariableValue0 = Worksheets(myname).Cells(IndVarRowNo, IndVarColumnNo).Value
'        If IndVariableValue0 <= 0# Then
'            MsgBox ("Initial value of independent variable must be a positive number.  If it is zero, enter some initial guess and start again.")
'            GoTo 2150
'        End If
'    DepOld = DepVariableValue0
'    IndNew = IndVariableValue0
'For iGoalSeek = 1 To 20
'    IndOld = IndNew
'        Call StatB3GoalSeek2 'Obtain initial values of all variables with those in Input screen.
'        DepOld = Worksheets(myname).Cells(DepVarRowNo, DepVarColumnNo).Value
'        'Set up and calculate the numerical derivative and then return variables to original values.**************************
'        Worksheets(myname).Cells(IndVarRowNo, IndVarColumnNo) = 1.01 * IndNew   'Increase Ind0 by 10% to take numerical derivative.
'        Call StatB3GoalSeek2 'Obtain initial values of all variables with those in Input screen.
'        Dep1 = Worksheets(myname).Cells(DepVarRowNo, DepVarColumnNo).Value
'        Derivative = (Dep1 - DepOld) / (0.01 * IndOld)
'        Worksheets(myname).Cells(IndVarRowNo, IndVarColumnNo) = IndOld  'Return Ind variable in worksheet to original value
'        Worksheets(myname).Cells(DepVarRowNo, DepVarColumnNo) = DepOld  'Return Dep variable to value at Ind0
'            If Derivative = 0 Then
'           Call StatA3SICalc(2, 0) 'Obtain initial values of all variables with those in Input screen.
'                MsgBox ("Since dDep/dInd = 0.00, they are not a fuction of each other.  Calculation will be stopped.  See Notes at bottom of Input sheet.")
'                GoTo 2150   'Exit loop and calculation after printing message.
'            End If
'    'End of derivative routine. ***********************************************************************************************
'
'    IndNew = IndOld - (DepOld - DependentVariableTargetValue) / Derivative 'Calculate new value of Independent variable, IndNew
'        If Abs((DepOld - DependentVariableTargetValue) / Derivative) > Abs(IndOld) Then  'If the change in one iteration step exceeds the initial value, make changes according to the following rules:
'            If -1 * (DepOld - DependentVariableTargetValue) / Derivative > 0 Then IndNew = IndOld * 5 * Rnd() 'Take control of change by increasing only five times.
'            If -1 * (DepOld - DependentVariableTargetValue) / Derivative < 0 Then IndNew = IndOld / 5 * Rnd() 'Take control of change by decreasing only five times.
'        End If
'    Worksheets(myname).Cells(IndVarRowNo, IndVarColumnNo) = IndNew  'Return Ind variable in worksheet to original value
'
'    If (Abs(IndNew - IndOld) / (IndNew + IndOld)) < 0.0005 Or Abs(DepOld - DependentVariableTargetValue) < 0.0005 Then  'Check for convergence of Newton Raphson routine.
'        GoTo 2150   'GoalSeek-like routine has converged; exit loop.
'    End If
'Next iGoalSeek
'
'2150 Worksheets(myname).Select
'    If iGoalSeek = 21 Then MsgBox ("GoalSeek-like routine has not converged in twenty iterations; re-run for another ten interations; put a new inital value in the cell being changed; or change the problem.")
'            Call StatA3SICalc(2, 0) 'Obtain initial values of all variables with those in Input screen.
'
'    If Worksheets(myname).Cells(4, 18).Value > 0 Then
' If CaseCount(1) = 1 Then Worksheets("Output data sheet").Range("R6") = Worksheets("Output data sheet").Range("R5") / Worksheets("Output data sheet").Range("R4") 'Output mixing ratio
' If CaseCount(1) = 5 Then Worksheets("Output data sheet").Range("R6") = Worksheets("Output data sheet").Range("R5") / (Worksheets("Output data sheet").Range("R4") + Worksheets("Output data sheet").Range("R5"))
' End If
'        Worksheets(myname).Activate
'        Worksheets(myname).Cells(IndVarRowNo, IndVarColumnNo).Activate  'Set curser on independent variable cell.
'''******************************
'
'    If UseSI = 1 Then
'    TBH = (TBH - 32) * 5 / 9
'    TWH = (TWH - 32) * 5 / 9
'    PBH = PBH / 14.503774
'    PWH = PWH / 14.503774
'    Call ErrorMsgBox
'    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "The initial and final temperatures are " & TBH & " and " & TWH & " C;" & Chr(13) _
'    & "Initial and final pressures are " & PBH & " and " & PWH & " Bar." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." & Chr(13) & Chr(13) _
'    & "Calculation Option(s) on Row 51 used for Input 1 is " & usepHmix(1)
'    MsgBox "Calculation is finished. No. of brine mixed = " & nob & Chr(13) & Chr(13) & "Initial and final temperatures are " & TBH & " and " & TWH & " F;" & Chr(13) _
'    & "Initial and final pressures are " & PBH & " and " & PWH & " psia." & Chr(13) & Chr(13) & "Flash calculation option =" & useEOS & "." & Chr(13) & Chr(13) _
'    & "Calculation Option(s) on Row 51 used for Input 1 is " & usepHmix(1)
'    End If
'    RunGoalSeek = 0    'Reset to zero for possible future runs that are not GoalSeek.
'End
'End Sub
'Sub StatA5QC() 'QC for produced water
'Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
'
'mySheet = "Input data sheet"
'RunStat = 1: RunStatReservoirCalc = 0: RunQualityControlChecks = 1: RunGoalSeek = 0: RunSSP = 0
'Call InitializeOptionClearCellContent
'nob = 1: CaseCount(1) = 1
'Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
'Call Worksheets("Readme").StatB1ReadinAllData
''Worksheets("Output data sheet").Cells(5, 5) = Worksheets("Input data sheet").Cells(27, 3)
'Worksheets("Output data sheet").Cells(5, 5) = Worksheets("Input data sheet").Cells(28, 3)
'Worksheets("Output data sheet").Cells(6, 5) = Worksheets("Input data sheet").Cells(26, 3)
'Worksheets("Output data sheet").Cells(7, 5) = Worksheets("Input data sheet").Cells(24, 3)
'Worksheets("Output data sheet").Cells(10, 5) = Worksheets("Input data sheet").Cells(29, 3)
'Worksheets("Output data sheet").Cells(11, 5) = Worksheets("Input data sheet").Cells(40, 3)
'Worksheets("Output data sheet").Cells(12, 5) = Worksheets("Input data sheet").Cells(11, 3)
''If Worksheets("Output data sheet").Cells(6, 5) > 0 Then Worksheets("Output data sheet").Cells(6, 6) = Abs(Worksheets("Output data sheet").Cells(6, 4) - Worksheets("Output data sheet").Cells(6, 5)) / Worksheets("Output data sheet").Cells(6, 5) * 100
''If Worksheets("Output data sheet").Cells(7, 5) > 0 Then Worksheets("Output data sheet").Cells(7, 6) = Abs(Worksheets("Output data sheet").Cells(7, 4) - Worksheets("Output data sheet").Cells(7, 5)) / Worksheets("Output data sheet").Cells(7, 5) * 100
'If Worksheets("Output data sheet").Cells(8, 4) > 0 Then Worksheets("Output data sheet").Cells(8, 6) = Abs(Worksheets("Output data sheet").Cells(8, 4) + Worksheets("Output data sheet").Cells(9, 4)) / Worksheets("Output data sheet").Cells(8, 4) * 100
'If Worksheets("Output data sheet").Cells(10, 5) > 0 Then Worksheets("Output data sheet").Cells(10, 6) = Abs(Worksheets("Output data sheet").Cells(10, 4) - Worksheets("Output data sheet").Cells(10, 5)) / Worksheets("Output data sheet").Cells(10, 5) * 100
'If Worksheets("Output data sheet").Cells(11, 5) > 0 Then Worksheets("Output data sheet").Cells(11, 6) = Abs(Worksheets("Output data sheet").Cells(11, 4) - Worksheets("Output data sheet").Cells(11, 5)) / Worksheets("Output data sheet").Cells(11, 5) * 100
'If Worksheets("Output data sheet").Cells(12, 5) > 0 Then Worksheets("Output data sheet").Cells(12, 6) = Abs(Worksheets("Output data sheet").Cells(12, 4) - Worksheets("Output data sheet").Cells(12, 5)) / Worksheets("Output data sheet").Cells(12, 5) * 100
'Worksheets("Output data sheet").Activate
'Worksheets("Output data sheet").Cells(2, 2).Activate
'
'Application.ScreenUpdating = True
'Application.Calculation = xlCalculationAutomatic
'End
'End Sub
'Sub StatA6QC() 'QC for fresh water
'Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
'
'mySheet = "Input data sheet"
'RunStatReservoirCalc = 0: RunStat = 1: RunQualityControlChecks = 1:  RunGoalSeek = 0: RunSSP = 0
'Call InitializeOptionClearCellContent
'
'nob = 1: CaseCount(1) = 9
'Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
'Call Worksheets("Readme").StatB1ReadinAllData
''Worksheets("Output data sheet").Cells(17, 5) = Worksheets("Input data sheet").Cells(27, 11)
'Worksheets("Output data sheet").Cells(17, 5) = Worksheets("Input data sheet").Cells(28, 11)
'Worksheets("Output data sheet").Cells(18, 5) = Worksheets("Input data sheet").Cells(26, 11)
'Worksheets("Output data sheet").Cells(19, 5) = Worksheets("Input data sheet").Cells(24, 11)
'Worksheets("Output data sheet").Cells(22, 5) = Worksheets("Input data sheet").Cells(29, 11)
'Worksheets("Output data sheet").Cells(23, 5) = Worksheets("Input data sheet").Cells(40, 11)
'Worksheets("Output data sheet").Cells(24, 5) = Worksheets("Input data sheet").Cells(11, 11)
'
''If Worksheets("Output data sheet").Cells(18, 5) > 0 Then Worksheets("Output data sheet").Cells(18, 6) = Abs(Worksheets("Output data sheet").Cells(18, 4) - Worksheets("Output data sheet").Cells(18, 5)) / Worksheets("Output data sheet").Cells(18, 5) * 100
''If Worksheets("Output data sheet").Cells(19, 5) > 0 Then Worksheets("Output data sheet").Cells(19, 6) = Abs(Worksheets("Output data sheet").Cells(19, 4) - Worksheets("Output data sheet").Cells(19, 5)) / Worksheets("Output data sheet").Cells(19, 5) * 100
'If Worksheets("Output data sheet").Cells(20, 4) > 0 Then Worksheets("Output data sheet").Cells(20, 6) = Abs(Worksheets("Output data sheet").Cells(20, 4) + Worksheets("Output data sheet").Cells(21, 4)) / Worksheets("Output data sheet").Cells(20, 4) * 100
'If Worksheets("Output data sheet").Cells(22, 5) > 0 Then Worksheets("Output data sheet").Cells(22, 6) = Abs(Worksheets("Output data sheet").Cells(22, 4) - Worksheets("Output data sheet").Cells(22, 5)) / Worksheets("Output data sheet").Cells(22, 5) * 100
'If Worksheets("Output data sheet").Cells(23, 4) > 0 Then Worksheets("Output data sheet").Cells(23, 6) = Abs(Worksheets("Output data sheet").Cells(21, 4) - Worksheets("Output data sheet").Cells(21, 4)) / Worksheets("Output data sheet").Cells(20, 4) * 100
'
'If Worksheets("Output data sheet").Cells(24, 5) > 0 Then Worksheets("Output data sheet").Cells(24, 6) = Abs(Worksheets("Output data sheet").Cells(24, 4) - Worksheets("Output data sheet").Cells(24, 5)) / Worksheets("Output data sheet").Cells(24, 5) * 100
'Worksheets("Output data sheet").Activate
'Worksheets("Output data sheet").Range("B14").Activate
'
'Application.ScreenUpdating = True
'Application.Calculation = xlCalculationAutomatic
'End
'End Sub
'
'
'Sub StatB1ReadinAllData()
''Application.ScreenUpdating = False
''Application.Calculation = xlCalculationManual
'
'Worksheets(mySheet).Activate
'UseSI = 0
'If ActiveSheet.Cells(3, 22).Value = "(Mm^3/D)" Then UseSI = 1
'UseMolal = 0:
'SampleDateMix(1) = ActiveSheet.Cells(4, 3)
'WellNameMix(1) = ActiveSheet.Cells(6, 3)
'useEOSmix(1) = 0: useEOSmix(2) = 0:
'If RunStatReservoirCalc = 1 Or RunStatSICalcSSP = 3 Then
'    If Worksheets("Halite Module").Range("H8") = "Use gas phase CO2%" Then usepHmix(1) = 0
'    If Worksheets("Halite Module").Range("H8") = "Use pH" Then usepHmix(1) = 1
'    If Worksheets("Halite Module").Range("H8") = "Use flash calculator" Then
'    usepHmix(1) = 0: useEOSmix(1) = 1
'    End If
'    If RunStatResCalcAlk = 1 Then
'    nob = 1: CaseCount(1) = 5: usepHmix(1) = 0
''    If Worksheets("Halite Module").Range("H8") = "Use gas phase CO2%" Then usepHmix(1) = 0
''    If Worksheets("Halite Module").Range("H8") = "Use pH" Then usepHmix(1) = 1
'    If Worksheets("Halite Module").Range("H8") = "Use flash calculator" Then
'    usepHmix(1) = 0: useEOSmix(1) = 1
'    End If
'    End If
''    If RunStatSICalcSSP = 3 Then  'calculate SI value for one produced water for output sheet, set the volume in output sheet to equal to the Input sheet
''    Worksheets("Output data sheet").Range("R4") = ActiveSheet.Cells(5, 21).Value
''    Worksheets("Output data sheet").Range("R5") = ActiveSheet.Cells(6, 21).Value
''    End If
'ElseIf RunStatGoalSeek = 1 Then
'    If Worksheets("Halite Module").Range("H8") = "Use gas phase CO2%" Then usepHmix(1) = 0
'    If Worksheets("Halite Module").Range("H8") = "Use pH" Then usepHmix(1) = 1
'    If Worksheets("Halite Module").Range("H8") = "Use flash calculator" Then
'    usepHmix(1) = 0: useEOSmix(1) = 1
'    End If
'ElseIf RunStatGoalSeek = 0 And RunStatSICalcSSP = 2 Then
'    If Worksheets("Halite Module").Range("H33") = "Use gas phase CO2%" Then usepHmix(1) = 0
'    If Worksheets("Halite Module").Range("H33") = "Use pH" Then usepHmix(1) = 1
'    If Worksheets("Halite Module").Range("H33") = "Use flash calculator" Then
'    usepHmix(1) = 0: useEOSmix(1) = 1
'    End If
'
'ElseIf RunStatSICalcSSP = 1 Or RunStatMix = 1 Then
'    If Worksheets("Halite Module").Range("H33") = "Use gas phase CO2%" Then usepHmix(1) = 0
'    If Worksheets("Halite Module").Range("H33") = "Use pH" Then usepHmix(1) = 1
'    If Worksheets("Halite Module").Range("H33") = "Use flash calculator" Then
'    usepHmix(1) = 0: useEOSmix(1) = 1
'    End If
'End If
'
'StatTPnob = Worksheets(mySheet).Range("R8").Value
'If Worksheets(mySheet).Range("p2").Value = 1 Then
'UseTPCalciteSheet = 0: StatTPnob = 10
'End If
'***********************Amy Check Array redim for stat
'redim preserve NaMix(nob), MgMix(nob), CaMix(nob), SrMix(nob), BaMix(nob), FeMix(nob), ZnMix(nob), ClMix(nob), PbMix(nob), BrMix(nob)
'redim preserve NH3Mix(nob), H3SiO4Mix(nob), H2SiO4Mix(nob), H4SiO4Mix(nob), H3BO3Mix(nob), CO2aqMix(nob), H2SaqMix(nob), HACaqMix(nob)
'redim preserve UseH2SgasMix(nob),  SO4Mix(nob), FMix(nob), TDSMix(nob), AlkMix(nob), TAcMix(nob), KMix(nob), MixFrac(nob),
'redim preserve rho_Mix(nob), TH2SaqMix(nob), pHMeterStpMix(nob), TH4SiO4Mix(nob), TNH4Mix(nob), TH3BO3Mix(nob)
'redim preserve SampleIDMix(nob), SampleDateMix(nob), OperatorMix(nob), WellNameMix(nob), FieldMix(nob), StateMix(nob) As String
'redim preserve VgTPMix(nob), VoMix(nob), VwMix(nob), VMeOHMix(nob), VMEGMix(nob), oilAPIgravMix(nob), gasSpGravMix(nob), MixFracGas(nob)
'redim preserve nTCO2Mix(nob), nTCH4Mix(nob), nTH2SMix(nob), mass_w_Mix(nob), mass_o_Mix(nob), MixFracOil(nob)
'redim preserve mass_MeOH_mix(nob), mass_MEG_mix(nob), Qheat(nob), yCO2Mix(nob), yH2SMix(nob), yCH4Mix(nob)
'redim preserve YCH4stpmix(nob), RatioOilBPointsmix(nob), CalculatedTDSMix(nob), rho25CMix(nob)
'redim preserve HstpMix(nob), OHstpMix(nob), HCO3stpMix(nob), CO3stpMix(nob), ACstpMix(nob), HSstpMix(nob), NH4STPMix(nob), H2BO3stpMix(nob)
'redim preserve HCO3AlkMix(nob), CO3AlkMix(nob), HAlkMix(nob), OHAlkMix(nob)
'redim preserve ConcFactor(nob)
'redim preserve CaseCount(nob), CaseCount_II(nob)
'redim preserve TCO2Mix(nob), TofpH(nob), PofpH(nob), TofVol(nob), PofVol(nob)
'redim preserve OilDensityMix(nob), GasDensityMix(nob), WaterDensityMix(nob)
'redim preserve UseTPpHMix(nob), UseTPVolMix(nob), useEOSmix(nob)
'redim preserve molc(NumCat, nob), mola(NumAn, nob), moln(NumNeut, nob) ' Convert all ions to moles
'redim preserve molAlk(nob), molTAC(nob), molTNH4(nob), molTH3BO3(nob), molTH2Saq(nob), molTH4SiO4(nob)
'redim preserve mol_g_origMix(nob), mol_o_OrigMix(nob), mol_w_OrigMix(nob), mol_g_finalMix(nob), mol_o_finalMix(nob), mol_w_finalMix(nob), mol_w_evapMix(nob)
'redim preserve Total_molesMix(nob), SumofZMix(nob), nTCO2MixEOS(nob), nTH2SMixEOS(nob), zMix(nob, 20)
'ReDim Preserve usepHmix(nob)
'ReDim density(3), compositions(15, 4), phi(15, 3), Compr(3), beta(3),zoutput(15)
'*****************************************
'
'If Worksheets(mySheet).Range("p2").Value = 2 Then
'UseTPCalciteSheet = 1: UseSI = 0 ' force program to use English unit
'Worksheets("Input Data Sheet").Range("O10:R21") = Worksheets("HX Module").Range("L6:O17").Value
'Worksheets("Input Data Sheet").Range("N8") = "T and P profile by heat transfer model"
'Worksheets("Input Data Sheet").Range("R8") = 10
'End If
'
'If Worksheets(mySheet).Range("p2").Value = 3 Then
'UseTPCalciteSheet = 1:
'Worksheets("Input Data Sheet").Range("N8") = "User defined T and P profile"
'End If
'
'If nob = 1 Then
'    If CaseCount(1) = 9 Then 'Run injection water alone
'    VgTPMix(1) = 0: VoMix(1) = 0
'    VwMix(1) = ActiveSheet.Cells(6, 21).Value
'    If useEOSmix(1) = 1 Then
'    MsgBox ("You cannot choose flash calculation for fresh water. The calculation option has been changed to Use pH.")
'    useEOSmix(1) = 0: usepHmix(1) = 1
'    End If
'
'    Else    'for either produced water or calc reservoir water
'    VgTPMix(1) = ActiveSheet.Cells(3, 21).Value     '1000 ft/d or m^3/d
'    VoMix(1) = ActiveSheet.Cells(4, 21).Value
'    VwMix(1) = ActiveSheet.Cells(5, 21).Value
'    oilAPIgravMix(1) = ActiveSheet.Cells(3, 25).Value   'If no, or 0, the read in the API grav and sp grav and use these to calc. the Pbpt.
'    gasSpGravMix(1) = ActiveSheet.Cells(4, 25).Value
'
'    For iNG = 1 To 14
'        zMix(1, iNG) = Worksheets(mySheet).Cells(6 + iNG, 25) / 100:
'    Next iNG
'        zMix(1, 15) = 0#
'    End If
'
'Else 'when nob=2
'    'usepHmix(2) = 1  'Always use pH for fresh water calculation
'    For iNG = 1 To 14
'        zMix(1, iNG) = Worksheets(mySheet).Cells(6 + iNG, 25) / 100:
'    Next iNG
'        zMix(1, 15) = 0#
'
'    For iNG = 1 To 14
'    zMix(2, iNG) = 0
'    Next iNG
'    zMix(2, 15) = 1#  'Set z(15) =1 for  injection water in simplified Input
'
''    SumofZMix(1) = 0: SumofZMix(2) = 0:
''    For iNG = 1 To 14
''    If zMix(1, iNG) < 0.0000001 Then zMix(1, iNG) = 0
''    SumofZMix(1) = SumofZMix(1) + zMix(1, iNG)       'count total mole fraction of hydrocarbon+CO2+H2S
''    Next iNG
''    If SumofZMix(1) > 0 Then
''    For iNG = 1 To 14   'Normalized z(1) to z(14)
''    zMix(1, iNG) = zMix(1, iNG) / SumofZMix(1)
''    Next iNG
''    End If
'
'    VgTPMix(1) = ActiveSheet.Cells(3, 21).Value     '1000 ft/d or m^3/d
'    VoMix(1) = ActiveSheet.Cells(4, 21).Value
'
'    oilAPIgravMix(1) = ActiveSheet.Cells(3, 25).Value   'If no, or 0, the read in the API grav and sp grav and use these to calc. the Pbpt.
'    gasSpGravMix(1) = ActiveSheet.Cells(4, 25).Value
'    VgTPMix(2) = 0: VoMix(2) = 0
'    If RunStatGoalSeek <> 1 Then
'    VwMix(1) = ActiveSheet.Cells(5, 21).Value
'    VwMix(2) = ActiveSheet.Cells(6, 21).Value
'    Else
'    VwMix(1) = Worksheets(myname).Cells(4, 18).Value  'fir GoalSeek Injection volume
'    VwMix(2) = Worksheets(myname).Cells(5, 18).Value
'    End If
' End If
'
'If RunStatMix = 1 And LoopMixing > 1 Then GoTo 100
'
'For iRead = 1 To nob
'    j = CaseCount(iRead)
'    kk = iRead
'    UseH2SgasMix(kk) = 0
'    NaMix(kk) = ActiveSheet.Cells(11, j + 2).Value 'Values are mg/L
'    KMix(kk) = ActiveSheet.Cells(12, j + 2).Value
'    MgMix(kk) = ActiveSheet.Cells(13, j + 2).Value
'    CaMix(kk) = ActiveSheet.Cells(14, j + 2).Value
'    SrMix(kk) = ActiveSheet.Cells(15, j + 2).Value
'    BaMix(kk) = ActiveSheet.Cells(16, j + 2).Value
'    FeMix(kk) = ActiveSheet.Cells(17, j + 2).Value
'    ZnMix(kk) = ActiveSheet.Cells(18, j + 2).Value
'    PbMix(kk) = ActiveSheet.Cells(19, j + 2).Value
'    ClMix(kk) = ActiveSheet.Cells(20, j + 2).Value
'    SO4Mix(kk) = ActiveSheet.Cells(21, j + 2).Value
'    FMix(kk) = 0
'    BrMix(kk) = ActiveSheet.Cells(22, j + 2).Value
'    TH4SiO4Mix(kk) = ActiveSheet.Cells(23, j + 2).Value
'    HCO3AlkMix(kk) = ActiveSheet.Cells(24, j + 2).Value
'CO3AlkMix(kk) = ActiveSheet.Cells(25, j + 2).Value
'rho25Cmeas(kk) = ActiveSheet.Cells(30, j + 2).Value
'TAcMix(kk) = ActiveSheet.Cells(31, j + 2).Value / 59.044  'convert to sum of carboxylic acid in meq/L
'If RunStatResCalcAlk = 0 Then
'TAcMix(kk) = TAcMix(kk) + ActiveSheet.Cells(32, j + 2).Value / 73.07
'TAcMix(kk) = TAcMix(kk) + ActiveSheet.Cells(33, j + 2).Value / 87.098
'TAcMix(kk) = TAcMix(kk) + ActiveSheet.Cells(34, j + 2).Value / 87.11
'TAcMix(kk) = TAcMix(kk) + ActiveSheet.Cells(35, j + 2).Value / 101.13
'TAcMix(kk) = TAcMix(kk) + ActiveSheet.Cells(36, j + 2).Value / 101.13
'TAcMix(kk) = TAcMix(kk) + ActiveSheet.Cells(37, j + 2).Value / 115.16
'TAcMix(kk) = TAcMix(kk) + ActiveSheet.Cells(38, j + 2).Value / 115.16
'TAcMix(kk) = TAcMix(kk) + ActiveSheet.Cells(39, j + 2).Value / 129.178
'TAcMix(kk) = TAcMix(kk) * 59.044 'convert to mg/L as acetate
'End If
'    TNH4Mix(kk) = 0
'    TH3BO3Mix(kk) = 0
'    yCO2Mix(kk) = ActiveSheet.Cells(26, j + 2).Value / 100
'    TH2SaqMix(kk) = ActiveSheet.Cells(27, j + 2).Value
'    yH2SMix(kk) = 0
'    pHMeterStpMix(kk) = ActiveSheet.Cells(28, j + 2).Value   'Store values of pH on the input sheet that will not be changed.
''If j = 9 And ActiveSheet.Cells(28, j + 2).Value = Empty Then
''response1 = MsgBox("The pH of fresh water is missing.  A pH value of 8.00 will be assumed.  Click Yes to contine.  Click No to abort.", vbYesNo)
''If response1 = 6 Then
''pHMeterStpMix(kk) = 8
''ActiveSheet.Cells(28, j + 2).Value = 8#
''End If
''If response1 = 7 Then End
''End If
'    HAlkMix(kk) = 0
'    OHAlkMix(kk) = 0
'    ConcFactor(kk) = 1
'
'
''    UseTPCalciteSheet = 0
''    UseTPpHMix(kk) = 0
''    UseTPVolMix(kk) = 0
'
'
'TDSMix(kk) = 0
'    For iTDS = 1 To 14
'        TDSMix(kk) = TDSMix(kk) + ActiveSheet.Cells(10 + iTDS, j + 2).Value
'        Next iTDS
'        TDSMix(kk) = TDSMix(kk) + ActiveSheet.Cells(26 + iTDS, j + 2).Value 'add TH2S
'        TDSMix(kk) = TDSMix(kk) + TAcMix(kk)
'    rho_Mix(kk) = 0.9991 + 0.0000006398 * TDSMix(kk)
'    NaMix(kk) = NaMix(kk) / (22990 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk) 'Convert mg/L to molality
'    KMix(kk) = KMix(kk) / (39098 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    MgMix(kk) = MgMix(kk) / (24305 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    CaMix(kk) = CaMix(kk) / (40080 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    SrMix(kk) = SrMix(kk) / (87620 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    BaMix(kk) = BaMix(kk) / (137330 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    FeMix(kk) = FeMix(kk) / (55847 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    ZnMix(kk) = ZnMix(kk) / (65380 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    PbMix(kk) = PbMix(kk) / (207200 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk) 'Pb added
'    ClMix(kk) = ClMix(kk) / (35450 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    SO4Mix(kk) = SO4Mix(kk) / (96064 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    FMix(kk) = FMix(kk) / (18998 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    BrMix(kk) = BrMix(kk) / (79904 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk) 'Br added
'    TH4SiO4Mix(kk) = TH4SiO4Mix(kk) / (28085 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk) 'Input silica as SiO2.
'    HCO3AlkMix(kk) = HCO3AlkMix(kk) / (61019 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    CO3AlkMix(kk) = CO3AlkMix(kk) / (60019 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    TAcMix(kk) = TAcMix(kk) / (59046 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    TNH4Mix(kk) = TNH4Mix(kk) / (17031 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    TH3BO3Mix(kk) = TH3BO3Mix(kk) / (10811 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk)
'    If UseH2SgasMix(kk) = 0 Then TH2SaqMix(kk) = TH2SaqMix(kk) / (34080 * (0.9991 - 0.0000003612 * TDSMix(kk))) * ConcFactor(kk) 'Used to calculate yH2Sstp
'    HAlkMix(kk) = HAlkMix(kk) / (0.9991 - 0.0000003612 * TDSMix(kk)) 'convert N to m
'    OHAlkMix(kk) = OHAlkMix(kk) / (0.9991 - 0.0000003612 * TDSMix(kk))
'
'    AlkMix(kk) = HCO3AlkMix(kk) + 2 * CO3AlkMix(kk) - HAlkMix(kk) + OHAlkMix(kk)
'    TCO2Mix(kk) = 0
'    VMeOHMix(kk) = 0: VMEGMix(kk) = 0
'
'yCH4Mix(kk) = 1 - (yCO2Mix(kk) + yH2SMix(kk)) 'assume dry gas as default
'If yCH4Mix(kk) < 0 Then yCH4Mix(kk) = 0
'
'If yCO2Mix(kk) > 1 Then
'    errmsg(kk) = 1
'    yCO2Mix(kk) = 1
'End If
'If yCO2Mix(kk) < 0 Then
'    errmsg(2) = 2
'    yCO2Mix(kk) = 0: yCO2 = 0: CO2aq = 0: HCO3 = 0: CO3 = 0
'End If
'If yH2SMix(kk) > 1 Then
'    errmsg(3) = 3
'    yH2SMix(kk) = 1: yH2S = 1: TH2SaqMix(kk) = 0 'This will cause the program to use yH2Sstp as the calculation for TH2Saq instead of the input sheet value.
'End If
'If yH2SMix(kk) < 0 Then
'    errmsg(4) = 4
'    yH2SMix(kk) = 0: yH2S = 0:  HS = 0: H2Saq = 0: TH2SaqMix(kk) = 0
'End If
'Next iRead
'
'100 For iRead = 1 To nob 'start ReadInputPartB
'    j = CaseCount(iRead)
'    kk = iRead
'
'If RunStatMix = 1 And LoopMixing = 1 And kk = 1 Then
'    VwSW1 = VwMix(1): VgSW1 = VgTPMix(1): VoSW1 = VoMix(1): VMeOHSW1 = VMeOHMix(1): VMEGSW1 = VMEGMix(1)
'End If
'
'
'If RunStatMix = 1 Then
'    VwMix(kk) = VwSW1 * MixFrac(kk):
'    If kk = 1 Then
'    VoMix(kk) = VoSW1 * MixFrac(kk)
'    VgTPMix(kk) = VgSW1 * MixFrac(kk)
'    VMeOHMix(kk) = VMeOHSW1 * MixFrac(kk):
'    VMEGMix(kk) = VMEGSW1 * MixFrac(kk):
'    Else
'    VoMix(kk) = 0: VgTPMix(kk) = 0: VMeOHMix(kk) = 0: VMEGMix(kk) = 0
'    End If
'End If
'If UseSI = 0 Then
'    VgTPMix(kk) = VgTPMix(kk) * 28.31685 'convert 1000 ft^3 to be m^3
'    Else
'    VgTPMix(kk) = VgTPMix(kk) * 1000 'convert 1000 m3 to m3
'End If
'If UseSI = 1 Then
'    VoMix(kk) = VoMix(kk) / 0.159 'Convert m3 to barrels
'    VwMix(kk) = VwMix(kk) / 0.159 'Convert m3 to barrels
'    VMeOHMix(kk) = VMeOHMix(kk) / 0.159
'    VMEGMix(kk) = VMEGMix(kk) / 0.159
''    TofVol(kk) = TofVol(kk) * 9 / 5 + 32 ' Convert Input TC unit to TF unit
''    PofVol(kk) = PofVol(kk) * 14.503774 ' Convert Input P (Bar) unit to Ppsia unit
''    TofpH(kk) = TofpH(kk) * 9 / 5 + 32 ' Convert Input TC unit to TF unit
''    PofpH(kk) = PofpH(kk) * 14.503774 ' Convert Input P (Bar) unit to Ppsia unit
'End If
'
''TpH = TofpH(kk): PpH = PofpH(kk): TVol = TofVol(kk): Pvol = PofVol(kk)
'TpH = 77: TVol = 77: PpH = 14.7: Pvol = 14.7
'If oilAPIgravMix(kk) = 0 Or oilAPIgravMix(kk) = "" Then oilAPIgravMix(kk) = 30
'If gasSpGravMix(kk) = 0 Or gasSpGravMix(kk) = "" Then gasSpGravMix(kk) = 0.6
'    mt = fTPFunc(0) ' STP Condition
'    WaterDensityMix(kk) = rho_Mix(kk)
'    GasDensityMix(kk) = gasSpGravMix(kk) * (Patm * 28.97 / (0.08206 * TK)) 'unit as Kg/m^3
'    OilDensityMix(kk) = (141.5 / (oilAPIgravMix(kk) + 131.5)) * (fH2ODensity(TK, PBar) / 1000) 'conver density from API gravity
'If VgTPMix(kk) = 0 Then VgTPMix(kk) = 1 / 1000000# 'If volume of gas is equal to zero, then add one mL of gas.
'If VoMix(kk) = 0 Then VoMix(kk) = 1 / 159 / 1000 'If no oil is reported, add one ml of oil per day, to avoid singularities.
'If VwMix(kk) = 0 Then VwMix(kk) = 1 / 159 / 1000  'If no water is reported, add one ml of water per day, to avoid singularities.
''If VMeOHMix(kk) > 0 And VMEGMix(kk) > 0 Then
''    MsgBox ("MeOH and MEG can not both be > 0.  Please check the Input Sheet and try it again.")
''    End
''End If
'mass_o_Mix(kk) = 159 * VoMix(kk) * OilDensityMix(kk)
''mass_MeOH_mix(kk) = 159 * VMeOHMix(kk) * 0.7914 ' Kg of methanol
''mass_MEG_mix(kk) = 159 * VMEGMix(kk) * 1.1098 ' Kg of MEG
''QBrineFlow = VwMix(kk) * 159 * 1000 / 86400 'unit cm3/sec  Parameters for mass transfer
'Next iRead
'
'For iRead = 1 To nob
'    kk = iRead
'    Call ReadInputPartC(kk)
'    Next iRead
'For iRead = 1 To nob
'       j = CaseCount(iRead)
'       kk = iRead
'       Call ReadInputPartD(kk, j)
'Next iRead
''Read in BH and WH T and P and convert the valuess to TF and psia.
' If UseTPCalciteSheet = 0 Then TBH = ActiveSheet.Cells(6, 17)
' If UseTPCalciteSheet = 1 Then TBH = ActiveSheet.Cells(9 + StatTPnob, 17)
''        If RunMultiMix = 1 Then TBH = Worksheets("MultiMix").Cells(2 + LoopResChem, 3).Value
''        If RunWhatIf = 1 Then TBH = TWIInit
'If UseSI = 1 Then TBH = TBH * 9 / 5 + 32 'Change to Degree F
'    If TBH < 24.8 Then
'        If UseTPCalciteSheet = 0 Then
'            MsgBox ("Bottomhole temperature is below 24.8F or -4C. Bottomhole temperature will be set to 24.8F or -4C.")
'            If UseSI = 1 Then
'            ActiveSheet.Cells(6, 17) = -4
'            Else
'            ActiveSheet.Cells(6, 17) = 24.8
'            End If
'            TBH = 24.8
'        Else
'        MsgBox ("Error in user-defined T, P range.  Bottomhole temperature is below 24.8F or -4C. Please correct the user-defined T, P. Program abort")
'        End
'        End If
'    End If
'    If TBH > 482 Then
'        If UseTPCalciteSheet = 0 Then
'            MsgBox ("Bottomhole temperature is above 500 F. Bottomhole temperature will be set to 482 F or 250C.")
'            If UseSI = 1 Then
'            ActiveSheet.Cells(6, 17) = 250
'            Else
'            ActiveSheet.Cells(6, 17) = 482
'            End If
'            TBH = 482
'        Else
'        MsgBox ("Error in user-defined T, P range.  Bottomhole temperature is below 24.8F or -4C. Please correct the user-defined T, P. Program abort")
'        End
'        End If
'    End If
'
' If UseTPCalciteSheet = 0 Then TWH = ActiveSheet.Cells(5, 17)
' If UseTPCalciteSheet = 1 Then TWH = ActiveSheet.Cells(10, 17)
''        If RunMultiMix = 1 Then TWH = Worksheets("MultiMix").Cells(2 + LoopResChem, 3).Value
''         If RunWhatIf = 1 Then TWH = TWIInit
'If UseSI = 1 Then TWH = TWH * 9 / 5 + 32 'Change to Degree F
'    If TWH < 24.8 Then
'        If UseTPCalciteSheet = 0 Then
'            MsgBox ("Wellhead temperature is below 24.8F or -4C. Wellhead temperature will be set to 24.8F or -4 C.")
'            If UseSI = 1 Then
'            ActiveSheet.Cells(5, 17) = -4
'            Else
'            ActiveSheet.Cells(5, 17) = 24.8
'            End If
'            TWH = 24.8
'        Else
'        MsgBox ("Error in user-defined T, P range.  Wellhead temperature is below 24.8F or -4C. Please correct the user-defined T, P. Program abort")
'        End
'        End If
'    End If
'    If TWH > 482 Then
'        If UseTPCalciteSheet = 0 Then
'        MsgBox ("Wellhead temperature is above 482 F. Wellhead temperature will be set to 482F or 250C.")
'            If UseSI = 1 Then
'            ActiveSheet.Cells(5, 17) = 250
'            Else
'            ActiveSheet.Cells(5, 17) = 482
'            End If
'            TWH = 482
'        Else
'        MsgBox ("Error in user-defined T, P range.  Wellhead temperature is below 24.8F or -4C. Please correct the user-defined T, P. Program abort")
'        End
'        End If
'    End If
'
' If UseTPCalciteSheet = 0 Then PBH = ActiveSheet.Cells(6, 18)
' If UseTPCalciteSheet = 1 Then PBH = ActiveSheet.Cells(9 + StatTPnob, 18)
''        If RunMultiMix = 1 Then PBH = Worksheets("MultiMix").Cells(2 + LoopResChem, 4).Value
''        If RunWhatIf = 1 Then PBH = PWIInit
' If UseSI = 1 Then PBH = PBH * 14.503774 'Change to default unit of ppsia
'    If PBH < 12 Then
'        If UseTPCalciteSheet = 0 Then
'            MsgBox ("Bottomhole pressure is below 12 psia or 0.827 bar. Bottomhole pressure will be set to 12 psia or 0.827 bar.")
'            If UseSI = 1 Then
'            ActiveSheet.Cells(6, 18) = 12 / 14.503774
'            Else
'            ActiveSheet.Cells(6, 18) = 12
'            End If
'            PBH = 12
'        Else
'            MsgBox ("Error in user-defined T, P range.  Bottomhole pressure is below 12 psia or 0.827 bar. Please correct the user-defined T, P. Program abort")
'            End
'        End If
'    End If
'    If PBH > 30000 Then
'        If UseTPCalciteSheet = 0 Then
'        MsgBox ("Bottomhole pressure is above 30,000 psi. Bottomhole pressure will be set to 30,000 psia or 2,068.4 bar.")
'            If UseSI = 1 Then
'            ActiveSheet.Cells(6, 18) = 30000 / 14.503774
'            Else
'            ActiveSheet.Cells(6, 18) = 30000
'            End If
'        PBH = 30000
'        Else
'        MsgBox ("Error in user-defined T, P range.  Bottomhole pressure is below 12 psia or 0.827 bar. Please correct the user-defined T, P. Program abort")
'        End
'        End If
'    End If
'
'   If UseTPCalciteSheet = 0 Then PWH = ActiveSheet.Cells(5, 18)
'   If UseTPCalciteSheet = 1 Then PWH = ActiveSheet.Cells(10, 18)
'
'    If UseSI = 1 Then PWH = PWH * 14.503774
'    If PWH < 12 Then
'        If UseTPCalciteSheet = 0 Then
'        MsgBox ("Wellhead pressure is below 0.816 atmosphere. Wellhead pressure will be set to 0.816 atmosphere (12 psia).") 'Alow a tolerence of +/- 0.1 psia
'            If UseSI = 1 Then
'            ActiveSheet.Cells(5, 18) = 12 / 14.503774
'            Else
'            ActiveSheet.Cells(5, 18) = 12
'            End If
'            PWH = 12
'        Else
'        MsgBox ("Error in user-defined T, P range.  Wellhead pressure is below 12 psia or 0.827 bar. Please correct the user-defined T, P. Program abort")
'        End
'        End If
'    End If
'    If PWH > 30000 Then
'        If UseTPCalciteSheet = 0 Then
'            MsgBox ("Wellhead pressure is above 30,000 psi. Wellhead pressure will be set to 30000 psia or 2068.4 bar.")
'            If UseSI = 1 Then
'            ActiveSheet.Cells(5, 18) = 30000 / 14.503774
'            Else
'            ActiveSheet.Cells(5, 18) = 30000
'            End If
'            PWH = 30000
'        Else
'        MsgBox ("Error in user-defined T, P range.  Wellhead pressure is above 30,000 psi. Please correct the user-defined T, P. Program abort")
'        End
'        End If
'    End If
'
'    tInh = ActiveSheet.Range("AE4").Value * 60               'Convert tInh to seconds
'        If tInh = 0 Then tInh = 1                                                    'Avoid singularity
'    SelectInh = Worksheets(mySheet).Range("Ae6").Value            '1/0 Have program select inhibitor
'        InhNo = Worksheets(mySheet).Range("AE7").Value
'        If InhNo < 1 Then SelectInh = 1
'        If InhNo > 14 Then SelectInh = 1
'        If SelectInh = 1 Then InhNo = 1 'First set inhno to a value
'        InhNo1 = Worksheets(mySheet).Range("AE9").Value
'        FracInhNo1 = Worksheets(mySheet).Range("AE10").Value / 100
'        InhNo2 = Worksheets(mySheet).Range("AE11").Value
'
'    For i = 1 To 14
'    InhName(i) = Worksheets(mySheet).Cells(4 + i, 29)
'    Next i
'
'    MaxInh = Worksheets(mySheet).Range("AE12").Value
'    NoRiskcalc = 3             'No of Risk calculation, currently set at 0, .5 MaxInh, and Max Inh concentrations. Can increase as needed
'    For i = 1 To (NoRiskcalc - 1)
'    ConcInhBarRisk(i) = MaxInh / (NoRiskcalc - 1) * i
'    ConcInhCalRisk(i) = MaxInh / (NoRiskcalc - 1) * i
'    ConcInhAnRisk(i) = MaxInh / (NoRiskcalc - 1) * i
'    ConcInhGypRisk(i) = MaxInh / (NoRiskcalc - 1) * i
'    Next i
'
''
''Application.ScreenUpdating = True
''Application.Calculation = xlCalculationAutomatic
'
'End Sub
'
'Sub StatB2CalcReservoirConc()
'Dim mcOld(11), maOld(12), mnOld(7), TACOld, TH2SaqOld, AlkOld
'For i = 1 To NumCat
'mcOld(i) = 0
'Next i
'For i = 1 To NumAn
'maOld(i) = 0
'Next i
'
''Application.ScreenUpdating = False
''Application.Calculation = xlCalculationManual
'
'  xMeOH = 0: xMEG = 0: mf_ParametersWereRead = False
'  Alk = 0: TAc = 0: TH2Saq = 0: TDS = 0: TH4SiO4 = 0: TNH4 = 0: TH3BO3 = 0:
'  nTCO2 = 0: nTCH4 = 0: nTH2s = 0: mass_w = 0: Mass_o = 0: mass_MeOH = 0: mass_MEG = 0
'  API = 0: SGG = 0:  QTotal = 0: Tc = 0: VgTP = 0: VO = 0:
'  total_moles = 0: VW = 0: VO = 0: VgTP = 0: API = 0: SGG = 0:
'  nTCO2EOS = 0: nTH2sEOS = 0
'
'  For i = 1 To NumCat
'    mc(i) = 0
'  Next i
'  For i = 1 To NumAn
'    ma(i) = 0
'  Next i
'  For i = 1 To 15
'  z(i) = 0
'  Next i
'        VW = VwMix(1) - VwMix(2)
'        VgTP = VgTPMix(1) - VgTPMix(2)
'        VO = VoMix(1) - VoMix(2)
'        mass_w = mass_w_Mix(1) - mass_w_Mix(2)
'        If mass_w <= 0 Then
'        MsgBox ("The calculation resulted in a net negative reservoir water volume.  This implies that the assumed injected water volume is too large. Reduced the injected water daily volume and try again. Program abort.")
'        End
'        End If
'        Mass_o = mass_o_Mix(1)
'
'  mc(iH) = (HstpMix(1) * mass_w_Mix(1) - HstpMix(2) * mass_w_Mix(2)) / mass_w
'  mc(iNa) = (NaMix(1) * mass_w_Mix(1) - NaMix(2) * mass_w_Mix(2)) / mass_w
'  mc(iK) = (KMix(1) * mass_w_Mix(1) - KMix(2) * mass_w_Mix(2)) / mass_w
'  mc(iMg) = (MgMix(1) * mass_w_Mix(1) - MgMix(2) * mass_w_Mix(2)) / mass_w
'  mc(iCa) = (CaMix(1) * mass_w_Mix(1) - CaMix(2) * mass_w_Mix(2)) / mass_w
'  mc(iSr) = (SrMix(1) * mass_w_Mix(1) - SrMix(2) * mass_w_Mix(2)) / mass_w
'  mc(iBa) = (BaMix(1) * mass_w_Mix(1) - BaMix(2) * mass_w_Mix(2)) / mass_w
'  mc(iFe) = (FeMix(1) * mass_w_Mix(1) - FeMix(2) * mass_w_Mix(2)) / mass_w
'  mc(iZn) = (ZnMix(1) * mass_w_Mix(1) - ZnMix(2) * mass_w_Mix(2)) / mass_w
'  mc(iPb) = (PbMix(1) * mass_w_Mix(1) - PbMix(2) * mass_w_Mix(2)) / mass_w
'  mc(iNH4) = (NH4STPMix(1) * mass_w_Mix(1) - NH4STPMix(2) * mass_w_Mix(2)) / mass_w
'  ma(iOH) = (OHstpMix(1) * mass_w_Mix(1) - OHstpMix(2) * mass_w_Mix(2)) / mass_w
'  ma(iCl) = (ClMix(1) * mass_w_Mix(1) - ClMix(2) * mass_w_Mix(2)) / mass_w
'  ma(iAc) = (ACstpMix(1) * mass_w_Mix(1) - ACstpMix(2) * mass_w_Mix(2)) / mass_w
'  ma(iH2BO3) = (H2BO3stpMix(1) * mass_w_Mix(1) - H2BO3stpMix(2) * mass_w_Mix(2)) / mass_w
'  ma(iHCO3) = (HCO3stpMix(1) * mass_w_Mix(1) - HCO3stpMix(2) * mass_w_Mix(2)) / mass_w
'  ma(iCO3) = (CO3stpMix(1) * mass_w_Mix(1) - HCO3stpMix(2) * mass_w_Mix(2)) / mass_w
'  ma(iSO4) = (SO4Mix(1) * mass_w_Mix(1) - SO4Mix(2) * mass_w_Mix(2)) / mass_w
'  ma(iBr) = (BrMix(1) * mass_w_Mix(1) - BrMix(2) * mass_w_Mix(2)) / mass_w
'  ma(intF) = (FMix(1) * mass_w_Mix(1) - FMix(2) * mass_w_Mix(2)) / mass_w
'  TH4SiO4 = (TH4SiO4Mix(1) * mass_w_Mix(1) - TH4SiO4Mix(2) * mass_w_Mix(2)) / mass_w
'  Alk = (AlkMix(1) * mass_w_Mix(1) - AlkMix(2) * mass_w_Mix(2)) / mass_w
'  TAc = (TAcMix(1) * mass_w_Mix(1) - TAcMix(2) * mass_w_Mix(2)) / mass_w
'  TNH4 = (TNH4Mix(1) * mass_w_Mix(1) - TNH4Mix(2) * mass_w_Mix(2)) / mass_w
'  TH3BO3 = (TH3BO3Mix(1) * mass_w_Mix(1) - TH3BO3Mix(2) * mass_w_Mix(2)) / mass_w
'  TH2Saq = (TH2SaqMix(1) * mass_w_Mix(1) - TH2SaqMix(2) * mass_w_Mix(2)) / mass_w
'  TDS = (VwMix(1) * CalculatedTDSMix(1) - VwMix(2) * CalculatedTDSMix(2)) / VW
'  mass_MeOH = mass_MeOH_mix(1) - mass_MeOH_mix(2) 'unit=Kg
'  mass_MEG = mass_MEG_mix(1) - mass_MEG_mix(2) 'unit=Kg
'  API = OilDensityMix(1) 'oil and gas density of produced fluid
'  SGG = GasDensityMix(1)
'  SGG = SGG / (Patm * 28.97 / (0.08206 * TK))  'Gas specific gravity is density divided by density of air at T,P.
'   API = 141.5 / (API / (fH2ODensity(TK, PBar) / 1000)) - 131.5 'API gravity used to calculate gas partitioning in the oil; Vasquez and Beggs
'
'  For i = 2 To 11  'only test cations Na to NH4
'  If mc(i) < 0 Then
'  errmsg(19) = 19
'  mcOld(i) = mc(i)
'  mc(i) = 0
'  End If
' Next i
'
'  For i = 1 To NumAn
'  If ma(i) < 0 And Alk > 0 Then
'  errmsg(19) = 19
'  maOld(i) = ma(i)
'  ma(i) = 0
'  End If
'  Next i
'If TAc < 0 Then
' errmsg(19) = 19
' TACOld = TAc
' TAc = 0
' End If
' If TH2Saq < 0 Then
' errmsg(19) = 19
' TH2SaqOld = TH2Saq
' TH2Saq = 0
' End If
' If Alk < 0 Then
' 'errmsg(19) = 19
' AlkOld = Alk
' Alk = 0
' End If
'
'
''If VW < 0 Then errmsg(19) = 19
'For j = 1 To 15
'  z(j) = zMix(1, j)
'  If z(j) < 0.0000001 Then z(j) = 0
'   z_before_precipitation(j) = z(j)
'Next j
'For j = 1 To 14
' SumofZ = SumofZ + z(j)
'Next j
'  total_moles = Total_molesMix(1)
'  nTCO2 = nTCO2Mix(1) - nTCO2Mix(2)
'  nTCH4 = nTCH4Mix(1) - nTCH4Mix(2)
'  nTH2s = nTH2SMix(1) - nTH2SMix(2)
'  nTCO2EOS = nTCO2MixEOS(1)
'  nTH2sEOS = nTH2SMixEOS(2)
'
'   If mass_MeOH > 0 Then xMeOH = (mass_MeOH / 32) / (mass_MeOH / 32 + mass_w / 18)
'   If mass_MEG > 0 Then xMEG = (mass_MEG / 62.07) / (mass_MEG / 62.7 + mass_w / 18)
'
'Call CalcIonicStrength
'  If mass_MeOH > 0 Then IStCosolvent = Ist * mass_w / (mass_w + mass_MeOH)
'  If mass_MEG > 0 Then IStCosolvent = Ist * mass_w / (mass_w + mass_MEG)
'mt = fTPFunc(0) 'iTP=0 T=77F, P=14.696 psi: iTP=1 T=TVol, P=Pvol;iTP=2 T=TpH, P=PpH
' 'rho25c = CalcRho 'Function subroutine
'  rho25c = CalcRhoTP(TK, Tc, Pbar, patm) 'Function subroutine
''Calculate the pH and mole fraction of gases for mixed brine
'If UseTPVolMix(1) = 0 Then
'mt = fTPFunc(0) 'calculate everything at STP
'Else
'mt = fTPFunc(1) 'calculate at T, P on Rows 60,61
'End If
'   SGG = SGG / (Patm * 28.97 / (0.08206 * TK))  'Gas specific gravity is density divided by density of air at T,P.
'   API = 141.5 / (API / (fH2ODensity(TK, PBar) / 1000)) - 131.5 'API gravity used to calculate gas partitioning in the oil; Vasquez and Beggs
'
'Total_moles_before_precipitation = total_moles
'    Call C1_ThermodynamicEquilConsts
'    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O,TK, Tc, Pbar, patm)
'
'nTCO2_before_precipitation = nTCO2
'nTH2S_before_precipitation = nTH2s
'        Call PengRobinson3
'        RatioOilBPoints = fRatioOilBPoints
'    Call C4_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
'
''*********
'mt = fmn  'Assign neutral species and HCO3, CO3, HS and recalculate ionic strength, Pitzer Coeff and pH
'Call CalcIonicStrength
'Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O,TK, Tc, Pbar, patm)
'    Call C4_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
'    yCH4 = PCH4 / Ppsia  'These are at STP for mixed gases.
'    yCO2 = PCO2 / Ppsia
'    yH2S = PH2S / Ppsia
'If useEOS <> 0 Then
'nTCO2_before_precipitation = nTCO2EOS 'If useEOS>0 then nTCO2 before precipitation is equal to nTCO2EOS
'nTH2S_before_precipitation = nTH2sEOS
'Call MultiPhaseFlash(False, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
'For iNG = 1 To 15
'z(iNG) = zOutput(iNG)
'Next iNG
'mass_w = total_moles * beta(3) * compositions(15, 4) * 0.01801528
'If mass_w = 0 Then
'errmsg(14) = 14
'useEOS = 0
'MsgBox ("The calculation resulted in no aqueous phase in during flash calculation.  Change G/O/W ratio or change calculation option. Program abort.")
'End
'End If
'Call C4_EOS_TCO2_SSPEquilCalcs(0, 5, 2, KspCalcite) '(ppt_or_not, iMetals, iGas, Ksp)
''*********
'mt = fmn  'Assign neutral species and HCO3, CO3, HS and recalculate ionic strength, Pitzer Coeff and pH
'Call CalcIonicStrength
'Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O,TK, Tc, Pbar, patm)
'Call C4_EOS_TCO2_SSPEquilCalcs(0, 5, 2, KspCalcite) '(ppt_or_not, iMetals, iGas, Ksp)
'End If
'
''Application.ScreenUpdating = True
''Application.Calculation = xlCalculationAutomatic
'  For i = 2 To 11  'return to negative values if it exist
'  If mcOld(i) < 0 Then mc(i) = mcOld(i)
'  Next i
'
'  For i = 1 To NumAn
'  If maOld(i) < 0 Then ma(i) = maOld(i)
'  Next i
' If TACOld < 0 Then TAc = TACOld
' If TH2SaqOld < 0 Then TH2Saq = TH2SaqOld
' If AlkOld < 0 Then Alk = AlkOld
'
'End Sub
'
'
'
'Sub StatB3GoalSeek1(RunStatSICalc)
''Application.ScreenUpdating = False
''Application.Calculation = xlCalculationManual
'
'RunStatSICalcSSP = RunStatSICalc
'mySheet = "Input data sheet": RunStat = 1
''mytime = Time
''Worksheets("Calcite").Range("B1:J1").Value = Null
''Worksheets("Calcite").Range("p4:u13").Value = Null
''Worksheets("Barite").Range("B1:J1").Value = Null
''Worksheets("Barite").Range("p4:u13").Value = Null
''Worksheets("Halite").Range("B1:J1").Value = Null
''Worksheets("Other SO4s").Range("B1:J1").Value = Null
''Worksheets("Other SO4s").Range("P4:U14").Value = Null
''Worksheets("Sulfides,Fluorite,Carbonates").Range("B1:J1").Value = Null
''Worksheets("Silicates").Range("B1:J1").Value = Null
''Worksheets("Mg(OH)2,Ca(OH)2").Range("B1:J1").Value = Null
''
''Worksheets("Calcite").Range("A4:K13").Value = Null
''Worksheets("Barite").Range("A4:F13").Value = Null
''Worksheets("Halite").Range("A4:F13").Value = Null
''Worksheets("Other SO4s").Range("A4:J13").Value = Null
''Worksheets("Sulfides,Fluorite,Carbonates").Range("A4:S13").Value = Null
'
'Call InitializeOptionClearCellContent
'ReDim CaseCount(5), CaseCount_II(110)
'Call CountNOB
'Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
'Call Worksheets("Readme").StatB1ReadinAllData
''If Worksheets(mySheet).Range("A4") = 2 Then
''UseTPCalciteSheet = 1
''Else
''UseTPCalciteSheet = 0
''End If
'
'Call Worksheets("Readme").B3_CalcConcs           'Cacluate all concentration data from wells on input screen.
' TF = Worksheets(myname).Cells(DepVarRowNo, 18):
'    Ppsia = Worksheets(myname).Cells(DepVarRowNo, 19):
'    If UseSI = 1 Then TF = TF * 9 / 5 + 32
'    If UseSI = 1 Then Ppsia = Ppsia * 14.503774
'    PBar = Ppsia / 14.503774
'    Tc = (TF - 32) * 5 / 9
'    TK = (TF - 32) * 5 / 9 + 273.15
'    Patm = Ppsia / 14.696
'    Call B5_CalculateSIvalues
'
'' If Ist <> 0 Then
'' Call LoopTPVisHeatCap
'' If Run_MassTransfer = 1 Then Call MassTransferCoefficients
''End If
'pptHal = 0
''If SIHal > 0 Then
'  B = -(mc(iNa) + ma(iCl))
'  CC = mc(iNa) * ma(iCl) - KspHalite / (gCat(iNa) * gAn(iCl) * gNMean(iNaCl) ^ 2)
'  pptHal = (-B - (B ^ 2 - 4 * CC) ^ 0.5) / 2
''End If
'   Worksheets("Output data sheet").Cells(DepVarRowNo, 16) = location
'    Worksheets("Output data sheet").Cells(DepVarRowNo, 17) = Depth
'    If UseSI = 1 Then
'    Worksheets("Output data sheet").Cells(DepVarRowNo, 18) = (TF - 32) * 5 / 9
'    Worksheets("Output data sheet").Cells(DepVarRowNo, 19) = Ppsia / 14.503774
'    Else
'    Worksheets("Output data sheet").Cells(DepVarRowNo, 18) = TF
'    Worksheets("Output data sheet").Cells(DepVarRowNo, 19) = Ppsia
'    End If
'    If UseSR = 1 Then
'     Worksheets("Output data sheet").Cells(DepVarRowNo, 20) = 10 ^ SIHal
'     Else
'    Worksheets("Output data sheet").Cells(DepVarRowNo, 20) = SIHal
'    End If
'    Worksheets("Output data sheet").Cells(DepVarRowNo, 21) = pptHal * 58443 * (rho25c - TDS / 1000000#)
'    Worksheets("Output data sheet").Cells(DepVarRowNo, 22) = rhoTP
'
'
''Application.ScreenUpdating = True
''Application.Calculation = xlCalculationAutomatic
'
'End Sub
'
'Sub StatB3GoalSeek2()
'
''Application.ScreenUpdating = False
''Application.Calculation = xlCalculationManual
'
'RunStatSICalcSSP = 2
'mySheet = "Input data sheet": RunStat = 1
'    VwMix(1) = Worksheets(myname).Cells(4, 18).Value  'fir GoalSeek Injection volume
'    VwMix(2) = Worksheets(myname).Cells(5, 18).Value
'    mass_w_Mix(1) = 159 * VwMix(1) * WaterDensityMix(1)  'convert to Kg salt water, this is only true if WaterDensityMix(kk) is accurately measured at T, P if UseTPVolMix(kk) =1
'    mass_w_Mix(1) = mass_w_Mix(1) * (1 - CalculatedTDSMix(1) / rho25CMix(1) * 0.000001)
'    mass_w_Mix(2) = 159 * VwMix(2) * WaterDensityMix(2)  'convert to Kg salt water, this is only true if WaterDensityMix(kk) is accurately measured at T, P if UseTPVolMix(kk) =1
'    mass_w_Mix(2) = mass_w_Mix(2) * (1 - CalculatedTDSMix(2) / rho25CMix(2) * 0.000001)
'Call Worksheets("Readme").B3_CalcConcs           'Cacluate all concentration data from wells on input screen.
'
'    TF = Worksheets(myname).Cells(DepVarRowNo, 18):
'    Ppsia = Worksheets(myname).Cells(DepVarRowNo, 19):
'    If UseSI = 1 Then TF = TF * 9 / 5 + 32
'    If UseSI = 1 Then Ppsia = Ppsia * 14.503774
'    PBar = Ppsia / 14.503774
'    Tc = (TF - 32) * 5 / 9
'    TK = (TF - 32) * 5 / 9 + 273.15
'    Patm = Ppsia / 14.696
' Call B5_CalculateSIvalues
'' If Ist <> 0 Then
'' Call LoopTPVisHeatCap
'' If Run_MassTransfer = 1 Then Call MassTransferCoefficients
''End If
'pptHal = 0
''If SIHal > 0 Then
'  B = -(mc(iNa) + ma(iCl))
'  CC = mc(iNa) * ma(iCl) - KspHalite / (gCat(iNa) * gAn(iCl) * gNMean(iNaCl) ^ 2)
'  pptHal = (-B - (B ^ 2 - 4 * CC) ^ 0.5) / 2
''End If
'   Worksheets("Output data sheet").Cells(DepVarRowNo, 16) = location
'    Worksheets("Output data sheet").Cells(DepVarRowNo, 17) = Depth
'    If UseSI = 1 Then
'    Worksheets("Output data sheet").Cells(DepVarRowNo, 18) = (TF - 32) * 5 / 9
'    Worksheets("Output data sheet").Cells(DepVarRowNo, 19) = Ppsia / 14.503774
'    Else
'    Worksheets("Output data sheet").Cells(DepVarRowNo, 18) = TF
'    Worksheets("Output data sheet").Cells(DepVarRowNo, 19) = Ppsia
'    End If
'    If UseSR = 1 Then
'     Worksheets("Output data sheet").Cells(DepVarRowNo, 20) = 10 ^ SIHal
'     Else
'    Worksheets("Output data sheet").Cells(DepVarRowNo, 20) = SIHal
'    End If
'    Worksheets("Output data sheet").Cells(DepVarRowNo, 21) = pptHal * 58443 * (rho25c - TDS / 1000000#)
'    Worksheets("Output data sheet").Cells(DepVarRowNo, 22) = rhoTP
''
''Application.ScreenUpdating = True
''Application.Calculation = xlCalculationAutomatic
'
'End Sub
''Sub StatC2_AlkCalc()
''
'''If Worksheets("Input data sheet").Cells(3, 25).Value = "(Mm^3/D)" Then UseSI = 1 'Calculate calcite SI at reservoir condition
'''TF = Worksheets("Input data sheet").Cells(6, 17)
'''Ppsia = Worksheets("Input data sheet").Cells(6, 18)
'''If UseSI = 1 Then
'''TF = TF * 9 / 5 + 32: Ppsia = Ppsia * 14.50377
'''End If
'''Tc = (TF - 32) * 5 / 9: TK = Tc + 273.15: PBar = Ppsia / 14.503774: Patm = Ppsia / 14.696
''  Call CalcIonicStrength
''  Call C1_ThermodynamicEquilConsts
''  Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O,TK, Tc, Pbar, patm)
''If useEOS = 0 Then
''  Call PengRobinson3
''   RatioOilBPoints = fRatioOilBPoints
''  Call C4_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
''
''  mt = fmn        'CO2aq, HCO3, CO3, H2Saq, HS
''  Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O,TK, Tc, Pbar, patm)
''  Call C4_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
''End If
''If useEOS <> 0 Then
''    Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
''    mass_w = total_moles * beta(3) * compositions(15, 4) * 0.01801528 'unit=Kg H2O in aqueous phase
''    If mass_w < 0.0000001 Then 'if no water exist, exit SI calculation and go to the next T,P
''    errmsg(8) = 8: Ist = Null: pH = Null
''        GoTo 500
''    End If
''    If PBar * yCO2 > 152 Then errmsg(13) = 13
''    If mass_w / mass_w_0 < 0.05 Then
''    errmsg(8) = 8: Ist = Null: pH=null
''    GoTo 500
''    End If
''
''    Call CalcIonicStrength
''    If Ist > 20 Then
''        errmsg(8) = 8: Ist = Null: pH = Null
''        GoTo 500
''    End If
''    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O,TK, Tc, Pbar, patm)
''    Call MultiPhaseFlash(mf_ParametersWereRead, mf_TCr, mf_PCr, mf_Omega, mf_MWgas, mf_kPr, mf_c0, mf_c1, TK, PBar, total_moles, z, Array(gNeut(iCO2aq), gNeut(iH2Saq)), aH2O, density, compositions, phi, Compr, beta, zOutput, mass_phase, MW_Phase, No_Phases)
''    mass_w = total_moles * beta(3) * compositions(15, 4) * 0.01801528 'unit=Kg H2O in aqueous phase
''    Call C4_EOS_TCO2_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
''     mt = fmn
''    Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O,TK, Tc, Pbar, patm)
''    Call C4_EOS_TCO2_SSPEquilCalcs(0, 5, 2, KspCalcite)  '(ppt_or_not, iMetals, iGas, Ksp)
''End If
''SICal = Log10(mc(iCa) * HCO3 * gCat(iCa) * gNCat(iCa) * gAn(iHCO3) * gNAn(iHCO3) * K2HCO3 / (aH * KspCalcite))
''500 End Sub
'
'Sub StatC1GoalSeekAlk()
''Application.ScreenUpdating = False
''Application.Calculation = xlCalculationManual
'
''Calculate initial guess of Alk based on equilibrium at reservoir T, P and Produced water gas phase CO2%
'yCO2 = Worksheets("Input data sheet").Cells(26, 3) / 100 'use poduced water co2%
'Worksheets("Input data sheet").Cells(26, 7) = yCO2 * 100 'set the reservoir gas phase co2%= produced water CO2
'
'UseSI = 0
'If Worksheets("Input data sheet").Cells(3, 22).Value = "(Mm^3/D)" Then UseSI = 1
'TF = TBH
'Ppsia = PBH
'Tc = (TF - 32) * 5 / 9: TK = Tc + 273.15: PBar = Ppsia / 14.503774: Patm = Ppsia / 14.696
'Call CalcIonicStrength
'Call C1_ThermodynamicEquilConsts
'Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O,TK, Tc, Pbar, patm)
'Call PengRobinson3
'RatioOilBPoints = fRatioOilBPoints
'    HCO3 = (KgwCO2 * Ppsia * yCO2 * gGas(iCO2g) * (K1H2CO3 * aH2O) * KspCalcite / (mc(iCa) * gCat(iCa) * gNCat(iCa) * K2HCO3 * (gAn(iHCO3) * gNAn(iHCO3)) ^ 2)) ^ 0.5
'    CO2aq = KgwCO2 * Ppsia * yCO2 * gGas(iCO2g) / (gNeut(iCO2aq) * gNNeut(iCO2aq))
'    aH = K1H2CO3 * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (HCO3 * gAn(iHCO3) * gNAn(iHCO3))
'    OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
'    H = aH / (gCat(iH) * gNCat(iH))
'    pH = -Log10(aH)
'    CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
'    hydHS = aH * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq)) + 1
'    HS = TH2Saq / hydHS 'note that the H2S contribution to downhole alkalinity and pH is ignored.
'    H2Saq = aH * HS * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq))
'    yH2S = H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (KgwH2S * Ppsia * gGas(iH2Sg))
'    hydAc = aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1 'Note gNNeut(iHACaq)=1
'    Ac = TAc / hydAc
'    HAcaq = TAc - Ac
'    hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
'    H2BO3 = TH3BO3 / hydH2BO3
'    hydNH3 = aH * gNeut(iNH3) * gNNeut(iNH3) / (KNH4 * gCat(iNH4) * gNCat(iNH4)) + 1
'    NH3 = TNH4 / hydNH3
'    hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
'          aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
'    H2SiO4 = TH4SiO4 / hydH2SiO4
'    H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
'    H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
'    Alk = (HCO3 + 2 * CO3 + HS + Ac + NH3 + H2BO3 + H3SiO4 + 2 * H2SiO4 + OH - H) 'initial guess of alkalinity
'    'calculate nTCO2, nTH2S, TDS, rho25C, pHstp
'    TF = 77: Ppsia = 14.7: Tc = (TF - 32) * 5 / 9: TK = Tc + 273.15: PBar = Ppsia / 14.503774: Patm = Ppsia / 14.696
''    If useEOS = 0 Then
'Call CalcIonicStrength
'Call C1_ThermodynamicEquilConsts
'Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O,TK, Tc, Pbar, patm)
'Call PengRobinson3
''RatioOilBPoints = fRatioOilBPoints
'    pHHigh = 14: pHLow = 0  'Half-interval search root finder works very well for pH equations.
'    For k = 1 To 30
'        pH = (pHHigh + pHLow) / 2
'        aH = 10 ^ (-pH)
'        H = aH / (gCat(iH) * gNCat(iH))
'        OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
'        CO2aq = KgwCO2 * Ppsia * yCO2 * gGas(iCO2g) / (gNeut(iCO2aq) * gNNeut(iCO2aq))
'        HCO3 = (K1H2CO3 * aH2O) * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
'        CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
'        hydHS = aH * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq)) + 1
'        HS = TH2Saq / hydHS
'        H2Saq = aH * HS * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq))
'        yH2S = H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (KgwH2S * Ppsia * gGas(iH2Sg))
'        hydAc = aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1 'Note gNNeut(iHACaq)=1
'        Ac = TAc / hydAc
'        HAcaq = TAc - Ac
'        hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
'        H2BO3 = TH3BO3 / hydH2BO3
'        hydNH3 = aH * gNeut(iNH3) * gNNeut(iNH3) / (KNH4 * gCat(iNH4) * gNCat(iNH4)) + 1
'        NH3 = TNH4 / hydNH3
'        hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
'              aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
'        H2SiO4 = TH4SiO4 / hydH2SiO4
'        H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
'        H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
'        faH = Alk - (HCO3 + 2 * CO3 + HS + Ac + NH3 + H2BO3 + H3SiO4 + 2 * H2SiO4 + OH - H)
'        If faH > 0 Then pHLow = pH
'        If faH < 0 Then pHHigh = pH
'    Next k
'    mt = fTotalCO2H2Smoles
'    rho25c = CalcRhoTP(TK, Tc, Pbar, patm) 'Function subroutine
'
''    Else
''    nTCO2EOS = z(2) * total_moles
''    nTH2sEOS = z(3) * total_moles
''    rho25c = CalcRhoTP(TK, Tc, Pbar, patm) 'Function subroutine
''    End If
'mc(iH) = H: ma(iOH) = OH: ma(iAc) = Ac: mn(iNH3) = NH3: ma(iH2BO3) = H2BO3: ma(iHCO3) = HCO3: ma(iCO3) = CO3: ma(iHS) = HS
'ma(iH3SiO4) = H3SiO4: ma(iH2SiO4) = H2SiO4: mn(iH4SiO4aq) = H4SiO4: mn(iNH3) = NH3: mn(iH3BO3) = TH3BO3 - H2BO3
'mn(iCO2aq) = CO2aq: mn(iH2Saq) = H2Saq: mn(iHAcaq) = HAcaq
'
'    TDS = 0: CalculateTDSDen = 0 'Calculate TDS from density and moallity
'For iden = 2 To NumCat
'    CalculateTDSDen = CalculateTDSDen + 0.001 * mc(iden) * MWCat(iden)  '=Sum of g salt/Kg H2O
'Next iden
'For iden = 2 To NumAn
'    CalculateTDSDen = CalculateTDSDen + 0.001 * ma(iden) * MWAn(iden)
'Next iden
'For iden = 2 To NumNeut
'    CalculateTDSDen = CalculateTDSDen + 0.001 * mn(iden) * MWNeut(iden)
'Next iden
'    TDS = CalculateTDSDen / (1 + CalculateTDSDen) * rho25c * 1000000# 'TDS in unit of mg/L,  numerator=(Kgsalt/KgH2O), denometer=(1+Kgsalt/KgH2O)=(Kgsoln/KgH2O);density Kgsoln/Lsoln
'
''Worksheets("Input Data Sheet").Range("G11").Value = mc(iNa) * (22990 * (rho25c - TDS / 1000000#))
''Worksheets("Input Data Sheet").Range("G12").Value = mc(iK) * (39102 * (rho25c - TDS / 1000000#))
''Worksheets("Input Data Sheet").Range("G13").Value = mc(iMg) * (24305 * (rho25c - TDS / 1000000#))
''Worksheets("Input Data Sheet").Range("G14").Value = mc(iCa) * (40080 * (rho25c - TDS / 1000000#))
''Worksheets("Input Data Sheet").Range("G15").Value = mc(iSr) * (87620 * (rho25c - TDS / 1000000#))
''Worksheets("Input Data Sheet").Range("G16").Value = mc(iBa) * (137330 * (rho25c - TDS / 1000000#))
''Worksheets("Input Data Sheet").Range("G17").Value = mc(iFe) * (55847 * (rho25c - TDS / 1000000#))
''Worksheets("Input Data Sheet").Range("G18").Value = mc(iZn) * (65380 * (rho25c - TDS / 1000000#))
''Worksheets("Input Data Sheet").Range("G19").Value = mc(iPb) * (207200 * (rho25c - TDS / 1000000#))
''Worksheets("Input Data Sheet").Range("G20").Value = ma(iCl) * (35450 * (rho25c - TDS / 1000000#))
''Worksheets("Input Data Sheet").Range("G21").Value = ma(iSO4) * (96064 * (rho25c - TDS / 1000000#))
''Worksheets("Input Data Sheet").Range("G22").Value = ma(iBr) * (79904 * (rho25c - TDS / 1000000#))
''Worksheets("Input Data Sheet").Range("g23").Value = TH4SiO4 * (28085 * (rho25c - TDS / 1000000#))
'Worksheets("Input Data Sheet").Range("g24").Value = Alk * (61019 * (rho25c - TDS / 1000000#))
''Worksheets("Input Data Sheet").Range("G26").Value = yCO2 * 100
''Worksheets("Input Data Sheet").Range("G27") = TH2Saq * (34080 * (rho25c - TDS / 1000000#))
'Worksheets("Input Data Sheet").Range("G28") = pH - DpHj
''Worksheets("Input Data Sheet").Range("g31").Value = TAc * (60054 * (rho25c - TDS / 1000000#))
''If UseSI = 0 Then Worksheets("Input Data Sheet").Range("g32").Value = VW 'output as bbl
''If UseSI = 1 Then Worksheets("Input Data Sheet").Range("g32").Value = VW * 0.159 'output as m3
'
'mySheet = "Input data sheet": RunStat = 1
'Call InitializeOptionClearCellContent
'
'Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
'Call Worksheets("Readme").StatB1ReadinAllData
'Call Worksheets("Readme").B3_CalcConcs           'Cacluate all concentration data from wells on input screen.
'    'An index to tell program that the GoalSeek portion is being run.
'    iGoalSeek = 0: RunSSP = 0:
''    If Worksheets("Input data sheet").Cells(3, 25).Value = "(Mm^3/D)" Then UseSI = 1 'set T, P to reservoir condition
'    TF = TBH
'    Ppsia = PBH
'    If UseSI = 1 Then
'    TF = TF * 9 / 5 + 32: Ppsia = Ppsia * 14.50377
'    End If
'    Tc = (TF - 32) * 5 / 9: TK = Tc + 273.15: PBar = Ppsia / 14.503774: Patm = Ppsia / 14.696
'    Call B5_CalculateSIvalues
'     DependentVariableTargetValue = 1
'    IndVariableValue0 = Alk
'    DepVariableValue0 = 10 ^ SICal
'    DepOld = DepVariableValue0
'    IndNew = IndVariableValue0
'For iGoalSeek = 1 To 20
'    IndOld = IndNew
'    AlkInit = IndNew
'
''Call StatC2_nTH2SnTCO2(AlkInit) 'update nTH2S, nTCO2
'
'   TF = TBH
'    Ppsia = PBH
'    If UseSI = 1 Then
'    TF = TF * 9 / 5 + 32: Ppsia = Ppsia * 14.50377
'    End If
'    Tc = (TF - 32) * 5 / 9: TK = Tc + 273.15: PBar = Ppsia / 14.503774: Patm = Ppsia / 14.696
'
'    Call B5_CalculateSIvalues
'    DepOld = 10 ^ SICal
'    IndNew = 1.01 * IndNew   'Increase Ind0 by 10% to take numerical derivative.
'    AlkInit = IndNew
' 'Call StatC2_nTH2SnTCO2(AlkInit) 'update nTH2S, nTCO2
'    Call B5_CalculateSIvalues
'    Dep1 = 10 ^ SICal
'    Derivative = (Dep1 - DepOld) / (0.01 * IndOld)
'
'    'End of derivative routine. ***********************************************************************************************
'
'    IndNew = IndOld - (DepOld - DependentVariableTargetValue) / Derivative 'Calculate new value of Independent variable, IndNew
'        If Abs((DepOld - DependentVariableTargetValue) / Derivative) > Abs(IndOld) Then  'If the change in one iteration step exceeds the initial value, make changes according to the following rules:
'            If -1 * (DepOld - DependentVariableTargetValue) / Derivative > 0 Then IndNew = IndOld * 5 * Rnd() 'Take control of change by increasing only five times.
'            If -1 * (DepOld - DependentVariableTargetValue) / Derivative < 0 Then IndNew = IndOld / 5 * Rnd() 'Take control of change by decreasing only five times.
'        End If
''    Worksheets(myname).Cells(IndVarRowNo, IndVarColumnNo) = IndNew  'Return Ind variable in worksheet to original value
'
'    If (Abs(IndNew - IndOld) / (IndNew + IndOld)) < 0.001 Or Abs(DepOld - DependentVariableTargetValue) < 0.001 Then 'Check for convergence of Newton Raphson routine.
'        GoTo 2150   'GoalSeek-like routine has converged; exit loop.
'    End If
'Next iGoalSeek
'
'    'Calculate pH at STP condition
'2150 Alk = IndOld
'TF = 77: Ppsia = 14.7: Tc = (TF - 32) * 5 / 9: TK = Tc + 273.15: PBar = Ppsia / 14.503774: Patm = Ppsia / 14.696
'Call CalcIonicStrength
'Call C1_ThermodynamicEquilConsts
'Call C2_PitzerActCoefs_T_P_ISt(gNeut, aH2O,TK, Tc, Pbar, patm)
'Call PengRobinson3
'    pHHigh = 14: pHLow = 0  'Half-interval search root finder works very well for pH equations.
'    For k = 1 To 30
'        pH = (pHHigh + pHLow) / 2
'        aH = 10 ^ (-pH)
'        H = aH / (gCat(iH) * gNCat(iH))
'        OH = KH2O / (aH * gAn(iOH) * gNAn(iOH))
'        CO2aq = KgwCO2 * Ppsia * yCO2 * gGas(iCO2g) / (gNeut(iCO2aq) * gNNeut(iCO2aq))
'        HCO3 = (K1H2CO3 * aH2O) * CO2aq * gNeut(iCO2aq) * gNNeut(iCO2aq) / (aH * gAn(iHCO3) * gNAn(iHCO3))
'        CO3 = K2HCO3 * HCO3 * gAn(iHCO3) * gNAn(iHCO3) / (aH * gAn(iCO3) * gNAn(iCO3))
'        hydHS = aH * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq)) + 1
'        HS = TH2Saq / hydHS
'        H2Saq = aH * HS * gAn(iHS) * gNAn(iHS) / (K1H2S * gNeut(iH2Saq) * gNNeut(iH2Saq))
'        yH2S = H2Saq * gNeut(iH2Saq) * gNNeut(iH2Saq) / (KgwH2S * Ppsia * gGas(iH2Sg))
'        hydAc = aH * gAn(iAc) * gNAn(iAc) / (KHAc * gNeut(iHAcaq) * gNNeut(iHAcaq)) + 1 'Note gNNeut(iHACaq)=1
'        Ac = TAc / hydAc
'        HAcaq = TAc - Ac
'        hydH2BO3 = aH * gAn(iH2BO3) * gNAn(iH2BO3) / (KH3BO3 * gNeut(iH3BO3) * gNNeut(iH3BO3)) + 1
'        H2BO3 = TH3BO3 / hydH2BO3
'        hydNH3 = aH * gNeut(iNH3) * gNNeut(iNH3) / (KNH4 * gCat(iNH4) * gNCat(iNH4)) + 1
'        NH3 = TNH4 / hydNH3
'        hydH2SiO4 = aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq)) + _
'              aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4)) + 1
'        H2SiO4 = TH4SiO4 / hydH2SiO4
'        H3SiO4 = H2SiO4 * aH * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH3SiO3 * gAn(iH3SiO4) * gNAn(iH3SiO4))
'        H4SiO4 = H2SiO4 * aH ^ 2 * gAn(iH2SiO4) * gNAn(iH2SiO4) / (KH4SiO4 * KH3SiO3 * gNeut(iH4SiO4aq) * gNNeut(iH4SiO4aq))
'        faH = Alk - (HCO3 + 2 * CO3 + HS + Ac + NH3 + H2BO3 + H3SiO4 + 2 * H2SiO4 + OH - H)
'        If faH > 0 Then pHLow = pH
'        If faH < 0 Then pHHigh = pH
'    Next k
'    pHMeterReading = pH - DpHj
'    If yH2S > 1 Then
'    errmsg(3) = 3
'    yH2S = 1
'    End If
'Worksheets("Input Data Sheet").Range("g24").Value = Alk * (61019 * (rho25c - TDS / 1000000#))
'Worksheets("Input Data Sheet").Range("G28") = pH - DpHj
''
''Application.ScreenUpdating = True
''Application.Calculation = xlCalculationAutomatic
'
'End Sub
'
'Sub StatSaveInputFile()
'
'Dim myfilename, myname As String, mynamenew As String, NewSheetName As String, OldSheetName As String, IsFileExist As String
'Dim nametest As Boolean
'
'myname = ThisWorkbook.Name
'Set oldbook = Workbooks(myname)
'prompt = "You are about to save the Input data Sheet to another file.  Please click Yes to open an existing Excel file, click No to save the data into a new Excel file, or click Cancel to abort."
'title = "Save InputDataSheet to a File"
'response1 = MsgBox(prompt, vbYesNoCancel, title)
'If response1 = vbYes Then
'myfilename = Application.GetOpenFilename(, , , False)
'    If myfilename <> False Then
'    Workbooks.Open filename:=myfilename
'    mynamenew = Dir(myfilename)
'    'Set newbook = ActiveWorkbook
'    'mynewname = newbook.Name
'    Workbooks(myname).Worksheets("Input data sheet").Copy after:=Workbooks(mynamenew).Sheets(Sheets.count)
'100    NewSheetName = InputBox("Assign a new name for the data sheet")
'    OldSheetName = Sheets(Sheets.count).Name
'
'    If NewSheetName <> "" Then
'
'    nametest = fSheetExists(NewSheetName, Workbooks(mynamenew))
'    If nametest = True Then
'    response1 = MsgBox("Note that the same sheet name exist. Click OK to re-enter a new name. Click Cancel, the phrase new is added to the sheet name", vbOKCancel)
'    If response1 = 1 Then GoTo 100
'
'    If response1 = 2 Then
'    NewSheetName = NewSheetName & " (new)"
'     nametest = fSheetExists(NewSheetName, Workbooks(mynamenew))
'     If nametest = True Then NewSheetName = NewSheetName & " (new)"
'    End If
'    End If
'    Sheets(Sheets.count).Name = NewSheetName
'    Else
'    Sheets(Sheets.count).Name = OldSheetName
'    MsgBox ("The data sheet name is not changed. You may consider change the sheet name later for better identification.")
'    End If
'     'Application.DisplayAlerts = False
'    Workbooks(mynamenew).Close
'    'Application.DisplayAlerts = True
'    Else
'    MsgBox ("The procedure is canceled.  Data is not saved.")
'    End
'    End If
'ElseIf response1 = vbNo Then
' Workbooks.Add
'203  mt = Application.GetSaveAsFilename(InitialFileName:="Halite_Module_Input", filefilter:="Excel files (*.xlsx),*.xlsx")
' mt1 = IsFileOpen(mt, IsFileExist)
' If mt1 = True Then
' MsgBox ("This file is already opened. You cannot save data to an opened file.  Please use a different file name and try again.")
' GoTo 203
' Else
' If IsFileExist = True Then
'mt2 = MsgBox("A file with the same name already exist. Click OK to overwrite. Click Cancel to rename.", vbOKCancel)
'If mt2 = vbCancel Then
'GoTo 203
'Else
'End If
'End If
'    Workbooks(myname).Worksheets("Input Data Sheet").Copy after:=ActiveWorkbook.Sheets(Sheets.count)
'    NewSheetName = InputBox("Assign a new name for the data sheet.")
'    OldSheetName = Sheets(Sheets.count).Name
'    If NewSheetName <> "" Then
'    Sheets(Sheets.count).Name = NewSheetName
'    Else
'    Sheets(Sheets.count).Name = OldSheetName
'    MsgBox ("The data sheet name is not changed. You may consider change the sheet name later for better identification.")
'    End If
'    Application.DisplayAlerts = False
'    Sheets("sheet1").Delete
'    Application.DisplayAlerts = True
'    ActiveWorkbook.SaveAs (mt), FileFormat:=51
'    ActiveWorkbook.Close
'
'    End If
'End If
'End
'
'End Sub
'
'Sub StatImportInputFile()
'
'Dim myfilename, mynamenew As String, mysheetname As String, nametest As Boolean
'Dim strDestinationSheetName As String, mycell As Range
'
'myname = ThisWorkbook.Name 'This is the name of Halite module
'Set oldbook = Workbooks(myname)
'prompt = "You are about to copy the Input data sheet from another file. The existing Input data sheet will be replaced with the new data sheet." & Chr(13) & Chr(13) & "Note that the new data sheet must have the same format as the existing input data sheet in the Halite Module." & Chr(13) & Chr(13) & "Click OK to open a data file or click Cancel to abort."
'title = "Import Input data sheet from a data file"
'response1 = MsgBox(prompt, vbOKCancel, title)
'If response1 = vbOK Then
'myfilename = Application.GetOpenFilename(, , , False) 'this is file path for the data file
'    If myfilename <> False Then
'    Workbooks.Open filename:=myfilename
'    mynamenew = Dir(myfilename)   'This is the name of the data file
'    Else
'    MsgBox ("The data input is canceled.  No changes is made to the Input data sheet.")
'    End
'    End If

'   ' ==================
'Set mt = Application.InputBox _
'        (prompt:="Choose a sheet by clicking on Cell C6 of the selected data sheet.", Type:=8)
'mt = mt.Address(External:=True)   'mt = Application.WorksheetFunction.Find("]", mt) + 1
'
'mt = Split(mt, "]")(1)
'mt = Split(mt, "'")(0)
'mt = Split(mt, "!")(0)
'
'mysheetname = mt
''==============

'    If mysheetname <> "" Then
'    nametest = fSheetExists(mysheetname, Workbooks(mynamenew))
'     If nametest = False Then
'     MsgBox ("The sheet name does not exist. Please try again.")
'     Workbooks(mynamenew).Close
'     End
'     End If
'    Else
'    Workbooks(mynamenew).Close
'     End
'    End If
'On Error Resume Next
'Application.DisplayAlerts = False
' Workbooks(myname).Sheets("Input data sheet").Delete
' Workbooks(mynamenew).Sheets(mysheetname).Copy after:=Workbooks(myname).Sheets("Halite Module")
' Workbooks(myname).Sheets(mysheetname).Name = "Input data sheet"
' Workbooks(mynamenew).Close
' Application.DisplayAlerts = True
'Else
'100 MsgBox ("You choose to cancel the data input.  No changes is made to the Input data sheet.")
'End
'End If
'
'End Sub
'
'Function IsFileOpen(filename, IsFileExist)
'    Dim filenum As Integer, errnum As Integer
'    On Error Resume Next   ' Turn error checking off.
'    filenum = FreeFile()   ' Get a free file number.
'    ' Attempt to open the file and lock it.
'    Open filename For Input Lock Read As #filenum
'    Close filenum          ' Close the file.
'    errnum = Err           ' Save the error number that occurred.
'    On Error GoTo 0        ' Turn error checking back on.
'
'    ' Check to see which error occurred.
'    Select Case errnum
'
'        ' No error occurred.
'        ' File is NOT already open by another user.
'        Case 0
'         IsFileOpen = False
'         IsFileExist = True
'        ' Error number for "Permission Denied."
'        ' File is already opened by another user.
'        Case 70
'            IsFileOpen = True
'            IsFileExist = True
'        ' Another error occurred.
'        Case 53
'        IsFileOpen = False
'        IsFileExist = True
'        Case Else
'            Error errnum
'    End Select
'
'End Function
'Function fSheetExists(shtName As String, Optional wb As Workbook) As Boolean
'    Dim sht As Worksheet
'
'     If wb Is Nothing Then Set wb = ThisWorkbook
'     On Error Resume Next
'     Set sht = wb.Sheets(shtName)
'     On Error GoTo 0
'     fSheetExists = Not sht Is Nothing
' End Function
'
''===================================================='Joey (Zhaoyi) Dai built this subrutines to monitor Halite scaling potential based on S.G. Data, July 2016, STATOIL'
'Sub DZY1_SG_SI_correlations_Halite()
'
'Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
'
'Dim Na2Cl, Ca2Cl, Sr2Cl, Q_G, Q_O, Q_W, N_P, LB, ub, delta As Double
'
'
''Call InitializeOptionClearCellContent
'
'Worksheets("SG SR Monitor").Activate
'ActiveSheet.Range("AG16:AP1050").ClearContents
'TF = ActiveSheet.Range("G4")
'Ppsia = ActiveSheet.Range("G5")
'
'Q_G = 0
'Q_O = 0
'Q_W = 1000
'
'Ca2Cl = ActiveSheet.Range("G7")
'Sr2Cl = ActiveSheet.Range("G8")
'Na2Cl = 1 - 2 * (Ca2Cl + Sr2Cl)
'
'LB = ActiveSheet.Range("AB4")
'ub = ActiveSheet.Range("AB5")
'N_P = ActiveSheet.Range("AB6")
'delta = ub - LB
'
'ActiveSheet.Cells(4, 33) = TF
'ActiveSheet.Cells(5, 33) = Ppsia
'ActiveSheet.Cells(6, 33) = Ca2Cl
'ActiveSheet.Cells(7, 33) = Sr2Cl
'ActiveSheet.Cells(8, 33) = N_P

'Worksheets("Input_1000_Cases").Activate
'Worksheets("Input_1000_Cases").Cells(3, 2) = N_P
'For j = 1 To N_P
'    Worksheets("Input_1000_Cases").Cells(19, 2 + j) = (LB + (j - 1) * delta / (N_P - 1)) * 35453   'Cl
'    Worksheets("Input_1000_Cases").Cells(10, 2 + j) = (LB + (j - 1) * delta / (N_P - 1)) * Na2Cl * 22990   'Na
'    Worksheets("Input_1000_Cases").Cells(13, 2 + j) = (LB + (j - 1) * delta / (N_P - 1)) * Ca2Cl * 40078   'Ca
'    Worksheets("Input_1000_Cases").Cells(14, 2 + j) = (LB + (j - 1) * delta / (N_P - 1)) * Sr2Cl * 87620   'Sr
'    Worksheets("Input_1000_Cases").Cells(39, 2 + j) = TF
'    Worksheets("Input_1000_Cases").Cells(41, 2 + j) = Ppsia
'    Worksheets("Input_1000_Cases").Cells(35, 2 + j) = Q_G
'    Worksheets("Input_1000_Cases").Cells(36, 2 + j) = Q_O
'    Worksheets("Input_1000_Cases").Cells(37, 2 + j) = Q_W
'Next j
'
''Call A10_SSP_1000_Cases
''==========================
''Worksheets("Calcite").Range("B1:J1").Value = Null
''Worksheets("Barite").Range("B1:J1").Value = Null
''Worksheets("Halite").Range("B1:J1").Value = Null
''Worksheets("Other SO4s").Range("B1:J1").Value = Null
''Worksheets("Sulfides,Fluorite,Carbonates").Range("B1:J1").Value = Null
''Worksheets("Silicates").Range("B1:J1").Value = Null
''Worksheets("Mg(OH)2,Ca(OH)2").Range("B1:J1").Value = Null
'
'Call InitializeOptionClearCellContent
'Run1000Cases = 1: CaseNob1000 = N_P: nob_Input = 1: RunSSP = 0
'For LoopTP = 1 To CaseNob1000
'    Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
'    Call Worksheets("Readme").B2_ReadinAllData      'Reads in all Input concentrations, put in terms of molality and calculate total moles of CO2, H2S, CH4.
'    Call Worksheets("Readme").B3_CalcConcs           'Cacluate all concentration data from wells on input screen.
''    Call Worksheets("Readme").B4_CalcFinalBrine      'Mixed bine output.
'
'
'    'QC check======================
''    pHMeterStpMix(kk) = ActiveSheet.Cells(111, LoopTP + 2)
''    Call QualityControlCalculations(kk, LoopTP)
''    Alk_from_QC = Alk_from_QC * (61019 * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#)) ' change to molarity
''    SumOfCations_M = SumOfCations * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#)
''    SumOfAnions_M = SumOfAnions * (rho25CMix(kk) - CalculatedTDSMix(kk) / 1000000#)
'    'Write results
'
'    Call LoopTPSI
'    rhoTP = CalcRhoTP(TK, Tc, Pbar, patm)
'    Call LoopTPppt
'    Call LoopTPWrite1000Cases
'
'    '==========================
'    'Output results
'    j = LoopTP
'    Worksheets("SG SR Monitor").Cells(15 + j, 33) = Worksheets("Input_1000_Cases").Cells(116, 2 + j)
'    Worksheets("SG SR Monitor").Cells(15 + j, 34) = Worksheets("Input_1000_Cases").Cells(113, 2 + j)
'    Worksheets("SG SR Monitor").Cells(15 + j, 35) = LB + (j - 1) * delta / (N_P - 1)
'    Worksheets("SG SR Monitor").Cells(15 + j, 36) = Worksheets("Input_1000_Cases").Cells(86, 2 + j)
'    Worksheets("SG SR Monitor").Cells(15 + j, 37) = 10 ^ (Worksheets("Input_1000_Cases").Cells(86, 2 + j))
'    Worksheets("SG SR Monitor").Cells(15 + j, 38) = 1 / (Worksheets("Input_1000_Cases").Cells(116, 2 + j))
'    Worksheets("SG SR Monitor").Cells(15 + j, 39) = 1 / (Worksheets("Input_1000_Cases").Cells(113, 2 + j))
'Next LoopTP
''==========================
'
''==========================
''Output results
'Worksheets("SG SR Monitor").Activate
'
''For j = 1 To N_P
''    ActiveSheet.Cells(2 + j, 33) = Worksheets("Input_1000_Cases").Cells(116, 2 + j)
''    ActiveSheet.Cells(2 + j, 34) = Worksheets("Input_1000_Cases").Cells(113, 2 + j)
''    ActiveSheet.Cells(2 + j, 35) = lb + (j - 1) * delta / (N_P - 1)
''    ActiveSheet.Cells(2 + j, 36) = Worksheets("Input_1000_Cases").Cells(86, 2 + j)
''    ActiveSheet.Cells(2 + j, 37) = 10 ^ (Worksheets("Input_1000_Cases").Cells(86, 2 + j))
''    ActiveSheet.Cells(2 + j, 38) = 1 / (Worksheets("Input_1000_Cases").Cells(116, 2 + j))
''    ActiveSheet.Cells(2 + j, 39) = 1 / (Worksheets("Input_1000_Cases").Cells(113, 2 + j))
''Next j
'
'''=============plot===================
'
'Dim rgX, rgY As Range
'Dim OD As Integer
'Dim ChrtName As String, Xtitle As String, Ytitle As String
'Dim Xint, Yint As Double
'
'Set rgX = ActiveSheet.Range("$AL$16:$AL$1016")
'Set rgY = ActiveSheet.Range("$AJ$16:$AJ$1016")
'ChrtName = "SG_SR": Xtitle = "1/S.G._STP": Ytitle = "SI_TP"
'OD = 4 'order of polynomial
'Call DZY2_SG_SI_plot(rgX, rgY, ChrtName, OD, Xtitle, Ytitle, 0.1, 0.5)
'ActiveSheet.Shapes(ChrtName).Left = ActiveSheet.Cells(1, 42).Left
'ActiveSheet.Shapes(ChrtName).Top = ActiveSheet.Cells(1, 42).Top
'ActiveSheet.Shapes(ChrtName).Height = 142
'ActiveSheet.Shapes(ChrtName).Width = 265
'
'Set rgX = ActiveSheet.Range("$AI$16:$AI$1016")
'Set rgY = ActiveSheet.Range("$AG$16:$AG$1016")
'ChrtName = "SG_Na": Xtitle = "Cl (M)": Ytitle = "S.G._STP"
'OD = 2 'order of polynomial
'Call DZY2_SG_SI_plot(rgX, rgY, ChrtName, OD, Xtitle, Ytitle, 0.5, 0.1)
'ActiveSheet.Shapes(ChrtName).Left = ActiveSheet.Cells(8, 42).Left
'ActiveSheet.Shapes(ChrtName).Top = ActiveSheet.Cells(8, 42).Top
'ActiveSheet.Shapes(ChrtName).Height = 152
'ActiveSheet.Shapes(ChrtName).Width = 265
'
'ActiveSheet.Range("F16:G16").Select
'
''=====================================
'Application.Calculation = xlCalculationAutomatic
'Application.ScreenUpdating = True
'
'End Sub
'
'Sub DZY2_SG_SI_plot(rgX, rgY, ChrtName, OD, Xtitle, Ytitle, Xint, Yint)
'Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
'
'ActiveSheet.ChartObjects(ChrtName).Activate
'ActiveChart.Parent.Delete
'
'ActiveSheet.Shapes.AddChart.Select
'ActiveChart.ChartType = xlXYScatter
'ActiveChart.SeriesCollection.NewSeries
''ActiveChart.SeriesCollection(1).Name = "SI_TP ~ Density_STP^-1"
'ActiveChart.SeriesCollection(1).XValues = rgX
'ActiveChart.SeriesCollection(1).Values = rgY
'ActiveChart.Parent.Name = ChrtName
''x axis
'ActiveChart.Axes(xlCategory).Select
'Dim low, up As Double
'low = Application.WorksheetFunction.Min(rgX)
'up = Application.WorksheetFunction.max(rgX)
'ActiveChart.Axes(xlCategory).MinimumScale = Application.WorksheetFunction.Floor(low, 0.1)
'ActiveChart.Axes(xlCategory).MaximumScale = Application.WorksheetFunction.Ceiling(up, 0.1)
'ActiveChart.Axes(xlCategory).MajorUnit = Xint
'Selection.MajorTickMark = xlInside
'ActiveChart.Axes(xlCategory).CrossesAt = Application.WorksheetFunction.Floor(low, 0.1)
'With Selection.Format.Line
'    .Visible = msoTrue
'    .ForeColor.ObjectThemeColor = msoThemeColorText1
'    .ForeColor.TintAndShade = 0
'    .ForeColor.Brightness = 0
'    .Transparency = 0
'    .weight = 1
'End With
'
''y axis
'ActiveChart.Axes(xlValue).Select
'low = Application.WorksheetFunction.Min(rgY)
'up = Application.WorksheetFunction.max(rgY)
'ActiveChart.Axes(xlValue).MinimumScale = Application.WorksheetFunction.Floor(low, 0.5)
'ActiveChart.Axes(xlValue).MaximumScale = Application.WorksheetFunction.Ceiling(up, 0.5)
'ActiveChart.Axes(xlValue).MajorUnit = Yint
'Selection.MajorTickMark = xlInside
'ActiveChart.Axes(xlValue).CrossesAt = Application.WorksheetFunction.Floor(low, 0.5)
'With Selection.Format.Line
'    .Visible = msoTrue
'    .ForeColor.ObjectThemeColor = msoThemeColorText1
'    .ForeColor.TintAndShade = 0
'    .ForeColor.Brightness = 0
'    .Transparency = 0
'    .weight = 1
'End With
'
'ActiveChart.Axes(xlValue).MajorGridlines.Select
'Selection.Delete
'
'ActiveChart.SeriesCollection(1).Trendlines.Add
'ActiveChart.SeriesCollection(1).Trendlines(1).Select
'With Selection
'    .Type = xlPolynomial
'    .Order = OD
'    .DisplayEquation = True
'    .DisplayRSquared = True
'    .DataLabel.NumberFormat = "0.000000E+00"
'    .DataLabel.Left = 80
'    .DataLabel.Top = 100
'End With
'
'ActiveChart.Legend.Select
'Selection.Delete
'ActiveChart.SetElement (msoElementPrimaryCategoryAxisTitleAdjacentToAxis)
'Selection.Format.TextFrame2.TextRange.Characters.Text = Xtitle
'With Selection.Format.TextFrame2.TextRange.Characters.Font
'    .Bold = msoTrue
'    .NameComplexScript = "+mn-cs"
'    .Fill.ForeColor.RGB = RGB(0, 0, 0)
'    .Size = 10
'    .Italic = msoFalse
'    .Kerning = 12
'    .Name = "+mn-lt"
'End With
'
'ActiveChart.SetElement (msoElementPrimaryValueAxisTitleRotated)
'Selection.Format.TextFrame2.TextRange.Characters.Text = Ytitle
'With Selection.Format.TextFrame2.TextRange.Characters.Font
'    .Bold = msoTrue
'    .NameComplexScript = "+mn-cs"
'    .Fill.ForeColor.RGB = RGB(0, 0, 0)
'    .Size = 10
'    .Italic = msoFalse
'    .Kerning = 12
'    .Name = "+mn-lt"
'End With
'
'Application.ScreenUpdating = True
'Application.Calculation = xlCalculationAutomatic
'
'End Sub
'
'
'Sub DZY3_1_Use_SG_TP()
'Worksheets("SG SR Monitor").Activate
'
'ActiveSheet.Range("G24") = "S.G._field (TP)"
'ActiveSheet.Range("O24") = "S.G._PW_Goal_field"
''assign parameters for SI~S.G.(TP)
'ActiveSheet.Range("AC46").Formula = "=AC23"
'ActiveSheet.Range("AC47").Formula = "=AC24"
'ActiveSheet.Range("AC48").Formula = "=AC25"
'ActiveSheet.Range("AC49").Formula = "=AC26"
'ActiveSheet.Range("AC50").Formula = "=AC27"
''assign parameters for Cl~S.G.(TP)
'ActiveSheet.Range("AC53").Formula = "=AC35"
'ActiveSheet.Range("AC54").Formula = "=AC36"
'ActiveSheet.Range("AC55").Formula = "=AC37"
'
'End Sub
'
'Sub DZY3_2_Use_SG_STP()
'Worksheets("SG SR Monitor").Activate
'
'ActiveSheet.Range("G24") = "S.G._lab (STP)"
'ActiveSheet.Range("O24") = "S.G._PW_Goal_lab"
''assign parameters for SI~S.G.(STP)
'ActiveSheet.Range("AC46").Formula = "=AC16"
'ActiveSheet.Range("AC47").Formula = "=AC17"
'ActiveSheet.Range("AC48").Formula = "=AC18"
'ActiveSheet.Range("AC49").Formula = "=AC19"
'ActiveSheet.Range("AC50").Formula = "=AC20"
''assign parameters for Cl~S.G.(STP)
'ActiveSheet.Range("AC53").Formula = "=AC30"
'ActiveSheet.Range("AC54").Formula = "=AC31"
'ActiveSheet.Range("AC55").Formula = "=AC32"
'
'End Sub
'Sub DZY4_Solver_FW()
'Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
'
'Worksheets("SG SR Monitor").Activate
'
'Dim N_P, N_G, Startrow, LastRow
'Dim Copyrange As String
'
'If ActiveSheet.Range("A25").Value = "Continuous" Then
'    N_P = Application.WorksheetFunction.count(ActiveSheet.Range("F25:F100000"))
'    N_G = Application.WorksheetFunction.Ceiling(N_P / 200, 1) 'number of groups, size 200 is the limit for solver in excel
'
'    For i = 1 To N_G
'        SolverReset
'        SolverOptions precision:=0.00000001
'        Startrow = 25 - 200 + i * 200
'        LastRow = Application.WorksheetFunction.Min(24 + i * 200, 24 + N_P)
'        Let Copyrange = "M" & Startrow & ":" & "M" & LastRow
'        SolverOk SetCell:=ActiveSheet.Range("$S$25").Address, MaxMinVal:=2, ValueOf:="0", ByChange:=ActiveSheet.Range(Copyrange)
'        'SolverOk SetCell:=ActiveSheet.Range("$Q$30").Address, MaxMinVal:=2, ValueOf:="0", ByChange:=ActiveSheet.Range("$K$(-170+i*200):$K$(29+i*200)")
'        SolverSolve UserFinish:=True
'    '    SolverFinish KeepFinal:=1
'    Next i
'    Let Copyrange = "M" & 25 & ":" & "M" & LastRow
'    ActiveSheet.Range(Copyrange).Select
'Else
'    SolverReset
'    SolverOptions precision:=0.00000001
'    SolverOk SetCell:=ActiveSheet.Range("$S$22").Address, MaxMinVal:=2, ValueOf:="0", ByChange:=ActiveSheet.Range("M22")
'    'SolverOk SetCell:=ActiveSheet.Range("$Q$30").Address, MaxMinVal:=2, ValueOf:="0", ByChange:=ActiveSheet.Range("$K$(-170+i*200):$K$(29+i*200)")
'    SolverSolve UserFinish:=True
'    ActiveSheet.Range("M22").Select
'End If
'
'Application.Calculation = xlCalculationAutomatic
'Application.ScreenUpdating = True
'
'End Sub
'
'Sub DZY5_1_FW_type_cont()
'
'Worksheets("SG SR Monitor").Activate
'ActiveSheet.Range("A21:S22").ClearContents: ActiveSheet.Range("B21:S22").ClearFormats: ActiveSheet.Range("B21:S22").Interior.ColorIndex = 2
'ActiveSheet.Range("B17").ClearContents
'ActiveSheet.Rows(21).RowHeight = 25.5
'ActiveSheet.Range("A25") = "Continuous"
'
'ActiveSheet.Range("A25").Select
'
'End Sub
'
'Sub DZY5_2_FW_type_disc()
'Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
'
'Dim avg_Cl, avg_SG, A, B, C
'
'ActiveSheet.Range("A25").ClearContents: ActiveSheet.Range("I16").ClearContents
'
'ActiveSheet.Range("A22") = "Discontinuous"
'ActiveSheet.Range("B24:S25").Copy
'ActiveSheet.Range("B21:S22").Select
'Selection.PasteSpecial Paste:=xlPasteFormulas
'Selection.PasteSpecial Paste:=xlPasteFormats
'Application.CutCopyMode = False
'ActiveSheet.Range("C22") = "Average"
'ActiveSheet.Range("D21") = "Accumulative FW": ActiveSheet.Range("E21") = "Accumulative PW": ActiveSheet.Range("S22").Formula = "=P22^2"
'
'
'avg_Cl = Application.WorksheetFunction.Average(ActiveSheet.Range("J25:J100000"))
'A = ActiveSheet.Range("AC53"): B = ActiveSheet.Range("AC54"): C = ActiveSheet.Range("AC55") - avg_Cl
'avg_SG = (-B + (B ^ 2 - 4 * A * C) ^ 0.5) / 2 / A
'ActiveSheet.Range("G22") = avg_SG
'ActiveSheet.Range("B17") = "   *Input the Accumulative FW or PW in Cells D22:E22, or input FW/PW in Cell F22."
'ActiveSheet.Range("A22").Select
'
'Application.Calculation = xlCalculationAutomatic
'Application.ScreenUpdating = True
'End Sub
'
End Sub

Sub A8_Dai_RunMassTransport()     'Dai 2020 deposition
    Application.ScreenUpdating = False
    Run_MassTransfer = 1: RunGoalSeek = 0: RunSSP = 0: useEOS = 0: FlowType = 0
    'Note flash is forced to tur off in ReadInDataD
    'MsgBox ("The mass transfer calculation is based on diffusion limited first order kinetic model.  The amount of precipitate is removed at each step." & Chr(13) & Chr(13) & "Flash calculation is not used in this calculation.")
    'Define Mass Transfer Input Parameters (assign to cell addresses for user inputs on the Mass Transfer tabsheet)
    PipeID = Worksheets("Deposition Prediction").Range("C7")
    PipeL = Worksheets("Deposition Prediction").Range("D7")
    PipeRough = Worksheets("Deposition Prediction").Range("E7") ' unit of mm
    'N_deposition = Worksheets("Deposition Prediction").Range("M7")
    'CorrRate = Worksheets("Use Mass Transfer").Range("N6")
    'FlowType = Worksheets("Use Mass Transfer").Range("h6")
    i_Inhibitor_MT = Worksheets("Deposition Prediction").Range("C11") 'inhibitor ID
    If RunMassTransportGoalSeek = 0 Then
        c_Inhibitor_MT = Worksheets("Deposition Prediction").Range("E11")    'ppm
        'Worksheets("Deposition Prediction").Range("L11") = Empty
    End If
        
    
    Gas_V_MT = Worksheets("Deposition Prediction").Range("J7")
    Oil_V_MT = Worksheets("Deposition Prediction").Range("K7")
    Water_V_MT = Worksheets("Deposition Prediction").Range("L7")
    T_start_MT = Worksheets("Deposition Prediction").Range("F7")
    P_start_MT = Worksheets("Deposition Prediction").Range("G7")
    T_end_MT = Worksheets("Deposition Prediction").Range("H7")
    P_end_MT = Worksheets("Deposition Prediction").Range("I7")
    
    If Worksheets("Deposition Prediction").Range("E16") = "True" Then 'if use laminar sublayer stability check
        Use_lsl_stability = 1
    Else: Use_lsl_stability = 0
    End If
        
    Iter_MT_WI = 1 'initialization

    PipeMetalDens = 7.88   ' unit gpercm3
    If Worksheets("Deposition Prediction").Range("C6") = "cm" Then
        UseSI = 1
    ElseIf Worksheets("Deposition Prediction").Range("C6") = "inch" Then
        UseSI = 0
    End If
    
    'Convert Mass Transfer Input Parameter Units to cm
    If UseSI = 0 Then
        PipeID = PipeID * 2.54  'unit cm
        PipeL = PipeL * 30.48 / (10 - 1) 'unit cm per section
    Else
        PipeL = PipeL * 100 / (10 - 1)
    End If
    
    pptMax_MassTransfer_V = 0
    
    'Call A1_Start_ScaleSoftPitzer
    RunSSP = 1: RunStat = 0: RunQualityControlChecks = 0: RunH2SGUI = 0: RunNORM = 0
    Call InitializeOptionClearCellContent
    ReDim CaseCount(5), CaseCount_II(110)
    Call CountNOB
    Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
    Call Worksheets("Readme").B2_ReadinAllData
    
    'overwrite the G/O/W rate, copy call A1
    'if allows overwrite
    'store the value for putting values back later
    mysheet_MT = mySheet
    If nob > 1 Then mysheet_MT = "Input"
    j_MT = j
    
    Gas_V_OLD_MT = Worksheets(mysheet_MT).Cells(35, j_MT + 2).Value
    Oil_V_OLD_MT = Worksheets(mysheet_MT).Cells(36, j_MT + 2).Value
    Water_V_OLD_MT = Worksheets(mysheet_MT).Cells(37, j_MT + 2).Value
    T_start_OLD_MT = Worksheets(mysheet_MT).Cells(39, j_MT + 2).Value
    T_end_OLD_MT = Worksheets(mysheet_MT).Cells(40, j_MT + 2).Value
    P_start_OLD_MT = Worksheets(mysheet_MT).Cells(41, j_MT + 2).Value
    P_end_OLD_MT = Worksheets(mysheet_MT).Cells(42, j_MT + 2).Value

    'overwrite with new value in deposition sheet
    Worksheets(mySheet).Cells(35, j + 2).Value = Gas_V_MT
    Worksheets(mySheet).Cells(36, j + 2).Value = Oil_V_MT
    Worksheets(mySheet).Cells(37, j + 2).Value = Water_V_MT
    Worksheets(mySheet).Cells(39, j + 2).Value = T_start_MT
    Worksheets(mySheet).Cells(40, j + 2).Value = T_end_MT
    Worksheets(mySheet).Cells(41, j + 2).Value = P_start_MT
    Worksheets(mySheet).Cells(42, j + 2).Value = P_end_MT
    pptMax_MassTransfer_V = 0
    
    Call Worksheets("Readme").B2_ReadinAllData 're-call B2 to use the new T/P/flow rates
    Call Worksheets("Readme").B3_CalcConcs
    Call Worksheets("Readme").B4_CalcFinalBrine
    
    deltaT = (TBH - TWH) / 9:   deltaP = (PBH - PWH) / 9
    
    For LoopTP = 1 To 10
        TF = TBH - deltaT * (LoopTP - 1): TK = (TF - 32) * 5 / 9 + 273.15
        Ppsia = PBH - deltaP * (LoopTP - 1): Patm = Ppsia / 14.696

        PBar = Ppsia / 14.503774
        TC = (TF - 32) * 5 / 9
        If LoopTP = 10 Then
            pH = pH
        End If
        
        Call LoopTPSI

        If H2Oevap <> 1 Then
            If Ist <> 0 Then
                Call LoopTPVisHeatCap
                If Run_MassTransfer = 1 Then Call MassTransferCoefficients
            End If
            Call LoopTPppt
        End If
        
        Call LoopTPWrite
        If H2Oevap = 1 Then Exit For
    Next LoopTP
    
    If UseSI = 0 Then Worksheets("Deposition Prediction").Range("L37") = pptMax_MassTransfer_V / 2.54 'inch/yr
    If UseSI = 1 Then Worksheets("Deposition Prediction").Range("L37") = pptMax_MassTransfer_V  'cm/yr
    
    'putting values back
    Worksheets(mysheet_MT).Cells(35, j_MT + 2).Value = Gas_V_OLD_MT
    Worksheets(mysheet_MT).Cells(36, j_MT + 2).Value = Oil_V_OLD_MT
    Worksheets(mysheet_MT).Cells(37, j_MT + 2).Value = Water_V_OLD_MT
    Worksheets(mysheet_MT).Cells(39, j_MT + 2).Value = T_start_OLD_MT
    Worksheets(mysheet_MT).Cells(40, j_MT + 2).Value = T_end_OLD_MT
    Worksheets(mysheet_MT).Cells(41, j_MT + 2).Value = P_start_OLD_MT
    Worksheets(mysheet_MT).Cells(42, j_MT + 2).Value = P_end_OLD_MT
    
    Run_MassTransfer = 0

    Worksheets("Deposition Prediction").Activate
    Application.ScreenUpdating = True
End Sub

Sub A8_1_Dai_RunMassTransportGoalSeek()     'Dai 2020 deposition, goal seek inhibitor conc.
    Application.ScreenUpdating = False
    Dim c_min_MT, c_max_MT, delta_dep_rate, dep_rate_low, dep_rate_high, LoopNo As Double
    RunMassTransportGoalSeek = 1
    If Worksheets("Deposition Prediction").Range("D6") = "cm" Then
        UseSI = 1
    ElseIf Worksheets("Deposition Prediction").Range("D6") = "inch" Then
        UseSI = 0
    End If
    
    'Convert Mass Transfer Input Parameter Units to cm
    If UseSI = 0 Then
        Target_Deposition_rate_MT = Worksheets("Deposition Prediction").Range("K11") * 2.54  'convert to unit cm/yr
    Else
        Target_Deposition_rate_MT = Worksheets("Deposition Prediction").Range("K11")  'unit cm/yr
    End If

    c_min_MT = 0: c_max_MT = 50 'concentration initialization
    
    c_Inhibitor_MT = c_min_MT 'ppm
    Call A8_Dai_RunMassTransport
    dep_rate_low = pptMax_MassTransfer_V
    If dep_rate_low < Target_Deposition_rate_MT Then
        Worksheets("Deposition Prediction").Range("L11") = c_Inhibitor_MT
        Exit Sub
    End If
    
    c_Inhibitor_MT = c_max_MT 'ppm
    Call A8_Dai_RunMassTransport
    dep_rate_high = pptMax_MassTransfer_V
    If dep_rate_high > Target_Deposition_rate_MT Then
        Worksheets("Deposition Prediction").Range("L11") = "> 50"
        GoTo 99
    End If
    
    delta_dep_rate = dep_rate_high - Target_Deposition_rate_MT
    LoopNo = 0
    Do While Abs(delta_dep_rate) > 0.01 And LoopNo < 100 And c_max_MT - c_min_MT > 0.0001
        c_Inhibitor_MT = 0.5 * (c_min_MT + c_max_MT)
        Call A8_Dai_RunMassTransport
        delta_dep_rate = pptMax_MassTransfer_V - Target_Deposition_rate_MT
        If delta_dep_rate < 0 Then
            c_max_MT = c_Inhibitor_MT
        Else
            c_min_MT = c_Inhibitor_MT
        End If
        LoopNo = LoopNo + 1
    Loop
    'c_Inhibitor_MT = Application.WorksheetFunction.RoundUp(c_Inhibitor_MT, 4) 'roundup inhibitor concentration
    Worksheets("Deposition Prediction").Range("L11") = c_Inhibitor_MT
    Call A8_Dai_RunMassTransport
99  RunMassTransportGoalSeek = 0
    Application.ScreenUpdating = True
End Sub


Sub A8_Dai_RunMassTransport_WhatIf()     'Dai 2020 deposition
    Application.ScreenUpdating = False
    Run_MassTransfer_WhatIf = 1
    Run_MassTransfer = 1: RunGoalSeek = 0: RunSSP = 0: useEOS = 0: FlowType = 0
    'Note flash is forced to tur off in ReadInDataD
    MsgBox ("This WhatIf deposition module does not allow W/O/G flow rate change for mutiple fluids mixing.")
    'Define Mass Transfer Input Parameters (assign to cell addresses for user inputs on the Mass Transfer tabsheet)
    
'    '*********************Clear the outputs ranges first******************
'    Worksheets("Deposition Prediction_WhatIf").Range("21:M21") = Empty
'    Worksheets("Deposition Prediction_WhatIf").Range("C25:M34") = Empty
'    Worksheets("Deposition Prediction_WhatIf").Range("L37") = Empty
'    Worksheets("Deposition Prediction_WhatIf").Range("C41:M50") = Empty
    
    

    
  
    PipeID_LB = Worksheets("Deposition Prediction_WhatIf").Range("C7")
    PipeL_LB = Worksheets("Deposition Prediction_WhatIf").Range("D7")
    PipeRough_LB = Worksheets("Deposition Prediction_WhatIf").Range("E7") ' unit of mm
    c_Inhibitor_MT_LB = Worksheets("Deposition Prediction_WhatIf").Range("E11")    'ppm
    Gas_V_LB = Worksheets("Deposition Prediction_WhatIf").Range("J7")
    Oil_V_LB = Worksheets("Deposition Prediction_WhatIf").Range("K7")
    Water_V_LB = Worksheets("Deposition Prediction_WhatIf").Range("L7")
    T_start_LB = Worksheets("Deposition Prediction_WhatIf").Range("F7")
    P_start_LB = Worksheets("Deposition Prediction_WhatIf").Range("G7")
    T_end_LB = Worksheets("Deposition Prediction_WhatIf").Range("H7")
    P_end_LB = Worksheets("Deposition Prediction_WhatIf").Range("I7")
    
    If IsEmpty(PipeID_LB) Or IsEmpty(PipeL_LB) Or IsEmpty(PipeRough_LB) Or IsEmpty(c_Inhibitor_MT_LB) Or IsEmpty(Gas_V_LB) Or IsEmpty(Oil_V_LB) Or IsEmpty(Water_V_LB) Or IsEmpty(T_start_LB) Or IsEmpty(P_start_LB) Or IsEmpty(T_end_LB) Or IsEmpty(P_end_LB) Then
        MsgBox ("Lower limits for ALL variables (C7:L7 and E11) are required. Please fill in the missing variables before Run the module.")
        Exit Sub
    End If
       
        
    PipeID_UB = Worksheets("Deposition Prediction_WhatIf").Range("C8")
    PipeL_UB = Worksheets("Deposition Prediction_WhatIf").Range("D8")
    PipeRough_UB = Worksheets("Deposition Prediction_WhatIf").Range("E8") ' unit of mm
    c_Inhibitor_MT_UB = Worksheets("Deposition Prediction_WhatIf").Range("E12")    'ppm
    Gas_V_UB = Worksheets("Deposition Prediction_WhatIf").Range("J8")
    Oil_V_UB = Worksheets("Deposition Prediction_WhatIf").Range("K8")
    Water_V_UB = Worksheets("Deposition Prediction_WhatIf").Range("L8")
    T_start_UB = Worksheets("Deposition Prediction_WhatIf").Range("F8")
    P_start_UB = Worksheets("Deposition Prediction_WhatIf").Range("G8")
    T_end_UB = Worksheets("Deposition Prediction_WhatIf").Range("H8")
    P_end_UB = Worksheets("Deposition Prediction_WhatIf").Range("I8")
    
    'N_deposition = Worksheets("Deposition Prediction_WhatIf").Range("M7")
    'CorrRate = Worksheets("Use Mass Transfer").Range("N6")
    'FlowType = Worksheets("Use Mass Transfer").Range("h6")
    i_Inhibitor_MT = Worksheets("Deposition Prediction_WhatIf").Range("C11") 'inhibitor ID
    

    If IsEmpty(PipeID_UB) = True Then PipeID_UB = PipeID_LB
    If IsEmpty(PipeL_UB) = True Then PipeL_UB = PipeL_LB
    If IsEmpty(PipeRough_UB) = True Then PipeRough_UB = PipeRough_LB
    If IsEmpty(c_Inhibitor_MT_UB) = True Then c_Inhibitor_MT_UB = c_Inhibitor_MT_LB
    If IsEmpty(Gas_V_UB) = True Then Gas_V_UB = Gas_V_LB
    If IsEmpty(Oil_V_UB) = True Then Oil_V_UB = Oil_V_LB
    If IsEmpty(Water_V_UB) = True Then Water_V_UB = Water_V_LB
    If IsEmpty(T_start_UB) = True Then T_start_UB = T_start_LB
    If IsEmpty(T_end_UB) = True Then T_end_UB = T_end_LB
    If IsEmpty(P_start_UB) = True Then P_start_UB = P_start_LB
    If IsEmpty(P_end_UB) = True Then P_end_UB = P_end_LB
    
    If Worksheets("Deposition Prediction_WhatIf").Range("E16") = "True" Then 'if use laminar sublayer stability check
        Use_lsl_stability = 1
    Else: Use_lsl_stability = 0
    End If
        
    PipeMetalDens = 7.88   ' unit gpercm3
    If Worksheets("Deposition Prediction_WhatIf").Range("C6") = "cm" Then
        UseSI = 1
    ElseIf Worksheets("Deposition Prediction_WhatIf").Range("C6") = "inch" Then
        UseSI = 0
    End If


    Iter_MT_WI = 1
    For Iter_MT_WI = 1 To 10
        PipeID = PipeID_LB + (Iter_MT_WI - 1) * (PipeID_UB - PipeID_LB) / (10 - 1)
        PipeL = PipeL_LB + (Iter_MT_WI - 1) * (PipeL_UB - PipeL_LB) / (10 - 1)
        PipeRough = PipeRough_LB + (Iter_MT_WI - 1) * (PipeRough_UB - PipeRough_LB) / (10 - 1)
        c_Inhibitor_MT = c_Inhibitor_MT_LB + (Iter_MT_WI - 1) * (c_Inhibitor_MT_UB - c_Inhibitor_MT_LB) / (10 - 1)
        
        'output conditions for each loop
        Worksheets("Deposition Prediction_WhatIf").Cells(21 + (Iter_MT_WI - 1) * 32, 3) = PipeID
        Worksheets("Deposition Prediction_WhatIf").Cells(21 + (Iter_MT_WI - 1) * 32, 4) = PipeL
        Worksheets("Deposition Prediction_WhatIf").Cells(21 + (Iter_MT_WI - 1) * 32, 5) = PipeRough

        
        'Convert Mass Transfer Input Parameter Units to cm
        If UseSI = 0 Then
            PipeID = PipeID * 2.54  'unit cm
            PipeL = PipeL * 30.48 / (10 - 1) 'unit cm per section
        Else
            PipeL = PipeL * 100 / (10 - 1)
        End If

        
        'overwrite the G/O/W rate, copy call A1
        RunSSP = 1: RunStat = 0: RunQualityControlChecks = 0: RunH2SGUI = 0: RunNORM = 0
        Call InitializeOptionClearCellContent
        ReDim CaseCount(5), CaseCount_II(110)
        Call CountNOB
        Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
        Call Worksheets("Readme").B2_ReadinAllData
        
        mysheet_MT = mySheet
        If nob > 1 Then mysheet_MT = "Input"
        j_MT = j
        
        If Iter_MT_WI = 1 Then
            'store the value for putting values back later
            Gas_V_OLD_MT = Worksheets(mysheet_MT).Cells(35, j_MT + 2).Value
            Oil_V_OLD_MT = Worksheets(mysheet_MT).Cells(36, j_MT + 2).Value
            Water_V_OLD_MT = Worksheets(mysheet_MT).Cells(37, j_MT + 2).Value
            T_start_OLD_MT = Worksheets(mysheet_MT).Cells(39, j_MT + 2).Value
            T_end_OLD_MT = Worksheets(mysheet_MT).Cells(40, j_MT + 2).Value
            P_start_OLD_MT = Worksheets(mysheet_MT).Cells(41, j_MT + 2).Value
            P_end_OLD_MT = Worksheets(mysheet_MT).Cells(42, j_MT + 2).Value
        End If
        
        'overwrite with new value in deposition whatif sheet
        Worksheets(mySheet).Cells(35, j + 2).Value = Gas_V_LB + (Iter_MT_WI - 1) * (Gas_V_UB - Gas_V_LB) / (10 - 1)
        Worksheets(mySheet).Cells(36, j + 2).Value = Oil_V_LB + (Iter_MT_WI - 1) * (Oil_V_UB - Oil_V_LB) / (10 - 1)
        Worksheets(mySheet).Cells(37, j + 2).Value = Water_V_LB + (Iter_MT_WI - 1) * (Water_V_UB - Water_V_LB) / (10 - 1)
        Worksheets(mySheet).Cells(39, j + 2).Value = T_start_LB + (Iter_MT_WI - 1) * (T_start_UB - T_start_LB) / (10 - 1)
        Worksheets(mySheet).Cells(40, j + 2).Value = T_end_LB + (Iter_MT_WI - 1) * (T_end_UB - T_end_LB) / (10 - 1)
        Worksheets(mySheet).Cells(41, j + 2).Value = P_start_LB + (Iter_MT_WI - 1) * (P_start_UB - P_start_LB) / (10 - 1)
        Worksheets(mySheet).Cells(42, j + 2).Value = P_end_LB + (Iter_MT_WI - 1) * (P_end_UB - P_end_LB) / (10 - 1)
        

        
        'output conditions for each loop
        Worksheets("Deposition Prediction_WhatIf").Cells(21 + (Iter_MT_WI - 1) * 32, 6) = T_start_LB + (Iter_MT_WI - 1) * (T_start_UB - T_start_LB) / (10 - 1)
        Worksheets("Deposition Prediction_WhatIf").Cells(21 + (Iter_MT_WI - 1) * 32, 7) = P_start_LB + (Iter_MT_WI - 1) * (P_start_UB - P_start_LB) / (10 - 1)
        Worksheets("Deposition Prediction_WhatIf").Cells(21 + (Iter_MT_WI - 1) * 32, 8) = T_end_LB + (Iter_MT_WI - 1) * (T_end_UB - T_end_LB) / (10 - 1)
        Worksheets("Deposition Prediction_WhatIf").Cells(21 + (Iter_MT_WI - 1) * 32, 9) = P_end_LB + (Iter_MT_WI - 1) * (P_end_UB - P_end_LB) / (10 - 1)
        Worksheets("Deposition Prediction_WhatIf").Cells(21 + (Iter_MT_WI - 1) * 32, 10) = Gas_V_LB + (Iter_MT_WI - 1) * (Gas_V_UB - Gas_V_LB) / (10 - 1)
        Worksheets("Deposition Prediction_WhatIf").Cells(21 + (Iter_MT_WI - 1) * 32, 11) = Oil_V_LB + (Iter_MT_WI - 1) * (Oil_V_UB - Oil_V_LB) / (10 - 1)
        Worksheets("Deposition Prediction_WhatIf").Cells(21 + (Iter_MT_WI - 1) * 32, 12) = Water_V_LB + (Iter_MT_WI - 1) * (Water_V_UB - Water_V_LB) / (10 - 1)
        Worksheets("Deposition Prediction_WhatIf").Cells(21 + (Iter_MT_WI - 1) * 32, 13) = c_Inhibitor_MT
        
        
        
        pptMax_MassTransfer_V = 0
        Call Worksheets("Readme").B2_ReadinAllData 're-call B2 to use the new T/P/flow rates
        Call Worksheets("Readme").B3_CalcConcs
        Call Worksheets("Readme").B4_CalcFinalBrine
        
        deltaT = (TBH - TWH) / 9:   deltaP = (PBH - PWH) / 9
        
        For LoopTP = 1 To 10
            TF = TBH - deltaT * (LoopTP - 1): TK = (TF - 32) * 5 / 9 + 273.15
            Ppsia = PBH - deltaP * (LoopTP - 1): Patm = Ppsia / 14.696
            PBar = Ppsia / 14.503774
            TC = (TF - 32) * 5 / 9
            If LoopTP = 10 Then
                pH = pH
            End If
            
            Call LoopTPSI
    
            If H2Oevap <> 1 Then
                If Ist <> 0 Then
                    Call LoopTPVisHeatCap
                    If Run_MassTransfer_WhatIf = 1 Then Call MassTransferCoefficients
                End If
                Call LoopTPppt
            End If
            
            Call LoopTPWrite
            If H2Oevap = 1 Then Exit For
        
        Next LoopTP
        
        If UseSI = 0 Then
            Worksheets("Deposition Prediction_WhatIf").Cells(37 + (Iter_MT_WI - 1) * 32, 12) = pptMax_MassTransfer_V / 2.54 'inch/yr
        ElseIf UseSI = 1 Then
            Worksheets("Deposition Prediction_WhatIf").Cells(37 + (Iter_MT_WI - 1) * 32, 12) = pptMax_MassTransfer_V  'cm/yr
        End If
        
        If Iter_MT_WI = 10 Then
            'putting values back
            Worksheets(mysheet_MT).Cells(35, j_MT + 2).Value = Gas_V_OLD_MT
            Worksheets(mysheet_MT).Cells(36, j_MT + 2).Value = Oil_V_OLD_MT
            Worksheets(mysheet_MT).Cells(37, j_MT + 2).Value = Water_V_OLD_MT
            Worksheets(mysheet_MT).Cells(39, j_MT + 2).Value = T_start_OLD_MT
            Worksheets(mysheet_MT).Cells(40, j_MT + 2).Value = T_end_OLD_MT
            Worksheets(mysheet_MT).Cells(41, j_MT + 2).Value = P_start_OLD_MT
            Worksheets(mysheet_MT).Cells(42, j_MT + 2).Value = P_end_OLD_MT
        End If

    Next Iter_MT_WI
    
    Iter_MT_WI = 0
    Run_MassTransfer = 0
    Run_MassTransfer_WhatIf = 0

    
    Worksheets("Deposition Prediction_WhatIf").Activate
    
    Application.ScreenUpdating = True
End Sub


Function lgt_barite(SIBar, TK, InhNoBar, ByVal ConcInhBar_ppm)
'Dai 2020 update using surface tension model, assuming langmuir isotherm
    Dim MW_Inh(20), r_Inh, Conc, C_0, Ceq, R_c_a, XXX, i_inh
    Dim ConcInhBar_m, gamma_barite, Vm_barite, D_barite, gamma_barite_new
    Dim ConcInhCel_m, gamma_celestite, Vm_celestite, D_celestite, gamma_celestite_new
    'Dim Inh_a_V_used, Inh_a_G_used, MW_used, Inh_a_gamma_used, Inh_b_used, Inh_gamma_T_used
    Dim Barite_Inh_a_gamma(20), Barite_Inh_b(20), Barite_Inh_gamma_T(20), lgKspBarite
    Dim Celestite_Inh_a_gamma(20), Celestite_Inh_b(20), Celestite_Inh_gamma_T(20)
    Dim SIBar_ss, lgKspBarite_ss, x_ss, g_BaSO4, g_SrSO4, Vm_barite_ss, gamma_barite_ss, D_barite_ss
    Dim mc_Ba, mc_Sr, ma_SO4
    'value initialization
    'molecular weight
    MW_Inh(1) = 299: MW_Inh(2) = 685: MW_Inh(3) = 573: MW_Inh(4) = 492: MW_Inh(5) = 436: MW_Inh(6) = 206:
    MW_Inh(7) = 249: MW_Inh(8) = 270: MW_Inh(9) = 600: MW_Inh(10) = 270: MW_Inh(11) = 389: MW_Inh(12) = 3800:
    MW_Inh(13) = 116: MW_Inh(14) = 114: MW_Inh(15) = 205.5: MW_Inh(16) = 2897: MW_Inh(17) = 107: MW_Inh(18) = 279
    '********************Pure Barite************************
    '********************Pure Barite************************
    Vm_barite = 0.00004795 'm3/mol
    gamma_barite = 5.14859530930177E-02 * (1 + -3.30444383852017E-04 * TK)                                   'surface tension, J/m2
    D_barite = 2.4179E-19                                                               'effective diffusion coefficient, m2/s
    
    'a_Gamma value
    Barite_Inh_a_gamma(1) = 0.1:    Barite_Inh_a_gamma(2) = 1.44895928455235E-03:   Barite_Inh_a_gamma(3) = 6.52096692234624E-02:
    Barite_Inh_a_gamma(4) = 0.136067277791868: Barite_Inh_a_gamma(5) = 7.87126706888684E-02: Barite_Inh_a_gamma(6) = 0.141720899998701:
    Barite_Inh_a_gamma(7) = 2.72673282664678E-03: Barite_Inh_a_gamma(8) = 9.63226804302647E-04:   Barite_Inh_a_gamma(9) = 9.03160431650203E-02:
    Barite_Inh_a_gamma(10) = 9.03549912578062E-02: Barite_Inh_a_gamma(11) = 0.122523697754394: Barite_Inh_a_gamma(12) = 5.24880305149296E-02:
    Barite_Inh_a_gamma(13) = 9.17716230379076E-02:  Barite_Inh_a_gamma(14) = 7.60311513721388E-02:  Barite_Inh_a_gamma(15) = 5.22646242144785E-02:
    Barite_Inh_a_gamma(16) = 5.41648677000511E-02:  Barite_Inh_a_gamma(17) = 3.75569700399675E-02:  Barite_Inh_a_gamma(18) = 9.35796526652708E-02:
    'b value
    Barite_Inh_b(1) = 3.11820072852575E-05: Barite_Inh_b(2) = 2.09830213683078E-06: Barite_Inh_b(3) = 9.84419781697442E-07:
    Barite_Inh_b(4) = 4.24160281537755E-06: Barite_Inh_b(5) = 6.57359288226497E-07: Barite_Inh_b(6) = 1.00191372327756E-05:
    Barite_Inh_b(7) = 1.57800800142096E-06: Barite_Inh_b(8) = 9.48590627543429E-06: Barite_Inh_b(9) = 2.86180315357142E-06:
    Barite_Inh_b(10) = 6.70118911804505E-06:    Barite_Inh_b(11) = 3.67103856068969E-06:    Barite_Inh_b(12) = 8.21135384431872E-08:
    Barite_Inh_b(13) = 2.06024888192303E-05:    Barite_Inh_b(14) = 8.39422983012129E-06:    Barite_Inh_b(15) = 8.49636307185911E-06:
    Barite_Inh_b(16) = 1.05007717161626E-07:    Barite_Inh_b(17) = 1.12002603497559E-05:    Barite_Inh_b(18) = 5.1458119514216E-06:
    'gamma_T value
    Barite_Inh_gamma_T(1) = 1.26292225353778E-03:   Barite_Inh_gamma_T(2) = 9.99999999999994E-02: Barite_Inh_gamma_T(3) = -1.43770577410053E-03:
    Barite_Inh_gamma_T(4) = -1.66782385445024E-03: Barite_Inh_gamma_T(5) = -0.0017:    Barite_Inh_gamma_T(6) = -0.0017:
    Barite_Inh_gamma_T(7) = 0.016007542227812:  Barite_Inh_gamma_T(8) = 0.1:    Barite_Inh_gamma_T(9) = -0.0017:
    Barite_Inh_gamma_T(10) = -1.69999999999982E-03: Barite_Inh_gamma_T(11) = -1.69999999999999E-03: Barite_Inh_gamma_T(12) = -1.4110534999419E-03:
    Barite_Inh_gamma_T(13) = -0.0017:   Barite_Inh_gamma_T(14) = -0.0017:   Barite_Inh_gamma_T(15) = -8.34479070272031E-04:
    Barite_Inh_gamma_T(16) = -0.0017:   Barite_Inh_gamma_T(17) = -4.24318338524316E-04: Barite_Inh_gamma_T(18) = -0.0017:
    'gamma_T value is left constant at higher temperatures
    If TK > 473.15 Then
        Barite_Inh_a_gamma(3) = 2.08507599760716E-02: Barite_Inh_gamma_T(3) = 0:
    ElseIf TK > 363.15 Then
        Barite_Inh_a_gamma(12) = 2.55918998458322E-02: Barite_Inh_gamma_T(12) = 0:
        Barite_Inh_a_gamma(2) = 5.40679157030706E-02: Barite_Inh_gamma_T(2) = 0:
        Barite_Inh_a_gamma(16) = 2.07259158010861E-02: Barite_Inh_gamma_T(16) = 0:
        Barite_Inh_a_gamma(17) = 3.17697712840643E-02: Barite_Inh_gamma_T(17) = 0:
        Barite_Inh_a_gamma(15) = 3.64262963410158E-02: Barite_Inh_gamma_T(15) = 0:
        Barite_Inh_a_gamma(13) = 3.51159526973402E-02: Barite_Inh_gamma_T(13) = 0:
        Barite_Inh_a_gamma(9) = 3.45589823368792E-02: Barite_Inh_gamma_T(9) = 0:
        Barite_Inh_a_gamma(10) = 3.45738856298492E-02: Barite_Inh_gamma_T(10) = 0:
        Barite_Inh_a_gamma(11) = 4.68830803272305E-02: Barite_Inh_gamma_T(11) = 0:
        Barite_Inh_a_gamma(5) = 3.01190098757421E-02: Barite_Inh_gamma_T(5) = 0:
        Barite_Inh_a_gamma(7) = 1.85776096548197E-02: Barite_Inh_gamma_T(7) = 0:
        Barite_Inh_a_gamma(8) = 3.59428082025533E-02: Barite_Inh_gamma_T(8) = 0:
        Barite_Inh_a_gamma(14) = 2.90929399167921E-02: Barite_Inh_gamma_T(14) = 0:
        Barite_Inh_a_gamma(18) = 3.58077861941026E-02: Barite_Inh_gamma_T(18) = 0:
    ElseIf TK > 343.15 Then
        Barite_Inh_a_gamma(6) = 5.90473043799588E-02: Barite_Inh_gamma_T(6) = 0:
        Barite_Inh_a_gamma(4) = 5.81941030171063E-02: Barite_Inh_gamma_T(4) = 0:
        Barite_Inh_a_gamma(1) = 0.143337177130149: Barite_Inh_gamma_T(1) = 0:
    End If
    
    '********************Pure Celestite************************
    Vm_celestite = 0.00004625 'm3/mol
    gamma_celestite = 0.05640754775 * (1 + -4.96730056762412E-04 * TK)                                   'surface tension, J/m2
    D_celestite = 1.0975777E-18                                                               'effective diffusion coefficient, m2/s
    
    'a_Gamma value
    For i_inh = 1 To 11 'DTPMP
        Celestite_Inh_a_gamma(i_inh) = 0.022506: Celestite_Inh_b(i_inh) = 0.00000239877: Celestite_Inh_gamma_T(i_inh) = -0.000199
        If TK > 363.15 Then
            Celestite_Inh_a_gamma(i_inh) = 0.0209: Celestite_Inh_gamma_T(i_inh) = 0
        End If
    Next i_inh
    'BHPMP
    Celestite_Inh_a_gamma(2) = 0.00067424: Celestite_Inh_b(2) = 0.00000293457: Celestite_Inh_gamma_T(2) = 0.1
    If TK > 363.15 Then    'gamma_T value is left constant at higher temperatures
        Celestite_Inh_a_gamma(2) = 0.0252: Celestite_Inh_gamma_T(2) = 0
    End If
    'HEDP
    Celestite_Inh_a_gamma(6) = 0.00058401: Celestite_Inh_b(6) = 0.00000223132: Celestite_Inh_gamma_T(6) = 0.1
    If TK > 363.15 Then    'gamma_T value is left constant at higher temperatures
        Celestite_Inh_a_gamma(6) = 0.0218: Celestite_Inh_gamma_T(6) = 0
    End If
    
    For i_inh = 12 To 14 'PPCA
        Celestite_Inh_a_gamma(i_inh) = 0.00069743: Celestite_Inh_b(i_inh) = 0.0000003142187: Celestite_Inh_gamma_T(i_inh) = 0.1
        If TK > 363.15 Then    'gamma_T value is left constant at higher temperatures
            Celestite_Inh_a_gamma(i_inh) = 0.0189: Celestite_Inh_gamma_T(i_inh) = 0
        End If
    Next i_inh
    For i_inh = 15 To 18 'PVS and CMI
        Celestite_Inh_a_gamma(i_inh) = 0.024686: Celestite_Inh_b(i_inh) = 0.00001100023: Celestite_Inh_gamma_T(i_inh) = -0.0011966
        If TK > 363.15 Then    'gamma_T value is left constant at higher temperatures
            Celestite_Inh_a_gamma(i_inh) = 0.014: Celestite_Inh_gamma_T(i_inh) = 0
        End If
    Next i_inh

    '********************calculation************************
    'matrix ion ratio
    R_c_a = mc(iBa) / ma(iSO4)
    
    'this is used when SI is the single input (e.g. SIRisk calc) but not assuming the same act coeff and the same SO4/Ba, Sr/Ba ratio, in units of m.
    mc_Ba = (10 ^ SIBar * KspBarite * R_c_a / gCat(iBa) / gAn(iSO4)) ^ 0.5
    ma_SO4 = (10 ^ SIBar * KspBarite / R_c_a / gCat(iBa) / gAn(iSO4)) ^ 0.5
    mc_Sr = mc_Ba * mc(iSr) / mc(iBa)
    
    If R_c_a < 1 Then
        R_c_a = 1 / R_c_a ' make R_c_a be larger than 1
    End If
    
    
    'calculate x value
    x_ss = x_BaSrSO4(mc_Ba, mc_Sr, ma_SO4, gCat(iBa), gCat(iSr), gAn(iSO4), TK, SIBar)
    
    
'    If ConcInhBar = 0 Then
'        ConcInhBar = MW_used                                                'make sure log10(ConcInhBar/MW_used) will not be in error
'    End If
'    SIBar_new = SIBar + Log10(ConcInhBar / MW_used) * r_Inh - Inh_a_G_used * r_Inh * Log10(KspBarite * 1000000)
'    Vm_barite_new = Vm_barite * (1 + Inh_a_V_used * r_Inh)
'    lgKspBarite_new = Log10(KspBarite * 1000000) * (1 + Inh_a_G_used * r_Inh)

    'Surface tension for solid solution
    gamma_barite_new = gamma_barite
    gamma_celestite_new = gamma_celestite
    ConcInhBar_m = 0
    If InhNoBar = 19 Then   'average inhibitor
        For i = 1 To 18
            ConcInhBar_m = ConcInhBar_ppm / MW_Inh(i) / 1000
            gamma_barite_new = gamma_barite_new + Barite_Inh_a_gamma(i) * ConcInhBar_m / (Barite_Inh_b(i) + ConcInhBar_m) * (1 + Barite_Inh_gamma_T(i) * TK)
            gamma_celestite_new = gamma_celestite_new + Celestite_Inh_a_gamma(i) * ConcInhBar_m / (Celestite_Inh_b(i) + ConcInhBar_m) * (1 + Celestite_Inh_gamma_T(i) * TK)
        Next i
        gamma_barite_new = gamma_barite + (gamma_barite_new - gamma_barite) / 18
        gamma_celestite_new = gamma_celestite + (gamma_celestite_new - gamma_celestite) / 18
    Else
        ConcInhBar_m = ConcInhBar_ppm / MW_Inh(InhNoBar) / 1000
        gamma_barite_new = gamma_barite + Barite_Inh_a_gamma(InhNoBar) * ConcInhBar_m / (Barite_Inh_b(InhNoBar) + ConcInhBar_m) * (1 + Barite_Inh_gamma_T(InhNoBar) * TK)
        gamma_celestite_new = gamma_celestite + Celestite_Inh_a_gamma(InhNoBar) * ConcInhBar_m / (Celestite_Inh_b(InhNoBar) + ConcInhBar_m) * (1 + Celestite_Inh_gamma_T(InhNoBar) * TK)
    End If
    
    gamma_barite_ss = x_ss * gamma_barite_new + (1 - x_ss) * gamma_celestite_new
    
    'Diffusion coefficient
    D_barite_ss = x_ss * D_barite + (1 - x_ss) * D_celestite
    
    'activitiy coefficient of solids
    g_BaSO4 = Exp(4950 / 8.31 / TK * (1 - x_ss) ^ 2)
    g_SrSO4 = Exp(4950 / 8.31 / TK * x_ss ^ 2)

    If Abs(x_ss - 1) < 0.01 Then 'in case SIBar_ss blows at 1
        SIBar_ss = SIBar
    Else
        SIBar_ss = Log10((mc_Ba * gCat(iBa)) ^ x_ss * (mc_Sr * gCat(iSr)) ^ (1 - x_ss) * (ma_SO4 * gAn(iSO4)) _
        / (KspCelestite * (1 - x_ss) * g_SrSO4) ^ (1 - x_ss) _
        / (KspBarite * x_ss * g_BaSO4) ^ x_ss)
    End If
        
    Vm_barite_ss = x_ss * Vm_barite + (1 - x_ss) * Vm_celestite
    
    lgKspBarite = Log10(KspBarite) + 6 'mol/m3
    
    C_0 = (10 ^ (SIBar) * 10 ^ lgKspBarite) ^ 0.5 / (gCat(iBa) * gAn(iSO4)) ^ 0.5 / R_c_a ^ 0.5 'conc. of the ion with lower concentrations
    Conc = C_0
    'Conc = (10 ^ (SIBar) * KspBarite * 1000000) ^ 0.5 / (gCat(iBa) * gAn(iSO4)) ^ 0.5 / (mc(iBa) / ma(iSO4)) ^ 0.5  'conc. of anions, in unit of mol/m3
    'Conc = C_0 * R_c_a ^ 0.5                                                                'average conc. of Ba/SO4, in unit of mol/m3
    'r_Inh = ConcInhBar / MW_used / Conc                                                   'molar ratio between inhibitor and Ba/SO4

    'XXX = 10 ^ (lgKspBarite_new - Log10(gCat(iBa) * gAn(iSO4)) - Log10(ConcInhBar / MW_used) * r_Inh)
    XXX = 10 ^ (lgKspBarite - Log10(gCat(iBa) * gAn(iSO4)))
    Ceq = (((R_c_a - 1) ^ 2 * C_0 ^ 2 + 4 * XXX) ^ 0.5 - (R_c_a - 1) * C_0) / 2

    lgt_barite = 0.25 * Log10(3 / 2 / 3.1415926) + 5 / 12 * Log10(Vm_barite_ss) - 2 / 3 * Log10(NAv) - Log10(D_barite_ss) _
                 - 1 / 4 * Log10(Ceq) + 1 / 8 * SIBar_ss - 0.5 * Log10(10 ^ (SIBar_ss / 2) - 1) _
                 + 1 / Log(10) * 16 / 3 * 3.1415926 * Vm_barite_ss ^ 2 * gamma_barite_ss ^ 3 * NAv / (4 * (RBar * 100) ^ 3 * TK ^ 3 * (2.303 * SIBar_ss) ^ 2) _
                 + 1 / Log(10) * 3.1415926 * Vm_barite_ss ^ (4 / 3) * gamma_barite_ss ^ 2 * NAv ^ (2 / 3) / (4 * (RBar * 100) ^ 2 * TK ^ 2 * (2.303 * SIBar_ss))

End Function
Function lgt_celestite(SICel, TK, InhNoCel, ByVal ConcInhCel_ppm)
'Dai 2020 update using surface tension model, assuming langmuir isotherm
    Dim MW_Inh(20), r_Inh, Conc, C_0, Ceq, R_c_a, XXX, i_inh
    Dim ConcInhBar_m, gamma_barite, Vm_barite, D_barite, gamma_barite_new
    Dim ConcInhCel_m, gamma_celestite, Vm_celestite, D_celestite, gamma_celestite_new
    'Dim Inh_a_V_used, Inh_a_G_used, MW_used, Inh_a_gamma_used, Inh_b_used, Inh_gamma_T_used
    Dim Barite_Inh_a_gamma(20), Barite_Inh_b(20), Barite_Inh_gamma_T(20), lgKspBarite
    Dim Celestite_Inh_a_gamma(20), Celestite_Inh_b(20), Celestite_Inh_gamma_T(20), lgKspCelestite
    Dim SIBar_ss, lgKspBarite_ss, x_ss, g_BaSO4, g_SrSO4, Vm_barite_ss, gamma_barite_ss, D_barite_ss
    Dim mc_Ba, mc_Sr, ma_SO4
    'value initialization
    'molecular weight
    MW_Inh(1) = 299: MW_Inh(2) = 685: MW_Inh(3) = 573: MW_Inh(4) = 492: MW_Inh(5) = 436: MW_Inh(6) = 206:
    MW_Inh(7) = 249: MW_Inh(8) = 270: MW_Inh(9) = 600: MW_Inh(10) = 270: MW_Inh(11) = 389: MW_Inh(12) = 3800:
    MW_Inh(13) = 116: MW_Inh(14) = 114: MW_Inh(15) = 205.5: MW_Inh(16) = 2897: MW_Inh(17) = 107: MW_Inh(18) = 279
    '********************Pure Celestite************************
    Vm_celestite = 0.00004625 'm3/mol
    gamma_celestite = 0.05640754775 * (1 + -4.96730056762412E-04 * TK)                                   'surface tension, J/m2
    D_celestite = 1.0975777E-18                                                               'effective diffusion coefficient, m2/s
    
    'a_Gamma value
    For i_inh = 1 To 11 'DTPMP
        Celestite_Inh_a_gamma(i_inh) = 0.022506: Celestite_Inh_b(i_inh) = 0.00000239877: Celestite_Inh_gamma_T(i_inh) = -0.000199
        If TK > 363.15 Then
            Celestite_Inh_a_gamma(i_inh) = 0.0209: Celestite_Inh_gamma_T(i_inh) = 0
        End If
    Next i_inh
    'BHPMP
    Celestite_Inh_a_gamma(2) = 0.00067424: Celestite_Inh_b(2) = 0.00000293457: Celestite_Inh_gamma_T(2) = 0.1
    If TK > 363.15 Then    'gamma_T value is left constant at higher temperatures
        Celestite_Inh_a_gamma(2) = 0.0252: Celestite_Inh_gamma_T(2) = 0
    End If
    'HEDP
    Celestite_Inh_a_gamma(6) = 0.00058401: Celestite_Inh_b(6) = 0.00000223132: Celestite_Inh_gamma_T(6) = 0.1
    If TK > 363.15 Then    'gamma_T value is left constant at higher temperatures
        Celestite_Inh_a_gamma(6) = 0.0218: Celestite_Inh_gamma_T(6) = 0
    End If
    
    For i_inh = 12 To 14 'PPCA
        Celestite_Inh_a_gamma(i_inh) = 0.00069743: Celestite_Inh_b(i_inh) = 0.0000003142187: Celestite_Inh_gamma_T(i_inh) = 0.1
        If TK > 363.15 Then    'gamma_T value is left constant at higher temperatures
            Celestite_Inh_a_gamma(i_inh) = 0.0189: Celestite_Inh_gamma_T(i_inh) = 0
        End If
    Next i_inh
    For i_inh = 15 To 18 'PVS and CMI
        Celestite_Inh_a_gamma(i_inh) = 0.024686: Celestite_Inh_b(i_inh) = 0.00001100023: Celestite_Inh_gamma_T(i_inh) = -0.0011966
        If TK > 363.15 Then    'gamma_T value is left constant at higher temperatures
            Celestite_Inh_a_gamma(i_inh) = 0.014: Celestite_Inh_gamma_T(i_inh) = 0
        End If
    Next i_inh
    
    '********************calculation************************
    'matrix ion ratio
    R_c_a = mc(iSr) / ma(iSO4)
    
    'this is used when SI is the single input (e.g. SIRisk calc) but not assuming the same act coeff and the same SO4/Sr ratio, in units of m.
    mc_Sr = (10 ^ SICel * KspCelestite * R_c_a / gCat(iSr) / gAn(iSO4)) ^ 0.5
    ma_SO4 = (10 ^ SICel * KspCelestite / R_c_a / gCat(iSr) / gAn(iSO4)) ^ 0.5
        
    If R_c_a < 1 Then
        R_c_a = 1 / R_c_a ' make R_c_a be larger than 1
    End If
    
    
'    If ConcInhBar = 0 Then
'        ConcInhBar = MW_used                                                'make sure log10(ConcInhBar/MW_used) will not be in error
'    End If
'    SIBar_new = SIBar + Log10(ConcInhBar / MW_used) * r_Inh - Inh_a_G_used * r_Inh * Log10(KspBarite * 1000000)
'    Vm_barite_new = Vm_barite * (1 + Inh_a_V_used * r_Inh)
'    lgKspBarite_new = Log10(KspBarite * 1000000) * (1 + Inh_a_G_used * r_Inh)

    'Surface tension for solid solution
    gamma_celestite_new = gamma_celestite
    ConcInhCel_m = 0
    If InhNoCel = 19 Then   'average inhibitor
        For i = 1 To 18
            ConcInhCel_m = ConcInhCel_ppm / MW_Inh(i) / 1000
            gamma_celestite_new = gamma_celestite_new + Celestite_Inh_a_gamma(i) * ConcInhCel_m / (Celestite_Inh_b(i) + ConcInhCel_m) * (1 + Celestite_Inh_gamma_T(i) * TK)
        Next i
        gamma_celestite_new = gamma_celestite + (gamma_celestite_new - gamma_celestite) / 18
    Else
        ConcInhCel_m = ConcInhCel_ppm / MW_Inh(InhNoCel) / 1000
        gamma_celestite_new = gamma_celestite + Celestite_Inh_a_gamma(InhNoCel) * ConcInhCel_m / (Celestite_Inh_b(InhNoCel) + ConcInhCel_m) * (1 + Celestite_Inh_gamma_T(InhNoCel) * TK)
    End If
    
    lgKspCelestite = Log10(KspCelestite) + 6 'mol/m3
    
    C_0 = (10 ^ (SICel) * 10 ^ lgKspCelestite) ^ 0.5 / (gCat(iSr) * gAn(iSO4)) ^ 0.5 / R_c_a ^ 0.5 'conc. of the ion with lower concentrations
    Conc = C_0
    'Conc = (10 ^ (SIBar) * KspBarite * 1000000) ^ 0.5 / (gCat(iBa) * gAn(iSO4)) ^ 0.5 / (mc(iBa) / ma(iSO4)) ^ 0.5  'conc. of anions, in unit of mol/m3
    'Conc = C_0 * R_c_a ^ 0.5                                                                'average conc. of Ba/SO4, in unit of mol/m3
    'r_Inh = ConcInhBar / MW_used / Conc                                                   'molar ratio between inhibitor and Ba/SO4

    'XXX = 10 ^ (lgKspBarite_new - Log10(gCat(iBa) * gAn(iSO4)) - Log10(ConcInhBar / MW_used) * r_Inh)
    XXX = 10 ^ (lgKspCelestite - Log10(gCat(iSr) * gAn(iSO4)))
    Ceq = (((R_c_a - 1) ^ 2 * C_0 ^ 2 + 4 * XXX) ^ 0.5 - (R_c_a - 1) * C_0) / 2

    lgt_celestite = 0.25 * Log10(3 / 2 / 3.1415926) + 5 / 12 * Log10(Vm_celestite) - 2 / 3 * Log10(NAv) - Log10(D_celestite) _
                 - 1 / 4 * Log10(Ceq) + 1 / 8 * SICel - 0.5 * Log10(10 ^ (SICel / 2) - 1) _
                 + 1 / Log(10) * 16 / 3 * 3.1415926 * Vm_celestite ^ 2 * gamma_celestite_new ^ 3 * NAv / (4 * (RBar * 100) ^ 3 * TK ^ 3 * (2.303 * SICel) ^ 2) _
                 + 1 / Log(10) * 3.1415926 * Vm_celestite ^ (4 / 3) * gamma_celestite_new ^ 2 * NAv ^ (2 / 3) / (4 * (RBar * 100) ^ 2 * TK ^ 2 * (2.303 * SICel))

End Function

Function x_BaSrSO4(mcBa, mcSr, maSO4, gcatBa, gcatSr, gAnSO4, TK, SIBar)
    Dim delta_x, aaa, bbb, Kd_BaSrSO4, x_lb, x_ub
'Yue's old model blows at low SI
'    aaa = 1.0379
'    bbb = 1 / ((-1311.4 / TK + 4.5037) * SIBar + (1324.4 / TK - 4.1916))
    
    aaa = 1.0536
    bbb = -1.42758 + 2.38212 / SIBar + 662.353 / SIBar / TK
    Kd_BaSrSO4 = aaa / (bbb + mcSr * gcatSr / (mcBa * gcatBa))
    x_lb = 1E-20: x_ub = 1
    x_BaSrSO4 = (x_ub + x_lb) / 2
    delta_x = (1 - x_BaSrSO4) / x_BaSrSO4 - Kd_BaSrSO4 * mcSr * gcatSr / (mcBa * gcatBa) * Exp(4950 * (1 - 2 * x_BaSrSO4) / 8.31 / TK)
    Do While Abs(delta_x) > 0.000001 Or x_ub - x_lb > 0.000001
        If delta_x < 0 Then
            x_ub = x_BaSrSO4
            x_BaSrSO4 = (x_BaSrSO4 + x_lb) / 2
        Else
            x_lb = x_BaSrSO4
            x_BaSrSO4 = (x_BaSrSO4 + x_ub) / 2
        End If
        delta_x = (1 - x_BaSrSO4) / x_BaSrSO4 - Kd_BaSrSO4 * mcSr * gcatSr / (mcBa * gcatBa) * Exp(4950 * (1 - 2 * x_BaSrSO4) / 8.31 / TK)
    Loop
End Function

Sub B6_Dai_InhibitorNeeded()
'This subroutine is written by Dai in 2020 to test the new inhibitor model
'Barite Inhibitor selection and concentration.
Dim Delta_lgt, Delta_lgt0, Step_inh
Dim InhNoBar1, InhNoBar2
Dim InhNoCel1, InhNoCel2
Dim InhNoCal1, InhNoCal2


'==================Barite========================
fSafetyBar = 1
ConcInhBar = 0
Step_inh = 0
If mc(iBa) * ma(iSO4) > 0 Then               'If both Ba and SO4 are present, then BaSO4 might precipitate.
'    If LoopTP = 1 Or RunWhatIf = 1 Or Run1000Cases = 1 Or LoopResChem = 1 Then                        'Routine to select which inhibitor is most effective for the specific downhole conditions, i.e., inhibitor selection is based upon downhole conditions, whether the brine is Supersaturated there, or not.
'        InhNoBar = InhNo
''    If SelectInh = 1 Then
''      i = 1
''      iMaxBar = 1
''      bInhBarMax = fbInhBar(iMaxBar, SIBar)   'Test the value of the exponential.
''      For i = 1 To 13
''        bInhBar(i) = fbInhBar(i, SIBar)
''        If bInhBar(i) > bInhBarMax Then
''        iMaxBar = i
''        bInhBarMax = bInhBar(i)
''        End If
''      Next i
'        InhNoBar = iMaxBar
'    End If
    If SelectInh = 1 Then
        InhNoBar = 2                                   'Presently, based upon experience the program selects BHPMP for barite, regardless.
        InhNoBar1 = 2
        InhNoBar2 = 2
    Else
        InhNoBar = InhNo
        InhNoBar1 = InhNo
        InhNoBar2 = InhNo
        FracInhNo1 = 1
    End If
    
    If InhNo = 20 Then   'mix inhibitors
        InhNoBar1 = InhNo1
        InhNoBar2 = InhNo2
    End If
    
    Worksheets("Barite").Cells(2, 6) = InhName(InhNoBar)
'   If RunSimpSSP = 0 Then
    Worksheets("Input").Cells(49, 10) = InhName(InhNoBar)
'   If RunSimpSSP = 1 Then Worksheets(mySheet).Cells(28, 9) = InhName(InhNoBar)
    If SIBar > 0.001 Then
        BarExpon10 = lgt_barite(SIBar, TK, InhNoBar1, 0)    'lgt0
        If Log10(tInh) <= BarExpon10 Then ConcInhBar = 0
        If Log10(tInh) > BarExpon10 And BarExpon10 < 8 Then
            t0Bar = 10 ^ BarExpon10
            ConcInhBar = 0.001
            Delta_lgt = lgt_barite(SIBar, TK, InhNoBar1, FracInhNo1 * ConcInhBar) + lgt_barite(SIBar, TK, InhNoBar2, (1 - FracInhNo1) * ConcInhBar) - BarExpon10 - Log10(tInh)
            Delta_lgt0 = lgt_barite(SIBar, TK, InhNoBar1, FracInhNo1 * ConcInhBar) + lgt_barite(SIBar, TK, InhNoBar2, (1 - FracInhNo1) * ConcInhBar) - BarExpon10 - BarExpon10 'slope
            Do While Abs(Delta_lgt) > 0.001 And ConcInhBar < 50 'in case it blows out
                ConcInhBar = ConcInhBar - Delta_lgt / Delta_lgt0 * ConcInhBar
                Delta_lgt = lgt_barite(SIBar, TK, InhNoBar1, FracInhNo1 * ConcInhBar) + lgt_barite(SIBar, TK, InhNoBar2, (1 - FracInhNo1) * ConcInhBar) - BarExpon10 - Log10(tInh)
                Delta_lgt0 = lgt_barite(SIBar, TK, InhNoBar1, FracInhNo1 * ConcInhBar) + lgt_barite(SIBar, TK, InhNoBar2, (1 - FracInhNo1) * ConcInhBar) - BarExpon10 - BarExpon10
                Step_inh = Step_inh + 1
                If ConcInhBar > 50 Then ConcInhBar = 50
            Loop
        End If
    End If
End If

'
''==================Calcite========================
'fSafetyCal = 1
'ConcInhCal = 0
'If mc(iCa) * ma(iCO3) > 0 Then               'If both Ba and SO4 are present, then BaSO4 might precipitate.
''    If LoopTP = 1 Or RunWhatIf = 1 Or Run1000Cases = 1 Or LoopResChem = 1 Then                        'Routine to select which inhibitor is most effective for the specific downhole conditions, i.e., inhibitor selection is based upon downhole conditions, whether the brine is Supersaturated there, or not.
''        InhNoCal = InhNo
'''    If SelectInh = 1 Then
'''      i = 1
'''      iMaxCal = 1
'''      bInhCalMax = fbInhCal(iMaxCal, SICal)   'Test the value of the exponential.
'''      For i = 1 To 13
'''        bInhCal(i) = fbInhCal(i, SICal)
'''        If bInhCal(i) > bInhCalMax Then
'''        iMaxCal = i
'''        bInhCalMax = bInhCal(i)
'''        End If
'''      Next i
''        InhNoCal = iMaxCal
''    End If
'    InhNoCal = InhNo
'    InhNoCal1 = InhNo
'    InhNoCal2 = InhNo
'    If SelectInh = 1 Then
'        InhNoCal = 2                                   'Presently, based upon experience the program selects BHPMP for Calcite, regardless.
'        InhNoCal1 = 2
'        InhNoCal2 = 2
'    End If
'
'    If InhNo = 20 Then   'mix inhibitors
'        InhNoCal1 = InhNo1
'        InhNoCal2 = InhNo2
'    End If
'
'
'    Worksheets("Calcite").Cells(2, 7) = InhName(InhNoCal)
''   If RunSimpSSP = 0 Then
'    Worksheets("Input").Cells(47, 10) = InhName(InhNoCal)
''   If RunSimpSSP = 1 Then Worksheets(mySheet).Cells(28, 9) = InhName(InhNoCal)
'    If SICal > 0.001 Then
'        CalExpon10 = lgt_calcite(SICal, TK, InhNoCal1, 0)    'lgt0
'        If Log10(tInh) > CalExpon10 And CalExpon10 < 8 Then
'            t0Cal = 10 ^ CalExpon10
'            ConcInhCal = 0.001
'            Delta_lgt = lgt_calcite(SICal, TK, InhNoCal1, FracInhNo1 * ConcInhCal) + lgt_calcite(SICal, TK, InhNoCal2, (1 - FracInhNo1) * ConcInhCal) - CalExpon10 - Log10(tInh)
'            Delta_lgt0 = lgt_calcite(SICal, TK, InhNoCal1, FracInhNo1 * ConcInhCal) + lgt_calcite(SICal, TK, InhNoCal2, (1 - FracInhNo1) * ConcInhCal) - CalExpon10 - CalExpon10
'            Do Until Abs(Delta_lgt) < 0.0001
'                ConcInhCal = ConcInhCal - Delta_lgt / Delta_lgt0 * ConcInhCal
'                Delta_lgt = lgt_calcite(SICal, TK, InhNoCal1, FracInhNo1 * ConcInhCal) + lgt_calcite(SICal, TK, InhNoCal2, (1 - FracInhNo1) * ConcInhCal) - CalExpon10 - Log10(tInh)
'                Delta_lgt0 = lgt_calcite(SICal, TK, InhNoCal1, FracInhNo1 * ConcInhCal) + lgt_calcite(SICal, TK, InhNoCal2, (1 - FracInhNo1) * ConcInhCal) - CalExpon10 - CalExpon10
'            Loop
'        End If
'    End If
'End If

'Celestite Inhibitor selection and concentration.

'==================Celestite========================
fSafetyCel = 1
ConcInhCel = 0
Step_inh = 0
If mc(iSr) * ma(iSO4) > 0 Then               'If both Sr and SO4 are present, then BaSO4 might precipitate.
'    If LoopTP = 1 Or RunWhatIf = 1 Or Run1000Cases = 1 Or LoopResChem = 1 Then                        'Routine to select which inhibitor is most effective for the specific downhole conditions, i.e., inhibitor selection is based upon downhole conditions, whether the brine is Supersaturated there, or not.
'        InhNoBar = InhNo
''    If SelectInh = 1 Then
''      i = 1
''      iMaxBar = 1
''      bInhBarMax = fbInhBar(iMaxBar, SIBar)   'Test the value of the exponential.
''      For i = 1 To 13
''        bInhBar(i) = fbInhBar(i, SIBar)
''        If bInhBar(i) > bInhBarMax Then
''        iMaxBar = i
''        bInhBarMax = bInhBar(i)
''        End If
''      Next i
'        InhNoBar = iMaxBar
'    End If
    If SelectInh = 1 Then
        InhNoCel = 2                                   'Presently, based upon experience the program selects BHPMP for barite, regardless.
        InhNoCel1 = 2
        InhNoCel2 = 2
    Else
        InhNoCel = InhNo
        InhNoCel1 = InhNo
        InhNoCel2 = InhNo
        FracInhNo1 = 1
    End If
    
    If InhNo = 20 Then   'mix inhibitors
        InhNoCel1 = InhNo1
        InhNoCel2 = InhNo2
    End If
    
'   Worksheets("Barite").Cells(2, 6) = InhName(InhNoBar)
'   If RunSimpSSP = 0 Then
    Worksheets("Input").Cells(55, 10) = InhName(InhNoCel)
'   If RunSimpSSP = 1 Then Worksheets(mySheet).Cells(28, 9) = InhName(InhNoBar)
    If SICel > 0.001 Then
        CelExpon10 = lgt_celestite(SICel, TK, InhNoCel1, 0)    'lgt0
        If Log10(tInh) <= CelExpon10 Then ConcInhCel = 0
        If Log10(tInh) > CelExpon10 And CelExpon10 < 8 Then
            t0Cel = 10 ^ CelExpon10
            ConcInhCel = 0.001
            Delta_lgt = lgt_celestite(SICel, TK, InhNoCel1, FracInhNo1 * ConcInhCel) + lgt_celestite(SICel, TK, InhNoCel2, (1 - FracInhNo1) * ConcInhCel) - CelExpon10 - Log10(tInh)
            Delta_lgt0 = lgt_celestite(SICel, TK, InhNoCel1, FracInhNo1 * ConcInhCel) + lgt_celestite(SICel, TK, InhNoCel2, (1 - FracInhNo1) * ConcInhCel) - CelExpon10 - CelExpon10 'slope
            Do While Abs(Delta_lgt) > 0.001 And ConcInhCel < 50 'in case it blows out
                ConcInhCel = ConcInhCel - Delta_lgt / Delta_lgt0 * ConcInhCel
                Delta_lgt = lgt_celestite(SICel, TK, InhNoCel1, FracInhNo1 * ConcInhCel) + lgt_celestite(SICel, TK, InhNoCel2, (1 - FracInhNo1) * ConcInhCel) - CelExpon10 - Log10(tInh)
                Delta_lgt0 = lgt_celestite(SICel, TK, InhNoCel1, FracInhNo1 * ConcInhCel) + lgt_celestite(SICel, TK, InhNoCel2, (1 - FracInhNo1) * ConcInhCel) - CelExpon10 - CelExpon10 'slope
                Step_inh = Step_inh + 1
                If ConcInhCel > 50 Then ConcInhCel = 50
            Loop
        End If
    End If
End If


End Sub

Sub B7_Dai_ScaleRisk()   'Calculate T, SI pairs at MIC=0,5 and 20 mg/L B1_InitializeIndices, by Dai 2017

Dim Delta_lgt, Delta_lgt0 As Double
Dim ConcInhBar_added, InhNoBar1, InhNoBar2 As Double
Dim ConcInhCal_added, InhNoCal1, InhNoCal2 As Double
Dim ConcInhCel_added, InhNoCel1, InhNoCel2 As Double

'==================Barite========================
'calc Barite MIC=0, Barite index =1 and calcite index =2
If mc(iBa) > 0.0000001 And ma(iSO4) > 0.0000001 Then
    BarExpon10 = Log10(tInh)  'Calc at MIC=0, 2 hr tinh, lgt
    'calculate SI when conc_inh = 0
    t0Bar = 10 ^ BarExpon10
    i = 0
    
    If SelectInh = 1 Then
        InhNoBar = 2                                   'Presently, based upon experience the program selects BHPMP for barite, regardless.
        InhNoBar1 = 2
        InhNoBar2 = 2
    Else
        InhNoBar = InhNo
        InhNoBar1 = InhNo
        InhNoBar2 = InhNo
        FracInhNo1 = 1
    End If
    
    If InhNo = 20 Then   'mix inhibitors
        InhNoBar1 = InhNo1
        InhNoBar2 = InhNo2
    End If

    
    For i = 1 To NoRiskcalc
        
        If i = 1 Then
            ConcInhBar_added = 0
        ElseIf i > 1 Then
            'ConcInhBar_added = 0
            ConcInhBar_added = ConcInhBarRisk(i - 1)
        End If
        
        'MsgBox ConcInhBar
        SIRiskLow = 0.001
        SIRiskHigh = 5
        Delta_lgt = 1 'initialize value
        k = 1
        Do While k < 20 And Abs(Delta_lgt) > 0.001
            SIBarRisk = (SIRiskLow + SIRiskHigh) / 2
            't0Bar = 10 ^ lgt_barite(SIBarRisk, TK, InhNoBar, ConcInhBar)
            Delta_lgt = lgt_barite(SIBarRisk, TK, InhNoBar1, FracInhNo1 * ConcInhBar_added) + lgt_barite(SIBarRisk, TK, InhNoBar2, (1 - FracInhNo1) * ConcInhBar_added) - lgt_barite(SIBarRisk, TK, InhNoBar1, 0) - BarExpon10
            If Delta_lgt < 0 Then ' lgt is too small, SI is large
                SIRiskHigh = SIBarRisk
            Else
                SIRiskLow = SIBarRisk
            End If
            k = k + 1
        Loop
        
        SIRisk(InhNoBar, LoopTP, i, 1) = SIBarRisk
        If SIBarRisk < 0 Then SIRisk(InhNoBar, LoopTP, i, 1) = 0
    Next i
    
     
'     SIRiskLow = 0.001
'     SIRiskHigh = 5
'     Delta_lgt = lgt_barite(SIRiskLow, TK, InhNoBar, ConcInhBar) - BarExpon10
'     Do Until Abs(Delta_lgt) < 0.001
'         ConcInhBar = ConcInhBar - Delta_lgt / Delta_lgt0 * ConcInhBar
'         Delta_lgt = lgt_barite(SIRiskLow, TK, InhNoBar, ConcInhBar) - BarExpon10
'     Loop
'
'
'     If SIRisk(InhNoBar, LoopTP, 1, 1) < 0 Then SIRisk(InhNoBar, LoopTP, 1, 1) = 0
'    '    If UseSR = 1 Then SIRisk(InhNoBar, LoopTP, 1, 1) = 10 ^ root2
'
'        tInhRisk = tInh: 'calc at MIC=1 and 2hr
'        For iRisk = 1 To NoRiskcalc - 1
'            SIRiskLow = SIRisk(InhNoBar, LoopTP, iRisk, 1)
'            SIRiskHigh = 5
'            For k = 1 To 10
'                SIBarRisk = (SIRiskLow + SIRiskHigh) / 2
'                t0Bar = 10 ^ flogT0Bar(SIBarRisk)
'                If t0Bar = 0 Then   'If calculated t0=0 then the corresponding SIRisk has to be equal to 0
'                    SIBarRisk = 0
'                    GoTo 11
'                End If
'11              Dep1 = fCinhBar(SIBarRisk, tInhRisk) - ConcInhBarRisk(iRisk)
'                If Dep1 > 0 Then SIRiskHigh = SIBarRisk
'                If Dep1 < 0 Then SIRiskLow = SIBarRisk
'            Next k
'
'            SIRisk(InhNoBar, LoopTP, iRisk + 1, 1) = SIBarRisk
'            If SIRisk(InhNoBar, LoopTP, iRisk + 1, 1) < 0 Then SIRisk(InhNoBar, LoopTP, iRisk + 1, 1) = 0
'            '    If UseSR = 1 Then SIRisk(InhNoBar, LoopTP, iRisk + 1, 1) = 10 ^ SIBarRisk
'        Next iRisk
'    End If
'
'If LoopTP = 10 Then
'pH = pH
'End If

End If


'==================Calcite========================
''calc calcite MIC=0, calcite index =1 and calcite index =2
'If mc(iCa) > 0.0000001 And ma(iCO3) > 0.0000001 Then
'    CalExpon10 = Log10(tInh)  'Calc at MIC=0, 2 hr tinh, lgt
'    'calculate SI when conc_inh = 0
'    t0Cal = 10 ^ CalExpon10
'    i = 0
'
'    InhNoCal = InhNo
'    InhNoCal1 = InhNo
'    InhNoCal2 = InhNo
'    If SelectInh = 1 Then
'        InhNoCal = 2                                   'Presently, based upon experience the program selects BHPMP for Calcite, regardless.
'        InhNoCal1 = 2
'        InhNoCal2 = 2
'    End If
'
'    If InhNo = 20 Then   'mix inhibitors
'        InhNoCal1 = InhNo1
'        InhNoCal2 = InhNo2
'    End If
'
'    For i = 1 To NoRiskcalc
'
'        If i = 1 Then
'            ConcInhCal_added = 0
'        ElseIf i > 1 Then
'            'ConcInhCal_added = 0
'            ConcInhCal_added = ConcInhCalRisk(i - 1)
'        End If
'
'        'MsgBox ConcInhCal
'        SIRiskLow = 0.001
'        SIRiskHigh = 5
'        Delta_lgt = 1 'initialize value
'        For k = 1 To 20
'            SICalRisk = (SIRiskLow + SIRiskHigh) / 2
'            't0Cal = 10 ^ lgt_Calcite(SICalRisk, TK, InhNoCal, ConcInhCal)
'            Delta_lgt = lgt_calcite(SICalRisk, TK, InhNoCal1, FracInhNo1 * ConcInhCal_added) + lgt_calcite(SICalRisk, TK, InhNoCal2, (1 - FracInhNo1) * ConcInhCal_added) - lgt_calcite(SICalRisk, TK, InhNoCal1, 0) - CalExpon10
'            If Delta_lgt < 0 Then ' lgt is too small, SI is large
'                SIRiskHigh = SICalRisk
'            Else
'                SIRiskLow = SICalRisk
'            End If
'        Next k
'
'        SIRisk(InhNoCal, LoopTP, i, 2) = SICalRisk
'        If SICalRisk < 0 Then SIRisk(InhNoCal, LoopTP, i, 2) = 0
'    Next i
'End If


'==================Celestite========================
'calc Barite MIC=0, Barite index =1 and calcite index =2, gypsum/anhydrite index = 3, Celestite index = 4
If mc(iSr) > 0.0000001 And ma(iSO4) > 0.0000001 Then
    CelExpon10 = Log10(tInh)  'Calc at MIC=0, 2 hr tinh, lgt
    'calculate SI when conc_inh = 0
    t0Cel = 10 ^ CelExpon10
    i = 0
    
    If SelectInh = 1 Then
        InhNoCel = 2
        InhNoCel1 = 2
        InhNoCel2 = 2
    Else
        InhNoCel = InhNo
        InhNoCel1 = InhNo
        InhNoCel2 = InhNo
        FracInhNo1 = 1
    End If
    
    If InhNo = 20 Then   'mix inhibitors
        InhNoCel1 = InhNo1
        InhNoCel2 = InhNo2
    End If

    
    For i = 1 To NoRiskcalc
        
        If i = 1 Then
            ConcInhCel_added = 0
        ElseIf i > 1 Then
            'ConcInhBar_added = 0
            ConcInhCel_added = ConcInhCelRisk(i - 1)
        End If
        
        'MsgBox ConcInhBar
        SIRiskLow = 0.001
        SIRiskHigh = 5
        Delta_lgt = 1 'initialize value
        k = 1
        Do While k < 20 And Abs(Delta_lgt) > 0.001
            SICelRisk = (SIRiskLow + SIRiskHigh) / 2
            't0Bar = 10 ^ lgt_barite(SIBarRisk, TK, InhNoBar, ConcInhBar)
            Delta_lgt = lgt_celestite(SICelRisk, TK, InhNoCel1, FracInhNo1 * ConcInhCel_added) + lgt_celestite(SICelRisk, TK, InhNoCel2, (1 - FracInhNo1) * ConcInhCel_added) - lgt_celestite(SICelRisk, TK, InhNoCel1, 0) - CelExpon10
            If Delta_lgt < 0 Then ' lgt is too small, SI is large
                SIRiskHigh = SICelRisk
            Else
                SIRiskLow = SICelRisk
            End If
            k = k + 1
        Loop
        
        SIRisk(InhNoCel, LoopTP, i, 4) = SICelRisk
        If SICelRisk < 0 Then SIRisk(InhNoCel, LoopTP, i, 1) = 0
    Next i
End If


End Sub


'*************************Dai 2021, try to incorporate FreeCorp 1.007**********************************
'
'CR1_CalculateCR is the main sub to calculate CR and calling other subs...
'CR2_InitializeCR is to initilize the paramters needed for CR, similar to the sub Initialize in the class module "PointModel" in Freecorp

Sub CR1_CalculateCR()
    'Constants
    F = 96485 'C/mol
    
    Dim Run_Corrosion As Integer
    Run_Corrosion = 1
    
    'clean the sheet
    Worksheets("Corrosion").Range("C25:N34") = Null
    Worksheets("Corrosion").Range("C41:N50") = Null
    
    '======Read input from "Corrosion" sheet==================
    'Reactor type: 1 for pipe and 2 for rotating cylinder
    m_rpmTag = Worksheets("Corrosion").Range("C3") 'which reactor is used
    m_concO2ppb = Worksheets("Corrosion").Range("F3") * 1000 ' DO conc., in ppb
    Corr_Sim_Time = Worksheets("Corrosion").Range("J3") * 3600 'Simulation time, in seconds
    
    If m_rpmTag = 1 Then 'pipeline or tubing
        PipeID = Worksheets("Corrosion").Range("C7")
        PipeL = Worksheets("Corrosion").Range("D7")
        Gas_V_MT = Worksheets("Corrosion").Range("J7")
        Oil_V_MT = Worksheets("Corrosion").Range("K7")
        Water_V_MT = Worksheets("Corrosion").Range("L7")
        T_start_MT = Worksheets("Corrosion").Range("F7")
        P_start_MT = Worksheets("Corrosion").Range("G7")
        T_end_MT = Worksheets("Corrosion").Range("H7")
        P_end_MT = Worksheets("Corrosion").Range("I7")
    ElseIf m_rpmTag = 2 Then
        PipeID = Worksheets("Corrosion").Range("C11")
        m_diam = PipeID / 100 'convert to m
        PipeL = 0
        m_vel = Worksheets("Corrosion").Range("D11")
        Gas_V_MT = Worksheets("Corrosion").Range("J11")
        Oil_V_MT = Worksheets("Corrosion").Range("K11")
        Water_V_MT = Worksheets("Corrosion").Range("L11")
        T_start_MT = Worksheets("Corrosion").Range("F11")
        P_start_MT = Worksheets("Corrosion").Range("G11")
        T_end_MT = Worksheets("Corrosion").Range("H11")
        P_end_MT = Worksheets("Corrosion").Range("I11")
    Else
        MsgBox ("Please select a reactor type!")
        Exit Sub
    End If
    
    If Worksheets("Deposition Prediction").Range("C6") = "cm" Then
        UseSI = 1
    ElseIf Worksheets("Deposition Prediction").Range("C6") = "inch" Then
        UseSI = 0
    End If
    
    
    'Convert Mass Transfer Input Parameter Units to cm
    If UseSI = 0 Then
        PipeID = PipeID * 2.54  'unit cm
        PipeL = PipeL * 30.48 / (10 - 1) 'unit cm per section
        m_vel = m_vel * 0.3048 'unit m/s
        m_diam = PipeID / 100 'm_diam in m
    Else
        PipeL = PipeL * 100 / (10 - 1)
    End If

    'Run SSP first, to calculate all related parameters
    'Call A1_Start_ScaleSoftPitzer
    Application.ScreenUpdating = False
    RunSSP = 1: RunStat = 0: RunQualityControlChecks = 0: RunH2SGUI = 0: RunNORM = 0
    Run_MassTransfer = 1 ' this allows the calculation of flow conditions
    Call InitializeOptionClearCellContent
    ReDim CaseCount(5), CaseCount_II(110)
    Call CountNOB
    Call Worksheets("Readme").B1_InitializeIndices   'Resets all indexes each time.
    Call Worksheets("Readme").B2_ReadinAllData      'Reads in all Input concentrations, put in terms of molality and calculate total moles of CO2, H2S, CH4.
    
    'overwrite the G/O/W rate, copy call A1
    'if allows overwrite
    'store the value for putting values back later
    mysheet_MT = mySheet
    If nob > 1 Then mysheet_MT = "Input"
    j_MT = j
    
    Gas_V_OLD_MT = Worksheets(mysheet_MT).Cells(35, j_MT + 2).Value
    Oil_V_OLD_MT = Worksheets(mysheet_MT).Cells(36, j_MT + 2).Value
    Water_V_OLD_MT = Worksheets(mysheet_MT).Cells(37, j_MT + 2).Value
    T_start_OLD_MT = Worksheets(mysheet_MT).Cells(39, j_MT + 2).Value
    T_end_OLD_MT = Worksheets(mysheet_MT).Cells(40, j_MT + 2).Value
    P_start_OLD_MT = Worksheets(mysheet_MT).Cells(41, j_MT + 2).Value
    P_end_OLD_MT = Worksheets(mysheet_MT).Cells(42, j_MT + 2).Value

    'overwrite with new value in deposition sheet
    Worksheets(mySheet).Cells(35, j + 2).Value = Gas_V_MT
    Worksheets(mySheet).Cells(36, j + 2).Value = Oil_V_MT
    Worksheets(mySheet).Cells(37, j + 2).Value = Water_V_MT
    Worksheets(mySheet).Cells(39, j + 2).Value = T_start_MT
    Worksheets(mySheet).Cells(40, j + 2).Value = T_end_MT
    Worksheets(mySheet).Cells(41, j + 2).Value = P_start_MT
    Worksheets(mySheet).Cells(42, j + 2).Value = P_end_MT
    
    
    Call Worksheets("Readme").B2_ReadinAllData 're-call B2 to use the new T/P/flow rates
    Call Worksheets("Readme").B3_CalcConcs           'Cacluate all concentration data from wells on input screen.
    Call Worksheets("Readme").B4_CalcFinalBrine      'Mixed bine output.
    
    'Loop through ten (T,P) pairs from (T_BH,P_BH) to (T_WH,P_WH) evenly spaced on
    'the temperature and the pressure.  At this point all concentrations are available
    'in the code as molality values and ready for calculations of SI values.
    deltaT = (TBH - TWH) / 9
    deltaP = (PBH - PWH) / 9
    
    For LoopTP = 1 To 10
        TF = TBH - deltaT * (LoopTP - 1): TK = (TF - 32) * 5 / 9 + 273.15
        Ppsia = PBH - deltaP * (LoopTP - 1): Patm = Ppsia / 14.696
        
        PBar = Ppsia / 14.503774
        TC = (TF - 32) * 5 / 9
        
        Call LoopTPSI
        
        If H2Oevap <> 1 Then
            If Ist <> 0 Then
                Call LoopTPVisHeatCap
                If Run_Corrosion = 1 Then
                    If m_rpmTag = 1 Then 'calculate liquid velocity in pipelines
'                        PipeID_m = PipeID / 100  'convert cm to m
'                        PipeL_m = PipeL / 100  'convert cm to m
'
'                        'According to Guo et al. Petroleum Production Engineering. A computer-assisted approach
'                        VgTP_MT = WorksheetFunction.max(0.000001, VgTP_MT)
'                        V_s_g = VgTP_MT / 86400 / (pi * (PipeID_m / 2) ^ 2)   'superfacial gas linear velocity, m/s
'                        V_s_l = (VO_MT + VW_MT) / 86400 / (pi * (PipeID_m / 2) ^ 2)   'superfacial liquid linear velocity, m/s
'                        V_s_m = V_s_g + V_s_l 'superfacial total mixture linear velocity, m/s
                        Call CR4_calc_Flow_Regime
                        
                        m_vel = V_s_l
                    End If
                    
                    Run_MassTransfer = 0 ' this avoids deposition calc
                    'get corrosion rate
                    Call CR2_InitializeCR 'calculate corrosion rate
                    Call CR3_calc_CR_CO2_getCR
                    'if there is H2S, run H2S corrosion model
                    If m_concH2S > 0 Then Call CR5_calc_CR_w_H2S
'                    'format and update result shown in CRTextBox
'                    If ResultCR >= 0.1 Then
'                       ResultCR = Round(ResultCR, 1)
'                    ElseIf ResultCR < 0.1 And ResultCR >= 0.01 Then
'                       ResultCR = Round(ResultCR, 2)
'                    Else
'                       ResultCR = "0.00"
'                    End If
                End If
            End If
            Call LoopTPppt
        End If
        Call LoopTPWrite
        'output results in sheet "Corrosion"
        'output current
'        Worksheets("Corrosion").Cells(35 - LoopTP, 6) = getAnodicCurrentDensity_raw(1) 'A/m2
'        Worksheets("Corrosion").Cells(35 - LoopTP, 7) = getCathodicCurrentDensity_raw(1) 'A/m2
'        Worksheets("Corrosion").Cells(35 - LoopTP, 8) = getCathodicCurrentDensity_raw(2) 'A/m2
'        Worksheets("Corrosion").Cells(35 - LoopTP, 9) = getCathodicCurrentDensity_raw(3) 'A/m2
'        Worksheets("Corrosion").Cells(35 - LoopTP, 10) = getCathodicCurrentDensity_raw(4) 'A/m2
'        Worksheets("Corrosion").Cells(35 - LoopTP, 11) = getCathodicCurrentDensity_raw(5) 'A/m2
        
        Worksheets("Corrosion").Cells(35 - LoopTP, 12) = m_icorr 'A/m2
        If UseSI = 0 Then
            Worksheets("Corrosion").Cells(35 - LoopTP, 3) = (LoopTP - 1) * PipeL * 0.0328084 'ft
            Worksheets("Corrosion").Cells(35 - LoopTP, 4) = TF
            Worksheets("Corrosion").Cells(35 - LoopTP, 5) = Ppsia
            Worksheets("Corrosion").Cells(51 - LoopTP, 3) = (LoopTP - 1) * PipeL * 0.0328084 'ft
            Worksheets("Corrosion").Cells(51 - LoopTP, 4) = TF
            Worksheets("Corrosion").Cells(51 - LoopTP, 5) = Ppsia
            'output corrosion rate
            ''CO2 corrosion
            Worksheets("Corrosion").Cells(35 - LoopTP, 6) = m_CRCO2_Anode(1) * 39.37 ' mil/yr
            Worksheets("Corrosion").Cells(35 - LoopTP, 7) = m_CRCO2_Cathode(1) * 39.37 ' mil/yr
            Worksheets("Corrosion").Cells(35 - LoopTP, 8) = m_CRCO2_Cathode(2) * 39.37 ' mil/yr
            Worksheets("Corrosion").Cells(35 - LoopTP, 9) = m_CRCO2_Cathode(3) * 39.37 ' mil/yr
            Worksheets("Corrosion").Cells(35 - LoopTP, 10) = m_CRCO2_Cathode(4) * 39.37 ' mil/yr
            Worksheets("Corrosion").Cells(35 - LoopTP, 11) = m_CRCO2_Cathode(5) * 39.37 ' mil/yr
            Worksheets("Corrosion").Cells(35 - LoopTP, 14) = m_CRCO2_total * 39.37 ' mil/yr
            ''H2S corrosion
            Worksheets("Corrosion").Cells(51 - LoopTP, 6) = m_CRH2S_each(6) * 39.37 ' mil/yr
            Worksheets("Corrosion").Cells(51 - LoopTP, 7) = m_CRH2S_each(1) * 39.37 ' mil/yr
            Worksheets("Corrosion").Cells(51 - LoopTP, 8) = m_CRH2S_each(2) * 39.37 ' mil/yr
            Worksheets("Corrosion").Cells(51 - LoopTP, 9) = m_CRH2S_each(3) * 39.37 ' mil/yr
            Worksheets("Corrosion").Cells(51 - LoopTP, 10) = m_CRH2S_each(4) * 39.37 ' mil/yr
            Worksheets("Corrosion").Cells(51 - LoopTP, 11) = m_CRH2S_each(5) * 39.37 ' mil/yr
            Worksheets("Corrosion").Cells(51 - LoopTP, 12) = m_CRH2S_t_Start * 39.37 ' mil/yr
            Worksheets("Corrosion").Cells(51 - LoopTP, 13) = m_CRH2S_t_step * 39.37 ' mil/yr
            Worksheets("Corrosion").Cells(51 - LoopTP, 14) = m_CRH2S_total * 39.37 ' mil/yr
        ElseIf UseSI = 1 Then
            Worksheets("Corrosion").Cells(35 - LoopTP, 3) = (LoopTP - 1) * PipeL / 100 'm
            Worksheets("Corrosion").Cells(35 - LoopTP, 4) = (TF - 32) * 5 / 9
            Worksheets("Corrosion").Cells(35 - LoopTP, 5) = Ppsia / 14.503774
            Worksheets("Corrosion").Cells(51 - LoopTP, 3) = (LoopTP - 1) * PipeL / 100 'm
            Worksheets("Corrosion").Cells(51 - LoopTP, 4) = (TF - 32) * 5 / 9
            Worksheets("Corrosion").Cells(51 - LoopTP, 5) = Ppsia / 14.503774
            'output corrosion rate
            Worksheets("Corrosion").Cells(35 - LoopTP, 6) = m_CRCO2_Anode(1) 'mm/yr
            Worksheets("Corrosion").Cells(35 - LoopTP, 7) = m_CRCO2_Cathode(1) 'mm/yr
            Worksheets("Corrosion").Cells(35 - LoopTP, 8) = m_CRCO2_Cathode(2) 'mm/yr
            Worksheets("Corrosion").Cells(35 - LoopTP, 9) = m_CRCO2_Cathode(3) 'mm/yr
            Worksheets("Corrosion").Cells(35 - LoopTP, 10) = m_CRCO2_Cathode(4) 'mm/yr
            Worksheets("Corrosion").Cells(35 - LoopTP, 11) = m_CRCO2_Cathode(5) 'mm/yr
            Worksheets("Corrosion").Cells(35 - LoopTP, 14) = m_CRCO2_total ' mm/yr
            ''H2S corrosion
            Worksheets("Corrosion").Cells(51 - LoopTP, 6) = m_CRH2S_each(6) 'mm/yr
            Worksheets("Corrosion").Cells(51 - LoopTP, 7) = m_CRH2S_each(1) 'mm/yr
            Worksheets("Corrosion").Cells(51 - LoopTP, 8) = m_CRH2S_each(2) 'mm/yr
            Worksheets("Corrosion").Cells(51 - LoopTP, 9) = m_CRH2S_each(3) 'mm/yr
            Worksheets("Corrosion").Cells(51 - LoopTP, 10) = m_CRH2S_each(4) 'mm/yr
            Worksheets("Corrosion").Cells(51 - LoopTP, 11) = m_CRH2S_each(5) 'mm/yr
            Worksheets("Corrosion").Cells(51 - LoopTP, 12) = m_CRH2S_t_Start 'mm/yr
            Worksheets("Corrosion").Cells(51 - LoopTP, 13) = m_CRH2S_t_step 'mm/yr
            Worksheets("Corrosion").Cells(51 - LoopTP, 14) = m_CRH2S_total 'mm/yr
        End If
    Next LoopTP    'Dim i As Integer
    
    'putting values back
    Worksheets(mysheet_MT).Cells(35, j_MT + 2).Value = Gas_V_OLD_MT
    Worksheets(mysheet_MT).Cells(36, j_MT + 2).Value = Oil_V_OLD_MT
    Worksheets(mysheet_MT).Cells(37, j_MT + 2).Value = Water_V_OLD_MT
    Worksheets(mysheet_MT).Cells(39, j_MT + 2).Value = T_start_OLD_MT
    Worksheets(mysheet_MT).Cells(40, j_MT + 2).Value = T_end_OLD_MT
    Worksheets(mysheet_MT).Cells(41, j_MT + 2).Value = P_start_OLD_MT
    Worksheets(mysheet_MT).Cells(42, j_MT + 2).Value = P_end_OLD_MT
    
    If m_concH2S = 0 Then Worksheets("Corrosion").Range("C41:N50") = Null
    Run_Corrosion = 0

    Worksheets("Corrosion").Activate
    Application.ScreenUpdating = True
    
'============================comment for now==================
    'updates AnodicCurveCount,CathodicCurveCount,AnodicCurveName,CathodicCurveName defined in mGlobalConstants Module
'    Application.ScreenUpdating = False
'    AnodicCurveCount = pm.GetAnodicReactionCurveCount
'    CathodicCurveCount = pm.GetCathodicReactionCurveCount
'    ReDim AnodicCurveName(AnodicCurveCount)
'    ReDim CathodicCurveName(CathodicCurveCount)
'    For i = 1 To pm.GetAnodicReactionCurveCount
'         AnodicCurveName(i) = pm.GetAnodicReactionCurve(i).curveName
'    Next i
'    For i = 1 To pm.GetCathodicReactionCurveCount
'         CathodicCurveName(i) = pm.GetCathodicReactionCurve(i).curveName
'    Next i
'
'    'updates message shown in StatusBar, spreadsheet, and graph.
'    If pm.isH2S = False Then
'       MechString = ""
'       Call SaveData(pm, "Current")
'       Call SaveGraphData(pm)
'       Call makeGraph(pm)
'       Call InitialGraph
'       DetailButton.Enabled = True
'       SaveDataButton.Enabled = True
'    Else
'       If pm.Conc_H2S = 0 Then
'          MechString = ""
'       Else
'          MechString = "Corrosion rate is controlled by H2S."
'       End If
'       Call SaveData(pm, "Current")
'       Call SaveConcentrationData(pm)
'       Call makeConcentrationProfile(pm)
'       Call InitialProfile
'       DetailButton.Enabled = True
'       SaveDataButton.Enabled = True
'    End If
'
'    StatusBar.SimpleText = MechString

End Sub
'freecorp PointModel Initialize()
Sub CR2_InitializeCR()

'===================Input data from SSP===========================
'    'M to m conversion
'    Dim M_2_m As Double
'    M_2_m = rhoTP - TDS / 1000000# 'kg of water in 1 L of solution
    'temperature
    m_t = TK
    CentiGrade = m_t - 273.15
    'water density
    m_waterdensity = rhoTP * 1000 'm_waterdensity = 1152.3 - 0.5116 * (m_t), in kg/m3
    'water viscosity
    m_waterviscosity = ViscWatIst / 1000 'in Pa s, m_waterviscosity = 1.002 * 10 ^ ((1.3272 * (20 - CentiGrade) - 0.001053 * (CentiGrade - 20) ^ 2) / (CentiGrade + 105)) / 1000
    'modification coefficient for diffusion coefficient in terms of temperature and viscosity
    m_diffTcorrection = (TK) / 298.16 * 0.0009 / m_waterviscosity
    'forward reaction rate constant of CO2 hydration: CO2+H2O->H2CO3
    'm_kfhydration = 10 ^ (169.2 - 53 * Log(TK) / Log(10#) - 11715 / (TK)) 'original Freecorp equation
    'Khyd = 0.00258 'mGlobalConstants in Freecorp
    m_kfhydration = Exp(22.66 - 7799 / m_t) ' from Soli and Byrne 2002, CO2+H2O->H2CO3, Watch the Temperature range (only up to 40 C)
    m_kbdehydration = Exp(30.15 - 8018 / m_t) ' from Soli and Byrne 2002, H2CO3->CO2+H2O
    Khyd = m_kfhydration / m_kbdehydration
  
    'calculate concentration of H+ based on pH, mol/L
    m_concHplus = 10 ^ (-pH) / gCat(iH) 'm_concHplus = Exp(m_pH / (-0.4343))
    'concentration of CO2 in water, mol/L
    m_concCO2 = CO2aq 'm_concCO2 = m_pco2 * getHenryconst_CO2()
    'concentration of H2CO3 in water,mol/L
    m_concH2CO3 = Khyd * m_concCO2
    'concentration of HAc in water,mol/L
    m_concHAc = ma(iAc) 'm_concHAc = m_concHAcppm / MHAc / 1000000 * 1000
    'equilibrium constant of H2CO3 dissociation: H2CO3<=>H+ + HCO3-
    m_K_CO2_ca = K1H2CO3 / Khyd 'm_K_CO2_ca = DisConst1st_CO2() #####SSP uses CO2aq
    'concentration of HCO3- in water, mol/L
    m_concHCO3 = HCO3 'm_concHCO3 = m_K_CO2_ca * m_concH2CO3 / m_concHplus
    'concentration of HCO3 in water,ppm
    m_concHCO3ppm = m_concHCO3 * MWAn(iHCO3) * 1000000 / 1000 'm_concHCO3ppm = m_concHCO3 * MHCO3 * 1000000 / 1000
    'concentration of Fe++ in water,mol/L
    m_concFe = mc(iFe) 'm_concFe = m_concFeppm / 55.84 / 1000000 * 1000
    'equilibrium constant of HCO3- dissociation: HCO3- <=> H+ + CO3=
    m_K_CO2_bi = K2HCO3 'm_K_CO2_bi = DisConst2nd_CO2()
    'concentration of CO3= in water, mol/L
    m_concCO3 = CO3 'm_concCO3 = m_K_CO2_bi * m_concHCO3 / m_concHplus  '  mol/l
    ' supersaturation of iron carbonate
    m_SSFeCO3 = 10 ^ (SISid) 'm_SSFeCO3 = m_concFe * m_concCO3 / (10 ^ (-59.3498 - 0.041377 * m_t - 2.1963 / m_t + 24.5724 * Log(m_t) / 2.303 _
    + 2.518 * Ist ^ 0.5 - 0.657 * Ist))
    'concentration of H2Saq in water, mol/L and ppm
    m_concH2S = H2Saq
    m_concH2Sppm = H2Saq * MWNeut(iH2Saq) * 1000000 / 1000
    ' supersaturation of FeS
    If IsNumeric(SIFeS) Then m_SSFeS = 10 ^ (SIFeS)

    'in case divided by zero
    If m_concHAc = 0 Then m_concHAc = 0.000000001
    If m_concH2CO3 = 0 Then m_concH2CO3 = 0.000000001
    '===========calculate Diffusion coefficients, mass transferc coefficients==================
    'H+
    DiffHplus = 0.00000000931 * m_diffTcorrection  'm2/s
    kmHplus = calc_km(DiffHplus)
    'H2CO3
    DiffH2CO3 = 0.0000000013 * m_diffTcorrection  'm2/s
    kmH2CO3 = calc_km(DiffH2CO3)
    'CO2
    DiffCO2 = 0.00000000196 * m_diffTcorrection  'm2/s
    kmCO2 = calc_km(DiffCO2)
    'HAc
    DiffHAc = 0.0000000005 * m_diffTcorrection  'm2/s
    kmHAc = calc_km(DiffHAc)
    'O2
    DiffO2 = 0.000000002 * m_diffTcorrection  'm2/s
    kmO2 = calc_km(DiffO2)
    'H2S
    DiffH2S = 0.0000000013 * m_diffTcorrection 'm2/s
    kmH2S = calc_km(DiffH2S)
    '===========calculate the scale factors===================
    'Initial scalefactor induced by FeCO3 and FeS equal to 1
    m_ScaleFactor = 1
    m_FeSfactor = 1
    '===========calculate the scale factors due to FeS if H2S exists===================
    If m_concH2Sppm > 0 Then
        'Call CalFeSfactor
        Dim ConstFeS As Double
        ConstFeS = 0.05
        m_FeSfactor = 1 / (1 + ConstFeS * m_concH2Sppm)
    End If
    
    '===========calculate the scale factor due to FeCO3===================
    'calculate scalefactor induced by FeCO3
    'Call CalScaleFactor
    
    ' calculate solubility limit for iron carbonate
    'KspFeCO3 = 10 ^ (-59.3498 - 0.041377 * m_t - 2.1963 / m_t + 24.5724 * Log(m_t) / 2.303 + 2.518 * ionic ^ 0.5 - 0.657 * ionic)
    KspFeCO3 = KspSiderite 'from SSP
    
    ' calculate supersaturation of iron carbonate
    'm_SSFeCO3 = m_concFe * m_concCO3 / KspFeCO3
    'm_SSFeCO3 already calculated above from SSP
     
    ' PRFeCO3, precipitation rate of iron carbonate,mol/m^2/s
    If m_SSFeCO3 > 1 Then
        PRFeCO3 = Exp(21.3 - 64851.4 / 8.31 / m_t) * KspFeCO3 * (m_SSFeCO3 - 1) ' Sun and Nesic
        PRFeCO3 = Exp(54.8 - 123000 / 8.31 / m_t) * KspFeCO3 * (m_SSFeCO3 ^ 0.5 - 1) ^ 2 ' Johnson and Tomson
    Else
        PRFeCO3 = 0 'no precipitation when supersaturation less than 1
    End If
     
    'empirically determined function for scale factor based on supersaturation of FeCO3
    If m_SSFeCO3 > 1 Then
       m_ScaleFactor = m_SSFeCO3 ^ (-0.7)
    Else
       m_ScaleFactor = 1
    End If


End Sub

'CR3_getCR() is calculating the corrosion potential and current, it is similar to the sub getCR() in the class module "PointModel"
Sub CR3_calc_CR_CO2_getCR()
    'claim m_Corpot(Corrosion potential), m_icorr(corrosion current density), mCRCO2_ave(corrosion rate of iron ini mm/yr)
    
    'two variables used for storing values of function for upper and lower limit.
    Dim fx1 As Double, fx2 As Double
    'used to store the potential in the middle of upper and lower potentials.
    Dim root As Double
    'set up upper and lower limit of potential in which real potential resides
    Dim llimit As Double, ulimit As Double
    'tolerence used in this numerical methode
    Const epsilon = 0.0000001
    
    llimit = -10 'lower limit of potential is -1V
    ulimit = 10  'upper limit of potential is 0V
    
'    'calculate scale factor related to FeCO3
'    m_ScaleFactor = 1
'    m_FeSfactor = 1
'    Call CalScaleFactor
    
    'solve corrosion potential using bi-section algorithm
    Do While (ulimit - llimit) > epsilon
        root = ulimit
        fx1 = getAnodicCurrentDensity(root) - getCathodicCurrentDensity(root)
        root = (ulimit + llimit) / 2
        fx2 = getAnodicCurrentDensity(root) - getCathodicCurrentDensity(root)
        If (fx1 * fx2) > 0 Then
            ulimit = root
            llimit = llimit
        Else
            llimit = root
        End If
    Loop
    
    m_Corpot = root
    m_icorr = getCathodicCurrentDensity(root)
    'conversion from current density in A/m2 to corrsoion rate of iron in mm/y
    m_CRCO2_total = 1.155 * m_icorr

End Sub

'calculate anodic reaction current density
Function getAnodicCurrentDensity(potential As Double)
    
    'iron dissolution half reaction ID
    iAnodic_Iron_Dissolution = 1
    Anodic_ioref(1) = 1
    Anodic_ActivEnergy(1) = 50000
    Anodic_ErevInit(1) = -0.488
    Anodic_EpasInit(1) = 0
    Anodic_ipasInit(1) = 0
    Anodic_EpitInit(1) = 0
    If Anodic_EpasInit(1) = 0 Then
        Anodic_EpasInit(1) = 1000
    End If
    If Anodic_EpitInit(1) = 0 Then
        Anodic_EpitInit(1) = 1000
    End If
    
    ' Sets up constant to construct a smooth anodic polarization curve
    'with active,passive and tran-passive zone.
    Const Apas = 50000
    Const pas = 2.5
    Const pit = 2.5
    'declare some temporary variables for construction of anodic polarization curve
    Dim itaf, Spas, ipit, Apit, Xpit, Spit As Double
    Dim m_Erev, m_io, m_b, m_ilim, m_Epas, m_ipas, m_Epit As Double
    
    getAnodicCurrentDensity = 0
    total_Anodic_Reaction = 1
    iAnodicReacIndex = 1
    For iAnodicReacIndex = 1 To total_Anodic_Reaction
        Anodic_ioInit(iAnodicReacIndex) = Anodic_ioref(iAnodicReacIndex) * 10 ^ (4 - 4) * _
                                            Exp(-Anodic_ActivEnergy(iAnodicReacIndex) / 8.31 * (1 / (TK) - 1 / 298.16)) 'A/m^2
        Anodic_bInit(iAnodicReacIndex) = 2.303 * 8.31 * TK / F / 1.5
        
        m_Erev = Anodic_ErevInit(iAnodicReacIndex)
        m_io = Anodic_ioInit(iAnodicReacIndex)
        m_b = Anodic_bInit(iAnodicReacIndex)
        m_ilim = Anodic_ilimdiffusionInit(iAnodicReacIndex)
        m_Epas = Anodic_EpasInit(iAnodicReacIndex)
        m_ipas = Anodic_ipasInit(iAnodicReacIndex)
        m_Epit = Anodic_EpitInit(iAnodicReacIndex)

    ' Calculates anodic current density, A/m2
        itaf = m_io * 10 ^ ((potential - m_Erev) / m_b) 'current density in the active zone
        If potential > m_Epas Then
            Spas = Exp(-Apas * (potential - m_Epas) ^ pas)
        Else
            Spas = 1
        End If
        If potential > m_Epit Then
            ipit = m_ipas * 10 ^ ((potential - m_Epit) / m_b) 'current density in the tran-passive zone
            Apit = 1 / m_b
            Xpit = Exp(Apit * (potential - m_Epit) ^ pit)
            Spit = Xpit / (1 + Xpit)
         Else
           Spit = 1
         End If
        'universal equation for calculating current density in the whole range
        getAnodicCurrentDensity_raw(iAnodicReacIndex) = (Spit * (Spas * itaf + (1 - Spas) * m_ipas) + (1 - Spit) * ipit) * m_ScaleFactor * m_FeSfactor
        'corrosion rate for each reaction
        m_CRCO2_Anode(iAnodicReacIndex) = 1.155 * getAnodicCurrentDensity_raw(iAnodicReacIndex)
        'current density is modified by the presence of FeCO3 and Fes film
        getAnodicCurrentDensity = getAnodicCurrentDensity + getAnodicCurrentDensity_raw(iAnodicReacIndex)
    Next iAnodicReacIndex
        
End Function


'calculate Cathodic reaction current density
Function getCathodicCurrentDensity(potential As Double)
    
    Dim ErevHplus, bHplus As Double
    ErevHplus = -2.303 * 8.31 * TK / F * pH  ' V
    bHplus = 2.303 * 8.31 * TK / F / 0.5  ' V/decade
    
    'iron dissolution half reaction ID
    iCathodic_H_reduction = 1: iCathodic_H2CO3_reduction = 2: iCathodic_HAc_reduction = 3: iCathodic_H2O_reduction = 4: iCathodic_O2_reduction = 5
    'ioref
    Cathodic_ioref(1) = 0.03: Cathodic_ioref(2) = 0.06: Cathodic_ioref(3) = 0.1: Cathodic_ioref(4) = 0.00003548134: Cathodic_ioref(5) = 0.06
    'Active Energy
    Cathodic_ActivEnergy(1) = 30000: Cathodic_ActivEnergy(2) = 57500: Cathodic_ActivEnergy(3) = 55000: Cathodic_ActivEnergy(4) = 30000: Cathodic_ActivEnergy(5) = 10000
    'ErevInit
    Cathodic_ErevInit(1) = ErevHplus: Cathodic_ErevInit(2) = ErevHplus: Cathodic_ErevInit(3) = ErevHplus: Cathodic_ErevInit(4) = ErevHplus: Cathodic_ErevInit(5) = 0.5
    'ioInit
    Cathodic_ioInit(1) = Cathodic_ioref(1) * 10 ^ (-0.5 * (pH - 4)) * Exp(-Cathodic_ActivEnergy(1) / 8.31 * (1 / (TK) - 1 / 298.16))                                      'A/m^2
    Cathodic_ioInit(2) = Cathodic_ioref(2) * m_concH2CO3 / 0.0001 * 10 ^ (0.5 * (pH - 5)) * Exp(-Cathodic_ActivEnergy(2) / 8.31 * (1 / (TK) - 1 / 298.16))                                   'A/m^2
    Cathodic_ioInit(3) = Cathodic_ioref(3) * (m_concHAc / 0.001) ^ 0.5 * Exp(-Cathodic_ActivEnergy(3) / 8.31 * (1 / (TK) - 1 / 298.16))                                  'A/m^2
    Cathodic_ioInit(4) = Cathodic_ioref(4) * Exp(-Cathodic_ActivEnergy(4) / 8.31 * (1 / (TK) - 1 / 298.16))                                       'A/m^2
    Cathodic_ioInit(5) = Cathodic_ioref(5) * Exp(-Cathodic_ActivEnergy(5) / 8.31 * (1 / (TK) - 1 / 298.16))                                       'A/m^2
    'bInit
    Cathodic_bInit(1) = bHplus: Cathodic_bInit(2) = bHplus: Cathodic_bInit(3) = bHplus: Cathodic_bInit(4) = bHplus
    Cathodic_bInit(5) = 2.303 * 8.31 * TK / F / 1
    '======ilimdiffusionInit=======
    ''H+ ion
    Cathodic_ilimdiffusionInit(1) = kmHplus * m_ScaleFactor * m_FeSfactor * F * m_concHplus * 1000
    ''H2CO3
    Cathodic_ilimdiffusionInit(2) = F * m_concCO2 * 1000 * (DiffH2CO3 * m_ScaleFactor * m_FeSfactor * Khyd * m_kfhydration) ^ 0.5
    'when FeCO3 film exists, flow factor becomes insignificant
    Dim flowfactor, Deltareaction, Deltamasstransfer As Double
    If m_ScaleFactor <> 1 Then
        Deltamasstransfer = DiffH2CO3 / kmH2CO3
        Deltareaction = Sqr(DiffH2CO3 * Khyd / m_kfhydration)
        flowfactor = (1 + Exp(-2 * Deltamasstransfer / Deltareaction)) / _
                        (1 - Exp(-2 * Deltamasstransfer / Deltareaction))
    Else
        flowfactor = 1
    End If
    Cathodic_ilimdiffusionInit(2) = Cathodic_ilimdiffusionInit(2) * flowfactor 'A/m2
    ''HAc
    Cathodic_ilimdiffusionInit(3) = kmHAc * m_ScaleFactor * m_FeSfactor * F * m_concHAc * 1000
    ''H2O
    Cathodic_ilimdiffusionInit(4) = 1E+20
    ''O2
    Cathodic_ilimdiffusionInit(5) = kmO2 * m_ScaleFactor * m_FeSfactor * F * m_concO2ppb / 1000 / 32
    
    'declare some temporary variables for construction of Cathodic polarization curve
    Dim itaf, Spas, ipit, Apit, Xpit, Spit  As Double
    Dim m_Erev, m_io, m_b, m_ilim, m_Epas, m_ipas, m_Epit As Double

    getCathodicCurrentDensity = 0
    total_Cathodic_Reaction = 5
    iCathodicReacIndex = 1
    For iCathodicReacIndex = 1 To total_Cathodic_Reaction
        m_Erev = Cathodic_ErevInit(iCathodicReacIndex)
        m_io = Cathodic_ioInit(iCathodicReacIndex)
        m_b = Cathodic_bInit(iCathodicReacIndex)
        m_ilim = Cathodic_ilimdiffusionInit(iCathodicReacIndex)

        ' Calculates Cathodic current density, A/m2
        itaf = m_io * 10 ^ ((m_Erev - potential) / m_b) 'current density in the active zone
        'Tafel current density modified by FeCO3 and FeS film,A/m2
        itaf = itaf * m_ScaleFactor * m_FeSfactor
        'universal equation for calculating current density in the whole range
        getCathodicCurrentDensity_raw(iCathodicReacIndex) = itaf * m_ilim / (itaf + m_ilim)
        'corrosion rate for each reaction
        m_CRCO2_Cathode(iCathodicReacIndex) = 1.155 * getCathodicCurrentDensity_raw(iCathodicReacIndex)
        'current density is modified by the presence of FeCO3 and Fes film
        getCathodicCurrentDensity = getCathodicCurrentDensity + getCathodicCurrentDensity_raw(iCathodicReacIndex)
    Next iCathodicReacIndex
        
End Function



'This function returns mass transfer coefficient

Function calc_km(ByVal Diff As Double) As Double
    If m_rpmTag = 2 Then '1 for pipe and 2 for rotating cylinder
    'mass transfer coefficient for rotating cylinder   'm_vel is water velocity in m/s
        calc_km = 0.0791 * (m_vel * m_diam * m_waterdensity / m_waterviscosity) ^ 0.7 _
                    * (m_waterviscosity / m_waterdensity / Diff) ^ 0.356 * Diff / m_diam
    
    Else
    'mass transfer coefficient for pipelines. From freecorp, for single phase flow
        'calc_km = 0.0165 * (m_vel * m_diam * m_waterdensity / m_waterviscosity) ^ 0.86 _
                    * (m_waterviscosity / m_waterdensity / Diff) ^ 0.33 * Diff / m_diam
    'use flow regime calculation from MassTransferCoefficients sub, from SSP, for multiphase flow
    
        ScNO = m_waterviscosity / m_waterdensity / Diff ' Schmidt number times Diffusion coefficient, so basically in the following part
        LengthEntry = LoopTP * PipeL_m  'length to the entry point of the tubing
        GzNO = ReNO * ScNO * (Eff_D / LengthEntry) 'Graetz number
        
        ShNO_La = 3.66 + 0.0668 * GzNO / (1 + 0.04 * GzNO ^ (2 / 3)) 'laminar, covering both entry region and fully developed region ( pipeL_m is very large that Gz is close to 0), Hausen
        
        If ReNO < 2300 Then
            Flow_Regime = "Laminar"
            ShNO = ShNO_La 'laminar, covering both entry region and fully developed region ( pipeL_m is very large that Gz is close to 0), Hausen
        ElseIf ReNO < 3100 Then
            Flow_Regime = "Transitional"
            ShNO_lc = 3.66 + 0.0668 * (GzNO / ReNO * 2100) / (1 + 0.04 * (GzNO / ReNO * 2100) ^ (2 / 3)) 'critical laminar sherwood number at ReNO of 2100
            ShNO = (ShNO_La ^ 10 + (Exp((2200 - ReNO) / 365) / ShNO_lc ^ 2 + (4.8 + 0.079 * ReNO * (f_Churchill / 8) ^ 0.5 * ScNO / (1 + ScNO ^ 0.8) ^ (5 / 6)) ^ -2) ^ -5) ^ (1 / 10) 'Churchill (1977), Eq 19
        Else
            Flow_Regime = "Turbulent"
            ShNO = (f_Churchill / 8) * (ReNO - 1000) * ScNO / (1 + 12.7 * (f_Churchill / 8) ^ 0.5 * (ScNO ^ (2 / 3) - 1)) 'Gnielinski, used when ReNO > 3100, using f from Churchill though to include surface roughness impacts
        End If
        
        calc_km = ShNO * Diff / Eff_D  'mass transfer coefficient, unit m/s

        
    End If
End Function

'This is part of the "MassTransferCoefficients" sub, but only calculating the ReNO, ShNO, etc.
Sub CR4_calc_Flow_Regime()

    'Dai 2020 deposition
    '*********calculate flow regime, Re, etc.***********

    PipeID_m = PipeID / 100  'convert cm to m
    PipeL_m = PipeL / 100  'convert cm to m
    
    'According to Guo et al. Petroleum Production Engineering. A computer-assisted approach
    VgTP_MT = WorksheetFunction.max(0.000001, VgTP_MT)
    V_s_g = VgTP_MT / 86400 / (pi * (PipeID_m / 2) ^ 2)   'superfacial gas linear velocity, m/s
    V_s_l = (VO_MT + VW_MT) / 86400 / (pi * (PipeID_m / 2) ^ 2)   'superfacial liquid linear velocity, m/s
    V_s_m = V_s_g + V_s_l 'superfacial total mixture linear velocity, m/s
    
    P_reduced_g = Ppsia / (708.75 - 57.7 * SGG) ' reduced pressure for gas
    T_reduced_g = (TF + 460) / (169 + 314 * SGG) 'reduced temperature for gas
    
    Dim a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16 As Double
    a1 = -2.462: a2 = 2.97: a3 = -0.2862: a4 = 0.008054: a5 = 2.808: a6 = -3.498: a7 = 0.3603: a8 = -0.01044: a9 = -0.7933: a10 = 1.396: a11 = -0.1491: a12 = 0.00441: a13 = 0.08393: a14 = -0.1864: a15 = 0.02033: a16 = -0.0006095
    Ratio_gas_visc = a1 + a2 * P_reduced_g + a3 * P_reduced_g ^ 2 + a4 * P_reduced_g ^ 3 + T_reduced_g * (a5 + a6 * P_reduced_g + a7 * P_reduced_g ^ 2 + a8 * P_reduced_g ^ 3) + T_reduced_g ^ 2 * (a9 + a10 * P_reduced_g + a11 * P_reduced_g ^ 2 + a12 * P_reduced_g ^ 3) + T_reduced_g ^ 3 * (a13 + a14 * P_reduced_g + a15 * P_reduced_g ^ 2 + a16 * P_reduced_g ^ 3)
    Visc_g = ((1.709 / 100000 - 2.062 / 1000000 * SGG) * TF + 8.188 / 1000 - 6.15 / 1000 * Log10(SGG)) / T_reduced_g * Exp(Ratio_gas_visc)
    
    SGO = 141.5 / (131.5 + API)        'specific gravity of oil
    SGL = (VO_MT * SGO + VW_MT * rhoTP * 1000 / dens) / (VO_MT + VW_MT) 'specific gravity of liquids
    
    rho_gas_MT = SGG * (Patm * 28.97 / (0.08206 * TK))
    rho_liquid_MT = SGL * dens
    
    'surface tension between liquid and gas
    surf_tension_og = (39 - 0.2571 * API - (TF - 68) * 1.5 / 32) / 1000 ' oil/gas surface tension ,N/m, 1 dynes/cm = 1e-3 N/m ' eq 19 in https://petrowiki.org/Interfacial_tension#:~:text=Interfacial%20or%20surface%20tension%20exists%20when%20two%20phases%20are%20present.&text=The%20surface%20tension%20between%20gas,the%20composition%20of%20each%20phase.
    surf_tension_wg = -0.11538 * (1 - TK / 647.096) ^ 2.471 + 0.2151 * (1 - TK / 647.096) ^ 1.233 'N/m, Mulero et al. 2012
    surf_tension_lg = (VO_MT * surf_tension_og + VW_MT * surf_tension_wg) / (VO_MT + VW_MT) 'an estimated surface tension value, N/m, use measured value if available
    
    
    N_v_l = V_s_l * (rho_liquid_MT / surf_tension_lg / 9.8) ^ 0.25 'liquid velocity number, eq 4.30- eq 4.33 in Guo et al., and in zhou thesis, eq 2-5. Be careful with unit conversions.
    N_v_g = V_s_g * (rho_liquid_MT / surf_tension_lg / 9.8) ^ 0.25 'gas velocity number
    N_dia = PipeID_m * (rho_liquid_MT * 9.8 / surf_tension_lg) ^ 0.5  ' pipe diameter number
    N_visc_l = ViscWatIst / 1000 * (9.8 / surf_tension_lg ^ 3 / rho_liquid_MT) ^ (0.25) 'liquid viscosity number, 1 centipoise  = 1e-3 Pa s
    
    X_1 = Log10(N_visc_l + 3)
    CN_l = 10 ^ (-2.69851 + 0.15841 * X_1 - 0.551 * X_1 ^ 2 + 0.54785 * X_1 ^ 3 - 0.12195 * X_1 ^ 4) ' eq 4.35
    X_2 = N_v_l * CN_l / (N_v_g ^ 0.575 * N_dia) * (PBar / 1.01325) ^ 0.1 'eq 4.38
    X_3 = N_v_g * N_visc_l ^ 0.38 / N_dia ^ 2.14
    a1 = (X_3 - 0.012) / Abs(X_3 - 0.012)
    X_3 = (1 - a1) / 2 * 0.012 + (1 + a1) / 2 * X_3 'modified based on Guo et al.'s excel
    
    fai_MT = 0.91163 - 4.82176 * X_3 + 1232.25 * X_3 ^ 2 - 22253.6 * X_3 ^ 3 + 116174.3 * X_3 ^ 4
    
    X_3 = N_v_g * N_visc_l ^ 0.38 / N_dia ^ 2.14
    fai_MT = 0.91163 - 4.82176 * X_3 + 1232.25 * X_3 ^ 2 - 22253.6 * X_3 ^ 3 + 116174.3 * X_3 ^ 4
    If X_3 <= 0.01 Then fai_MT = 1
    
    'Hold_l = fai_MT * (-0.10307 + 0.61777 * (Log10(X_2) + 6) - 0.63295 * (Log10(X_2) + 6) ^ 2 + 0.29598 * (Log10(X_2) + 6) ^ 3 - 0.0401 * (Log10(X_2) + 6) ^ 4) 'liquid hold up, eq. 4.37, defined as volume ratio occupied by liquid
    '
    'If VgTP_MT < (VO_MT + VW_MT) * 0.018 Then 'In case gas volume is too small, liquid hold up calculations will be errors, minimum gas is set as 0.1 scf/bbl liquids, if not, assume Hold_l = 1 (all fluids, no gas)
    '    Hold_l = 1
    'ElseIf Hold_l < 0.01 Or VgTP_MT > (VO_MT + VW_MT) * 1000 Then  'In case gas volume is too large, liquid hold up calculations will be negative, use Griffith correlation, eq 4.47 in Guo et al.
    '    Hold_l = 1 - 0.5 * (1 + V_s_m / 0.8 - ((1 + V_s_m / 0.8) ^ 2 - 4 * V_s_g / 0.8) ^ 0.5)
    'ElseIf Hold_l > 1 Or Hold_l < 0 Then ' in case Guo's equation blow up
    '    Hold_l = V_s_l / V_s_m
    'End If
    
    
    Hold_l = fai_MT * (-0.10307 + 0.61777 * (Log10(X_2) + 6) - 0.63295 * (Log10(X_2) + 6) ^ 2 + 0.29598 * (Log10(X_2) + 6) ^ 3 - 0.0401 * (Log10(X_2) + 6) ^ 4) 'liquid hold up, eq. 4.37, defined as volume ratio occupied by liquid
    
    If VgTP_MT < (VO_MT + VW_MT) * 0.018 Then 'In case gas volume is too small, liquid hold up calculations will be errors, minimum gas is set as 0.1 scf/bbl liquids, if not, assume Hold_l = 1 (all fluids, no gas)
        Hold_l = 1
    ElseIf Hold_l < 0.01 Or VgTP_MT > (VO_MT + VW_MT) * 1000 Or Hold_l >= 1 Then 'In case gas volume is too large, liquid hold up calculations will be negative, use Griffith correlation, eq 4.47 in Guo et al.
        Hold_l = 1 - 0.5 * (1 + V_s_m / 0.8 - ((1 + V_s_m / 0.8) ^ 2 - 4 * V_s_g / 0.8) ^ 0.5)
    ElseIf Hold_l < 0 Then ' in case Guo's equation blow up
        Hold_l = V_s_l / V_s_m
    End If
    
    
    ''https://wiki.pengtools.com/index.php?title=Hagedorn_and_Brown_correlation#:~:text=Hagedorn%20and%20Brown%20is%20an,oil%20wells%20in%20the%20PQplot.
    'If X_3 <= 0.025 Then
    '    fai_MT = 27170 * X_3 ^ 3 - 317.52 * X_3 ^ 2 + 0.5472 * X_3 + 0.9999
    'ElseIf X_3 <= 0.055 Then
    '    fai_MT = -533.33 * X_3 ^ 2 + 58.524 * X_3 + 0.1171
    'Else
    '    fai_MT = 2.5714 * X_3 + 1.5962
    'End If
    'Hold_l = fai_MT * ((0.0047 + 1123.32 * X_2 + 729489.64 * X_2 ^ 2) / (1 + 1097.1566 * X_2 + 722153.97 * X_2 ^ 2)) ^ 0.5
    
    '************************flow pattern determination using Hasan & Kabir 1984
    If V_s_g > 3.1 * (9.8 * surf_tension_lg * (rho_liquid_MT - rho_gas_MT) / rho_gas_MT ^ 2) ^ 0.25 Then   'eq 13 in Hasan & Kabir 1984
        Flow_Pattern = "Annular"
        Eff_D = (1 - (1 - Hold_l) ^ 0.5) * PipeID_m    'Effective flow characteristic length, basically the part occupied by fluids in annular flow, assuming gas is in the central part
        Eff_V = V_s_l / Hold_l 'Effective flow linear velocity, m/s
        
    ElseIf V_s_g > 0.429 * V_s_l + 0.546 * (9.8 * surf_tension_lg * (rho_liquid_MT - rho_gas_MT) / rho_liquid_MT ^ 2) ^ 0.25 Then 'eq 4 in Hasan & Kabir 1984
        Flow_Pattern = "SlugChurn"
        Eff_D = PipeID_m    'Effective flow characteristic length, same as tubing ID, assuming enlongated large bubbles do not affect liquid flow
        Eff_V = V_s_l / Hold_l   'Effective flow linear velocity, m/s   ??????????????????????????????
    Else
        Flow_Pattern = "Bubbly"
        Eff_D = PipeID_m    'Effective flow characteristic length, same as tubing ID
        Eff_V = (VO_MT + VW_MT + VgTP_MT) / 86400 / (pi * (Eff_D / 2) ^ 2)   'Effective flow linear velocity, m/s
    End If
    
    
    '************************flow dimensionless paramters*************
    ReNO = rhoTP * 1000 * Eff_V * Eff_D / (ViscWatIst / 1000) 'Renold's number
    f_Churchill = ((8 / ReNO) ^ 12 + ((2.457 * Log(1 / ((7 / ReNO) ^ 0.9 + 0.27 * PipeRough / 1000 / Eff_D))) ^ 16 + (37530 / ReNO) ^ 16) ^ (-3 / 2)) ^ (1 / 12) * 8 'friction coeffient, based on Churchill (1977)
    If ReNO < 7 Then f_Churchill = 64 / ReNO
    'f_Gnie = (0.79 * Log(ReNO) - 1.64) ^ (-2) 'friction coeffient, based on Gnielinski, which is identical to Churchill friction coefficient at turbulent conditions. Used here for consistency
    
End Sub

'this subroutine is to calculate the corrosion rate in the presence of FeS due to H2S corrosion, similar to newH2Smodel sub in Freecorp
'this calculation assumes that it is mass transfer controlled
'this sub extends to O2, H2O as well
Sub CR5_calc_CR_w_H2S()
    Dim A_iss(10), m_conc_s(10), m_flux_max(10), CR_H2S_max(10), m_flux(10), CR_H2S(10), m_conc_bulk(10), m_diff_bulk(10), m_km_bulk(10) As Double
    Dim iH2SReacIndex As Integer
    'initialize data
    Dim time_point As Double

    time_point = 1 ' s
    ' duration of simulation
    ' time step
    time_step = 1 's
'    ' time between writing to sheet
'    Timetowrite = 60 ' s
'    Timetowrite_counter = 100
    ' amount of outer sulfide scale
    m_quant_oss = 0 ' mol / m2
    ' outer scale porosity
    m_Epsilon_oss = 0.9
    ' outer scale tortuosity
    m_Psi_oss = 0.002
    ' outer scale initial thickness
    m_delta_oss = 0 ' m
    
    
    'H2S mass controlled reaction ID
    iH2S_H_reduction = 1: iH2S_H2CO3_reduction = 2: iH2S_HAc_reduction = 3: iH2S_H2O_reduction = 4: iH2S_O2_reduction = 5
    iH2S_H2S_reduction = 6
    '======parameters needed====='
    ''H+
    A_iss(1) = 0.0000004 * Exp(-15500 / 8.31 * (1 / m_t - 1 / 298.15)) 'kinetic constant for H+ solid state diffusion in Inner Sulfide Scale, kmol/m2/s???mol/m2/s, and activation energy to be 15500 kJ/mol instead???
    m_conc_s(1) = 0.0000001 ' surface concetration of H+ (reference value)
    m_conc_bulk(1) = m_concHplus
    m_diff_bulk(1) = DiffHplus
    m_km_bulk(1) = kmHplus
    m_flux_max(1) = kmHplus * m_concHplus
    ''H2CO3
    A_iss(2) = 0.000000002 * Exp(-15500 / 8.31 * (1 / m_t - 1 / 298.15)) 'kinetic constant for solid state diffusion in Inner Sulfide Scale, kmol/m2/s
    m_conc_s(2) = 0 ' surface concetration of (reference value)
    m_conc_bulk(2) = m_concCO2
    m_diff_bulk(2) = DiffCO2
    m_km_bulk(2) = kmCO2
    m_flux_max(2) = m_concCO2 * (DiffH2CO3 * Khyd * m_kfhydration) ^ 0.5
    ''HAc
    A_iss(3) = 0.000000002 * Exp(-15500 / 8.31 * (1 / m_t - 1 / 298.15)) 'kinetic constant for solid state diffusion in Inner Sulfide Scale, kmol/m2/s
    m_conc_s(3) = 0.0000001 ' surface concetration of (reference value)
    m_conc_bulk(3) = m_concHAc
    m_diff_bulk(3) = DiffHAc
    m_km_bulk(3) = kmHAc
    m_flux_max(3) = kmHAc * m_concHAc
    ''H2O
    'use electrochemical rate instead, assuming no mass limited transfer is there
    ''O2
    A_iss(5) = 0.000000002 * Exp(-15500 / 8.31 * (1 / m_t - 1 / 298.15)) 'kinetic constant for solid state diffusion in Inner Sulfide Scale, kmol/m2/s
    m_conc_s(5) = 0.000000001 ' surface concetration of O2, assumed to be super low(reference value)
    m_conc_bulk(5) = m_concO2ppb / 1000 / 32000
    m_diff_bulk(5) = DiffO2
    m_km_bulk(5) = kmO2
    m_flux_max(5) = kmO2 * m_concO2ppb / 1000 / 32 / 1000
    ''H2S, which will be calculated separately
    A_iss(6) = 0.00000002 * Exp(-15500 / 8.31 * (1 / m_t - 1 / 298.15)) 'kinetic constant for solid state diffusion in Inner Sulfide Scale, kmol/m2/s
    m_conc_s(6) = 0.0000001 ' surface concetration of (reference value)
    m_conc_bulk(6) = m_concH2S
    m_diff_bulk(6) = DiffH2S
    m_km_bulk(6) = kmH2S
    m_flux_max(6) = kmH2S * m_concH2S
    
    '================simulate mass transfer controlled corrosion================
    m_CRH2S_total = 0
    Do While time_point < Corr_Sim_Time 'simulation time
        'run H2S reaction first
        m_flux(6) = calc_Flux(0.00001, 0, m_concH2S, DiffH2S, kmH2S, m_conc_s(6), A_iss(6))
        m_CRH2S_each(6) = m_flux(6) * 1000 * 55.845 / 7874 * 3600 * 24 * 365 ' mm/y, density of Fe is 7874 kg/m3, MW of Fe is 55.845
        m_CRH2S_each_max(6) = m_flux_max(6) * 1000 * 55.845 / 7874 * 3600 * 24 * 365 ' mm/y, density of Fe is 7874 kg/m3, MW of Fe is 55.845
        m_delta_oss = m_delta_oss + m_flux(6) * time_step * 87.911 / 4700 / (1 - m_Epsilon_oss) * 0.5 ' m, density of Fe is 4700 kg/m3, MW of Fe is 87.911
        m_quant_oss = m_quant_oss + m_flux(6) * time_step * 1000 'mol/m2
        
        'run other reactions
        total_H2S_Reaction = 5
        iH2SReacIndex = 0
        m_CRH2S_t_step = 0 'corrosion rate of each simulation step
        For iH2SReacIndex = 1 To total_H2S_Reaction
            If iH2SReacIndex = 2 Then ' CO2 is different due to hydration
                Dim para_CO2
                para_CO2 = (DiffH2CO3 * m_Epsilon_oss * m_Psi_oss * Khyd * m_kfhydration) ^ 0.5
                m_conc_s(iH2SReacIndex) = 0.000001 / para_CO2
                m_flux(iH2SReacIndex) = calc_Flux_CO2(0.000001, 0, m_conc_bulk(iH2SReacIndex), m_diff_bulk(iH2SReacIndex), m_km_bulk(iH2SReacIndex), m_conc_s(iH2SReacIndex), para_CO2, A_iss(iH2SReacIndex))
                m_CRH2S_each(iH2SReacIndex) = m_flux(iH2SReacIndex) * 1000 * 55.845 / 7874 * 3600 * 24 * 365 ' mm/y, density of Fe is 7874 kg/m3, MW of Fe is 55.845
                m_CRH2S_each_max(iH2SReacIndex) = m_flux_max(iH2SReacIndex) * 1000 * 55.845 / 7874 * 3600 * 24 * 365 ' mm/y, density of Fe is 7874 kg/m3, MW of Fe is 55.845
            ElseIf m_conc_bulk(iH2SReacIndex) < m_conc_s(iH2SReacIndex) Then 'if bulk concentration is even less than reference conc, no corrosion
                m_CRH2S_each(iH2SReacIndex) = 0
            Else
                If iH2SReacIndex = 4 Then 'H2O
                    m_CRH2S_each(iH2SReacIndex) = m_CRCO2_Cathode(iCathodic_H2O_reduction) 'add H2O electrochemical corrosion rate in
                Else
                    m_flux(iH2SReacIndex) = calc_Flux(0.000001, 0, m_conc_bulk(iH2SReacIndex), m_diff_bulk(iH2SReacIndex), m_km_bulk(iH2SReacIndex), m_conc_s(iH2SReacIndex), A_iss(iH2SReacIndex))
                    m_CRH2S_each(iH2SReacIndex) = m_flux(iH2SReacIndex) * 1000 * 55.845 / 7874 * 3600 * 24 * 365 ' mm/y, density of Fe is 7874 kg/m3, MW of Fe is 55.845
                    m_CRH2S_each_max(iH2SReacIndex) = m_flux_max(iH2SReacIndex) * 1000 * 55.845 / 7874 * 3600 * 24 * 365 ' mm/y, density of Fe is 7874 kg/m3, MW of Fe is 55.845
                End If
            End If
            m_CRH2S_t_step = m_CRH2S_t_step + m_CRH2S_each(iH2SReacIndex) 'total corrosion rate of each step
        Next iH2SReacIndex
        m_CRH2S_t_step = m_CRH2S_t_step + m_CRH2S_each(6) 'add on H2S corrosion rate
        
        If time_point < 3 Then m_CRH2S_t_Start = m_CRH2S_t_step  'starting corrosion rate
        
        m_CRH2S_total = (m_CRH2S_total * (time_point - time_step) + m_CRH2S_t_step * time_step) / time_point
        
        'prepare for next loop
        time_step = time_step * 1.1 'increase time step
        time_point = time_point + time_step
       
    Loop
    
End Sub



'function to calcualte the flux, excpet for CO2
Function calc_Flux(flux1 As Double, flux2 As Double, ByVal conc_b As Double, ByVal Diff As Double, _
                    ByVal km As Double, ByVal conc_s As Double, ByVal expterm As Double) As Double
    Dim root As Double
    Dim fx1 As Double, fx2 As Double
            
    Do
        root = flux1
        fx1 = conc_b - root * (m_delta_oss / (Diff * m_Epsilon_oss * m_Psi_oss) + 1 / km) - conc_s * Exp(root / expterm)
       
        root = (flux1 + flux2) / 2
       
        fx2 = conc_b _
            - root * (m_delta_oss / (Diff * m_Epsilon_oss * m_Psi_oss) + 1 / km) _
                    - conc_s * Exp(root / expterm)
        
        If (fx1 * fx2) > 0 Then
            flux1 = root
            flux2 = flux2
        Else
            flux2 = root
        End If
    Loop Until Abs(fx1) / conc_s < 0.0001
        
        calc_Flux = root

End Function

'function to calcualte the flux, excpet for CO2
Function calc_Flux_CO2(flux1 As Double, flux2 As Double, ByVal conc_b As Double, ByVal Diff As Double, ByVal km As Double, _
                        ByVal conc_s As Double, ByVal para As Double, ByVal expterm As Double) As Double

Dim root As Double
Dim fx1 As Double, fx2 As Double
        
Do
    root = flux1
    conc_s = root / para
    fx1 = conc_b _
        - root * (m_delta_oss / (Diff * m_Epsilon_oss * m_Psi_oss) + 1 / km) _
                - conc_s * Exp(root / expterm)
    
    root = (flux1 + flux2) / 2
    conc_s = root / para
    
    fx2 = conc_b _
        - root * (m_delta_oss / (Diff * m_Epsilon_oss * m_Psi_oss) + 1 / km) _
                - conc_s * Exp(root / expterm)
    
    If (fx1 * fx2) > 0 Then
        flux1 = root
        flux2 = flux2
    Else
        flux2 = root
    End If
Loop Until Abs(fx1) / conc_s < 0.0001
    
    calc_Flux_CO2 = root
End Function
